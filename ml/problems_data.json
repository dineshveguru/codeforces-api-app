[{"contestId": 2134, "index": "F", "name": "Permutation Oddness", "type": "PROGRAMMING", "points": 2750.0, "tags": ["combinatorics", "dp"], "solvedCount": 78}, {"contestId": 2134, "index": "E", "name": "Power Boxes", "type": "PROGRAMMING", "points": 2250.0, "tags": ["constructive algorithms", "dp", "interactive"], "solvedCount": 707}, {"contestId": 2134, "index": "D", "name": "Sliding Tree", "type": "PROGRAMMING", "points": 2000.0, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 1041}, {"contestId": 2134, "index": "C", "name": "Even Larger", "type": "PROGRAMMING", "points": 1250.0, "tags": ["greedy", "greedy"], "solvedCount": 10034}, {"contestId": 2134, "index": "B", "name": "Add 0 or K", "type": "PROGRAMMING", "points": 1250.0, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 11208}, {"contestId": 2134, "index": "A", "name": "Painting With Two Colors", "type": "PROGRAMMING", "points": 500.0, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 17426}, {"contestId": 2133, "index": "F", "name": "Flint and Steel", "type": "PROGRAMMING", "points": 3250.0, "tags": ["data structures", "dp", "graphs"], "solvedCount": 108}, {"contestId": 2133, "index": "E", "name": "I Yearned For The Mines", "type": "PROGRAMMING", "points": 2750.0, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 772}, {"contestId": 2133, "index": "D", "name": "Chicken Jockey", "type": "PROGRAMMING", "points": 2250.0, "tags": ["dp", "greedy"], "solvedCount": 4431}, {"contestId": 2133, "index": "C", "name": "The Nether", "type": "PROGRAMMING", "points": 1750.0, "tags": ["graphs", "interactive"], "solvedCount": 8313}, {"contestId": 2133, "index": "B", "name": "Villagers", "type": "PROGRAMMING", "points": 1000.0, "tags": ["greedy"], "solvedCount": 19275}, {"contestId": 2133, "index": "A", "name": "Redstone?", "type": "PROGRAMMING", "points": 500.0, "tags": ["brute force", "data structures", "implementation", "math"], "solvedCount": 22752}, {"contestId": 2132, "index": "G", "name": "Famous Choreographer", "type": "PROGRAMMING", "tags": ["hashing", "implementation", "strings"], "solvedCount": 230}, {"contestId": 2132, "index": "F", "name": "Rada and the Chamomile Valley", "type": "PROGRAMMING", "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 1322}, {"contestId": 2132, "index": "E", "name": "Arithmetics Competition", "type": "PROGRAMMING", "tags": ["binary search", "data structures", "greedy", "sortings", "ternary search"], "solvedCount": 4151}, {"contestId": 2132, "index": "D", "name": "From 1 to Infinity", "type": "PROGRAMMING", "tags": ["binary search", "dp", "implementation", "math"], "solvedCount": 5600}, {"contestId": 2132, "index": "C2", "name": "The Cunning Seller (hard version)", "type": "PROGRAMMING", "tags": ["binary search", "greedy", "math"], "solvedCount": 9271}, {"contestId": 2132, "index": "C1", "name": "The Cunning Seller (easy version)", "type": "PROGRAMMING", "tags": ["greedy", "math"], "solvedCount": 20209}, {"contestId": 2132, "index": "B", "name": "The Secret Number", "type": "PROGRAMMING", "tags": ["math"], "solvedCount": 24028}, {"contestId": 2132, "index": "A", "name": "Homework", "type": "PROGRAMMING", "tags": ["brute force", "implementation", "strings"], "solvedCount": 32188}, {"contestId": 2131, "index": "H", "name": "Sea, You & copriMe", "type": "PROGRAMMING", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "math", "number theory"], "solvedCount": 560}, {"contestId": 2131, "index": "G", "name": "Wafu!", "type": "PROGRAMMING", "tags": ["bitmasks", "brute force", "data structures", "dfs and similar", "dp", "math"], "solvedCount": 2305}, {"contestId": 2131, "index": "F", "name": "Unjust Binary Life", "type": "PROGRAMMING", "tags": ["binary search", "data structures", "greedy", "greedy", "math", "sortings", "two pointers"], "solvedCount": 3081}, {"contestId": 2131, "index": "E", "name": "Adjacent XOR", "type": "PROGRAMMING", "tags": ["brute force", "greedy"], "solvedCount": 12945}, {"contestId": 2131, "index": "D", "name": "Arboris Contractio", "type": "PROGRAMMING", "tags": ["data structures", "graphs", "greedy", "trees"], "solvedCount": 10866}, {"contestId": 2131, "index": "C", "name": "Make it Equal", "type": "PROGRAMMING", "tags": ["math", "number theory"], "solvedCount": 16907}, {"contestId": 2131, "index": "B", "name": "Alternating Series", "type": "PROGRAMMING", "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 26109}, {"contestId": 2131, "index": "A", "name": "Lever", "type": "PROGRAMMING", "tags": ["math"], "solvedCount": 31813}, {"contestId": 2130, "index": "B", "name": "Pathless", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms"], "solvedCount": 17333}, {"contestId": 2130, "index": "A", "name": "Submission is All You Need", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 24291}, {"contestId": 2129, "index": "F2", "name": "Top-K Tracker (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["interactive", "interactive"], "solvedCount": 63}, {"contestId": 2129, "index": "F1", "name": "Top-K Tracker (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["interactive"], "solvedCount": 55}, {"contestId": 2129, "index": "E", "name": "Induced Subgraph Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "graphs", "sortings"], "solvedCount": 294}, {"contestId": 2129, "index": "D", "name": "Permutation Blackhole", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "combinatorics", "dp", "implementation", "math"], "solvedCount": 594}, {"contestId": 2129, "index": "C3", "name": "Interactive RBS (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["binary search", "bitmasks", "constructive algorithms", "dp", "interactive"], "solvedCount": 1286}, {"contestId": 2129, "index": "C2", "name": "Interactive RBS (Medium Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["binary search", "bitmasks", "constructive algorithms", "interactive"], "solvedCount": 1902}, {"contestId": 2129, "index": "C1", "name": "Interactive RBS (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "bitmasks", "constructive algorithms", "interactive"], "solvedCount": 2950}, {"contestId": 2129, "index": "B", "name": "Stay or Mirror", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "solvedCount": 9313}, {"contestId": 2129, "index": "A", "name": "Double Perspective", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "dsu", "graphs", "greedy", "sortings"], "solvedCount": 12425}, {"contestId": 2128, "index": "F", "name": "Strict Triangle", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 251}, {"contestId": 2128, "index": "E2", "name": "Submedians (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["binary search", "constructive algorithms", "data structures", "math", "two pointers"], "solvedCount": 562}, {"contestId": 2128, "index": "E1", "name": "Submedians (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "greedy", "math"], "solvedCount": 4264}, {"contestId": 2128, "index": "D", "name": "Sum of LDS", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "combinatorics", "dp", "greedy", "math"], "solvedCount": 8579}, {"contestId": 2128, "index": "C", "name": "Leftmost Below", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["greedy", "math"], "solvedCount": 15554}, {"contestId": 2128, "index": "B", "name": "Deque Process", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 17244}, {"contestId": 2128, "index": "A", "name": "Recycling Center", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 23645}, {"contestId": 2127, "index": "H", "name": "23 Rises Again", "type": "PROGRAMMING", "points": 4000.0, "rating": 3100, "tags": ["brute force", "dfs and similar", "dp", "flows", "graph matchings", "graphs", "greedy", "implementation", "probabilities", "trees"], "solvedCount": 289}, {"contestId": 2127, "index": "G2", "name": "Inter Active (Hard Version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["binary search", "bitmasks", "constructive algorithms", "graphs", "implementation", "interactive", "math", "probabilities"], "solvedCount": 53}, {"contestId": 2127, "index": "G1", "name": "Inter Active (Easy Version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["binary search", "constructive algorithms", "interactive", "probabilities"], "solvedCount": 60}, {"contestId": 2127, "index": "F", "name": "Hamed and AghaBalaSar", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["brute force", "combinatorics", "dp", "math", "probabilities"], "solvedCount": 592}, {"contestId": 2127, "index": "E", "name": "Ancient Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "solvedCount": 1924}, {"contestId": 2127, "index": "D", "name": "Root was Built by Love, Broken by Destiny", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "solvedCount": 4758}, {"contestId": 2127, "index": "C", "name": "Trip Shopping", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["games", "greedy", "sortings"], "solvedCount": 8997}, {"contestId": 2127, "index": "B", "name": "Hamiiid, Haaamid... Hamid?", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["games", "greedy"], "solvedCount": 11243}, {"contestId": 2127, "index": "A", "name": "Mix Mex Max", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 16911}, {"contestId": 2126, "index": "G2", "name": "Big Wins!  (hard version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dsu", "trees", "two pointers"], "solvedCount": 738}, {"contestId": 2126, "index": "G1", "name": "Big Wins! (easy version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp", "dsu", "two pointers"], "solvedCount": 1661}, {"contestId": 2126, "index": "F", "name": "1-1-1, Free Tree!", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 3456}, {"contestId": 2126, "index": "E", "name": "G-C-D, Unlucky!", "type": "PROGRAMMING", "rating": 1400, "tags": ["math", "number theory"], "solvedCount": 13500}, {"contestId": 2126, "index": "D", "name": "This Is the Last Time", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 19736}, {"contestId": 2126, "index": "C", "name": "I Will Definitely Make It", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 22756}, {"contestId": 2126, "index": "B", "name": "No Casino in the Mountains", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy"], "solvedCount": 32422}, {"contestId": 2126, "index": "A", "name": "Only One Digit", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "math"], "solvedCount": 41987}, {"contestId": 2125, "index": "F", "name": "Timofey and Docker", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "divide and conquer", "dp"], "solvedCount": 294}, {"contestId": 2125, "index": "E", "name": "Sets of Complementary Sums", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "math", "two pointers"], "solvedCount": 978}, {"contestId": 2125, "index": "D", "name": "Segments Covering", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "math", "probabilities"], "solvedCount": 7474}, {"contestId": 2125, "index": "C", "name": "Count Good Numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["bitmasks", "combinatorics", "math", "number theory"], "solvedCount": 18964}, {"contestId": 2125, "index": "B", "name": "Left and Down", "type": "PROGRAMMING", "rating": 900, "tags": ["math", "number theory"], "solvedCount": 22355}, {"contestId": 2125, "index": "A", "name": "Difficult Contest", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "implementation", "sortings", "strings"], "solvedCount": 24553}, {"contestId": 2124, "index": "I", "name": "Lexicographic Partition", "type": "PROGRAMMING", "points": 4750.0, "rating": 3500, "tags": ["constructive algorithms", "math", "trees"], "solvedCount": 132}, {"contestId": 2124, "index": "H", "name": "Longest Good Subsequence", "type": "PROGRAMMING", "points": 4750.0, "rating": 3400, "tags": ["dp", "math", "trees"], "solvedCount": 129}, {"contestId": 2124, "index": "G", "name": "Maximise Sum", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["binary search", "data structures"], "solvedCount": 205}, {"contestId": 2124, "index": "F2", "name": "Appending Permutations (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "dp"], "solvedCount": 404}, {"contestId": 2124, "index": "F1", "name": "Appending Permutations (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dp"], "solvedCount": 1206}, {"contestId": 2124, "index": "E", "name": "Make it Zero", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 3220}, {"contestId": 2124, "index": "D", "name": "Make a Palindrome", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 6809}, {"contestId": 2124, "index": "C", "name": "Subset Multiplication", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 12243}, {"contestId": 2124, "index": "B", "name": "Minimise Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy"], "solvedCount": 16652}, {"contestId": 2124, "index": "A", "name": "Deranged Deletions", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 17532}, {"contestId": 2123, "index": "G", "name": "Modular Sorting", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "data structures", "greedy", "math", "number theory", "sortings"], "solvedCount": 2408}, {"contestId": 2123, "index": "F", "name": "Minimize Fixed Points", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "number theory"], "solvedCount": 7970}, {"contestId": 2123, "index": "E", "name": "MEX Count", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 12318}, {"contestId": 2123, "index": "D", "name": "Binary String Battle", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "games", "greedy"], "solvedCount": 18705}, {"contestId": 2123, "index": "C", "name": "Prefix Min and Suffix Max", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "data structures"], "solvedCount": 26519}, {"contestId": 2123, "index": "B", "name": "Tournament", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 31038}, {"contestId": 2123, "index": "A", "name": "Blackboard Game", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 36509}, {"contestId": 2122, "index": "G", "name": "Tree Parking", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["combinatorics", "fft", "math", "trees"], "solvedCount": 157}, {"contestId": 2122, "index": "F", "name": "Colorful Polygon", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["constructive algorithms", "divide and conquer", "geometry"], "solvedCount": 87}, {"contestId": 2122, "index": "E", "name": "Greedy Grid Counting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "greedy", "math"], "solvedCount": 807}, {"contestId": 2122, "index": "D", "name": "Traffic Lights", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "data structures", "divide and conquer", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 2065}, {"contestId": 2122, "index": "C", "name": "Manhattan Pairs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "geometry", "greedy", "math", "sortings"], "solvedCount": 6963}, {"contestId": 2122, "index": "B", "name": "Pile Shuffling", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 13331}, {"contestId": 2122, "index": "A", "name": "Greedy Grid", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 17275}, {"contestId": 2121, "index": "H", "name": "Ice Baby", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "sortings"], "solvedCount": 1607}, {"contestId": 2121, "index": "G", "name": "Gangsta", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "math", "sortings"], "solvedCount": 3968}, {"contestId": 2121, "index": "F", "name": "Yamakasi", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "brute force", "data structures", "greedy", "two pointers"], "solvedCount": 6352}, {"contestId": 2121, "index": "E", "name": "Sponsor of Your Problems", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "greedy", "implementation", "strings"], "solvedCount": 11856}, {"contestId": 2121, "index": "D", "name": "1709", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 15413}, {"contestId": 2121, "index": "C", "name": "Those Who Are With Us", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "greedy", "implementation"], "solvedCount": 18550}, {"contestId": 2121, "index": "B", "name": "Above the Clouds", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 29412}, {"contestId": 2121, "index": "A", "name": "Letter Home", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 34861}, {"contestId": 2120, "index": "G", "name": "Eulerian Line Graph", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["graphs", "greedy", "math"], "solvedCount": 90}, {"contestId": 2120, "index": "F", "name": "Superb Graphs", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["2-sat", "graphs"], "solvedCount": 285}, {"contestId": 2120, "index": "E", "name": "Lanes of Cars", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "dp", "ternary search"], "solvedCount": 1428}, {"contestId": 2120, "index": "D", "name": "Matrix game", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["combinatorics", "math"], "solvedCount": 4955}, {"contestId": 2120, "index": "C", "name": "Divine Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "sortings", "trees"], "solvedCount": 10427}, {"contestId": 2120, "index": "B", "name": "Square Pool", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["geometry"], "solvedCount": 15592}, {"contestId": 2120, "index": "A", "name": "Square of Rectangles", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "math"], "solvedCount": 18350}, {"contestId": 2119, "index": "F", "name": "Volcanic Eruptions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["dfs and similar", "dp", "greedy", "shortest paths", "trees"], "solvedCount": 118}, {"contestId": 2119, "index": "E", "name": "And Constraint", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "dp", "greedy"], "solvedCount": 508}, {"contestId": 2119, "index": "D", "name": "Token Removing", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 2580}, {"contestId": 2119, "index": "C", "name": "A Good Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 13326}, {"contestId": 2119, "index": "B", "name": "Line Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["geometry", "greedy", "math"], "solvedCount": 15408}, {"contestId": 2119, "index": "A", "name": "Add or XOR", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 23391}, {"contestId": 2118, "index": "F", "name": "Shifts and Swaps", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "graphs", "hashing", "trees"], "solvedCount": 203}, {"contestId": 2118, "index": "E", "name": "Grid Coloring", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "geometry", "greedy", "math"], "solvedCount": 1110}, {"contestId": 2118, "index": "D2", "name": "Red Light, Green Light (Hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "graphs", "implementation", "math", "number theory"], "solvedCount": 1949}, {"contestId": 2118, "index": "D1", "name": "Red Light, Green Light (Easy version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["brute force", "dfs and similar", "dp", "graphs", "implementation", "number theory"], "solvedCount": 6626}, {"contestId": 2118, "index": "C", "name": "Make It Beautiful", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "data structures", "greedy", "math"], "solvedCount": 15988}, {"contestId": 2118, "index": "B", "name": "Make It Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 17652}, {"contestId": 2118, "index": "A", "name": "Equal Subsequences", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 26556}, {"contestId": 2117, "index": "H", "name": "Incessant Rain", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 678}, {"contestId": 2117, "index": "G", "name": "Omg Graph", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dsu", "graphs", "greedy", "shortest paths", "sortings"], "solvedCount": 3950}, {"contestId": 2117, "index": "F", "name": "Wildflower", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "dfs and similar", "trees"], "solvedCount": 4878}, {"contestId": 2117, "index": "E", "name": "Lost Soul", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "greedy"], "solvedCount": 10043}, {"contestId": 2117, "index": "D", "name": "Retaliation", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "math", "number theory"], "solvedCount": 18867}, {"contestId": 2117, "index": "C", "name": "Cool Partition", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "greedy"], "solvedCount": 18144}, {"contestId": 2117, "index": "B", "name": "Shrink", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 29037}, {"contestId": 2117, "index": "A", "name": "False Alarm", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 33576}, {"contestId": 2116, "index": "B", "name": "Gellyfish and Baby's Breath", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["greedy", "math", "sortings"], "solvedCount": 15174}, {"contestId": 2116, "index": "A", "name": "Gellyfish and Tricolor Pansy", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "greedy"], "solvedCount": 24601}, {"contestId": 2115, "index": "F2", "name": "Gellyfish and Lycoris Radiata (Hard Version)", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures"], "solvedCount": 75}, {"contestId": 2115, "index": "F1", "name": "Gellyfish and Lycoris Radiata (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["data structures"], "solvedCount": 65}, {"contestId": 2115, "index": "E", "name": "Gellyfish and Mayflower", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp", "graphs"], "solvedCount": 165}, {"contestId": 2115, "index": "D", "name": "Gellyfish and Forget-Me-Not", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["bitmasks", "dp", "games", "greedy", "math"], "solvedCount": 604}, {"contestId": 2115, "index": "C", "name": "Gellyfish and Eternal Violet", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["combinatorics", "dp", "greedy", "math", "probabilities"], "solvedCount": 727}, {"contestId": 2115, "index": "B", "name": "Gellyfish and Camellia Japonica", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 3177}, {"contestId": 2115, "index": "A", "name": "Gellyfish and Flaming Peony", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "dp", "math", "number theory"], "solvedCount": 12011}, {"contestId": 2114, "index": "G", "name": "Build an Array", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "greedy", "math", "number theory"], "solvedCount": 1694}, {"contestId": 2114, "index": "F", "name": "Small Operations", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "dfs and similar", "dp", "math", "number theory", "sortings"], "solvedCount": 4468}, {"contestId": 2114, "index": "E", "name": "Kirei Attacks the Estate", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 11489}, {"contestId": 2114, "index": "D", "name": "Come a Little Closer", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 12580}, {"contestId": 2114, "index": "C", "name": "Need More Arrays", "type": "PROGRAMMING", "rating": 1000, "tags": ["dp", "greedy"], "solvedCount": 26859}, {"contestId": 2114, "index": "B", "name": "Not Quite a Palindromic String", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "math"], "solvedCount": 26935}, {"contestId": 2114, "index": "A", "name": "Square Year", "type": "PROGRAMMING", "rating": 800, "tags": ["binary search", "brute force", "math"], "solvedCount": 37259}, {"contestId": 2113, "index": "F", "name": "Two Arrays", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"], "solvedCount": 693}, {"contestId": 2113, "index": "E", "name": "From Kazan with Love", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 308}, {"contestId": 2113, "index": "D", "name": "Cheater", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "solvedCount": 2322}, {"contestId": 2113, "index": "C", "name": "Smilo and Minecraft", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 6726}, {"contestId": 2113, "index": "B", "name": "Good Start", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 12293}, {"contestId": 2113, "index": "A", "name": "Shashliks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 18118}, {"contestId": 2112, "index": "F", "name": "Variables and Operations", "type": "PROGRAMMING", "rating": 2800, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 463}, {"contestId": 2112, "index": "E", "name": "Tree Colorings", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dfs and similar", "dp", "graphs", "math", "number theory", "trees"], "solvedCount": 2573}, {"contestId": 2112, "index": "D", "name": "Reachability and Tree", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 7835}, {"contestId": 2112, "index": "C", "name": "Coloring Game", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "greedy", "two pointers"], "solvedCount": 15074}, {"contestId": 2112, "index": "B", "name": "Shrinking Array", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy"], "solvedCount": 18673}, {"contestId": 2112, "index": "A", "name": "Race", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 26178}, {"contestId": 2111, "index": "G", "name": "Divisible Subarrays", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "bitmasks", "brute force", "data structures", "interactive"], "solvedCount": 313}, {"contestId": 2111, "index": "F", "name": "Puzzle", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 1201}, {"contestId": 2111, "index": "E", "name": "Changing the String", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "greedy", "implementation", "sortings", "strings"], "solvedCount": 4694}, {"contestId": 2111, "index": "D", "name": "Creating a Schedule", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 10405}, {"contestId": 2111, "index": "C", "name": "Equal Values", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy", "two pointers"], "solvedCount": 16964}, {"contestId": 2111, "index": "B", "name": "Fibonacci Cubes", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "dp", "implementation", "math"], "solvedCount": 15886}, {"contestId": 2111, "index": "A", "name": "Energy Crystals", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "math"], "solvedCount": 19309}, {"contestId": 2110, "index": "F", "name": "Faculty", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 1492}, {"contestId": 2110, "index": "E", "name": "Melody", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dfs and similar", "graphs", "implementation"], "solvedCount": 1845}, {"contestId": 2110, "index": "D", "name": "Fewer Batteries", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "dfs and similar", "dp", "graphs", "greedy", "hashing"], "solvedCount": 6967}, {"contestId": 2110, "index": "C", "name": "Racing", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 13348}, {"contestId": 2110, "index": "B", "name": "Down with Brackets", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["strings"], "solvedCount": 23359}, {"contestId": 2110, "index": "A", "name": "Fashionable Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 26503}, {"contestId": 2109, "index": "F", "name": "Penguin Steps", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "dfs and similar", "flows", "graphs", "shortest paths"], "solvedCount": 212}, {"contestId": 2109, "index": "E", "name": "Binary String Wowee", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "strings"], "solvedCount": 1146}, {"contestId": 2109, "index": "D", "name": "D/D/D", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["dfs and similar", "graphs", "greedy", "shortest paths"], "solvedCount": 4396}, {"contestId": 2109, "index": "C3", "name": "Hacking Numbers (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 2600, "tags": ["constructive algorithms", "interactive", "math", "number theory"], "solvedCount": 2686}, {"contestId": 2109, "index": "C2", "name": "Hacking Numbers (Medium Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "interactive", "math", "number theory"], "solvedCount": 7338}, {"contestId": 2109, "index": "C1", "name": "Hacking Numbers (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["bitmasks", "constructive algorithms", "interactive", "math", "number theory"], "solvedCount": 9672}, {"contestId": 2109, "index": "B", "name": "Slice to Survive", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 15351}, {"contestId": 2109, "index": "A", "name": "It's Time To Duel", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 24458}, {"contestId": 2108, "index": "F", "name": "Fallen Towers", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["binary search", "greedy"], "solvedCount": 428}, {"contestId": 2108, "index": "E", "name": "Spruce Dispute", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "shortest paths", "trees"], "solvedCount": 636}, {"contestId": 2108, "index": "D", "name": "Needle in a Numstack", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "brute force", "implementation", "interactive"], "solvedCount": 2113}, {"contestId": 2108, "index": "C", "name": "Neo's Escape", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "graphs", "greedy", "implementation"], "solvedCount": 12256}, {"contestId": 2108, "index": "B", "name": "SUMdamental Decomposition", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 12798}, {"contestId": 2108, "index": "A", "name": "Permutation Warm-Up", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["combinatorics", "greedy", "math"], "solvedCount": 20103}, {"contestId": 2107, "index": "F2", "name": "Cycling (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "brute force", "data structures", "dp", "greedy"], "solvedCount": 357}, {"contestId": 2107, "index": "F1", "name": "Cycling (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "brute force", "dp", "greedy"], "solvedCount": 1497}, {"contestId": 2107, "index": "E", "name": "Ain and Apple Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["binary search", "constructive algorithms", "greedy", "math", "trees"], "solvedCount": 673}, {"contestId": 2107, "index": "D", "name": "Apple Tree Traversing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dfs and similar", "greedy", "implementation", "trees"], "solvedCount": 3022}, {"contestId": 2107, "index": "C", "name": "Maximum Subarray Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "constructive algorithms", "dp", "implementation", "math"], "solvedCount": 10092}, {"contestId": 2107, "index": "B", "name": "Apples in Boxes", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["games", "greedy", "math"], "solvedCount": 17444}, {"contestId": 2107, "index": "A", "name": "LRC and VIP", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["greedy", "number theory"], "solvedCount": 20211}, {"contestId": 2106, "index": "G2", "name": "Baudelaire (hard version)", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "dfs and similar", "divide and conquer", "implementation", "interactive", "trees"], "solvedCount": 499}, {"contestId": 2106, "index": "G1", "name": "Baudelaire (easy version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "divide and conquer", "greedy", "interactive", "trees"], "solvedCount": 1387}, {"contestId": 2106, "index": "F", "name": "Goblin", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "dsu", "greedy", "math"], "solvedCount": 3760}, {"contestId": 2106, "index": "E", "name": "Wolf", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "greedy", "math"], "solvedCount": 5205}, {"contestId": 2106, "index": "D", "name": "Flower Boy", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "dp", "greedy", "two pointers"], "solvedCount": 10618}, {"contestId": 2106, "index": "C", "name": "Cherry Bomb", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math", "sortings"], "solvedCount": 22557}, {"contestId": 2106, "index": "B", "name": "St. Chroma", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 25414}, {"contestId": 2106, "index": "A", "name": "Dr. TC", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 32976}, {"contestId": 2104, "index": "G", "name": "Modulo 3", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "dsu", "graphs", "trees"], "solvedCount": 396}, {"contestId": 2104, "index": "F", "name": "Numbers and Strings", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "brute force", "dfs and similar", "dp", "implementation", "math"], "solvedCount": 609}, {"contestId": 2104, "index": "E", "name": "Unpleasant Strings", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "dp", "greedy", "strings"], "solvedCount": 6886}, {"contestId": 2104, "index": "D", "name": "Array and GCD", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "greedy", "math", "number theory"], "solvedCount": 11327}, {"contestId": 2104, "index": "C", "name": "Card Game", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "constructive algorithms", "games", "greedy", "math"], "solvedCount": 15512}, {"contestId": 2104, "index": "B", "name": "Move to the End", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "solvedCount": 18032}, {"contestId": 2104, "index": "A", "name": "Three Decks", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 23185}, {"contestId": 2103, "index": "F", "name": "Maximize Nor", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "data structures", "dp", "implementation", "sortings"], "solvedCount": 514}, {"contestId": 2103, "index": "E", "name": "Keep the Sum", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "implementation", "two pointers"], "solvedCount": 490}, {"contestId": 2103, "index": "D", "name": "Local Construction", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "implementation", "two pointers"], "solvedCount": 3444}, {"contestId": 2103, "index": "C", "name": "Median Splits", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "greedy", "implementation", "sortings"], "solvedCount": 9185}, {"contestId": 2103, "index": "B", "name": "Binary Typewriter", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 15992}, {"contestId": 2103, "index": "A", "name": "Common Multiple", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 22968}, {"contestId": 2102, "index": "B", "name": "The Picky Cat", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "sortings"], "solvedCount": 17333}, {"contestId": 2102, "index": "A", "name": "Dinner Time", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 18775}, {"contestId": 2101, "index": "F", "name": "Shoo Shatters the Sunshine", "type": "PROGRAMMING", "points": 3750.0, "rating": 3300, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 102}, {"contestId": 2101, "index": "E", "name": "Kia Bakes a Cake", "type": "PROGRAMMING", "points": 3250.0, "rating": 3100, "tags": ["data structures", "dp", "greedy", "trees"], "solvedCount": 207}, {"contestId": 2101, "index": "D", "name": "Mani and Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "implementation", "sortings", "two pointers"], "solvedCount": 799}, {"contestId": 2101, "index": "C", "name": "23 Kingdom", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "brute force", "data structures", "greedy", "ternary search", "two pointers"], "solvedCount": 1871}, {"contestId": 2101, "index": "B", "name": "Quartet Swapping", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "data structures", "divide and conquer", "greedy", "sortings"], "solvedCount": 5811}, {"contestId": 2101, "index": "A", "name": "Mex in the Grid", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 11930}, {"contestId": 2098, "index": "B", "name": "Sasha and the Apartment Purchase", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["math", "sortings"], "solvedCount": 6619}, {"contestId": 2098, "index": "A", "name": "Vadim's Collection", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy"], "solvedCount": 13139}, {"contestId": 2097, "index": "F", "name": "Lost Luggage", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp", "flows"], "solvedCount": 88}, {"contestId": 2097, "index": "E", "name": "Clearing the Snowdrift", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "dp", "greedy"], "solvedCount": 156}, {"contestId": 2097, "index": "D", "name": "Homework", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "math", "matrices"], "solvedCount": 401}, {"contestId": 2097, "index": "C", "name": "Bermuda Triangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["chinese remainder theorem", "geometry", "implementation", "math", "number theory"], "solvedCount": 799}, {"contestId": 2097, "index": "B", "name": "Baggage Claim", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "graphs", "implementation", "math", "trees"], "solvedCount": 1539}, {"contestId": 2097, "index": "A", "name": "Sports Betting", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["2-sat", "brute force", "math", "sortings"], "solvedCount": 7177}, {"contestId": 2096, "index": "H", "name": "Wonderful XOR Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["bitmasks", "combinatorics", "dp", "fft", "math"], "solvedCount": 132}, {"contestId": 2096, "index": "G", "name": "Wonderful Guessing Game", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["bitmasks", "constructive algorithms", "interactive"], "solvedCount": 303}, {"contestId": 2096, "index": "F", "name": "Wonderful Impostors", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["data structures", "implementation", "two pointers"], "solvedCount": 377}, {"contestId": 2096, "index": "E", "name": "Wonderful Teddy Bears", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 1788}, {"contestId": 2096, "index": "D", "name": "Wonderful Lightbulbs", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 4801}, {"contestId": 2096, "index": "C", "name": "Wonderful City", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "implementation"], "solvedCount": 6912}, {"contestId": 2096, "index": "B", "name": "Wonderful Gloves", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["greedy", "math", "sortings"], "solvedCount": 15132}, {"contestId": 2096, "index": "A", "name": "Wonderful Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19380}, {"contestId": 2095, "index": "J", "name": "Premiere at a Wrong Time", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 443}, {"contestId": 2095, "index": "I", "name": "Mysterious Script", "type": "PROGRAMMING", "tags": ["*special", "expression parsing", "number theory"], "solvedCount": 583}, {"contestId": 2095, "index": "H", "name": "Blurry Vision", "type": "PROGRAMMING", "tags": ["*special", "fft", "math"], "solvedCount": 720}, {"contestId": 2095, "index": "G", "name": "Definitely a Geometry Problem", "type": "PROGRAMMING", "tags": ["*special", "geometry"], "solvedCount": 877}, {"contestId": 2095, "index": "F", "name": "\u2153 \u043ef \u0430 \u0420r\u043ebl\u0435m", "type": "PROGRAMMING", "tags": ["*special", "math"], "solvedCount": 701}, {"contestId": 2095, "index": "E", "name": "Pair Count", "type": "PROGRAMMING", "tags": ["*special", "number theory"], "solvedCount": 704}, {"contestId": 2095, "index": "D", "name": "Where Am I?", "type": "PROGRAMMING", "tags": ["*special", "geometry"], "solvedCount": 4807}, {"contestId": 2095, "index": "C", "name": "Would It Be Unrated?", "type": "PROGRAMMING", "tags": ["*special", "binary search", "brute force"], "solvedCount": 3070}, {"contestId": 2095, "index": "B", "name": "Plinko", "type": "PROGRAMMING", "tags": ["*special", "games", "interactive"], "solvedCount": 5193}, {"contestId": 2095, "index": "A", "name": "Piecing It Together", "type": "PROGRAMMING", "tags": ["*special", "string suffix structures"], "solvedCount": 12288}, {"contestId": 2094, "index": "H", "name": "La Vaca Saturno Saturnita", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "math", "number theory"], "solvedCount": 3187}, {"contestId": 2094, "index": "G", "name": "Chimpanzini Bananini", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "math"], "solvedCount": 6537}, {"contestId": 2094, "index": "F", "name": "Trulimero Trulicina", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 9667}, {"contestId": 2094, "index": "E", "name": "Boneca Ambalabu", "type": "PROGRAMMING", "rating": 1200, "tags": ["bitmasks"], "solvedCount": 16088}, {"contestId": 2094, "index": "D", "name": "Tung Tung Sahur", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "strings", "two pointers"], "solvedCount": 20340}, {"contestId": 2094, "index": "C", "name": "Brr Brrr Patapim", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 26393}, {"contestId": 2094, "index": "B", "name": "Bobritto Bandito", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 28971}, {"contestId": 2094, "index": "A", "name": "Trippi Troppi", "type": "PROGRAMMING", "rating": 800, "tags": ["strings"], "solvedCount": 45356}, {"contestId": 2093, "index": "G", "name": "Shorten the Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "bitmasks", "data structures", "dfs and similar", "greedy", "strings", "trees", "two pointers"], "solvedCount": 3118}, {"contestId": 2093, "index": "F", "name": "Hackers and Neural Networks", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "brute force", "greedy"], "solvedCount": 5316}, {"contestId": 2093, "index": "E", "name": "Min Max MEX", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "greedy"], "solvedCount": 11771}, {"contestId": 2093, "index": "D", "name": "Skibidi Table", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "implementation"], "solvedCount": 11148}, {"contestId": 2093, "index": "C", "name": "Simple Repetition", "type": "PROGRAMMING", "rating": 1000, "tags": ["math", "number theory"], "solvedCount": 27532}, {"contestId": 2093, "index": "B", "name": "Expensive Number", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "math"], "solvedCount": 27785}, {"contestId": 2093, "index": "A", "name": "Ideal Generator", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 36916}, {"contestId": 2092, "index": "F", "name": "Andryusha and CCB", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory", "strings"], "solvedCount": 343}, {"contestId": 2092, "index": "E", "name": "She knows...", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "graphs", "math"], "solvedCount": 3237}, {"contestId": 2092, "index": "D", "name": "Mishkin Energizer", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 6019}, {"contestId": 2092, "index": "C", "name": "Asuna and the Mosquitoes", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 20165}, {"contestId": 2092, "index": "B", "name": "Lady Bug", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 22251}, {"contestId": 2092, "index": "A", "name": "Kamilka and the Sheep", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math", "number theory", "sortings"], "solvedCount": 26540}, {"contestId": 2091, "index": "G", "name": "Gleb and Boating", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "greedy", "math", "number theory", "shortest paths"], "solvedCount": 1337}, {"contestId": 2091, "index": "F", "name": "Igor and Mountain", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "brute force", "dp"], "solvedCount": 5522}, {"contestId": 2091, "index": "E", "name": "Interesting Ratio", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "math", "number theory", "two pointers"], "solvedCount": 17527}, {"contestId": 2091, "index": "D", "name": "Place of the Olympiad", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "greedy", "math"], "solvedCount": 21086}, {"contestId": 2091, "index": "C", "name": "Combination Lock", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 26128}, {"contestId": 2091, "index": "B", "name": "Team Training", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "sortings"], "solvedCount": 30338}, {"contestId": 2091, "index": "A", "name": "Olympiad Date", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 36396}, {"contestId": 2090, "index": "C", "name": "Dining Hall", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 5488}, {"contestId": 2090, "index": "B", "name": "Pushing Balls", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "dp", "implementation"], "solvedCount": 14640}, {"contestId": 2090, "index": "A", "name": "Treasure Hunt", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 19313}, {"contestId": 2089, "index": "E", "name": "Black Cat Collapse", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": [], "solvedCount": 106}, {"contestId": 2089, "index": "D", "name": "Conditional Operators", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms"], "solvedCount": 148}, {"contestId": 2089, "index": "C2", "name": "Key of Like (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 3100, "tags": ["dp", "math", "probabilities"], "solvedCount": 206}, {"contestId": 2089, "index": "C1", "name": "Key of Like (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dp", "games", "math", "probabilities"], "solvedCount": 1172}, {"contestId": 2089, "index": "B2", "name": "Canteen (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 2300, "tags": ["binary search", "data structures", "dp", "flows", "greedy", "two pointers"], "solvedCount": 1063}, {"contestId": 2089, "index": "B1", "name": "Canteen (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "flows", "greedy", "two pointers"], "solvedCount": 2661}, {"contestId": 2089, "index": "A", "name": "Simple Permutation", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "number theory"], "solvedCount": 6185}, {"contestId": 2087, "index": "I", "name": "Hamiltonian Partition", "type": "PROGRAMMING", "tags": ["*special", "*special"], "solvedCount": 19}, {"contestId": 2087, "index": "H", "name": "Nim with Special Numbers", "type": "PROGRAMMING", "tags": ["*special", "*special"], "solvedCount": 22}, {"contestId": 2087, "index": "G", "name": "Esports in Berland", "type": "PROGRAMMING", "tags": ["*special", "*special", "greedy", "greedy"], "solvedCount": 82}, {"contestId": 2087, "index": "F", "name": "Weapon Upgrade", "type": "PROGRAMMING", "tags": ["*special", "*special", "dp"], "solvedCount": 62}, {"contestId": 2087, "index": "E", "name": "Color the Arrows", "type": "PROGRAMMING", "tags": ["*special", "*special", "dp", "dp"], "solvedCount": 152}, {"contestId": 2087, "index": "D", "name": "Uppercase or Lowercase?", "type": "PROGRAMMING", "tags": ["*special", "*special", "interactive"], "solvedCount": 250}, {"contestId": 2087, "index": "C", "name": "Coin Game", "type": "PROGRAMMING", "tags": ["*special", "greedy"], "solvedCount": 462}, {"contestId": 2087, "index": "B", "name": "Showmatch", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 538}, {"contestId": 2087, "index": "A", "name": "Password Generator", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 1003}, {"contestId": 2086, "index": "F", "name": "Online Palindrome", "type": "PROGRAMMING", "rating": 3000, "tags": ["brute force", "constructive algorithms", "interactive"], "solvedCount": 112}, {"contestId": 2086, "index": "E", "name": "Zebra-like Numbers", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "greedy", "math"], "solvedCount": 1363}, {"contestId": 2086, "index": "D", "name": "Even String", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "combinatorics", "dp", "math", "strings"], "solvedCount": 7068}, {"contestId": 2086, "index": "C", "name": "Disappearing Permutation", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "implementation"], "solvedCount": 14193}, {"contestId": 2086, "index": "B", "name": "Large Array and Segments", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "brute force", "greedy"], "solvedCount": 17419}, {"contestId": 2086, "index": "A", "name": "Cloudberry Jam", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 30606}, {"contestId": 2085, "index": "F2", "name": "Serval and Colorful Array (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2900, "tags": ["data structures", "greedy"], "solvedCount": 337}, {"contestId": 2085, "index": "F1", "name": "Serval and Colorful Array (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "greedy"], "solvedCount": 582}, {"contestId": 2085, "index": "E", "name": "Serval and Modulo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 2754}, {"contestId": 2085, "index": "D", "name": "Serval and Kaitenzushi Buffet", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["data structures", "graph matchings", "greedy"], "solvedCount": 4501}, {"contestId": 2085, "index": "C", "name": "Serval and The Formula", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "solvedCount": 11777}, {"contestId": 2085, "index": "B", "name": "Serval and Final MEX", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 15455}, {"contestId": 2085, "index": "A", "name": "Serval and String Theory", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "implementation"], "solvedCount": 21436}, {"contestId": 2084, "index": "H", "name": "Turtle and Nediam 2", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["dp", "greedy"], "solvedCount": 87}, {"contestId": 2084, "index": "G2", "name": "Wish Upon a Satellite (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 82}, {"contestId": 2084, "index": "G1", "name": "Wish Upon a Satellite (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "games"], "solvedCount": 583}, {"contestId": 2084, "index": "F", "name": "Skyscape", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 356}, {"contestId": 2084, "index": "E", "name": "Blossom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "combinatorics", "dp", "implementation", "math", "two pointers"], "solvedCount": 1479}, {"contestId": 2084, "index": "D", "name": "Arcology On Permafrost", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 7541}, {"contestId": 2084, "index": "C", "name": "You Soared Afar With Grace", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 10161}, {"contestId": 2084, "index": "B", "name": "MIN = GCD", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math", "number theory"], "solvedCount": 14856}, {"contestId": 2084, "index": "A", "name": "Max and Mod", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 16421}, {"contestId": 2082, "index": "B", "name": "Floor or Ceil", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "greedy"], "solvedCount": 7061}, {"contestId": 2082, "index": "A", "name": "Binary Matrix", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 10359}, {"contestId": 2081, "index": "G2", "name": "Hard Formula (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3400, "tags": ["math"], "solvedCount": 38}, {"contestId": 2081, "index": "G1", "name": "Hard Formula", "type": "PROGRAMMING", "points": 1500.0, "rating": 3100, "tags": ["math", "number theory"], "solvedCount": 64}, {"contestId": 2081, "index": "F", "name": "Hot Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["constructive algorithms", "math"], "solvedCount": 102}, {"contestId": 2081, "index": "E", "name": "Quantifier", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["combinatorics", "dp", "implementation"], "solvedCount": 59}, {"contestId": 2081, "index": "D", "name": "MST in Modulo Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "math", "number theory", "sortings", "trees"], "solvedCount": 889}, {"contestId": 2081, "index": "C", "name": "Quaternary Matrix", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation", "matrices"], "solvedCount": 278}, {"contestId": 2081, "index": "B", "name": "Balancing", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["greedy"], "solvedCount": 835}, {"contestId": 2081, "index": "A", "name": "Math Division", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["bitmasks", "dp", "math", "probabilities"], "solvedCount": 3312}, {"contestId": 2080, "index": "D", "name": "Order Statistics", "type": "PROGRAMMING", "rating": 3400, "tags": ["*special", "binary search"], "solvedCount": 41}, {"contestId": 2080, "index": "C", "name": "Card Flip", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special"], "solvedCount": 145}, {"contestId": 2080, "index": "B", "name": "Best Runner", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 360}, {"contestId": 2080, "index": "A", "name": "Strong Connectivity Strikes Back", "type": "PROGRAMMING", "rating": 3200, "tags": ["*special", "constructive algorithms", "graphs"], "solvedCount": 38}, {"contestId": 2079, "index": "D", "name": "Cute Subsequences", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "sortings"], "solvedCount": 521}, {"contestId": 2079, "index": "C", "name": "Dreaming Is Not Harmful", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special"], "solvedCount": 177}, {"contestId": 2079, "index": "B", "name": "Arithmetic Exercise", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "data structures", "dp", "greedy"], "solvedCount": 134}, {"contestId": 2079, "index": "A", "name": "Alice, Bob, And Two Arrays", "type": "PROGRAMMING", "rating": 3300, "tags": ["*special", "data structures", "dp", "games"], "solvedCount": 29}, {"contestId": 2078, "index": "D", "name": "Scammy Game Ad", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "greedy", "implementation"], "solvedCount": 5533}, {"contestId": 2078, "index": "B", "name": "Vicious Labyrinth", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["constructive algorithms", "graphs", "greedy", "implementation", "math"], "solvedCount": 16953}, {"contestId": 2078, "index": "A", "name": "Final Verdict", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 21977}, {"contestId": 2077, "index": "G", "name": "RGB Walking", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["bitmasks", "chinese remainder theorem", "dfs and similar", "graphs", "number theory"], "solvedCount": 96}, {"contestId": 2077, "index": "F", "name": "AND x OR", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["bitmasks", "constructive algorithms", "dp"], "solvedCount": 209}, {"contestId": 2077, "index": "E", "name": "Another Folding Strip", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["combinatorics", "constructive algorithms", "data structures", "divide and conquer", "dp", "greedy", "math"], "solvedCount": 507}, {"contestId": 2077, "index": "D", "name": "Maximum Polygon", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["brute force", "data structures", "greedy", "implementation", "math"], "solvedCount": 296}, {"contestId": 2077, "index": "C", "name": "Binary Subsequence Value Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dp", "fft", "math", "matrices"], "solvedCount": 1734}, {"contestId": 2077, "index": "B", "name": "Finding OR Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "implementation", "interactive", "math"], "solvedCount": 3060}, {"contestId": 2077, "index": "A", "name": "Breach of Faith", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 12764}, {"contestId": 2075, "index": "F", "name": "Beautiful Sequence Returns", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "brute force", "data structures", "implementation"], "solvedCount": 436}, {"contestId": 2075, "index": "E", "name": "XOR Matrix", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "implementation", "math"], "solvedCount": 928}, {"contestId": 2075, "index": "D", "name": "Equalization", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "graphs", "math"], "solvedCount": 4886}, {"contestId": 2075, "index": "C", "name": "Two Colors", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "combinatorics", "math"], "solvedCount": 12587}, {"contestId": 2075, "index": "B", "name": "Array Recoloring", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy"], "solvedCount": 16960}, {"contestId": 2075, "index": "A", "name": "To Zero", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 26171}, {"contestId": 2074, "index": "G", "name": "Game With Triangles: Season 2", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "geometry"], "solvedCount": 1847}, {"contestId": 2074, "index": "F", "name": "Counting Necessary Nodes", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "divide and conquer", "greedy", "implementation", "math"], "solvedCount": 2211}, {"contestId": 2074, "index": "E", "name": "Empty Triangle", "type": "PROGRAMMING", "rating": 1600, "tags": ["geometry", "interactive", "probabilities"], "solvedCount": 5873}, {"contestId": 2074, "index": "D", "name": "Counting Points", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "data structures", "geometry", "implementation", "two pointers"], "solvedCount": 10895}, {"contestId": 2074, "index": "C", "name": "XOR and Triangle", "type": "PROGRAMMING", "rating": 1100, "tags": ["bitmasks", "brute force", "geometry", "greedy", "probabilities"], "solvedCount": 20265}, {"contestId": 2074, "index": "B", "name": "The Third Side", "type": "PROGRAMMING", "rating": 800, "tags": ["geometry", "greedy", "math"], "solvedCount": 32397}, {"contestId": 2074, "index": "A", "name": "Draw a Square", "type": "PROGRAMMING", "rating": 800, "tags": ["geometry", "implementation"], "solvedCount": 39708}, {"contestId": 2073, "index": "M", "name": "Can You Reach There?", "type": "PROGRAMMING", "rating": 3300, "tags": [], "solvedCount": 66}, {"contestId": 2073, "index": "L", "name": "Boarding Queue", "type": "PROGRAMMING", "rating": 1300, "tags": [], "solvedCount": 1439}, {"contestId": 2073, "index": "K", "name": "Book Sorting", "type": "PROGRAMMING", "rating": 2900, "tags": [], "solvedCount": 193}, {"contestId": 2073, "index": "J", "name": "Gathering Sharks", "type": "PROGRAMMING", "rating": 2000, "tags": [], "solvedCount": 893}, {"contestId": 2073, "index": "I", "name": "Squares on Grid Lines", "type": "PROGRAMMING", "rating": 3100, "tags": [], "solvedCount": 97}, {"contestId": 2073, "index": "H", "name": "Secret Lilies and Roses", "type": "PROGRAMMING", "rating": 2700, "tags": ["interactive"], "solvedCount": 289}, {"contestId": 2073, "index": "G", "name": "Corrupted File", "type": "PROGRAMMING", "rating": 2200, "tags": [], "solvedCount": 724}, {"contestId": 2073, "index": "F", "name": "Hold the Star", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 47}, {"contestId": 2073, "index": "E", "name": "Minus Operator", "type": "PROGRAMMING", "rating": 3300, "tags": ["interactive"], "solvedCount": 61}, {"contestId": 2073, "index": "D", "name": "Tower of Hanoi", "type": "PROGRAMMING", "rating": 2400, "tags": [], "solvedCount": 427}, {"contestId": 2073, "index": "C", "name": "Cactus Connectivity", "type": "PROGRAMMING", "rating": 2700, "tags": [], "solvedCount": 269}, {"contestId": 2073, "index": "B", "name": "Three-Dimensional Embedding", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 24}, {"contestId": 2073, "index": "A", "name": "Control Towers", "type": "PROGRAMMING", "rating": 1900, "tags": [], "solvedCount": 994}, {"contestId": 2072, "index": "G", "name": "I've Been Flipping Numbers for 300 Years and Calculated the Sum", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "brute force", "combinatorics", "divide and conquer", "math", "number theory"], "solvedCount": 1939}, {"contestId": 2072, "index": "F", "name": "Goodbye, Banker Life", "type": "PROGRAMMING", "rating": 1700, "tags": ["2-sat", "bitmasks", "combinatorics", "constructive algorithms", "fft", "math", "number theory"], "solvedCount": 7496}, {"contestId": 2072, "index": "E", "name": "Do You Love Your Hero and His Two-Hit Multi-Target Attacks?", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "constructive algorithms", "dp", "geometry", "greedy", "math"], "solvedCount": 11047}, {"contestId": 2072, "index": "D", "name": "For Wizards, the Exam Is Easy, but I Couldn't Handle It", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 16283}, {"contestId": 2072, "index": "C", "name": "Creating Keys for StORages Has Become My Main Skill", "type": "PROGRAMMING", "rating": 1200, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 17950}, {"contestId": 2072, "index": "B", "name": "Having Been a Treasurer in the Past, I Help Goblins Deceive", "type": "PROGRAMMING", "rating": 900, "tags": ["combinatorics", "constructive algorithms", "strings"], "solvedCount": 28773}, {"contestId": 2072, "index": "A", "name": "New World, New Me, New Array", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "math"], "solvedCount": 38249}, {"contestId": 2071, "index": "F", "name": "Towering Arrays", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["binary search", "data structures"], "solvedCount": 248}, {"contestId": 2071, "index": "E", "name": "LeaFall", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "probabilities", "trees"], "solvedCount": 520}, {"contestId": 2071, "index": "D2", "name": "Infinite Sequence (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["bitmasks", "brute force", "constructive algorithms", "data structures", "dp", "implementation", "math"], "solvedCount": 908}, {"contestId": 2071, "index": "D1", "name": "Infinite Sequence (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dp", "implementation", "math"], "solvedCount": 5926}, {"contestId": 2071, "index": "C", "name": "Trapmigiano Reggiano", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "sortings", "trees"], "solvedCount": 8475}, {"contestId": 2071, "index": "B", "name": "Perfecto", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 19248}, {"contestId": 2071, "index": "A", "name": "The Play Never Ends", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 26288}, {"contestId": 2070, "index": "F", "name": "Friends and Pizza", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "divide and conquer", "dp", "fft"], "solvedCount": 297}, {"contestId": 2070, "index": "E", "name": "Game with Binary String", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "data structures", "divide and conquer", "games", "greedy", "math"], "solvedCount": 1570}, {"contestId": 2070, "index": "D", "name": "Tree Jumps", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 9408}, {"contestId": 2070, "index": "C", "name": "Limited Repainting", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy"], "solvedCount": 12137}, {"contestId": 2070, "index": "B", "name": "Robot Program", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "implementation", "math"], "solvedCount": 18288}, {"contestId": 2070, "index": "A", "name": "FizzBuzz Remixed", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 24975}, {"contestId": 2069, "index": "F", "name": "Graph Inclusion", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "graphs"], "solvedCount": 665}, {"contestId": 2069, "index": "E", "name": "A, B, AB and BA", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 1665}, {"contestId": 2069, "index": "D", "name": "Palindrome Shuffle", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "greedy", "hashing", "strings", "two pointers"], "solvedCount": 6217}, {"contestId": 2069, "index": "C", "name": "Beautiful Sequence", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "dp", "greedy", "two pointers"], "solvedCount": 12992}, {"contestId": 2069, "index": "B", "name": "Set of Strangers", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "matrices"], "solvedCount": 17309}, {"contestId": 2069, "index": "A", "name": "Was there an Array?", "type": "PROGRAMMING", "rating": 800, "tags": ["graph matchings", "greedy"], "solvedCount": 25449}, {"contestId": 2068, "index": "K", "name": "Amusement Park Rides", "type": "PROGRAMMING", "rating": 3000, "tags": ["flows", "graphs"], "solvedCount": 160}, {"contestId": 2068, "index": "J", "name": "The Ultimate Wine Tasting Event", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "greedy"], "solvedCount": 1242}, {"contestId": 2068, "index": "I", "name": "Pinball", "type": "PROGRAMMING", "rating": 3500, "tags": ["graphs", "shortest paths"], "solvedCount": 39}, {"contestId": 2068, "index": "H", "name": "Statues", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 320}, {"contestId": 2068, "index": "G", "name": "A Very Long Hike", "type": "PROGRAMMING", "rating": 3500, "tags": ["shortest paths"], "solvedCount": 40}, {"contestId": 2068, "index": "F", "name": "Mascot Naming", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "greedy", "implementation", "strings"], "solvedCount": 1068}, {"contestId": 2068, "index": "E", "name": "Porto Vs. Benfica", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "shortest paths"], "solvedCount": 272}, {"contestId": 2068, "index": "D", "name": "Morse Code", "type": "PROGRAMMING", "rating": 3100, "tags": ["dp", "sortings", "trees"], "solvedCount": 175}, {"contestId": 2068, "index": "C", "name": "Ads", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "greedy", "two pointers"], "solvedCount": 1229}, {"contestId": 2068, "index": "B", "name": "Urban Planning", "type": "PROGRAMMING", "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 87}, {"contestId": 2068, "index": "A", "name": "Condorcet Elections", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "graphs", "greedy", "probabilities"], "solvedCount": 751}, {"contestId": 2067, "index": "C", "name": "Devyatkino", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "greedy", "math"], "solvedCount": 11574}, {"contestId": 2067, "index": "B", "name": "Two Large Bags", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "dp", "greedy", "sortings"], "solvedCount": 17189}, {"contestId": 2067, "index": "A", "name": "Adjacent Digit Sums", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 24226}, {"contestId": 2066, "index": "F", "name": "Curse", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 57}, {"contestId": 2066, "index": "E", "name": "Tropical Season", "type": "PROGRAMMING", "points": 2000.0, "rating": 3300, "tags": ["binary search", "data structures", "greedy", "implementation"], "solvedCount": 333}, {"contestId": 2066, "index": "D2", "name": "Club of Young Aircraft Builders (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2900, "tags": ["combinatorics", "dp", "math"], "solvedCount": 502}, {"contestId": 2066, "index": "D1", "name": "Club of Young Aircraft Builders (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1203}, {"contestId": 2066, "index": "C", "name": "Bitwise Slides", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "dp", "math"], "solvedCount": 2102}, {"contestId": 2066, "index": "B", "name": "White Magic", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 4733}, {"contestId": 2066, "index": "A", "name": "Object Identification", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["graphs", "greedy", "implementation", "interactive"], "solvedCount": 6327}, {"contestId": 2065, "index": "H", "name": "Bro Thinks He's Him", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "data structures", "divide and conquer", "dp", "math", "matrices"], "solvedCount": 1693}, {"contestId": 2065, "index": "G", "name": "Skibidus and Capping", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 5411}, {"contestId": 2065, "index": "F", "name": "Skibidus and Slay", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 6181}, {"contestId": 2065, "index": "E", "name": "Skibidus and Rizz", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 10526}, {"contestId": 2065, "index": "D", "name": "Skibidus and Sigma", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 18663}, {"contestId": 2065, "index": "C2", "name": "Skibidus and Fanum Tax (hard version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "greedy"], "solvedCount": 16819}, {"contestId": 2065, "index": "C1", "name": "Skibidus and Fanum Tax (easy version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "dp", "greedy"], "solvedCount": 25056}, {"contestId": 2065, "index": "B", "name": "Skibidus and Ohio", "type": "PROGRAMMING", "rating": 800, "tags": ["strings"], "solvedCount": 37543}, {"contestId": 2065, "index": "A", "name": "Skibidus and Amog'u", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 49299}, {"contestId": 2064, "index": "F", "name": "We Be Summing", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "two pointers"], "solvedCount": 605}, {"contestId": 2064, "index": "E", "name": "Mycraft Sand Sort", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["combinatorics", "data structures", "dsu", "greedy", "math", "sortings"], "solvedCount": 1191}, {"contestId": 2064, "index": "D", "name": "Eating", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp", "greedy", "trees", "two pointers"], "solvedCount": 5221}, {"contestId": 2064, "index": "C", "name": "Remove the Ends", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["brute force", "constructive algorithms", "dp", "greedy"], "solvedCount": 16005}, {"contestId": 2064, "index": "B", "name": "Variety is Discouraged", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "constructive algorithms", "greedy", "two pointers"], "solvedCount": 18627}, {"contestId": 2064, "index": "A", "name": "Brogramming Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 25793}, {"contestId": 2063, "index": "F2", "name": "Counting Is Not Fun (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["combinatorics", "data structures", "dfs and similar", "dsu", "graphs", "implementation", "trees"], "solvedCount": 785}, {"contestId": 2063, "index": "F1", "name": "Counting Is Not Fun (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "dsu", "graphs", "hashing", "implementation", "math", "trees"], "solvedCount": 1344}, {"contestId": 2063, "index": "E", "name": "Triangle Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2090}, {"contestId": 2063, "index": "D", "name": "Game With Triangles", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "geometry", "greedy", "implementation", "math", "ternary search", "two pointers"], "solvedCount": 4535}, {"contestId": 2063, "index": "C", "name": "Remove Exactly Two", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "solvedCount": 12988}, {"contestId": 2063, "index": "B", "name": "Subsequence Update", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 21757}, {"contestId": 2063, "index": "A", "name": "Minimal Coprime", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 29885}, {"contestId": 2062, "index": "H", "name": "Galaxy Generator", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["bitmasks", "combinatorics", "dp"], "solvedCount": 118}, {"contestId": 2062, "index": "G", "name": "Permutation Factory", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["flows", "geometry", "graph matchings", "graphs"], "solvedCount": 133}, {"contestId": 2062, "index": "F", "name": "Traveling Salescat", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["constructive algorithms", "dp", "geometry", "graphs", "greedy", "math", "sortings"], "solvedCount": 527}, {"contestId": 2062, "index": "E2", "name": "The Game (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "games", "graphs", "implementation", "trees"], "solvedCount": 380}, {"contestId": 2062, "index": "E1", "name": "The Game (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "games", "graphs", "greedy", "trees"], "solvedCount": 3935}, {"contestId": 2062, "index": "D", "name": "Balanced Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 3262}, {"contestId": 2062, "index": "C", "name": "Cirno and Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "math"], "solvedCount": 17148}, {"contestId": 2062, "index": "B", "name": "Clockwork", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "math"], "solvedCount": 22021}, {"contestId": 2062, "index": "A", "name": "String", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math", "strings"], "solvedCount": 26827}, {"contestId": 2061, "index": "I", "name": "Kevin and Nivek", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["divide and conquer", "dp"], "solvedCount": 86}, {"contestId": 2061, "index": "H2", "name": "Kevin and Stones (Hard Version)", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["flows", "graphs"], "solvedCount": 39}, {"contestId": 2061, "index": "H1", "name": "Kevin and Stones (Easy Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["flows", "graph matchings", "graphs"], "solvedCount": 68}, {"contestId": 2061, "index": "G", "name": "Kevin and Teams", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["constructive algorithms", "graphs", "interactive"], "solvedCount": 432}, {"contestId": 2061, "index": "F2", "name": "Kevin and Binary String (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 121}, {"contestId": 2061, "index": "F1", "name": "Kevin and Binary String (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["greedy", "implementation"], "solvedCount": 2051}, {"contestId": 2061, "index": "E", "name": "Kevin and And", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "greedy", "math", "sortings"], "solvedCount": 3509}, {"contestId": 2061, "index": "D", "name": "Kevin and Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["bitmasks", "data structures"], "solvedCount": 9592}, {"contestId": 2061, "index": "C", "name": "Kevin and Puzzle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["2-sat", "combinatorics", "dp"], "solvedCount": 8854}, {"contestId": 2061, "index": "B", "name": "Kevin and Geometry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "geometry"], "solvedCount": 13735}, {"contestId": 2061, "index": "A", "name": "Kevin and Arithmetic", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 21128}, {"contestId": 2060, "index": "G", "name": "Bugged Sort", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "greedy", "sortings"], "solvedCount": 1107}, {"contestId": 2060, "index": "F", "name": "Multiplicative Arrays", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp", "number theory"], "solvedCount": 2324}, {"contestId": 2060, "index": "E", "name": "Graph Composition", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 10732}, {"contestId": 2060, "index": "D", "name": "Subtract Min Sort", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy"], "solvedCount": 24549}, {"contestId": 2060, "index": "C", "name": "Game of Mathletes", "type": "PROGRAMMING", "rating": 900, "tags": ["games", "greedy", "sortings", "two pointers"], "solvedCount": 29303}, {"contestId": 2060, "index": "B", "name": "Farmer John's Card Game", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "sortings"], "solvedCount": 26575}, {"contestId": 2060, "index": "A", "name": "Fibonacciness", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force"], "solvedCount": 38407}, {"contestId": 2059, "index": "E2", "name": "Stop Gaming (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["brute force", "constructive algorithms", "data structures", "hashing", "strings"], "solvedCount": 316}, {"contestId": 2059, "index": "E1", "name": "Stop Gaming (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "greedy", "hashing", "strings"], "solvedCount": 812}, {"contestId": 2059, "index": "D", "name": "Graph and Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "graphs", "greedy", "shortest paths"], "solvedCount": 5906}, {"contestId": 2059, "index": "C", "name": "Customer Service", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "graph matchings", "greedy", "math", "sortings"], "solvedCount": 11449}, {"contestId": 2059, "index": "B", "name": "Cost of the Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 17439}, {"contestId": 2059, "index": "A", "name": "Milya and Two Arrays", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 27905}, {"contestId": 2057, "index": "H", "name": "Coffee Break", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["data structures", "greedy", "math"], "solvedCount": 169}, {"contestId": 2057, "index": "G", "name": "Secret Message", "type": "PROGRAMMING", "points": 3750.0, "rating": 3000, "tags": ["constructive algorithms", "dfs and similar", "math"], "solvedCount": 616}, {"contestId": 2057, "index": "F", "name": "Formation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["binary search", "data structures", "dp", "sortings", "two pointers"], "solvedCount": 228}, {"contestId": 2057, "index": "E2", "name": "Another Exercise on Graphs (hard version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "dfs and similar", "dp", "dsu", "graphs", "shortest paths", "sortings"], "solvedCount": 1726}, {"contestId": 2057, "index": "E1", "name": "Another Exercise on Graphs (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["binary search", "brute force", "dp", "dsu", "graphs", "shortest paths", "sortings"], "solvedCount": 2363}, {"contestId": 2057, "index": "D", "name": "Gifts Order", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures", "greedy", "implementation", "math", "matrices"], "solvedCount": 4878}, {"contestId": 2057, "index": "C", "name": "Trip to the Olympiad", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 12733}, {"contestId": 2057, "index": "B", "name": "Gorilla and the Exam", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "sortings"], "solvedCount": 21639}, {"contestId": 2057, "index": "A", "name": "MEX Table", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 26443}, {"contestId": 2056, "index": "F2", "name": "Xor of Median (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 3000, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "math"], "solvedCount": 232}, {"contestId": 2056, "index": "F1", "name": "Xor of Median (Easy Version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "math"], "solvedCount": 356}, {"contestId": 2056, "index": "E", "name": "Nested Segments", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "math"], "solvedCount": 914}, {"contestId": 2056, "index": "D", "name": "Unique Median", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "brute force", "combinatorics", "data structures", "divide and conquer", "dp"], "solvedCount": 3285}, {"contestId": 2056, "index": "C", "name": "Palindromic Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 17979}, {"contestId": 2056, "index": "B", "name": "Find the Permutation", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["brute force", "dfs and similar", "graphs", "implementation", "sortings"], "solvedCount": 16751}, {"contestId": 2056, "index": "A", "name": "Shape Perimeter", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 25793}, {"contestId": 2055, "index": "F", "name": "Cosmic Divide", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["brute force", "geometry", "hashing", "math", "strings"], "solvedCount": 80}, {"contestId": 2055, "index": "E", "name": "Haystacks", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 418}, {"contestId": 2055, "index": "D", "name": "Scarecrow", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["greedy", "implementation", "math"], "solvedCount": 4035}, {"contestId": 2055, "index": "C", "name": "The Trail", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "math", "two pointers"], "solvedCount": 16040}, {"contestId": 2055, "index": "B", "name": "Crafting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 25520}, {"contestId": 2055, "index": "A", "name": "Two Frogs", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "games", "greedy", "math"], "solvedCount": 31945}, {"contestId": 2053, "index": "I2", "name": "Affectionate Arrays (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp", "graphs", "greedy", "math", "shortest paths", "two pointers"], "solvedCount": 60}, {"contestId": 2053, "index": "I1", "name": "Affectionate Arrays (Easy Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dp", "greedy"], "solvedCount": 493}, {"contestId": 2053, "index": "H", "name": "Delicate Anti-monotonous Operations", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 61}, {"contestId": 2053, "index": "G", "name": "Naive String Splits", "type": "PROGRAMMING", "points": 4250.0, "rating": 3400, "tags": ["binary search", "brute force", "greedy", "hashing", "math", "number theory", "strings"], "solvedCount": 206}, {"contestId": 2053, "index": "F", "name": "Earnest Matrix Complement", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "math"], "solvedCount": 881}, {"contestId": 2053, "index": "E", "name": "Resourceful Caterpillar Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "graphs", "greedy", "trees"], "solvedCount": 4145}, {"contestId": 2053, "index": "D", "name": "Refined Product Optimality", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["binary search", "data structures", "greedy", "math", "schedules", "sortings"], "solvedCount": 7153}, {"contestId": 2053, "index": "C", "name": "Bewitching Stargazer", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["bitmasks", "divide and conquer", "dp", "math"], "solvedCount": 11406}, {"contestId": 2053, "index": "B", "name": "Outstanding Impressionist", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "brute force", "data structures", "greedy"], "solvedCount": 15909}, {"contestId": 2053, "index": "A", "name": "Tender Carpenter", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dp", "geometry", "greedy", "math"], "solvedCount": 20504}, {"contestId": 2052, "index": "M", "name": "Managing Cluster", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "graphs", "math", "trees"], "solvedCount": 336}, {"contestId": 2052, "index": "L", "name": "Legacy Screensaver", "type": "PROGRAMMING", "rating": 2900, "tags": [], "solvedCount": 119}, {"contestId": 2052, "index": "K", "name": "Knowns and Unknowns", "type": "PROGRAMMING", "rating": 2800, "tags": [], "solvedCount": 87}, {"contestId": 2052, "index": "J", "name": "Judicious Watching", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 1261}, {"contestId": 2052, "index": "I", "name": "Incompetent Delivery Guy", "type": "PROGRAMMING", "rating": 2800, "tags": ["graphs", "shortest paths"], "solvedCount": 123}, {"contestId": 2052, "index": "H", "name": "Hunting Hoglins in Hogwarts", "type": "PROGRAMMING", "rating": 3500, "tags": ["interactive"], "solvedCount": 51}, {"contestId": 2052, "index": "G", "name": "Geometric Balance", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "geometry", "implementation"], "solvedCount": 170}, {"contestId": 2052, "index": "F", "name": "Fix Flooded Floor", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "dp", "graphs"], "solvedCount": 3062}, {"contestId": 2052, "index": "E", "name": "Expression Correction", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "expression parsing", "strings"], "solvedCount": 1268}, {"contestId": 2052, "index": "D", "name": "DAG Serialization", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "graphs"], "solvedCount": 976}, {"contestId": 2052, "index": "C", "name": "Cactus without Bridges", "type": "PROGRAMMING", "rating": 3500, "tags": ["constructive algorithms", "math"], "solvedCount": 36}, {"contestId": 2052, "index": "B", "name": "BitBitJump", "type": "PROGRAMMING", "rating": 2400, "tags": [], "solvedCount": 369}, {"contestId": 2052, "index": "A", "name": "Adrenaline Rush", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 3501}, {"contestId": 2051, "index": "G", "name": "Snakes", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "dp", "dsu", "graphs"], "solvedCount": 2132}, {"contestId": 2051, "index": "F", "name": "Joker", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 3650}, {"contestId": 2051, "index": "E", "name": "Best Price", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "data structures", "greedy", "sortings"], "solvedCount": 10720}, {"contestId": 2051, "index": "D", "name": "Counting Pairs", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "sortings", "two pointers"], "solvedCount": 21573}, {"contestId": 2051, "index": "C", "name": "Preparing for the Exam", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 25912}, {"contestId": 2051, "index": "B", "name": "Journey", "type": "PROGRAMMING", "rating": 800, "tags": ["binary search", "math"], "solvedCount": 35930}, {"contestId": 2051, "index": "A", "name": "Preparing for the Olympiad", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 33223}, {"contestId": 2050, "index": "G", "name": "Tree Destruction", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 4753}, {"contestId": 2050, "index": "F", "name": "Maximum modulo equality", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "divide and conquer", "math", "number theory"], "solvedCount": 8661}, {"contestId": 2050, "index": "E", "name": "Three Strings", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation", "strings"], "solvedCount": 12981}, {"contestId": 2050, "index": "D", "name": "Digital string maximization", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "greedy", "math", "strings"], "solvedCount": 17652}, {"contestId": 2050, "index": "C", "name": "Uninteresting Number", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "dp", "math"], "solvedCount": 22920}, {"contestId": 2050, "index": "B", "name": "Transfusion", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy", "math"], "solvedCount": 25404}, {"contestId": 2050, "index": "A", "name": "Line Breaks", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 34777}, {"contestId": 2049, "index": "F", "name": "MEX OR Mania", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "data structures", "dsu", "implementation"], "solvedCount": 522}, {"contestId": 2049, "index": "E", "name": "Broken Queries", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "implementation", "interactive"], "solvedCount": 1444}, {"contestId": 2049, "index": "D", "name": "Shift + Esc", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "dp"], "solvedCount": 5448}, {"contestId": 2049, "index": "C", "name": "MEX Cycle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 12628}, {"contestId": 2049, "index": "B", "name": "pspspsps", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["brute force", "constructive algorithms", "graph matchings", "implementation"], "solvedCount": 17720}, {"contestId": 2049, "index": "A", "name": "MEX Destruction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 23293}, {"contestId": 2048, "index": "I2", "name": "Kevin and Puzzle (Hard Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["bitmasks", "fft", "math"], "solvedCount": 36}, {"contestId": 2048, "index": "I1", "name": "Kevin and Puzzle (Easy Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 80}, {"contestId": 2048, "index": "H", "name": "Kevin and Strange Operation", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["data structures", "dp"], "solvedCount": 206}, {"contestId": 2048, "index": "G", "name": "Kevin and Matrices", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "combinatorics", "dp", "math"], "solvedCount": 590}, {"contestId": 2048, "index": "F", "name": "Kevin and Math Class", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "divide and conquer", "dp", "implementation", "math", "trees"], "solvedCount": 1182}, {"contestId": 2048, "index": "E", "name": "Kevin and Bipartite Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 3100}, {"contestId": 2048, "index": "D", "name": "Kevin and Competition Memories", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 7583}, {"contestId": 2048, "index": "C", "name": "Kevin and Binary Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "greedy", "implementation", "strings"], "solvedCount": 14148}, {"contestId": 2048, "index": "B", "name": "Kevin and Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19412}, {"contestId": 2048, "index": "A", "name": "Kevin and Combination Lock", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math", "number theory"], "solvedCount": 21830}, {"contestId": 2047, "index": "B", "name": "Replace Character", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "combinatorics", "greedy", "strings"], "solvedCount": 17633}, {"contestId": 2047, "index": "A", "name": "Alyona and a Square Jigsaw Puzzle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 17113}, {"contestId": 2046, "index": "F2", "name": "Yandex Cuneiform (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 77}, {"contestId": 2046, "index": "F1", "name": "Yandex Cuneiform (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 93}, {"contestId": 2046, "index": "E2", "name": "Cheops and a Contest (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3500, "tags": ["greedy", "implementation"], "solvedCount": 61}, {"contestId": 2046, "index": "E1", "name": "Cheops and a Contest (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 192}, {"contestId": 2046, "index": "D", "name": "For the Emperor!", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["flows", "graphs"], "solvedCount": 504}, {"contestId": 2046, "index": "C", "name": "Adventurers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings", "ternary search", "two pointers"], "solvedCount": 2124}, {"contestId": 2046, "index": "B", "name": "Move Back at a Cost", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 9721}, {"contestId": 2046, "index": "A", "name": "Swap Columns and Find a Path", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 15633}, {"contestId": 2045, "index": "M", "name": "Mirror Maze", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "solvedCount": 1838}, {"contestId": 2045, "index": "L", "name": "Buggy DFS", "type": "PROGRAMMING", "rating": 3000, "tags": ["constructive algorithms"], "solvedCount": 127}, {"contestId": 2045, "index": "K", "name": "GCDDCG", "type": "PROGRAMMING", "rating": 2900, "tags": [], "solvedCount": 89}, {"contestId": 2045, "index": "J", "name": "Xorderable Array", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "data structures"], "solvedCount": 281}, {"contestId": 2045, "index": "I", "name": "Microwavable Subsequence", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"], "solvedCount": 1059}, {"contestId": 2045, "index": "H", "name": "Missing Separators", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "sortings", "string suffix structures", "strings"], "solvedCount": 652}, {"contestId": 2045, "index": "G", "name": "X Aura", "type": "PROGRAMMING", "rating": 2200, "tags": ["graphs", "math", "shortest paths"], "solvedCount": 777}, {"contestId": 2045, "index": "F", "name": "Grid Game 3-angle", "type": "PROGRAMMING", "rating": 3000, "tags": ["games", "math"], "solvedCount": 116}, {"contestId": 2045, "index": "E", "name": "Narrower Passageway", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "data structures"], "solvedCount": 249}, {"contestId": 2045, "index": "D", "name": "Aquatic Dragon", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 40}, {"contestId": 2045, "index": "C", "name": "Saraga", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "strings"], "solvedCount": 6053}, {"contestId": 2045, "index": "B", "name": "ICPC Square", "type": "PROGRAMMING", "rating": 2000, "tags": ["math", "number theory"], "solvedCount": 1376}, {"contestId": 2045, "index": "A", "name": "Scrambled Scrabble", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "greedy"], "solvedCount": 2113}, {"contestId": 2044, "index": "H", "name": "Hard Demon Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "data structures", "dp", "implementation", "math"], "solvedCount": 2228}, {"contestId": 2044, "index": "G2", "name": "Medium Demon Problem (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"], "solvedCount": 3226}, {"contestId": 2044, "index": "G1", "name": "Medium Demon Problem (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graph matchings", "graphs", "implementation", "trees"], "solvedCount": 6359}, {"contestId": 2044, "index": "F", "name": "Easy Demon Problem", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "data structures", "math", "number theory"], "solvedCount": 5116}, {"contestId": 2044, "index": "E", "name": "Insane Problem", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "greedy", "implementation", "math", "number theory"], "solvedCount": 16423}, {"contestId": 2044, "index": "D", "name": "Harder Problem", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 22223}, {"contestId": 2044, "index": "C", "name": "Hard Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 41347}, {"contestId": 2044, "index": "B", "name": "Normal Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 46356}, {"contestId": 2044, "index": "A", "name": "Easy Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 52351}, {"contestId": 2043, "index": "G", "name": "Problem with Queries", "type": "PROGRAMMING", "rating": 3000, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 276}, {"contestId": 2043, "index": "F", "name": "Nim", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "games", "greedy", "implementation", "shortest paths"], "solvedCount": 815}, {"contestId": 2043, "index": "E", "name": "Matrix Transformation", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "brute force", "data structures", "dfs and similar", "graphs", "greedy", "implementation"], "solvedCount": 1679}, {"contestId": 2043, "index": "D", "name": "Problem about GCD", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "flows", "math", "number theory"], "solvedCount": 6851}, {"contestId": 2043, "index": "C", "name": "Sums on Segments", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "data structures", "dp", "greedy", "math"], "solvedCount": 10116}, {"contestId": 2043, "index": "B", "name": "Digits", "type": "PROGRAMMING", "rating": 1100, "tags": ["math", "number theory"], "solvedCount": 20251}, {"contestId": 2043, "index": "A", "name": "Coin Transformation", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 25812}, {"contestId": 2042, "index": "F", "name": "Two Subarrays", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "implementation", "matrices"], "solvedCount": 785}, {"contestId": 2042, "index": "E", "name": "Vertex Pairs", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "divide and conquer", "greedy", "implementation", "trees"], "solvedCount": 466}, {"contestId": 2042, "index": "D", "name": "Recommendations", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "implementation", "sortings", "two pointers"], "solvedCount": 4458}, {"contestId": 2042, "index": "C", "name": "Competitive Fishing", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy"], "solvedCount": 7947}, {"contestId": 2042, "index": "B", "name": "Game with Colored Marbles", "type": "PROGRAMMING", "rating": 900, "tags": ["games", "greedy"], "solvedCount": 18222}, {"contestId": 2042, "index": "A", "name": "Greedy Monocarp", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 19978}, {"contestId": 2041, "index": "N", "name": "Railway Construction", "type": "PROGRAMMING", "rating": 3300, "tags": [], "solvedCount": 30}, {"contestId": 2041, "index": "M", "name": "Selection Sort", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 1093}, {"contestId": 2041, "index": "L", "name": "Building Castle", "type": "PROGRAMMING", "rating": 2900, "tags": [], "solvedCount": 57}, {"contestId": 2041, "index": "K", "name": "Trophic Balance Species", "type": "PROGRAMMING", "rating": 3100, "tags": ["binary search", "brute force", "dfs and similar", "graphs"], "solvedCount": 95}, {"contestId": 2041, "index": "J", "name": "Bottle Arrangement", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "dp", "dsu", "greedy"], "solvedCount": 201}, {"contestId": 2041, "index": "I", "name": "Auto Complete", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "hashing", "implementation", "sortings", "strings", "trees"], "solvedCount": 546}, {"contestId": 2041, "index": "H", "name": "Sheet Music", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "dp", "math"], "solvedCount": 821}, {"contestId": 2041, "index": "G", "name": "Grid Game", "type": "PROGRAMMING", "rating": 3100, "tags": [], "solvedCount": 45}, {"contestId": 2041, "index": "F", "name": "Segmentation Folds", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "dfs and similar", "number theory"], "solvedCount": 401}, {"contestId": 2041, "index": "E", "name": "Beautiful Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 8551}, {"contestId": 2041, "index": "D", "name": "Drunken Maze", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 3288}, {"contestId": 2041, "index": "C", "name": "Cube", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "dfs and similar", "dp"], "solvedCount": 1583}, {"contestId": 2041, "index": "B", "name": "Bowling Frame", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "brute force", "math"], "solvedCount": 6279}, {"contestId": 2041, "index": "A", "name": "The Bento Box Adventure", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 9995}, {"contestId": 2040, "index": "F", "name": "Number of Cubes", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 408}, {"contestId": 2040, "index": "E", "name": "Control of Randomness", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "dfs and similar", "dp", "graphs", "greedy", "math", "probabilities", "trees"], "solvedCount": 2346}, {"contestId": 2040, "index": "D", "name": "Non Prime Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "number theory", "trees", "two pointers"], "solvedCount": 5269}, {"contestId": 2040, "index": "C", "name": "Ordered Permutations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "greedy", "math", "two pointers"], "solvedCount": 9842}, {"contestId": 2040, "index": "B", "name": "Paint a Strip", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 22504}, {"contestId": 2040, "index": "A", "name": "Game of Division", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "math"], "solvedCount": 23570}, {"contestId": 2039, "index": "H2", "name": "Cool Swap Walk (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "constructive algorithms", "constructive algorithms", "implementation", "sortings"], "solvedCount": 74}, {"contestId": 2039, "index": "H1", "name": "Cool Swap Walk (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 87}, {"contestId": 2039, "index": "G", "name": "Shohag Loves Pebae", "type": "PROGRAMMING", "points": 4250.0, "rating": 3500, "tags": ["math", "number theory"], "solvedCount": 66}, {"contestId": 2039, "index": "F2", "name": "Shohag Loves Counting (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3200, "tags": ["dp", "number theory"], "solvedCount": 241}, {"contestId": 2039, "index": "F1", "name": "Shohag Loves Counting (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 437}, {"contestId": 2039, "index": "E", "name": "Shohag Loves Inversions", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["combinatorics", "dp", "implementation", "math"], "solvedCount": 2185}, {"contestId": 2039, "index": "D", "name": "Shohag Loves GCD", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 6298}, {"contestId": 2039, "index": "C2", "name": "Shohag Loves XOR (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["bitmasks", "brute force", "math", "number theory"], "solvedCount": 4618}, {"contestId": 2039, "index": "C1", "name": "Shohag Loves XOR (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "math", "number theory"], "solvedCount": 12441}, {"contestId": 2039, "index": "B", "name": "Shohag Loves Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 15930}, {"contestId": 2039, "index": "A", "name": "Shohag Loves Mod", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "number theory"], "solvedCount": 17385}, {"contestId": 2038, "index": "N", "name": "Fixing the Expression", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 10596}, {"contestId": 2038, "index": "M", "name": "Royal Flush", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "implementation"], "solvedCount": 295}, {"contestId": 2038, "index": "L", "name": "Bridge Renovation", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "greedy", "math", "two pointers"], "solvedCount": 7056}, {"contestId": 2038, "index": "K", "name": "Grid Walk", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dp", "greedy", "math", "number theory"], "solvedCount": 1560}, {"contestId": 2038, "index": "J", "name": "Waiting for...", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 8127}, {"contestId": 2038, "index": "I", "name": "Polyathlon", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "solvedCount": 660}, {"contestId": 2038, "index": "H", "name": "Galactic Council", "type": "PROGRAMMING", "rating": 3000, "tags": ["flows"], "solvedCount": 156}, {"contestId": 2038, "index": "G", "name": "Guess One Character", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "implementation", "interactive"], "solvedCount": 2557}, {"contestId": 2038, "index": "F", "name": "Alternative Platforms", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "data structures", "fft", "math", "sortings"], "solvedCount": 421}, {"contestId": 2038, "index": "E", "name": "Barrels", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "greedy", "math"], "solvedCount": 134}, {"contestId": 2038, "index": "D", "name": "Divide OR Conquer", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "bitmasks", "data structures", "dp", "implementation"], "solvedCount": 729}, {"contestId": 2038, "index": "C", "name": "DIY", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "geometry", "greedy", "sortings"], "solvedCount": 6018}, {"contestId": 2038, "index": "B", "name": "Make It Equal", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "brute force", "greedy", "math"], "solvedCount": 1668}, {"contestId": 2038, "index": "A", "name": "Bonus Project", "type": "PROGRAMMING", "rating": 1400, "tags": ["games", "greedy"], "solvedCount": 4754}, {"contestId": 2037, "index": "G", "name": "Natlan Exploring", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "combinatorics", "data structures", "dp", "math", "number theory"], "solvedCount": 3266}, {"contestId": 2037, "index": "F", "name": "Ardent Flames", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "math", "sortings", "two pointers"], "solvedCount": 2665}, {"contestId": 2037, "index": "E", "name": "Kachina's Favorite Binary String", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "interactive", "two pointers"], "solvedCount": 6722}, {"contestId": 2037, "index": "D", "name": "Sharky Surfing", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "greedy", "two pointers"], "solvedCount": 13662}, {"contestId": 2037, "index": "C", "name": "Superultra's Favorite Permutation", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 23740}, {"contestId": 2037, "index": "B", "name": "Intercepted Inputs", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 24594}, {"contestId": 2037, "index": "A", "name": "Twice", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 33526}, {"contestId": 2036, "index": "G", "name": "Library of Magic", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "divide and conquer", "interactive", "math", "number theory"], "solvedCount": 1494}, {"contestId": 2036, "index": "F", "name": "XORificator 3000", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dp", "number theory", "two pointers"], "solvedCount": 4601}, {"contestId": 2036, "index": "E", "name": "Reverse the Rivers", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 8763}, {"contestId": 2036, "index": "D", "name": "I Love 1543", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation", "matrices"], "solvedCount": 14915}, {"contestId": 2036, "index": "C", "name": "Anya and 1100", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 20993}, {"contestId": 2036, "index": "B", "name": "Startup", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 28211}, {"contestId": 2036, "index": "A", "name": "Quintomania", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 38443}, {"contestId": 2035, "index": "H", "name": "Peak Productivity Forces", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 82}, {"contestId": 2035, "index": "G2", "name": "Go Learn! (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["divide and conquer", "dp"], "solvedCount": 99}, {"contestId": 2035, "index": "G1", "name": "Go Learn! (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["dp", "trees"], "solvedCount": 160}, {"contestId": 2035, "index": "F", "name": "Tree Operations", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["binary search", "brute force", "dfs and similar", "dp", "trees"], "solvedCount": 1005}, {"contestId": 2035, "index": "E", "name": "Monster", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "implementation", "math", "ternary search"], "solvedCount": 1842}, {"contestId": 2035, "index": "D", "name": "Yet Another Real Number Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "data structures", "divide and conquer", "greedy", "implementation", "math"], "solvedCount": 5427}, {"contestId": 2035, "index": "C", "name": "Alya and Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 10599}, {"contestId": 2035, "index": "B", "name": "Everyone Loves Tres", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 19234}, {"contestId": 2035, "index": "A", "name": "Sliding", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 17367}, {"contestId": 2034, "index": "H", "name": "Rayan vs. Rayaneh", "type": "PROGRAMMING", "points": 5000.0, "rating": 3300, "tags": ["brute force", "dfs and similar", "dp", "number theory"], "solvedCount": 128}, {"contestId": 2034, "index": "G2", "name": "Simurgh's Watch (Hard Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["greedy", "implementation"], "solvedCount": 60}, {"contestId": 2034, "index": "G1", "name": "Simurgh's Watch (Easy Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 58}, {"contestId": 2034, "index": "F2", "name": "Khayyam's Royal Decree (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math", "sortings"], "solvedCount": 522}, {"contestId": 2034, "index": "F1", "name": "Khayyam's Royal Decree (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "sortings"], "solvedCount": 789}, {"contestId": 2034, "index": "E", "name": "Permutations Harmony", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "constructive algorithms", "greedy", "hashing", "math"], "solvedCount": 1844}, {"contestId": 2034, "index": "D", "name": "Darius' Wisdom", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 5975}, {"contestId": 2034, "index": "C", "name": "Trapped in the Witch's Labyrinth", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation"], "solvedCount": 8297}, {"contestId": 2034, "index": "B", "name": "Rakhsh's Revival", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["data structures", "greedy", "implementation", "two pointers"], "solvedCount": 14528}, {"contestId": 2034, "index": "A", "name": "King Keykhosrow's Mystery", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "chinese remainder theorem", "math", "number theory"], "solvedCount": 17533}, {"contestId": 2033, "index": "G", "name": "Sakurako and Chefir", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1784}, {"contestId": 2033, "index": "F", "name": "Kosuke's Sloth", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "math", "number theory"], "solvedCount": 6606}, {"contestId": 2033, "index": "E", "name": "Sakurako, Kosuke, and the Permutation", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "math"], "solvedCount": 13094}, {"contestId": 2033, "index": "D", "name": "Kousuke's Assignment", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "dp", "dsu", "greedy", "math"], "solvedCount": 16750}, {"contestId": 2033, "index": "C", "name": "Sakurako's Field Trip", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "two pointers"], "solvedCount": 16466}, {"contestId": 2033, "index": "B", "name": "Sakurako and Water", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 27446}, {"contestId": 2033, "index": "A", "name": "Sakurako and Kosuke", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 39182}, {"contestId": 2032, "index": "F", "name": "Peanuts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["combinatorics", "dp", "games", "math"], "solvedCount": 434}, {"contestId": 2032, "index": "E", "name": "Balanced", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "solvedCount": 1264}, {"contestId": 2032, "index": "D", "name": "Genokraken", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "interactive", "trees", "two pointers"], "solvedCount": 5741}, {"contestId": 2032, "index": "C", "name": "Trinity", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "math", "sortings", "two pointers"], "solvedCount": 14912}, {"contestId": 2032, "index": "B", "name": "Medians", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 19665}, {"contestId": 2032, "index": "A", "name": "Circuit", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math", "number theory"], "solvedCount": 23865}, {"contestId": 2031, "index": "F", "name": "Penchick and Even Medians", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "interactive", "probabilities"], "solvedCount": 404}, {"contestId": 2031, "index": "E", "name": "Penchick and Chloe's Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "greedy", "implementation", "math", "sortings", "trees"], "solvedCount": 2458}, {"contestId": 2031, "index": "D", "name": "Penchick and Desert Rabbit", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "two pointers"], "solvedCount": 8705}, {"contestId": 2031, "index": "C", "name": "Penchick and BBQ Buns", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 14592}, {"contestId": 2031, "index": "B", "name": "Penchick and Satay Sticks", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 19417}, {"contestId": 2031, "index": "A", "name": "Penchick and Modern Monument", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "dp", "greedy", "math"], "solvedCount": 20025}, {"contestId": 2030, "index": "G2", "name": "The Destruction of the Universe (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3100, "tags": ["combinatorics", "math"], "solvedCount": 158}, {"contestId": 2030, "index": "G1", "name": "The Destruction of the Universe (Easy Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["combinatorics", "greedy", "math"], "solvedCount": 221}, {"contestId": 2030, "index": "F", "name": "Orangutan Approved Subarrays", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"], "solvedCount": 1017}, {"contestId": 2030, "index": "E", "name": "MEXimize the Score", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "data structures", "dp", "greedy", "implementation", "math"], "solvedCount": 1720}, {"contestId": 2030, "index": "D", "name": "QED's Favorite Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 7830}, {"contestId": 2030, "index": "C", "name": "A TRUE Battle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "games", "greedy"], "solvedCount": 18939}, {"contestId": 2030, "index": "B", "name": "Minimise Oneness", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["combinatorics", "constructive algorithms", "games", "math"], "solvedCount": 22840}, {"contestId": 2030, "index": "A", "name": "A Gift From Orangutan", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 26801}, {"contestId": 2029, "index": "I", "name": "Variance Challenge", "type": "PROGRAMMING", "points": 5500.0, "rating": 3400, "tags": ["flows", "graphs", "greedy"], "solvedCount": 115}, {"contestId": 2029, "index": "H", "name": "Message Spread", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["bitmasks", "brute force", "combinatorics", "dp"], "solvedCount": 89}, {"contestId": 2029, "index": "G", "name": "Balanced Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["data structures", "dp"], "solvedCount": 223}, {"contestId": 2029, "index": "F", "name": "Palindrome Everywhere", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 803}, {"contestId": 2029, "index": "E", "name": "Common Generator", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 3230}, {"contestId": 2029, "index": "D", "name": "Cool Graph", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "solvedCount": 3547}, {"contestId": 2029, "index": "C", "name": "New Rating", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy"], "solvedCount": 6771}, {"contestId": 2029, "index": "B", "name": "Replacement", "type": "PROGRAMMING", "points": 1250.0, "rating": 1100, "tags": ["constructive algorithms", "games", "strings"], "solvedCount": 10989}, {"contestId": 2029, "index": "A", "name": "Set", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 13478}, {"contestId": 2028, "index": "F", "name": "Alice's Adventures in Addition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "brute force", "dp", "implementation"], "solvedCount": 481}, {"contestId": 2028, "index": "E", "name": "Alice's Adventures in the Rabbit Hole", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "dp", "games", "greedy", "math", "probabilities", "trees"], "solvedCount": 1704}, {"contestId": 2028, "index": "D", "name": "Alice's Adventures in Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "dp", "graphs", "greedy", "implementation", "ternary search"], "solvedCount": 3368}, {"contestId": 2028, "index": "C", "name": "Alice's Adventures in Cutting Cake", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "two pointers"], "solvedCount": 8974}, {"contestId": 2028, "index": "B", "name": "Alice's Adventures in Permuting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "implementation", "math"], "solvedCount": 12345}, {"contestId": 2028, "index": "A", "name": "Alice's Adventures in ''Chess''", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"], "solvedCount": 18872}, {"contestId": 2027, "index": "E2", "name": "Bit Game (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3100, "tags": ["bitmasks", "dp", "math"], "solvedCount": 87}, {"contestId": 2027, "index": "E1", "name": "Bit Game (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "brute force", "games", "math"], "solvedCount": 211}, {"contestId": 2027, "index": "D2", "name": "The Endspeaker (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"], "solvedCount": 1718}, {"contestId": 2027, "index": "D1", "name": "The Endspeaker (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["binary search", "dp", "graphs", "greedy", "implementation", "two pointers"], "solvedCount": 6288}, {"contestId": 2027, "index": "C", "name": "Add Zeros", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "greedy"], "solvedCount": 12441}, {"contestId": 2027, "index": "B", "name": "Stalin Sort", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "greedy"], "solvedCount": 16849}, {"contestId": 2027, "index": "A", "name": "Rectangle Arrangement", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "implementation", "math"], "solvedCount": 21488}, {"contestId": 2026, "index": "F", "name": "Bermart Ice Cream", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "implementation", "trees"], "solvedCount": 337}, {"contestId": 2026, "index": "E", "name": "Best Subsequence", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dfs and similar", "flows", "graph matchings", "graphs"], "solvedCount": 1675}, {"contestId": 2026, "index": "D", "name": "Sums of Segments", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation", "math"], "solvedCount": 5227}, {"contestId": 2026, "index": "C", "name": "Action Figures", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 11629}, {"contestId": 2026, "index": "B", "name": "Black Cells", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "constructive algorithms", "greedy"], "solvedCount": 15401}, {"contestId": 2026, "index": "A", "name": "Perpendicular Segments", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "geometry", "greedy", "math"], "solvedCount": 19280}, {"contestId": 2025, "index": "G", "name": "Variable Damage", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "flows"], "solvedCount": 209}, {"contestId": 2025, "index": "F", "name": "Choose Your Queries", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 944}, {"contestId": 2025, "index": "E", "name": "Card Game", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp", "fft", "greedy", "math"], "solvedCount": 2162}, {"contestId": 2025, "index": "D", "name": "Attribute Checks", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp", "implementation", "math", "two pointers"], "solvedCount": 7225}, {"contestId": 2025, "index": "C", "name": "New Game", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 17724}, {"contestId": 2025, "index": "B", "name": "Binomial Coefficients, Kind Of", "type": "PROGRAMMING", "rating": 1100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 18777}, {"contestId": 2025, "index": "A", "name": "Two Screens", "type": "PROGRAMMING", "rating": 800, "tags": ["binary search", "greedy", "strings", "two pointers"], "solvedCount": 27146}, {"contestId": 2024, "index": "B", "name": "Buying Lemonade", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "constructive algorithms", "sortings"], "solvedCount": 16221}, {"contestId": 2024, "index": "A", "name": "Profitable Interest Rate", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 22284}, {"contestId": 2023, "index": "F", "name": "Hills and Pits", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "greedy", "math", "matrices"], "solvedCount": 102}, {"contestId": 2023, "index": "E", "name": "Tree of Life", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["dp", "greedy", "trees"], "solvedCount": 142}, {"contestId": 2023, "index": "D", "name": "Many Games", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["brute force", "dp", "greedy", "math", "probabilities"], "solvedCount": 537}, {"contestId": 2023, "index": "C", "name": "C+K+S", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "hashing", "implementation", "strings"], "solvedCount": 1228}, {"contestId": 2023, "index": "B", "name": "Skipping", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "dp", "graphs", "shortest paths"], "solvedCount": 6438}, {"contestId": 2023, "index": "A", "name": "Concatenation of Arrays", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 15466}, {"contestId": 2022, "index": "E2", "name": "Billetes MX (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["binary search", "combinatorics", "data structures", "dsu", "graphs"], "solvedCount": 570}, {"contestId": 2022, "index": "E1", "name": "Billetes MX (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["2-sat", "binary search", "combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 626}, {"contestId": 2022, "index": "D2", "name": "Asesino (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dp", "interactive"], "solvedCount": 729}, {"contestId": 2022, "index": "D1", "name": "Asesino (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "brute force", "constructive algorithms", "implementation", "interactive"], "solvedCount": 3596}, {"contestId": 2022, "index": "C", "name": "Gerrymandering", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "implementation"], "solvedCount": 5437}, {"contestId": 2022, "index": "B", "name": "Kar Salesman", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "greedy", "math"], "solvedCount": 13459}, {"contestId": 2022, "index": "A", "name": "Bus to P\u00e9njamo", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 16509}, {"contestId": 2021, "index": "E3", "name": "Digital Village (Extreme Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "greedy", "math", "trees"], "solvedCount": 593}, {"contestId": 2021, "index": "E2", "name": "Digital Village (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2500, "tags": ["data structures", "dp", "dsu", "graphs", "math", "trees"], "solvedCount": 1061}, {"contestId": 2021, "index": "E1", "name": "Digital Village (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "dsu", "fft", "graphs", "greedy", "implementation", "math", "trees"], "solvedCount": 1774}, {"contestId": 2021, "index": "D", "name": "Boss, Thirsty", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "greedy", "implementation"], "solvedCount": 864}, {"contestId": 2021, "index": "C2", "name": "Adjust The Presentation (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 4219}, {"contestId": 2021, "index": "C1", "name": "Adjust The Presentation (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "greedy"], "solvedCount": 13425}, {"contestId": 2021, "index": "B", "name": "Maximize Mex", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 17630}, {"contestId": 2021, "index": "A", "name": "Meaning Mean", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["data structures", "greedy", "math", "sortings"], "solvedCount": 20688}, {"contestId": 2020, "index": "F", "name": "Count Leaves", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["dp", "math", "number theory"], "solvedCount": 246}, {"contestId": 2020, "index": "E", "name": "Expected Power", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "dp", "math", "probabilities"], "solvedCount": 3587}, {"contestId": 2020, "index": "D", "name": "Connect the Dots", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "dp", "dsu", "graphs", "math", "trees"], "solvedCount": 6803}, {"contestId": 2020, "index": "C", "name": "Bitwise Balancing", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["bitmasks", "hashing", "implementation", "math", "schedules", "ternary search"], "solvedCount": 17150}, {"contestId": 2020, "index": "B", "name": "Brightness Begins", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["binary search", "math"], "solvedCount": 19879}, {"contestId": 2020, "index": "A", "name": "Find Minimum Operations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "brute force", "greedy", "math", "number theory"], "solvedCount": 24718}, {"contestId": 2019, "index": "B", "name": "All Pairs Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 16448}, {"contestId": 2019, "index": "A", "name": "Max Plus Size", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "dp", "greedy"], "solvedCount": 25982}, {"contestId": 2018, "index": "F3", "name": "Speedbreaker Counting (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3100, "tags": ["dp", "greedy", "math"], "solvedCount": 258}, {"contestId": 2018, "index": "F2", "name": "Speedbreaker Counting (Medium Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3000, "tags": ["dp", "greedy", "math"], "solvedCount": 238}, {"contestId": 2018, "index": "F1", "name": "Speedbreaker Counting (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["combinatorics", "dp", "greedy", "math"], "solvedCount": 279}, {"contestId": 2018, "index": "E2", "name": "Complex Segments (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 3400, "tags": ["binary search", "data structures", "divide and conquer", "dsu", "greedy", "math", "sortings"], "solvedCount": 179}, {"contestId": 2018, "index": "E1", "name": "Complex Segments (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["binary search", "data structures", "divide and conquer", "dsu", "greedy", "math", "sortings"], "solvedCount": 206}, {"contestId": 2018, "index": "D", "name": "Max Plus Min Plus Size", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "dp", "dsu", "greedy", "implementation", "matrices", "sortings"], "solvedCount": 1975}, {"contestId": 2018, "index": "C", "name": "Tree Pruning", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["brute force", "dfs and similar", "greedy", "sortings", "trees"], "solvedCount": 8128}, {"contestId": 2018, "index": "B", "name": "Speedbreaker", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"], "solvedCount": 4775}, {"contestId": 2018, "index": "A", "name": "Cards Partition", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["2-sat", "brute force", "greedy", "implementation", "math"], "solvedCount": 11860}, {"contestId": 2014, "index": "H", "name": "Robin Hood Archery", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "greedy", "hashing"], "solvedCount": 4760}, {"contestId": 2014, "index": "G", "name": "Milky Days", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 1631}, {"contestId": 2014, "index": "F", "name": "Sheriff's Defense", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4548}, {"contestId": 2014, "index": "E", "name": "Rendez-vous de Marian et Robin", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 7418}, {"contestId": 2014, "index": "D", "name": "Robert Hood and Mrs Hood", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "data structures", "greedy", "sortings"], "solvedCount": 14756}, {"contestId": 2014, "index": "C", "name": "Robin Hood in Town", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "greedy", "math"], "solvedCount": 25517}, {"contestId": 2014, "index": "B", "name": "Robin Hood and the Major Oak", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 31925}, {"contestId": 2014, "index": "A", "name": "Robin Helps", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 43157}, {"contestId": 2013, "index": "F2", "name": "Game in Tree (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["binary search", "data structures", "trees"], "solvedCount": 136}, {"contestId": 2013, "index": "F1", "name": "Game in Tree (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "brute force", "data structures", "dp", "games", "greedy", "implementation", "trees"], "solvedCount": 592}, {"contestId": 2013, "index": "E", "name": "Prefix GCD", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "dp", "greedy", "math", "number theory"], "solvedCount": 3917}, {"contestId": 2013, "index": "D", "name": "Minimize the Difference", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "greedy"], "solvedCount": 6958}, {"contestId": 2013, "index": "C", "name": "Password Cracking", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "interactive", "strings"], "solvedCount": 13568}, {"contestId": 2013, "index": "B", "name": "Battle for Survive", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 26773}, {"contestId": 2013, "index": "A", "name": "Zhan's Blender", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 30250}, {"contestId": 2011, "index": "I", "name": "Stack and Queue", "type": "PROGRAMMING", "tags": ["*special", "data structures", "divide and conquer"], "solvedCount": 18}, {"contestId": 2011, "index": "H", "name": "Strange Matrix", "type": "PROGRAMMING", "tags": ["*special", "graphs", "greedy"], "solvedCount": 52}, {"contestId": 2011, "index": "G", "name": "Removal of a Permutation", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 44}, {"contestId": 2011, "index": "F", "name": "Good Subarray", "type": "PROGRAMMING", "tags": ["*special", "data structures", "greedy"], "solvedCount": 124}, {"contestId": 2011, "index": "E", "name": "Rock-Paper-Scissors Bot", "type": "PROGRAMMING", "tags": ["*special", "greedy", "strings"], "solvedCount": 174}, {"contestId": 2011, "index": "D", "name": "Among Wolves", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 275}, {"contestId": 2011, "index": "C", "name": "Split the Expression", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 367}, {"contestId": 2011, "index": "B", "name": "Shuffle", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 660}, {"contestId": 2011, "index": "A", "name": "Problem Solving", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 1095}, {"contestId": 2010, "index": "C2", "name": "Message Transmission Error (hard version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["hashing", "string suffix structures", "strings", "two pointers"], "solvedCount": 4091}, {"contestId": 2010, "index": "C1", "name": "Message Transmission Error (easy version)", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "strings"], "solvedCount": 8581}, {"contestId": 2010, "index": "B", "name": "Three Brothers", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "math"], "solvedCount": 23165}, {"contestId": 2010, "index": "A", "name": "Alternating Sum of Numbers", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "math"], "solvedCount": 19761}, {"contestId": 2009, "index": "G3", "name": "Yunli's Subarray Queries (extreme version)", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "implementation"], "solvedCount": 451}, {"contestId": 2009, "index": "G2", "name": "Yunli's Subarray Queries (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp"], "solvedCount": 1511}, {"contestId": 2009, "index": "G1", "name": "Yunli's Subarray Queries (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 4641}, {"contestId": 2009, "index": "F", "name": "Firefly's Queries", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "data structures", "flows", "math"], "solvedCount": 7827}, {"contestId": 2009, "index": "E", "name": "Klee's SUPER DUPER LARGE Array!!!", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "math", "ternary search"], "solvedCount": 16208}, {"contestId": 2009, "index": "D", "name": "Satyam and Counting", "type": "PROGRAMMING", "rating": 1400, "tags": ["geometry", "math"], "solvedCount": 17403}, {"contestId": 2009, "index": "C", "name": "The Legend of Freya the Frog", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 30845}, {"contestId": 2009, "index": "B", "name": "osu!mania", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 49429}, {"contestId": 2009, "index": "A", "name": "Minimize!", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 64329}, {"contestId": 2008, "index": "H", "name": "Sakurako's Test", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "brute force", "greedy", "math", "number theory"], "solvedCount": 3374}, {"contestId": 2008, "index": "G", "name": "Sakurako's Task", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "greedy", "math", "number theory"], "solvedCount": 6176}, {"contestId": 2008, "index": "F", "name": "Sakurako's Box", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 14719}, {"contestId": 2008, "index": "E", "name": "Alternating String", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "strings"], "solvedCount": 12209}, {"contestId": 2008, "index": "D", "name": "Sakurako's Hobby", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "dsu", "graphs", "math"], "solvedCount": 22088}, {"contestId": 2008, "index": "C", "name": "Longest Good Array", "type": "PROGRAMMING", "rating": 800, "tags": ["binary search", "brute force", "math"], "solvedCount": 34586}, {"contestId": 2008, "index": "B", "name": "Square or Not", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math", "strings"], "solvedCount": 31803}, {"contestId": 2008, "index": "A", "name": "Sakurako's Exam", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 39780}, {"contestId": 2007, "index": "C", "name": "Dora and C++", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["math", "number theory"], "solvedCount": 14669}, {"contestId": 2007, "index": "B", "name": "Index and Maximum Value", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["data structures", "greedy"], "solvedCount": 24254}, {"contestId": 2007, "index": "A", "name": "Dora's Set", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math", "number theory"], "solvedCount": 24676}, {"contestId": 2006, "index": "F", "name": "Dora's Paint", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["brute force", "combinatorics", "constructive algorithms", "graphs", "implementation"], "solvedCount": 144}, {"contestId": 2006, "index": "E", "name": "Iris's Full Binary Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["brute force", "data structures", "dfs and similar", "trees"], "solvedCount": 281}, {"contestId": 2006, "index": "D", "name": "Iris and Adjacent Products", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "greedy", "implementation", "math"], "solvedCount": 846}, {"contestId": 2006, "index": "C", "name": "Eri and Expanded Sets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "divide and conquer", "math", "number theory", "two pointers"], "solvedCount": 1917}, {"contestId": 2006, "index": "B", "name": "Iris and the Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "data structures", "dfs and similar", "dsu", "math", "trees"], "solvedCount": 3984}, {"contestId": 2006, "index": "A", "name": "Iris and Game on the Tree", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "games", "graphs", "greedy", "trees"], "solvedCount": 8239}, {"contestId": 2005, "index": "E2", "name": "Subtangle Game (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dp", "games", "greedy", "implementation"], "solvedCount": 953}, {"contestId": 2005, "index": "E1", "name": "Subtangle Game (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "games", "greedy", "implementation"], "solvedCount": 3125}, {"contestId": 2005, "index": "D", "name": "Alter the GCD", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation", "number theory"], "solvedCount": 1071}, {"contestId": 2005, "index": "C", "name": "Lazy Narek", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "implementation", "strings"], "solvedCount": 8170}, {"contestId": 2005, "index": "B2", "name": "The Strict Teacher (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["binary search", "greedy", "math", "sortings"], "solvedCount": 20327}, {"contestId": 2005, "index": "B1", "name": "The Strict Teacher (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math", "sortings"], "solvedCount": 23450}, {"contestId": 2005, "index": "A", "name": "Simple Palindrome", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "solvedCount": 24871}, {"contestId": 2004, "index": "G", "name": "Substring Compression", "type": "PROGRAMMING", "rating": 3200, "tags": ["data structures", "dp", "matrices"], "solvedCount": 403}, {"contestId": 2004, "index": "F", "name": "Make a Palindrome", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "brute force", "data structures", "greedy", "math"], "solvedCount": 1325}, {"contestId": 2004, "index": "E", "name": "Not a Nim Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "games", "math", "number theory"], "solvedCount": 4685}, {"contestId": 2004, "index": "D", "name": "Colored Portals", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "data structures", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 12285}, {"contestId": 2004, "index": "C", "name": "Splitting Items", "type": "PROGRAMMING", "rating": 1100, "tags": ["games", "greedy", "sortings"], "solvedCount": 25833}, {"contestId": 2004, "index": "B", "name": "Game with Doors", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy"], "solvedCount": 29743}, {"contestId": 2004, "index": "A", "name": "Closest Point", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 32657}, {"contestId": 2003, "index": "F", "name": "Turtle and Three Sequences", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["brute force", "data structures", "dp", "greedy", "math", "probabilities", "two pointers"], "solvedCount": 629}, {"contestId": 2003, "index": "E2", "name": "Turtle and Inversions (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy", "math", "two pointers"], "solvedCount": 582}, {"contestId": 2003, "index": "E1", "name": "Turtle and Inversions (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["brute force", "divide and conquer", "dp", "greedy", "math"], "solvedCount": 812}, {"contestId": 2003, "index": "D2", "name": "Turtle and a MEX Problem (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "greedy", "implementation", "math"], "solvedCount": 4388}, {"contestId": 2003, "index": "D1", "name": "Turtle and a MEX Problem (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 12657}, {"contestId": 2003, "index": "C", "name": "Turtle and Good Pairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 20789}, {"contestId": 2003, "index": "B", "name": "Turtle and Piggy Are Playing a Game 2", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["games", "greedy", "sortings"], "solvedCount": 26883}, {"contestId": 2003, "index": "A", "name": "Turtle and Good Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 31658}, {"contestId": 2002, "index": "H", "name": "Counting 101", "type": "PROGRAMMING", "points": 6000.0, "rating": 3500, "tags": ["greedy"], "solvedCount": 87}, {"contestId": 2002, "index": "G", "name": "Lattice Optimizing", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["bitmasks", "brute force", "hashing", "meet-in-the-middle"], "solvedCount": 260}, {"contestId": 2002, "index": "F2", "name": "Court Blue (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2800, "tags": ["brute force", "dp", "math", "number theory"], "solvedCount": 532}, {"contestId": 2002, "index": "F1", "name": "Court Blue (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "dfs and similar", "dp", "math", "number theory"], "solvedCount": 946}, {"contestId": 2002, "index": "E", "name": "Cosmic Rays", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "data structures", "dp"], "solvedCount": 2719}, {"contestId": 2002, "index": "D2", "name": "DFS Checker (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "hashing", "trees"], "solvedCount": 2680}, {"contestId": 2002, "index": "D1", "name": "DFS Checker (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "graphs", "hashing", "trees"], "solvedCount": 4743}, {"contestId": 2002, "index": "C", "name": "Black Circles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "geometry", "greedy", "math"], "solvedCount": 16968}, {"contestId": 2002, "index": "B", "name": "Removals Game", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "games"], "solvedCount": 21699}, {"contestId": 2002, "index": "A", "name": "Distanced Coloring", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 20814}, {"contestId": 2001, "index": "E2", "name": "Deterministic Heap (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 258}, {"contestId": 2001, "index": "E1", "name": "Deterministic Heap (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp", "math", "trees"], "solvedCount": 1428}, {"contestId": 2001, "index": "D", "name": "Longest Max Min Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 5813}, {"contestId": 2001, "index": "C", "name": "Guess The Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "brute force", "dfs and similar", "divide and conquer", "dsu", "greedy", "interactive", "trees"], "solvedCount": 12046}, {"contestId": 2001, "index": "B", "name": "Generate Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 25567}, {"contestId": 2001, "index": "A", "name": "Make All Equal", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 32038}, {"contestId": 2000, "index": "H", "name": "Ksyusha and the Loaded Set", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "brute force", "data structures", "implementation"], "solvedCount": 2069}, {"contestId": 2000, "index": "G", "name": "Call During the Journey", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "brute force", "graphs", "greedy", "shortest paths"], "solvedCount": 2870}, {"contestId": 2000, "index": "F", "name": "Color Rows and Columns", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "greedy", "implementation", "math"], "solvedCount": 6437}, {"contestId": 2000, "index": "E", "name": "Photoshoot for Gorillas", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "data structures", "greedy", "math"], "solvedCount": 15342}, {"contestId": 2000, "index": "D", "name": "Right Left Wrong", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "two pointers"], "solvedCount": 26782}, {"contestId": 2000, "index": "C", "name": "Numeric String Template", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "strings"], "solvedCount": 29577}, {"contestId": 2000, "index": "B", "name": "Seating in a Bus", "type": "PROGRAMMING", "rating": 800, "tags": ["two pointers"], "solvedCount": 38570}, {"contestId": 2000, "index": "A", "name": "Primary Task", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math", "strings"], "solvedCount": 41879}, {"contestId": 1999, "index": "G2", "name": "Ruler (hard version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "interactive", "ternary search"], "solvedCount": 9590}, {"contestId": 1999, "index": "G1", "name": "Ruler (easy version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "interactive"], "solvedCount": 12996}, {"contestId": 1999, "index": "F", "name": "Expected Median", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "math"], "solvedCount": 12760}, {"contestId": 1999, "index": "E", "name": "Triple Operations", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "implementation", "math"], "solvedCount": 21982}, {"contestId": 1999, "index": "D", "name": "Slavic's Exam", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation", "strings"], "solvedCount": 30847}, {"contestId": 1999, "index": "C", "name": "Showering", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 39610}, {"contestId": 1999, "index": "B", "name": "Card Game", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 38672}, {"contestId": 1999, "index": "A", "name": "A+B Again?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 72035}, {"contestId": 1998, "index": "E2", "name": "Eliminating Balls With Merging (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "greedy", "implementation"], "solvedCount": 838}, {"contestId": 1998, "index": "E1", "name": "Eliminating Balls With Merging (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "greedy"], "solvedCount": 2136}, {"contestId": 1998, "index": "D", "name": "Determine Winning Islands in Race", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 3833}, {"contestId": 1998, "index": "C", "name": "Perform Operations to Maximize Score", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 6781}, {"contestId": 1998, "index": "B", "name": "Minimize Equal Sum Subarrays", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 26790}, {"contestId": 1998, "index": "A", "name": "Find K Distinct Points with Fixed Center", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 25657}, {"contestId": 1997, "index": "F", "name": "Chips on a Line", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "combinatorics", "dp", "greedy", "math"], "solvedCount": 1155}, {"contestId": 1997, "index": "E", "name": "Level Up", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation"], "solvedCount": 3515}, {"contestId": 1997, "index": "D", "name": "Maximize the Root", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 14703}, {"contestId": 1997, "index": "C", "name": "Even Positions", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 24351}, {"contestId": 1997, "index": "B", "name": "Make Three Regions", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "two pointers"], "solvedCount": 22630}, {"contestId": 1997, "index": "A", "name": "Strong Password", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 31974}, {"contestId": 1996, "index": "G", "name": "Penacony", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "data structures", "graphs", "greedy", "hashing"], "solvedCount": 2039}, {"contestId": 1996, "index": "F", "name": "Bomb", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "greedy", "math"], "solvedCount": 5798}, {"contestId": 1996, "index": "E", "name": "Decode", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "data structures", "implementation", "math"], "solvedCount": 11568}, {"contestId": 1996, "index": "D", "name": "Fun", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "combinatorics", "math", "number theory"], "solvedCount": 18320}, {"contestId": 1996, "index": "C", "name": "Sort", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "sortings", "strings"], "solvedCount": 26362}, {"contestId": 1996, "index": "B", "name": "Scale", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 35727}, {"contestId": 1996, "index": "A", "name": "Legs", "type": "PROGRAMMING", "rating": 800, "tags": ["binary search", "math", "ternary search"], "solvedCount": 51018}, {"contestId": 1995, "index": "E2", "name": "Let Me Teach You a Lesson (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["data structures", "dp", "matrices", "two pointers"], "solvedCount": 361}, {"contestId": 1995, "index": "E1", "name": "Let Me Teach You a Lesson (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["2-sat", "data structures", "dp", "matrices", "two pointers"], "solvedCount": 470}, {"contestId": 1995, "index": "D", "name": "Cases", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["bitmasks", "brute force", "dp", "strings"], "solvedCount": 2674}, {"contestId": 1995, "index": "C", "name": "Squaring", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math", "number theory"], "solvedCount": 9662}, {"contestId": 1995, "index": "B2", "name": "Bouquet (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "data structures", "greedy", "math", "sortings", "two pointers"], "solvedCount": 9672}, {"contestId": 1995, "index": "B1", "name": "Bouquet (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "brute force", "greedy", "sortings", "two pointers"], "solvedCount": 20009}, {"contestId": 1995, "index": "A", "name": "Diagonals", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 25850}, {"contestId": 1994, "index": "H", "name": "Fortnite", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "games", "greedy", "hashing", "interactive", "math", "number theory", "strings"], "solvedCount": 736}, {"contestId": 1994, "index": "G", "name": "Minecraft", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "brute force", "dp", "graphs", "math"], "solvedCount": 1451}, {"contestId": 1994, "index": "F", "name": "Stardew Valley", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 1389}, {"contestId": 1994, "index": "E", "name": "Wooden Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "greedy", "math", "trees"], "solvedCount": 5110}, {"contestId": 1994, "index": "D", "name": "Funny Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "math", "number theory", "trees"], "solvedCount": 6680}, {"contestId": 1994, "index": "C", "name": "Hungry Games", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "dp", "two pointers"], "solvedCount": 12564}, {"contestId": 1994, "index": "B", "name": "Fun Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 18631}, {"contestId": 1994, "index": "A", "name": "Diverse Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 21513}, {"contestId": 1993, "index": "F2", "name": "Dyn-scripted Robot (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["chinese remainder theorem", "math", "number theory"], "solvedCount": 499}, {"contestId": 1993, "index": "F1", "name": "Dyn-scripted Robot (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "chinese remainder theorem", "constructive algorithms", "math", "number theory"], "solvedCount": 1120}, {"contestId": 1993, "index": "E", "name": "Xor-Grid Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "dp", "implementation"], "solvedCount": 686}, {"contestId": 1993, "index": "D", "name": "Med-imize", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "dp", "greedy"], "solvedCount": 4243}, {"contestId": 1993, "index": "C", "name": "Light Switches", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 15427}, {"contestId": 1993, "index": "B", "name": "Parity and Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 25349}, {"contestId": 1993, "index": "A", "name": "Question Marks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 32151}, {"contestId": 1992, "index": "G", "name": "Ultra-Meow", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dp", "math"], "solvedCount": 3744}, {"contestId": 1992, "index": "F", "name": "Valuable Cards", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dp", "greedy", "number theory", "two pointers"], "solvedCount": 6650}, {"contestId": 1992, "index": "E", "name": "Novice's Mistake", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "implementation", "math", "strings"], "solvedCount": 10233}, {"contestId": 1992, "index": "D", "name": "Test of Love", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "implementation"], "solvedCount": 22926}, {"contestId": 1992, "index": "C", "name": "Gorilla and Permutation", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 31993}, {"contestId": 1992, "index": "B", "name": "Angry Monk", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math", "sortings"], "solvedCount": 36900}, {"contestId": 1992, "index": "A", "name": "Only Pluses", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 46554}, {"contestId": 1991, "index": "I", "name": "Grid Game", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "games", "graph matchings", "greedy", "interactive"], "solvedCount": 144}, {"contestId": 1991, "index": "H", "name": "Prime Split Game", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["bitmasks", "dp", "fft", "games", "math", "number theory"], "solvedCount": 539}, {"contestId": 1991, "index": "G", "name": "Grid Reset", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 689}, {"contestId": 1991, "index": "F", "name": "Triangle Formation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "greedy", "implementation", "math", "sortings"], "solvedCount": 2625}, {"contestId": 1991, "index": "E", "name": "Coloring Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "games", "graphs", "greedy", "interactive"], "solvedCount": 4707}, {"contestId": 1991, "index": "D", "name": "Prime XOR Coloring", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "graphs", "greedy", "math", "number theory"], "solvedCount": 7387}, {"contestId": 1991, "index": "C", "name": "Absolute Zero", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 16648}, {"contestId": 1991, "index": "B", "name": "AND Reconstruction", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 18078}, {"contestId": 1991, "index": "A", "name": "Maximize the Last Element", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 23503}, {"contestId": 1990, "index": "F", "name": "Polygonal Segments", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy", "two pointers"], "solvedCount": 386}, {"contestId": 1990, "index": "E2", "name": "Catch the Mole(Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2600, "tags": ["binary search", "data structures", "dfs and similar", "divide and conquer", "interactive", "trees"], "solvedCount": 1004}, {"contestId": 1990, "index": "E1", "name": "Catch the Mole(Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "data structures", "dfs and similar", "interactive", "trees"], "solvedCount": 1067}, {"contestId": 1990, "index": "D", "name": "Grid Puzzle", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dp", "greedy", "implementation"], "solvedCount": 7280}, {"contestId": 1990, "index": "C", "name": "Mad MAD Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "greedy", "math"], "solvedCount": 13671}, {"contestId": 1990, "index": "B", "name": "Array Craft", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18991}, {"contestId": 1990, "index": "A", "name": "Submission Bait", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "games", "greedy", "sortings"], "solvedCount": 25577}, {"contestId": 1989, "index": "F", "name": "Simultaneous Coloring", "type": "PROGRAMMING", "rating": 3000, "tags": ["dfs and similar", "divide and conquer", "graphs"], "solvedCount": 538}, {"contestId": 1989, "index": "E", "name": "Distance to Different", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "dp", "math"], "solvedCount": 2285}, {"contestId": 1989, "index": "D", "name": "Smithing Skill", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings", "two pointers"], "solvedCount": 6659}, {"contestId": 1989, "index": "C", "name": "Two Movies", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "math"], "solvedCount": 21140}, {"contestId": 1989, "index": "B", "name": "Substring and Subsequence", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "greedy", "strings"], "solvedCount": 22328}, {"contestId": 1989, "index": "A", "name": "Catch the Coin", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 28277}, {"contestId": 1988, "index": "F", "name": "Heartbeat", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 299}, {"contestId": 1988, "index": "E", "name": "Range Minimum Sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation"], "solvedCount": 1656}, {"contestId": 1988, "index": "D", "name": "The Omnipotent Monster Killer", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "dfs and similar", "dp", "trees"], "solvedCount": 5610}, {"contestId": 1988, "index": "C", "name": "Increasing Sequence with Fixed OR", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 19172}, {"contestId": 1988, "index": "B", "name": "Make Majority", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 25304}, {"contestId": 1988, "index": "A", "name": "Split the Multiset", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 25737}, {"contestId": 1987, "index": "H", "name": "Fumo Temple", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["interactive"], "solvedCount": 124}, {"contestId": 1987, "index": "G2", "name": "Spinning Round (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["divide and conquer", "dp", "trees"], "solvedCount": 203}, {"contestId": 1987, "index": "G1", "name": "Spinning Round (Easy Version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["divide and conquer", "dp", "trees"], "solvedCount": 309}, {"contestId": 1987, "index": "F2", "name": "Interesting Problem (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 2600, "tags": ["dp"], "solvedCount": 1178}, {"contestId": 1987, "index": "F1", "name": "Interesting Problem (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp"], "solvedCount": 1273}, {"contestId": 1987, "index": "E", "name": "Wonderful Tree!", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["brute force", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "solvedCount": 3795}, {"contestId": 1987, "index": "D", "name": "World is Mine", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "games"], "solvedCount": 8112}, {"contestId": 1987, "index": "C", "name": "Basil's Garden", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "greedy"], "solvedCount": 19720}, {"contestId": 1987, "index": "B", "name": "K-Sort", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["greedy"], "solvedCount": 22733}, {"contestId": 1987, "index": "A", "name": "Upload More RAM", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 27779}, {"contestId": 1986, "index": "G2", "name": "Permutation Problem (Hard Version)", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "hashing", "math", "number theory"], "solvedCount": 1294}, {"contestId": 1986, "index": "G1", "name": "Permutation Problem (Simple Version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "brute force", "combinatorics", "data structures", "math", "number theory"], "solvedCount": 1756}, {"contestId": 1986, "index": "F", "name": "Non-academic Problem", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 5658}, {"contestId": 1986, "index": "E", "name": "Beautiful Array", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy", "math", "number theory", "sortings"], "solvedCount": 10183}, {"contestId": 1986, "index": "D", "name": "Mathematical Problem", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation", "math", "two pointers"], "solvedCount": 17076}, {"contestId": 1986, "index": "C", "name": "Update Queries", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 24907}, {"contestId": 1986, "index": "B", "name": "Matrix Stabilization", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "data structures", "greedy", "sortings"], "solvedCount": 29006}, {"contestId": 1986, "index": "A", "name": "X Axis", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "geometry", "math", "sortings"], "solvedCount": 45429}, {"contestId": 1985, "index": "H2", "name": "Maximize the Largest Component (Hard Version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "dsu", "implementation"], "solvedCount": 1747}, {"contestId": 1985, "index": "H1", "name": "Maximize the Largest Component (Easy Version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "data structures", "dfs and similar", "dsu", "graphs", "implementation"], "solvedCount": 6615}, {"contestId": 1985, "index": "G", "name": "D-Function", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 11134}, {"contestId": 1985, "index": "F", "name": "Final Boss", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "data structures"], "solvedCount": 18349}, {"contestId": 1985, "index": "E", "name": "Secret Box", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "combinatorics", "math"], "solvedCount": 22486}, {"contestId": 1985, "index": "D", "name": "Manhattan Circle", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "math"], "solvedCount": 39003}, {"contestId": 1985, "index": "C", "name": "Good Prefixes", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy"], "solvedCount": 37423}, {"contestId": 1985, "index": "B", "name": "Maximum Multiple Sum", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math", "number theory"], "solvedCount": 52454}, {"contestId": 1985, "index": "A", "name": "Creating Words", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 64159}, {"contestId": 1984, "index": "H", "name": "Tower Capturing", "type": "PROGRAMMING", "points": 5000.0, "rating": 3300, "tags": ["combinatorics", "dp", "geometry"], "solvedCount": 200}, {"contestId": 1984, "index": "G", "name": "Magic Trick II", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 286}, {"contestId": 1984, "index": "F", "name": "Reconstruction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "dp", "math"], "solvedCount": 1071}, {"contestId": 1984, "index": "E", "name": "Shuffle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "greedy", "trees"], "solvedCount": 1660}, {"contestId": 1984, "index": "D", "name": "''a'' String Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "hashing", "implementation", "math", "string suffix structures", "strings"], "solvedCount": 3605}, {"contestId": 1984, "index": "C2", "name": "Magnitude (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["combinatorics", "dp", "greedy", "math"], "solvedCount": 8244}, {"contestId": 1984, "index": "C1", "name": "Magnitude (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["dp", "greedy", "math"], "solvedCount": 18956}, {"contestId": 1984, "index": "B", "name": "Large Addition", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 20106}, {"contestId": 1984, "index": "A", "name": "Strange Splitting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 22308}, {"contestId": 1983, "index": "G", "name": "Your Loss", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["bitmasks", "brute force", "dp", "trees"], "solvedCount": 249}, {"contestId": 1983, "index": "F", "name": "array-value", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "bitmasks", "data structures", "greedy", "two pointers"], "solvedCount": 1392}, {"contestId": 1983, "index": "E", "name": "I Love Balls", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "math", "probabilities"], "solvedCount": 2305}, {"contestId": 1983, "index": "D", "name": "Swap Dilemma", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "math", "sortings"], "solvedCount": 9879}, {"contestId": 1983, "index": "C", "name": "Have Your Cake and Eat It Too", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "brute force", "greedy", "implementation"], "solvedCount": 14051}, {"contestId": 1983, "index": "B", "name": "Corner Twist", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 17751}, {"contestId": 1983, "index": "A", "name": "Array Divisibility", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 27486}, {"contestId": 1982, "index": "F", "name": "Sorting Problem Again", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 1079}, {"contestId": 1982, "index": "E", "name": "Number of k-good subarrays", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "divide and conquer", "dp", "math", "meet-in-the-middle"], "solvedCount": 1789}, {"contestId": 1982, "index": "D", "name": "Beauty of the mountains", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["brute force", "data structures", "implementation", "math", "number theory"], "solvedCount": 8636}, {"contestId": 1982, "index": "C", "name": "Boring Day", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 20401}, {"contestId": 1982, "index": "B", "name": "Collatz Conjecture", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 18839}, {"contestId": 1982, "index": "A", "name": "Soccer", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math", "sortings"], "solvedCount": 26796}, {"contestId": 1981, "index": "F", "name": "Turtle and Paths on a Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["data structures", "dp", "trees"], "solvedCount": 316}, {"contestId": 1981, "index": "E", "name": "Turtle and Intersected Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dsu", "graphs", "greedy"], "solvedCount": 1063}, {"contestId": 1981, "index": "D", "name": "Turtle and Multiplication", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "number theory"], "solvedCount": 1947}, {"contestId": 1981, "index": "C", "name": "Turtle and an Incomplete Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 6000}, {"contestId": 1981, "index": "B", "name": "Turtle and an Infinite Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "math"], "solvedCount": 15560}, {"contestId": 1981, "index": "A", "name": "Turtle and Piggy Are Playing a Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 23708}, {"contestId": 1980, "index": "G", "name": "Yasya and the Mysterious Tree", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "data structures", "dfs and similar", "graphs", "greedy", "strings", "trees"], "solvedCount": 1517}, {"contestId": 1980, "index": "F2", "name": "Field Division (hard version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["math", "sortings"], "solvedCount": 1149}, {"contestId": 1980, "index": "F1", "name": "Field Division (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "math", "sortings"], "solvedCount": 4175}, {"contestId": 1980, "index": "E", "name": "Permutation of Rows and Columns", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "data structures", "greedy", "hashing", "implementation", "math", "matrices", "sortings"], "solvedCount": 12035}, {"contestId": 1980, "index": "D", "name": "GCD-sequence", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "implementation", "math", "number theory"], "solvedCount": 16331}, {"contestId": 1980, "index": "C", "name": "Sofia and the Lost Operations", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20723}, {"contestId": 1980, "index": "B", "name": "Choosing Cubes", "type": "PROGRAMMING", "rating": 800, "tags": ["sortings", "sortings"], "solvedCount": 37316}, {"contestId": 1980, "index": "A", "name": "Problem Generator", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 45048}, {"contestId": 1979, "index": "F", "name": "Kostyanych's Theorem", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["brute force", "constructive algorithms", "graphs", "interactive"], "solvedCount": 406}, {"contestId": 1979, "index": "E", "name": "Manhattan Triangle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "geometry", "implementation", "two pointers"], "solvedCount": 1701}, {"contestId": 1979, "index": "D", "name": "Fixing a Binary String", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "hashing", "strings"], "solvedCount": 7426}, {"contestId": 1979, "index": "C", "name": "Earning on Bets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["binary search", "combinatorics", "constructive algorithms", "number theory"], "solvedCount": 21064}, {"contestId": 1979, "index": "B", "name": "XOR Sequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["bitmasks", "greedy"], "solvedCount": 25164}, {"contestId": 1979, "index": "A", "name": "Guess the Maximum", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 30924}, {"contestId": 1978, "index": "F", "name": "Large Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "number theory", "two pointers"], "solvedCount": 1489}, {"contestId": 1978, "index": "E", "name": "Computing Machine", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "solvedCount": 4308}, {"contestId": 1978, "index": "D", "name": "Elections", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["data structures", "greedy", "implementation", "math"], "solvedCount": 12853}, {"contestId": 1978, "index": "C", "name": "Manhattan Permutations", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "solvedCount": 16980}, {"contestId": 1978, "index": "B", "name": "New Bakery", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["binary search", "greedy", "math", "ternary search"], "solvedCount": 24350}, {"contestId": 1978, "index": "A", "name": "Alice and Books", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 27621}, {"contestId": 1977, "index": "E", "name": "Tensor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "graphs", "interactive"], "solvedCount": 834}, {"contestId": 1977, "index": "D", "name": "XORificator", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "brute force", "greedy", "hashing"], "solvedCount": 2187}, {"contestId": 1977, "index": "C", "name": "Nikita and LCM", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "greedy", "math", "number theory", "sortings"], "solvedCount": 7522}, {"contestId": 1977, "index": "B", "name": "Binary Colouring", "type": "PROGRAMMING", "points": 1250.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 19280}, {"contestId": 1977, "index": "A", "name": "Little Nikita", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 37262}, {"contestId": 1976, "index": "F", "name": "Remove Bridges", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "greedy", "sortings", "trees"], "solvedCount": 732}, {"contestId": 1976, "index": "E", "name": "Splittable Permutations", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "data structures", "dfs and similar", "greedy", "math", "trees"], "solvedCount": 1223}, {"contestId": 1976, "index": "D", "name": "Invertible Bracket Sequences", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "combinatorics", "data structures", "divide and conquer", "implementation", "two pointers"], "solvedCount": 5242}, {"contestId": 1976, "index": "C", "name": "Job Interview", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"], "solvedCount": 11760}, {"contestId": 1976, "index": "B", "name": "Increase/Decrease/Copy", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 24217}, {"contestId": 1976, "index": "A", "name": "Verify Password", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "sortings", "strings"], "solvedCount": 31078}, {"contestId": 1975, "index": "I", "name": "Mind Bloom", "type": "PROGRAMMING", "points": 6000.0, "rating": 3500, "tags": ["dp"], "solvedCount": 144}, {"contestId": 1975, "index": "H", "name": "378QAQ and Core", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["greedy", "strings"], "solvedCount": 205}, {"contestId": 1975, "index": "G", "name": "Zimpha Fan Club", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["fft", "greedy", "math", "strings"], "solvedCount": 324}, {"contestId": 1975, "index": "F", "name": "Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "combinatorics", "dfs and similar", "divide and conquer", "dp", "math"], "solvedCount": 941}, {"contestId": 1975, "index": "E", "name": "Chain Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "implementation", "trees"], "solvedCount": 2668}, {"contestId": 1975, "index": "D", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "dfs and similar", "dp", "greedy", "shortest paths", "trees"], "solvedCount": 6932}, {"contestId": 1975, "index": "C", "name": "Chamo and Mocha's Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "brute force", "greedy"], "solvedCount": 16415}, {"contestId": 1975, "index": "B", "name": "378QAQ and Mocha's Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy", "math", "sortings"], "solvedCount": 20079}, {"contestId": 1975, "index": "A", "name": "Bazoka and Mocha's Array", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "solvedCount": 20246}, {"contestId": 1974, "index": "G", "name": "Money Buys Less Happiness Now ", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 5199}, {"contestId": 1974, "index": "F", "name": "Cutting Game", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "data structures", "implementation", "sortings", "two pointers"], "solvedCount": 4123}, {"contestId": 1974, "index": "E", "name": "Money Buys Happiness", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"], "solvedCount": 9821}, {"contestId": 1974, "index": "D", "name": "Ingenuity-2", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 16867}, {"contestId": 1974, "index": "C", "name": "Beautiful Triple Pairs", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "data structures"], "solvedCount": 17900}, {"contestId": 1974, "index": "B", "name": "Symmetric Encoding", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "sortings", "strings"], "solvedCount": 32908}, {"contestId": 1974, "index": "A", "name": "Phone Desktop", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 36121}, {"contestId": 1973, "index": "F", "name": "Maximum GCD Sum Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["bitmasks", "brute force", "dp", "implementation", "number theory"], "solvedCount": 290}, {"contestId": 1973, "index": "E", "name": "Cat, Fox and Swaps ", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["graphs", "math", "sortings"], "solvedCount": 925}, {"contestId": 1973, "index": "D", "name": "Cat, Fox and Maximum Array Split", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "interactive", "math"], "solvedCount": 2125}, {"contestId": 1973, "index": "C", "name": "Cat, Fox and Double Maximum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "math", "sortings"], "solvedCount": 9335}, {"contestId": 1973, "index": "B", "name": "Cat, Fox and the Lonely Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "bitmasks", "data structures", "greedy", "math", "two pointers"], "solvedCount": 15903}, {"contestId": 1973, "index": "A", "name": "Chess For Three", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "dp", "implementation", "math"], "solvedCount": 27160}, {"contestId": 1972, "index": "B", "name": "Coin Games", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["games"], "solvedCount": 24127}, {"contestId": 1972, "index": "A", "name": "Contest Proposal", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "two pointers"], "solvedCount": 24943}, {"contestId": 1971, "index": "H", "name": "\u00b11", "type": "PROGRAMMING", "rating": 2100, "tags": ["2-sat", "dfs and similar", "graphs"], "solvedCount": 2343}, {"contestId": 1971, "index": "G", "name": "XOUR", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dsu", "sortings"], "solvedCount": 10615}, {"contestId": 1971, "index": "F", "name": "Circle Perimeter", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "dfs and similar", "geometry", "implementation", "math"], "solvedCount": 11656}, {"contestId": 1971, "index": "E", "name": "Find the Car", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "math", "sortings"], "solvedCount": 16768}, {"contestId": 1971, "index": "D", "name": "Binary Cut", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "greedy", "implementation", "sortings", "strings"], "solvedCount": 28983}, {"contestId": 1971, "index": "C", "name": "Clock and Strings", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 38236}, {"contestId": 1971, "index": "B", "name": "Different String", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 41653}, {"contestId": 1971, "index": "A", "name": "My First Sorting Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 53663}, {"contestId": 1970, "index": "G3", "name": "Min-Fund Prison (Hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 451}, {"contestId": 1970, "index": "G2", "name": "Min-Fund Prison (Medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 766}, {"contestId": 1970, "index": "G1", "name": "Min-Fund Prison (Easy)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "trees"], "solvedCount": 1655}, {"contestId": 1970, "index": "F3", "name": "Playing Quidditch (Hard)", "type": "PROGRAMMING", "rating": 2300, "tags": ["implementation"], "solvedCount": 439}, {"contestId": 1970, "index": "F2", "name": "Playing Quidditch (Medium)", "type": "PROGRAMMING", "rating": 2300, "tags": ["implementation"], "solvedCount": 420}, {"contestId": 1970, "index": "F1", "name": "Playing Quidditch (Easy)", "type": "PROGRAMMING", "rating": 2300, "tags": ["implementation"], "solvedCount": 522}, {"contestId": 1970, "index": "E3", "name": "Trails (Hard)", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "matrices"], "solvedCount": 984}, {"contestId": 1970, "index": "E2", "name": "Trails (Medium)", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "matrices"], "solvedCount": 1754}, {"contestId": 1970, "index": "E1", "name": "Trails (Easy)", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"], "solvedCount": 2969}, {"contestId": 1970, "index": "D3", "name": "Arithmancy (Hard)", "type": "PROGRAMMING", "rating": 3100, "tags": ["interactive"], "solvedCount": 136}, {"contestId": 1970, "index": "D2", "name": "Arithmancy (Medium)", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "interactive", "probabilities", "strings"], "solvedCount": 260}, {"contestId": 1970, "index": "D1", "name": "Arithmancy (Easy)", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "constructive algorithms", "interactive", "strings"], "solvedCount": 817}, {"contestId": 1970, "index": "C3", "name": "Game on Tree (Hard)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "games", "trees"], "solvedCount": 2066}, {"contestId": 1970, "index": "C2", "name": "Game on Tree (Medium)", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dp", "games", "trees"], "solvedCount": 3712}, {"contestId": 1970, "index": "C1", "name": "Game on Tree (Easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["games"], "solvedCount": 4436}, {"contestId": 1970, "index": "B3", "name": "Exact Neighbours (Hard)", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms"], "solvedCount": 596}, {"contestId": 1970, "index": "B2", "name": "Exact Neighbours (Medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms"], "solvedCount": 1013}, {"contestId": 1970, "index": "B1", "name": "Exact Neighbours (Easy)", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 1443}, {"contestId": 1970, "index": "A3", "name": "Balanced Unshuffle (Hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "trees"], "solvedCount": 581}, {"contestId": 1970, "index": "A2", "name": "Balanced Unshuffle (Medium)", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "trees"], "solvedCount": 534}, {"contestId": 1970, "index": "A1", "name": "Balanced Shuffle (Easy)", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "sortings"], "solvedCount": 6359}, {"contestId": 1969, "index": "F", "name": "Card Pairing", "type": "PROGRAMMING", "rating": 3000, "tags": ["dp", "greedy", "hashing", "implementation"], "solvedCount": 356}, {"contestId": 1969, "index": "E", "name": "Unique Array", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 1679}, {"contestId": 1969, "index": "D", "name": "Shop Game", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy", "math", "sortings"], "solvedCount": 5259}, {"contestId": 1969, "index": "C", "name": "Minimizing the Sum", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "implementation"], "solvedCount": 10386}, {"contestId": 1969, "index": "B", "name": "Shifts and Sorting", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 21270}, {"contestId": 1969, "index": "A", "name": "Two Friends", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 21356}, {"contestId": 1968, "index": "G2", "name": "Division + LCP (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "math", "string suffix structures", "strings"], "solvedCount": 2270}, {"contestId": 1968, "index": "G1", "name": "Division + LCP (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "hashing", "string suffix structures", "strings"], "solvedCount": 4830}, {"contestId": 1968, "index": "F", "name": "Equal XOR Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "data structures"], "solvedCount": 6375}, {"contestId": 1968, "index": "E", "name": "Cells Arrangement", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 11862}, {"contestId": 1968, "index": "D", "name": "Permutation Game", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "dfs and similar", "games", "graphs", "greedy", "math"], "solvedCount": 16605}, {"contestId": 1968, "index": "C", "name": "Assembly via Remainders", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "number theory"], "solvedCount": 27778}, {"contestId": 1968, "index": "B", "name": "Prefiquence", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "two pointers"], "solvedCount": 30099}, {"contestId": 1968, "index": "A", "name": "Maximize?", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math", "number theory"], "solvedCount": 37693}, {"contestId": 1967, "index": "F", "name": "Next and Prev", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 86}, {"contestId": 1967, "index": "E2", "name": "Again Counting Arrays (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3500, "tags": ["combinatorics", "dp", "math"], "solvedCount": 143}, {"contestId": 1967, "index": "E1", "name": "Again Counting Arrays (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 266}, {"contestId": 1967, "index": "D", "name": "Long Way to be Non-decreasing", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["binary search", "dfs and similar", "graphs", "implementation", "shortest paths", "two pointers"], "solvedCount": 795}, {"contestId": 1967, "index": "C", "name": "Fenwick Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "math", "trees"], "solvedCount": 1997}, {"contestId": 1967, "index": "B2", "name": "Reverse Card (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2200, "tags": ["brute force", "math", "number theory"], "solvedCount": 4470}, {"contestId": 1967, "index": "B1", "name": "Reverse Card (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "math", "number theory"], "solvedCount": 15074}, {"contestId": 1967, "index": "A", "name": "Permutation Counting", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["binary search", "greedy", "implementation", "math", "sortings"], "solvedCount": 14118}, {"contestId": 1966, "index": "B", "name": "Rectangle Filling", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 16534}, {"contestId": 1966, "index": "A", "name": "Card Exchange", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "games", "greedy"], "solvedCount": 19033}, {"contestId": 1965, "index": "F", "name": "Conference", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "flows"], "solvedCount": 235}, {"contestId": 1965, "index": "E", "name": "Connected Cubes", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms", "games"], "solvedCount": 362}, {"contestId": 1965, "index": "D", "name": "Missing Subarray Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms"], "solvedCount": 490}, {"contestId": 1965, "index": "C", "name": "Folding Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 2195}, {"contestId": 1965, "index": "B", "name": "Missing Subsequence Sum", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"], "solvedCount": 7602}, {"contestId": 1965, "index": "A", "name": "Everything Nim", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["games", "greedy", "math", "sortings"], "solvedCount": 15590}, {"contestId": 1958, "index": "J", "name": "Necromancer", "type": "PROGRAMMING", "rating": 3200, "tags": ["*special"], "solvedCount": 39}, {"contestId": 1958, "index": "I", "name": "Equal Trees", "type": "PROGRAMMING", "rating": 3100, "tags": ["*special", "graphs", "meet-in-the-middle"], "solvedCount": 46}, {"contestId": 1958, "index": "H", "name": "Composite Spells", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "dp"], "solvedCount": 86}, {"contestId": 1958, "index": "G", "name": "Observation Towers", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special"], "solvedCount": 118}, {"contestId": 1958, "index": "F", "name": "Narrow Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "combinatorics"], "solvedCount": 222}, {"contestId": 1958, "index": "E", "name": "Yet Another Permutation Constructive", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "constructive algorithms"], "solvedCount": 308}, {"contestId": 1958, "index": "D", "name": "Staircase", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 636}, {"contestId": 1958, "index": "C", "name": "Firewood", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"], "solvedCount": 889}, {"contestId": 1958, "index": "B", "name": "Clock in the Pool", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "math"], "solvedCount": 1116}, {"contestId": 1958, "index": "A", "name": "1-3-5", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "dp"], "solvedCount": 2359}, {"contestId": 1957, "index": "F2", "name": "Frequency Mismatch (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["binary search", "data structures", "dfs and similar", "hashing", "probabilities", "trees"], "solvedCount": 535}, {"contestId": 1957, "index": "F1", "name": "Frequency Mismatch (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["binary search", "data structures", "divide and conquer", "hashing", "probabilities", "trees"], "solvedCount": 593}, {"contestId": 1957, "index": "E", "name": "Carousel of Combinations", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math", "number theory"], "solvedCount": 1486}, {"contestId": 1957, "index": "D", "name": "A BIT of an Inequality", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dp", "math"], "solvedCount": 5229}, {"contestId": 1957, "index": "C", "name": "How Does the Rook Move?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["combinatorics", "dp", "math"], "solvedCount": 11142}, {"contestId": 1957, "index": "B", "name": "A BIT of a Construction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation"], "solvedCount": 19493}, {"contestId": 1957, "index": "A", "name": "Stickogon", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 24824}, {"contestId": 1956, "index": "F", "name": "Nene and the Passing Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "data structures", "dsu", "graphs", "sortings"], "solvedCount": 429}, {"contestId": 1956, "index": "E2", "name": "Nene vs. Monsters (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2700, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 1048}, {"contestId": 1956, "index": "E1", "name": "Nene vs. Monsters (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "implementation", "math"], "solvedCount": 1592}, {"contestId": 1956, "index": "D", "name": "Nene and the Mex Operator", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "dp", "greedy", "implementation", "math"], "solvedCount": 4431}, {"contestId": 1956, "index": "C", "name": "Nene's Magical Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 14402}, {"contestId": 1956, "index": "B", "name": "Nene and the Card Game", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["games", "greedy"], "solvedCount": 22405}, {"contestId": 1956, "index": "A", "name": "Nene's Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["binary search", "brute force", "data structures", "games", "greedy"], "solvedCount": 23285}, {"contestId": 1955, "index": "H", "name": "The Most Reckless Defense", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "flows", "graph matchings", "shortest paths"], "solvedCount": 1431}, {"contestId": 1955, "index": "G", "name": "GCD on a grid", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dfs and similar", "dp", "implementation", "math", "number theory"], "solvedCount": 5363}, {"contestId": 1955, "index": "F", "name": "Unfair Game", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "games", "greedy", "math", "schedules"], "solvedCount": 8120}, {"contestId": 1955, "index": "E", "name": "Long Inversions", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "greedy", "implementation", "sortings"], "solvedCount": 9715}, {"contestId": 1955, "index": "D", "name": "Inaccurate Subsequence Search", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "two pointers"], "solvedCount": 17362}, {"contestId": 1955, "index": "C", "name": "Inhabitant of the Deep Sea", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "implementation", "math"], "solvedCount": 23454}, {"contestId": 1955, "index": "B", "name": "Progressive Square", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "data structures", "implementation", "sortings"], "solvedCount": 30789}, {"contestId": 1955, "index": "A", "name": "Yogurt Sale", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 48771}, {"contestId": 1954, "index": "F", "name": "Unique Strings", "type": "PROGRAMMING", "rating": 3100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 304}, {"contestId": 1954, "index": "E", "name": "Chain Reaction", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dsu", "greedy", "implementation", "math", "number theory"], "solvedCount": 2691}, {"contestId": 1954, "index": "D", "name": "Colored Balls", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "dp", "math", "sortings"], "solvedCount": 7241}, {"contestId": 1954, "index": "C", "name": "Long Multiplication", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "math", "number theory"], "solvedCount": 21620}, {"contestId": 1954, "index": "B", "name": "Make It Ugly", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 20522}, {"contestId": 1954, "index": "A", "name": "Painting the Ribbon", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 26253}, {"contestId": 1953, "index": "A", "name": "Accuracy-Preserving Summation Algorithm", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 0}, {"contestId": 1952, "index": "J", "name": "Help, what does it mean to be \"Based\"", "type": "PROGRAMMING", "tags": ["*special", "brute force", "constructive algorithms", "expression parsing", "implementation", "sortings"], "solvedCount": 844}, {"contestId": 1952, "index": "I", "name": "Dark Matter", "type": "PROGRAMMING", "tags": ["*special", "bitmasks", "geometry"], "solvedCount": 618}, {"contestId": 1952, "index": "H", "name": "Palindrome", "type": "PROGRAMMING", "tags": ["*special", "implementation", "strings"], "solvedCount": 774}, {"contestId": 1952, "index": "G", "name": "Mathematician Takeover", "type": "PROGRAMMING", "tags": ["*special", "binary search", "dfs and similar", "math"], "solvedCount": 1144}, {"contestId": 1952, "index": "F", "name": "Grid", "type": "PROGRAMMING", "tags": ["*special", "brute force"], "solvedCount": 1872}, {"contestId": 1952, "index": "E", "name": "Sweep Line", "type": "PROGRAMMING", "tags": ["*special", "combinatorics", "games", "math"], "solvedCount": 308}, {"contestId": 1952, "index": "D", "name": "Are You a Procrastinator?", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 5173}, {"contestId": 1952, "index": "C", "name": "They Have Fooled", "type": "PROGRAMMING", "tags": ["*special", "brute force", "schedules"], "solvedCount": 3161}, {"contestId": 1952, "index": "B", "name": "Is it stated?", "type": "PROGRAMMING", "tags": ["*special", "strings"], "solvedCount": 11992}, {"contestId": 1952, "index": "A", "name": "Are You a Robot, Again?", "type": "PROGRAMMING", "tags": ["*special", "strings"], "solvedCount": 13650}, {"contestId": 1951, "index": "I", "name": "Growing Trees", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["binary search", "constructive algorithms", "flows", "graphs", "greedy"], "solvedCount": 91}, {"contestId": 1951, "index": "H", "name": "Thanos Snap", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["binary search", "dp", "games", "greedy", "trees"], "solvedCount": 322}, {"contestId": 1951, "index": "G", "name": "Clacking Balls", "type": "PROGRAMMING", "points": 3250.0, "rating": 3100, "tags": ["combinatorics", "math", "probabilities"], "solvedCount": 394}, {"contestId": 1951, "index": "F", "name": "Inversion Composition", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 877}, {"contestId": 1951, "index": "E", "name": "No Palindromes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "divide and conquer", "greedy", "hashing", "implementation", "math", "strings"], "solvedCount": 4113}, {"contestId": 1951, "index": "D", "name": "Buying Jewels", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 5929}, {"contestId": 1951, "index": "C", "name": "Ticket Hoarding", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "math", "sortings"], "solvedCount": 13099}, {"contestId": 1951, "index": "B", "name": "Battle Cows", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 16155}, {"contestId": 1951, "index": "A", "name": "Dual Trigger", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 21550}, {"contestId": 1950, "index": "G", "name": "Shuffling Songs", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dfs and similar", "dp", "graphs", "hashing", "implementation", "strings"], "solvedCount": 5342}, {"contestId": 1950, "index": "F", "name": "0, 1, 2, Tree!", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "brute force", "greedy", "implementation", "trees"], "solvedCount": 10507}, {"contestId": 1950, "index": "E", "name": "Nearly Shortest Repeating Substring", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation", "number theory", "strings"], "solvedCount": 16407}, {"contestId": 1950, "index": "D", "name": "Product of Binary Decimals", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "dp", "implementation", "number theory"], "solvedCount": 25386}, {"contestId": 1950, "index": "C", "name": "Clock Conversion", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 44336}, {"contestId": 1950, "index": "B", "name": "Upscaling", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 41839}, {"contestId": 1950, "index": "A", "name": "Stair, Peak, or Neither?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 62217}, {"contestId": 1949, "index": "K", "name": "Make Triangle", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms", "math"], "solvedCount": 407}, {"contestId": 1949, "index": "J", "name": "Amanda the Amoeba", "type": "PROGRAMMING", "rating": 2600, "tags": ["graphs", "implementation", "trees", "two pointers"], "solvedCount": 472}, {"contestId": 1949, "index": "I", "name": "Disks", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "geometry", "graph matchings", "graphs"], "solvedCount": 2352}, {"contestId": 1949, "index": "H", "name": "Division Avoidance", "type": "PROGRAMMING", "rating": 3100, "tags": ["greedy", "math"], "solvedCount": 150}, {"contestId": 1949, "index": "G", "name": "Scooter", "type": "PROGRAMMING", "rating": 2300, "tags": ["graphs", "greedy"], "solvedCount": 942}, {"contestId": 1949, "index": "F", "name": "Dating", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "sortings", "trees"], "solvedCount": 1239}, {"contestId": 1949, "index": "E", "name": "Damage per Second", "type": "PROGRAMMING", "rating": 2900, "tags": ["brute force", "math"], "solvedCount": 132}, {"contestId": 1949, "index": "D", "name": "Funny or Scary?", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 495}, {"contestId": 1949, "index": "C", "name": "Annual Ants' Gathering", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2251}, {"contestId": 1949, "index": "B", "name": "Charming Meals", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "greedy", "sortings"], "solvedCount": 4322}, {"contestId": 1949, "index": "A", "name": "Grove", "type": "PROGRAMMING", "rating": 3300, "tags": ["brute force", "dfs and similar", "dp", "geometry", "probabilities"], "solvedCount": 191}, {"contestId": 1948, "index": "G", "name": "MST with Matching", "type": "PROGRAMMING", "rating": 3100, "tags": ["bitmasks", "brute force", "dsu", "graph matchings", "trees"], "solvedCount": 808}, {"contestId": 1948, "index": "F", "name": "Rare Coins", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "math", "probabilities"], "solvedCount": 1489}, {"contestId": 1948, "index": "E", "name": "Clique Partition", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 3306}, {"contestId": 1948, "index": "D", "name": "Tandem Repeats?", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "strings", "two pointers"], "solvedCount": 10987}, {"contestId": 1948, "index": "C", "name": "Arrow Path", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 19474}, {"contestId": 1948, "index": "B", "name": "Array Fix", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 25102}, {"contestId": 1948, "index": "A", "name": "Special Characters", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 30199}, {"contestId": 1946, "index": "F", "name": "Nobody is needed", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["2-sat", "data structures", "dfs and similar", "dp"], "solvedCount": 1148}, {"contestId": 1946, "index": "E", "name": "Girl Permutation", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 2908}, {"contestId": 1946, "index": "D", "name": "Birthday Gift", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 5284}, {"contestId": 1946, "index": "C", "name": "Tree Cutting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "implementation", "trees"], "solvedCount": 12668}, {"contestId": 1946, "index": "B", "name": "Maximum Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "greedy", "math"], "solvedCount": 22395}, {"contestId": 1946, "index": "A", "name": "Median of an Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 27728}, {"contestId": 1945, "index": "H", "name": "GCD is Greater", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "data structures", "math", "number theory"], "solvedCount": 785}, {"contestId": 1945, "index": "G", "name": "Cook and Porridge", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures", "implementation"], "solvedCount": 840}, {"contestId": 1945, "index": "F", "name": "Kirill and Mushrooms", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "sortings"], "solvedCount": 4754}, {"contestId": 1945, "index": "E", "name": "Binary Search", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "constructive algorithms", "greedy"], "solvedCount": 9181}, {"contestId": 1945, "index": "D", "name": "Seraphim the Owl", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy"], "solvedCount": 16312}, {"contestId": 1945, "index": "C", "name": "Left and Right Houses", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force"], "solvedCount": 16551}, {"contestId": 1945, "index": "B", "name": "Fireworks", "type": "PROGRAMMING", "rating": 900, "tags": ["math", "number theory"], "solvedCount": 24915}, {"contestId": 1945, "index": "A", "name": "Setting up Camp", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 29294}, {"contestId": 1944, "index": "B", "name": "Equal XOR", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 17445}, {"contestId": 1944, "index": "A", "name": "Destroying Bridges", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["graphs", "greedy", "math"], "solvedCount": 26541}, {"contestId": 1943, "index": "F", "name": "Minimum Hamming Distance", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["dp"], "solvedCount": 131}, {"contestId": 1943, "index": "E2", "name": "MEX Game 2 (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3300, "tags": ["binary search", "greedy", "two pointers"], "solvedCount": 338}, {"contestId": 1943, "index": "E1", "name": "MEX Game 2 (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["binary search", "brute force", "greedy"], "solvedCount": 491}, {"contestId": 1943, "index": "D2", "name": "Counting Is Fun (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "dp"], "solvedCount": 974}, {"contestId": 1943, "index": "D1", "name": "Counting Is Fun (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math"], "solvedCount": 1761}, {"contestId": 1943, "index": "C", "name": "Tree Compass", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 2415}, {"contestId": 1943, "index": "B", "name": "Non-Palindromic Substring", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["hashing", "implementation", "math", "strings"], "solvedCount": 4271}, {"contestId": 1943, "index": "A", "name": "MEX Game 1", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["games", "greedy"], "solvedCount": 20235}, {"contestId": 1942, "index": "H", "name": "Farmer John's Favorite Intern", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["data structures", "dp", "flows", "trees"], "solvedCount": 176}, {"contestId": 1942, "index": "G", "name": "Bessie and Cards", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math"], "solvedCount": 557}, {"contestId": 1942, "index": "F", "name": "Farmer John's Favorite Function", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force", "data structures", "implementation", "math"], "solvedCount": 790}, {"contestId": 1942, "index": "E", "name": "Farm Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "games"], "solvedCount": 1847}, {"contestId": 1942, "index": "D", "name": "Learning to Paint", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "dp", "greedy", "implementation", "sortings"], "solvedCount": 3099}, {"contestId": 1942, "index": "C2", "name": "Bessie's Birthday Cake (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["geometry", "greedy", "math"], "solvedCount": 6613}, {"contestId": 1942, "index": "C1", "name": "Bessie's Birthday Cake (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["geometry", "greedy", "math"], "solvedCount": 11976}, {"contestId": 1942, "index": "B", "name": "Bessie and MEX", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 15022}, {"contestId": 1942, "index": "A", "name": "Farmer John's Challenge", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 18125}, {"contestId": 1941, "index": "G", "name": "Rudolf and Subway", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 4178}, {"contestId": 1941, "index": "F", "name": "Rudolf and Imbalance", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "greedy", "sortings", "two pointers"], "solvedCount": 6918}, {"contestId": 1941, "index": "E", "name": "Rudolf and k Bridges", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures", "dp", "two pointers"], "solvedCount": 11126}, {"contestId": 1941, "index": "D", "name": "Rudolf and the Ball Game", "type": "PROGRAMMING", "rating": 1200, "tags": ["dfs and similar", "dp", "implementation"], "solvedCount": 20028}, {"contestId": 1941, "index": "C", "name": "Rudolf and the Ugly String", "type": "PROGRAMMING", "rating": 900, "tags": ["dp", "greedy", "strings"], "solvedCount": 37080}, {"contestId": 1941, "index": "B", "name": "Rudolf and 121", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dp", "greedy", "math"], "solvedCount": 32969}, {"contestId": 1941, "index": "A", "name": "Rudolf and the Ticket", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 45712}, {"contestId": 1940, "index": "D", "name": "Almost Certainly", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "data structures", "sortings"], "solvedCount": 161}, {"contestId": 1940, "index": "C", "name": "Burenka and Pether", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "sortings", "trees"], "solvedCount": 38}, {"contestId": 1940, "index": "B", "name": "Three Arrays", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "implementation", "sortings"], "solvedCount": 244}, {"contestId": 1940, "index": "A", "name": "Parallel Universes", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 96}, {"contestId": 1939, "index": "D", "name": "Big Persimmon", "type": "PROGRAMMING", "tags": ["*special", "dp", "games"], "solvedCount": 104}, {"contestId": 1939, "index": "C", "name": "More Gifts", "type": "PROGRAMMING", "tags": ["*special", "dfs and similar", "two pointers"], "solvedCount": 367}, {"contestId": 1939, "index": "B", "name": "Evidence Board", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 276}, {"contestId": 1939, "index": "A", "name": "Draw Polygon Lines", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dp", "geometry", "interactive"], "solvedCount": 28}, {"contestId": 1938, "index": "M", "name": "Zig-zag", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 67}, {"contestId": 1938, "index": "L", "name": "XOR Operations", "type": "PROGRAMMING", "rating": 2800, "tags": [], "solvedCount": 323}, {"contestId": 1938, "index": "K", "name": "Tree Quiz", "type": "PROGRAMMING", "rating": 2400, "tags": [], "solvedCount": 709}, {"contestId": 1938, "index": "J", "name": "There and Back Again", "type": "PROGRAMMING", "rating": 2100, "tags": [], "solvedCount": 1467}, {"contestId": 1938, "index": "I", "name": "Symmetric Boundary", "type": "PROGRAMMING", "rating": 2800, "tags": [], "solvedCount": 83}, {"contestId": 1938, "index": "H", "name": "Pho Restaurant", "type": "PROGRAMMING", "rating": 1600, "tags": [], "solvedCount": 2448}, {"contestId": 1938, "index": "G", "name": "Personality Test", "type": "PROGRAMMING", "rating": 2300, "tags": [], "solvedCount": 1190}, {"contestId": 1938, "index": "F", "name": "Forming Groups", "type": "PROGRAMMING", "rating": 2400, "tags": [], "solvedCount": 862}, {"contestId": 1938, "index": "E", "name": "Duplicates", "type": "PROGRAMMING", "rating": 2200, "tags": [], "solvedCount": 1142}, {"contestId": 1938, "index": "D", "name": "B\u00e1nh B\u00f2", "type": "PROGRAMMING", "rating": 3300, "tags": [], "solvedCount": 100}, {"contestId": 1938, "index": "C", "name": "Bit Counting Sequence", "type": "PROGRAMMING", "rating": 1900, "tags": [], "solvedCount": 1688}, {"contestId": 1938, "index": "B", "name": "Attraction Score", "type": "PROGRAMMING", "rating": 3000, "tags": [], "solvedCount": 217}, {"contestId": 1938, "index": "A", "name": "Antiparticle Antiphysics", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 60}, {"contestId": 1937, "index": "B", "name": "Binary Path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "implementation"], "solvedCount": 16561}, {"contestId": 1937, "index": "A", "name": "Shuffle Party", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 24109}, {"contestId": 1936, "index": "F", "name": "Grand Finale: Circles", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["binary search", "geometry"], "solvedCount": 160}, {"contestId": 1936, "index": "E", "name": "Yet Yet Another Permutation Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["divide and conquer", "fft", "math"], "solvedCount": 135}, {"contestId": 1936, "index": "D", "name": "Bitwise Paradox", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["binary search", "bitmasks", "data structures", "greedy", "two pointers"], "solvedCount": 577}, {"contestId": 1936, "index": "C", "name": "Pok\u00e9mon Arena", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "graphs", "greedy", "implementation", "shortest paths", "sortings"], "solvedCount": 1547}, {"contestId": 1936, "index": "B", "name": "Pinball", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "data structures", "implementation", "math", "two pointers"], "solvedCount": 3298}, {"contestId": 1936, "index": "A", "name": "Bitwise Operation Wizard", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "greedy", "interactive", "math"], "solvedCount": 8192}, {"contestId": 1935, "index": "F", "name": "Andrey's Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "dfs and similar", "dsu", "greedy", "implementation", "trees"], "solvedCount": 494}, {"contestId": 1935, "index": "E", "name": "Distance Learning Courses in MAC", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "brute force", "data structures", "greedy", "math"], "solvedCount": 1533}, {"contestId": 1935, "index": "D", "name": "Exam in MAC", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "combinatorics", "implementation", "math"], "solvedCount": 9485}, {"contestId": 1935, "index": "C", "name": "Messenger in MAC", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp", "greedy", "sortings"], "solvedCount": 9072}, {"contestId": 1935, "index": "B", "name": "Informatics in MAC", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 20107}, {"contestId": 1935, "index": "A", "name": "Entertainment in MAC", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "strings"], "solvedCount": 29542}, {"contestId": 1934, "index": "E", "name": "Weird LCM Operations", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["brute force", "constructive algorithms", "number theory"], "solvedCount": 274}, {"contestId": 1934, "index": "D2", "name": "XOR Break --- Game Version", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["bitmasks", "games", "greedy", "interactive"], "solvedCount": 1555}, {"contestId": 1934, "index": "D1", "name": "XOR Break --- Solo Version", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 3855}, {"contestId": 1934, "index": "C", "name": "Find a Mine", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "constructive algorithms", "geometry", "greedy", "interactive", "math"], "solvedCount": 7614}, {"contestId": 1934, "index": "B", "name": "Yet Another Coin Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "dp", "greedy", "math"], "solvedCount": 20884}, {"contestId": 1934, "index": "A", "name": "Too Min Too Max", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 26555}, {"contestId": 1933, "index": "G", "name": "Turtle Magic: Royal Turtle Shell Pattern", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "constructive algorithms", "dfs and similar", "math"], "solvedCount": 1095}, {"contestId": 1933, "index": "F", "name": "Turtle Mission: Robot and the Earthquake", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 2766}, {"contestId": 1933, "index": "E", "name": "Turtle vs. Rabbit Race: Optimal Trainings", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "implementation", "math", "ternary search"], "solvedCount": 12674}, {"contestId": 1933, "index": "D", "name": "Turtle Tenacity: Continual Mods", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "number theory", "sortings"], "solvedCount": 22346}, {"contestId": 1933, "index": "C", "name": "Turtle Fingers: Count the Values of k", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 24418}, {"contestId": 1933, "index": "B", "name": "Turtle Math: Fast Three Task", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math", "number theory"], "solvedCount": 34928}, {"contestId": 1933, "index": "A", "name": "Turtle Puzzle: Rearrange and Negate", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math", "sortings"], "solvedCount": 40517}, {"contestId": 1932, "index": "G", "name": "Moving Platforms", "type": "PROGRAMMING", "rating": 2300, "tags": ["graphs", "math", "number theory", "shortest paths"], "solvedCount": 1217}, {"contestId": 1932, "index": "F", "name": "Feed Cats", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp", "sortings"], "solvedCount": 5019}, {"contestId": 1932, "index": "E", "name": "Final Countdown", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "math", "number theory"], "solvedCount": 9491}, {"contestId": 1932, "index": "D", "name": "Card Game", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 12773}, {"contestId": 1932, "index": "C", "name": "LR-remainders", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "data structures", "implementation", "math", "two pointers"], "solvedCount": 17711}, {"contestId": 1932, "index": "B", "name": "Chaya Calendar", "type": "PROGRAMMING", "rating": 1100, "tags": ["number theory"], "solvedCount": 22620}, {"contestId": 1932, "index": "A", "name": "Thorns and Coins", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "implementation"], "solvedCount": 32230}, {"contestId": 1931, "index": "G", "name": "One-Dimensional Puzzle", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 3281}, {"contestId": 1931, "index": "F", "name": "Chat Screenshots", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "dfs and similar", "graphs"], "solvedCount": 10165}, {"contestId": 1931, "index": "E", "name": "Anna and the Valentine's Day Gift", "type": "PROGRAMMING", "rating": 1400, "tags": ["games", "greedy", "math", "sortings"], "solvedCount": 20894}, {"contestId": 1931, "index": "D", "name": "Divisible Pairs", "type": "PROGRAMMING", "rating": 1300, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 24855}, {"contestId": 1931, "index": "C", "name": "Make Equal Again", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy", "math"], "solvedCount": 32140}, {"contestId": 1931, "index": "B", "name": "Make Equal", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 34104}, {"contestId": 1931, "index": "A", "name": "Recovering a Small String", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "strings"], "solvedCount": 38517}, {"contestId": 1930, "index": "I", "name": "Counting Is Fun", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["combinatorics"], "solvedCount": 85}, {"contestId": 1930, "index": "H", "name": "Interactive Mex Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "solvedCount": 329}, {"contestId": 1930, "index": "G", "name": "Prefix Max Set Counting", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "dp", "trees"], "solvedCount": 467}, {"contestId": 1930, "index": "F", "name": "Maximize the Difference", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "dfs and similar"], "solvedCount": 832}, {"contestId": 1930, "index": "E", "name": "2..3...4.... Wonderful! Wonderful!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1348}, {"contestId": 1930, "index": "D2", "name": "Sum over all Substrings (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["bitmasks", "divide and conquer", "dp", "dsu", "greedy", "implementation", "strings"], "solvedCount": 2880}, {"contestId": 1930, "index": "D1", "name": "Sum over all Substrings (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "dp", "greedy", "strings"], "solvedCount": 4549}, {"contestId": 1930, "index": "C", "name": "Lexicographically Largest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 7767}, {"contestId": 1930, "index": "B", "name": "Permutation Printing", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 16919}, {"contestId": 1930, "index": "A", "name": "Maximise The Score", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 19559}, {"contestId": 1929, "index": "F", "name": "Sasha and the Wedding Binary Search Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "math", "trees"], "solvedCount": 2140}, {"contestId": 1929, "index": "E", "name": "Sasha and the Happy Tree Cutting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "solvedCount": 1925}, {"contestId": 1929, "index": "D", "name": "Sasha and a Walk in the City", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "dp", "math", "trees"], "solvedCount": 5359}, {"contestId": 1929, "index": "C", "name": "Sasha and the Casino", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "brute force", "constructive algorithms", "games", "greedy", "math"], "solvedCount": 16484}, {"contestId": 1929, "index": "B", "name": "Sasha and the Drawing", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 26249}, {"contestId": 1929, "index": "A", "name": "Sasha and the Beautiful Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 33661}, {"contestId": 1928, "index": "F", "name": "Digital Patterns", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["combinatorics", "data structures", "implementation", "math"], "solvedCount": 313}, {"contestId": 1928, "index": "E", "name": "Modular Sequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "greedy", "math", "number theory"], "solvedCount": 1950}, {"contestId": 1928, "index": "D", "name": "Lonely Mountain Dungeons", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "greedy", "math", "ternary search"], "solvedCount": 4839}, {"contestId": 1928, "index": "C", "name": "Physical Education Lesson", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "math", "number theory"], "solvedCount": 9744}, {"contestId": 1928, "index": "B", "name": "Equalize", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "greedy", "sortings", "two pointers"], "solvedCount": 19678}, {"contestId": 1928, "index": "A", "name": "Rectangle Cutting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "math"], "solvedCount": 23817}, {"contestId": 1927, "index": "G", "name": "Paint Charges", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 1866}, {"contestId": 1927, "index": "F", "name": "Microcycle", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "sortings", "trees"], "solvedCount": 5025}, {"contestId": 1927, "index": "E", "name": "Klever Permutation", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "math", "two pointers"], "solvedCount": 16084}, {"contestId": 1927, "index": "D", "name": "Find the Different Ones!", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "two pointers"], "solvedCount": 27498}, {"contestId": 1927, "index": "C", "name": "Choose the Different Ones!", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy", "math"], "solvedCount": 30318}, {"contestId": 1927, "index": "B", "name": "Following the String", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 36272}, {"contestId": 1927, "index": "A", "name": "Make it White", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 47850}, {"contestId": 1926, "index": "G", "name": "Vlad and Trouble at MIT", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "flows", "graphs", "greedy", "implementation", "trees"], "solvedCount": 4148}, {"contestId": 1926, "index": "F", "name": "Vlad and Avoiding X", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "implementation"], "solvedCount": 1929}, {"contestId": 1926, "index": "E", "name": "Vlad and an Odd Ordering", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "bitmasks", "data structures", "dp", "implementation", "math", "number theory"], "solvedCount": 13817}, {"contestId": 1926, "index": "D", "name": "Vlad and Division", "type": "PROGRAMMING", "rating": 1300, "tags": ["bitmasks", "greedy"], "solvedCount": 17424}, {"contestId": 1926, "index": "C", "name": "Vlad and a Sum of Sum of Digits", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "implementation"], "solvedCount": 30286}, {"contestId": 1926, "index": "B", "name": "Vlad and Shapes", "type": "PROGRAMMING", "rating": 800, "tags": ["geometry", "implementation"], "solvedCount": 34918}, {"contestId": 1926, "index": "A", "name": "Vlad and the Best of Five", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 55796}, {"contestId": 1925, "index": "D", "name": "Good Trip", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 4263}, {"contestId": 1925, "index": "B", "name": "A Balanced Problemset?", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 21917}, {"contestId": 1925, "index": "A", "name": "We Got Everything Covered!", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 30410}, {"contestId": 1924, "index": "F", "name": "Anti-Proxy Attendance", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "interactive", "ternary search"], "solvedCount": 187}, {"contestId": 1924, "index": "E", "name": "Paper Cutting Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["combinatorics", "probabilities"], "solvedCount": 501}, {"contestId": 1924, "index": "D", "name": "Balanced Subsequences", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1278}, {"contestId": 1924, "index": "C", "name": "Fractal Origami", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["geometry", "math", "matrices"], "solvedCount": 1283}, {"contestId": 1924, "index": "B", "name": "Space Harbour", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["data structures", "implementation", "math", "sortings"], "solvedCount": 2967}, {"contestId": 1924, "index": "A", "name": "Did We Get Everything Covered?", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "dp", "greedy", "shortest paths", "strings"], "solvedCount": 15671}, {"contestId": 1923, "index": "F", "name": "Shrink-Reverse", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "brute force", "greedy", "hashing", "implementation", "string suffix structures", "strings"], "solvedCount": 437}, {"contestId": 1923, "index": "E", "name": "Count Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "solvedCount": 4556}, {"contestId": 1923, "index": "D", "name": "Slimes", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 7809}, {"contestId": 1923, "index": "C", "name": "Find B", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 17305}, {"contestId": 1923, "index": "B", "name": "Monsters Attack!", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "greedy", "implementation"], "solvedCount": 19123}, {"contestId": 1923, "index": "A", "name": "Moving Chips", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 25747}, {"contestId": 1922, "index": "F", "name": "Replace on Segment", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "graph matchings"], "solvedCount": 1592}, {"contestId": 1922, "index": "E", "name": "Increasing Subsequences", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "math"], "solvedCount": 8590}, {"contestId": 1922, "index": "D", "name": "Berserk Monsters", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "dsu", "implementation", "math"], "solvedCount": 6339}, {"contestId": 1922, "index": "C", "name": "Closest Cities", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "implementation", "math"], "solvedCount": 20660}, {"contestId": 1922, "index": "B", "name": "Forming Triangles", "type": "PROGRAMMING", "rating": 1200, "tags": ["combinatorics", "constructive algorithms", "math", "sortings"], "solvedCount": 22484}, {"contestId": 1922, "index": "A", "name": "Tricky Template", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 28187}, {"contestId": 1921, "index": "G", "name": "Mischievous Shooter", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "data structures", "divide and conquer", "dp", "implementation"], "solvedCount": 1378}, {"contestId": 1921, "index": "F", "name": "Sum of Progression", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "dp", "implementation", "math"], "solvedCount": 4561}, {"contestId": 1921, "index": "E", "name": "Eat the Chip", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "games", "greedy", "math"], "solvedCount": 10805}, {"contestId": 1921, "index": "D", "name": "Very Different Array", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy", "sortings", "two pointers"], "solvedCount": 23233}, {"contestId": 1921, "index": "C", "name": "Sending Messages", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "math"], "solvedCount": 31454}, {"contestId": 1921, "index": "B", "name": "Arranging Cats", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 35422}, {"contestId": 1921, "index": "A", "name": "Square", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 46999}, {"contestId": 1920, "index": "F2", "name": "Smooth Sailing (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "data structures", "dsu", "geometry", "graphs", "trees"], "solvedCount": 587}, {"contestId": 1920, "index": "F1", "name": "Smooth Sailing (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "shortest paths"], "solvedCount": 1110}, {"contestId": 1920, "index": "E", "name": "Counting Binary Strings", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 3111}, {"contestId": 1920, "index": "D", "name": "Array Repetition", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "brute force", "dsu", "implementation", "math"], "solvedCount": 6167}, {"contestId": 1920, "index": "C", "name": "Partitioning the Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "math", "number theory"], "solvedCount": 16950}, {"contestId": 1920, "index": "B", "name": "Summation Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["games", "greedy", "math", "sortings"], "solvedCount": 22375}, {"contestId": 1920, "index": "A", "name": "Satisfying Constraints", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 28898}, {"contestId": 1919, "index": "H", "name": "Tree Diameter", "type": "PROGRAMMING", "points": 5000.0, "rating": 2000, "tags": ["interactive", "trees"], "solvedCount": 164}, {"contestId": 1919, "index": "G", "name": "Tree LGM", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "divide and conquer", "games", "trees"], "solvedCount": 198}, {"contestId": 1919, "index": "F2", "name": "Wine Factory (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "dp", "flows", "greedy", "matrices"], "solvedCount": 947}, {"contestId": 1919, "index": "F1", "name": "Wine Factory (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "greedy"], "solvedCount": 2374}, {"contestId": 1919, "index": "E", "name": "Counting Prefixes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["combinatorics", "constructive algorithms", "dp", "implementation", "math"], "solvedCount": 955}, {"contestId": 1919, "index": "D", "name": "01 Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "sortings", "trees"], "solvedCount": 4240}, {"contestId": 1919, "index": "C", "name": "Grouping Increases", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["data structures", "dp", "greedy"], "solvedCount": 23948}, {"contestId": 1919, "index": "B", "name": "Plus-Minus Split", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 31028}, {"contestId": 1919, "index": "A", "name": "Wallet Exchange", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["games", "math"], "solvedCount": 35193}, {"contestId": 1918, "index": "G", "name": "Permutation of Given", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["constructive algorithms", "math"], "solvedCount": 590}, {"contestId": 1918, "index": "F", "name": "Caterpillar on a Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dfs and similar", "graphs", "greedy", "implementation", "sortings", "trees"], "solvedCount": 1022}, {"contestId": 1918, "index": "E", "name": "ace5 and Task Order", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "divide and conquer", "implementation", "interactive", "probabilities", "sortings"], "solvedCount": 1926}, {"contestId": 1918, "index": "D", "name": "Blocking Elements", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation", "two pointers"], "solvedCount": 5518}, {"contestId": 1918, "index": "C", "name": "XOR-distance", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["bitmasks", "greedy", "implementation", "math"], "solvedCount": 15648}, {"contestId": 1918, "index": "B", "name": "Minimize Inversions", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 25900}, {"contestId": 1918, "index": "A", "name": "Brick Wall", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 31624}, {"contestId": 1917, "index": "F", "name": "Construct Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "solvedCount": 1116}, {"contestId": 1917, "index": "E", "name": "Construct Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "math"], "solvedCount": 1526}, {"contestId": 1917, "index": "D", "name": "Yet Another Inversions Problem", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dp", "implementation", "math", "number theory"], "solvedCount": 1963}, {"contestId": 1917, "index": "C", "name": "Watering an Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 11754}, {"contestId": 1917, "index": "B", "name": "Erase First or Second Letter", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "combinatorics", "data structures", "dp", "strings"], "solvedCount": 29421}, {"contestId": 1917, "index": "A", "name": "Least Product", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 26699}, {"contestId": 1916, "index": "H2", "name": "Matrix Rank (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "matrices", "string suffix structures"], "solvedCount": 600}, {"contestId": 1916, "index": "H1", "name": "Matrix Rank (Easy Version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["brute force", "combinatorics", "dp", "math", "matrices"], "solvedCount": 670}, {"contestId": 1916, "index": "G", "name": "Optimizations From Chelsu", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["divide and conquer", "dp", "number theory", "trees"], "solvedCount": 173}, {"contestId": 1916, "index": "F", "name": "Group Division", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 609}, {"contestId": 1916, "index": "E", "name": "Happy Life in University", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 2450}, {"contestId": 1916, "index": "D", "name": "Mathematical Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "geometry", "math"], "solvedCount": 9337}, {"contestId": 1916, "index": "C", "name": "Training Before the Olympiad", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "games", "greedy", "implementation", "math"], "solvedCount": 19257}, {"contestId": 1916, "index": "B", "name": "Two Divisors", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 29423}, {"contestId": 1916, "index": "A", "name": "2023", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 27510}, {"contestId": 1915, "index": "G", "name": "Bicycles", "type": "PROGRAMMING", "rating": 1800, "tags": ["graphs", "greedy", "implementation", "shortest paths", "sortings"], "solvedCount": 8165}, {"contestId": 1915, "index": "F", "name": "Greetings", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 18201}, {"contestId": 1915, "index": "E", "name": "Romantic Glasses", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "greedy", "math"], "solvedCount": 28457}, {"contestId": 1915, "index": "D", "name": "Unnatural Language Processing", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "strings"], "solvedCount": 33367}, {"contestId": 1915, "index": "C", "name": "Can I Square?", "type": "PROGRAMMING", "rating": 800, "tags": ["binary search", "implementation"], "solvedCount": 49096}, {"contestId": 1915, "index": "B", "name": "Not Quite Latin Square", "type": "PROGRAMMING", "rating": 800, "tags": ["bitmasks", "brute force", "implementation"], "solvedCount": 46999}, {"contestId": 1915, "index": "A", "name": "Odd One Out", "type": "PROGRAMMING", "rating": 800, "tags": ["bitmasks", "implementation"], "solvedCount": 69716}, {"contestId": 1914, "index": "G2", "name": "Light Bulbs (Hard Version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "graphs", "hashing"], "solvedCount": 1632}, {"contestId": 1914, "index": "G1", "name": "Light Bulbs (Easy Version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "dsu", "graphs", "math", "trees"], "solvedCount": 2158}, {"contestId": 1914, "index": "F", "name": "Programming Competition", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"], "solvedCount": 4659}, {"contestId": 1914, "index": "E2", "name": "Game with Marbles (Hard Version)", "type": "PROGRAMMING", "rating": 1400, "tags": ["games", "greedy", "sortings"], "solvedCount": 14028}, {"contestId": 1914, "index": "E1", "name": "Game with Marbles (Easy Version)", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "games", "greedy", "sortings"], "solvedCount": 13610}, {"contestId": 1914, "index": "D", "name": "Three Activities", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "solvedCount": 29964}, {"contestId": 1914, "index": "C", "name": "Quests", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 31878}, {"contestId": 1914, "index": "B", "name": "Preparing for the Contest", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 32298}, {"contestId": 1914, "index": "A", "name": "Problemsolving Log", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 33886}, {"contestId": 1913, "index": "F", "name": "Palindromic Problem", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "solvedCount": 499}, {"contestId": 1913, "index": "E", "name": "Matrix Problem", "type": "PROGRAMMING", "rating": 2400, "tags": ["flows", "graphs"], "solvedCount": 1196}, {"contestId": 1913, "index": "D", "name": "Array Collapse", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "trees"], "solvedCount": 3764}, {"contestId": 1913, "index": "C", "name": "Game with Multiset", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "bitmasks", "brute force", "greedy"], "solvedCount": 16623}, {"contestId": 1913, "index": "B", "name": "Swap and Delete", "type": "PROGRAMMING", "rating": 1000, "tags": ["strings"], "solvedCount": 38986}, {"contestId": 1913, "index": "A", "name": "Rating Increase", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 26458}, {"contestId": 1912, "index": "L", "name": "LOL Lovers", "type": "PROGRAMMING", "rating": 800, "tags": ["strings"], "solvedCount": 7802}, {"contestId": 1912, "index": "K", "name": "Kim's Quest", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "combinatorics", "dp"], "solvedCount": 3341}, {"contestId": 1912, "index": "J", "name": "Joy of Pok\u00e9mon Observation", "type": "PROGRAMMING", "rating": 2300, "tags": [], "solvedCount": 673}, {"contestId": 1912, "index": "I", "name": "Innovative Washing Machine", "type": "PROGRAMMING", "rating": 3300, "tags": ["geometry", "math", "two pointers"], "solvedCount": 62}, {"contestId": 1912, "index": "H", "name": "Hypercatapult Commute", "type": "PROGRAMMING", "rating": 2400, "tags": ["graphs"], "solvedCount": 536}, {"contestId": 1912, "index": "G", "name": "Great City Saint Petersburg", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 545}, {"contestId": 1912, "index": "F", "name": "Fugitive Frenzy", "type": "PROGRAMMING", "rating": 3100, "tags": ["math", "probabilities"], "solvedCount": 131}, {"contestId": 1912, "index": "E", "name": "Evaluate It and Back Again", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 1146}, {"contestId": 1912, "index": "D", "name": "Divisibility Test", "type": "PROGRAMMING", "rating": 1900, "tags": ["math"], "solvedCount": 1791}, {"contestId": 1912, "index": "C", "name": "Cactus Transformation", "type": "PROGRAMMING", "rating": 3300, "tags": ["constructive algorithms"], "solvedCount": 66}, {"contestId": 1912, "index": "B", "name": "Blueprint for Seating", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "divide and conquer", "math"], "solvedCount": 1273}, {"contestId": 1912, "index": "A", "name": "Accumulator Apex", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 2557}, {"contestId": 1910, "index": "J", "name": "Two Colors", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special"], "solvedCount": 53}, {"contestId": 1910, "index": "I", "name": "Inverse Problem", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "combinatorics", "dp"], "solvedCount": 57}, {"contestId": 1910, "index": "H", "name": "Sum of Digits of Sums", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special", "binary search", "data structures"], "solvedCount": 104}, {"contestId": 1910, "index": "G", "name": "Pool Records", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "greedy"], "solvedCount": 67}, {"contestId": 1910, "index": "F", "name": "Build Railway Stations", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "greedy", "trees"], "solvedCount": 203}, {"contestId": 1910, "index": "E", "name": "Maximum Sum Subarrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dp"], "solvedCount": 224}, {"contestId": 1910, "index": "D", "name": "Remove and Add", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "greedy"], "solvedCount": 387}, {"contestId": 1910, "index": "C", "name": "Poisonous Swamp", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "*special", "implementation", "implementation"], "solvedCount": 708}, {"contestId": 1910, "index": "B", "name": "Security Guard", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "greedy"], "solvedCount": 768}, {"contestId": 1910, "index": "A", "name": "Username", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "implementation"], "solvedCount": 1904}, {"contestId": 1909, "index": "I", "name": "Short Permutation Problem", "type": "PROGRAMMING", "points": 6000.0, "rating": 1900, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 144}, {"contestId": 1909, "index": "H", "name": "Parallel Swaps Sort", "type": "PROGRAMMING", "points": 6000.0, "rating": 3500, "tags": ["constructive algorithms", "data structures"], "solvedCount": 98}, {"contestId": 1909, "index": "G", "name": "Pumping Lemma", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["hashing", "strings"], "solvedCount": 501}, {"contestId": 1909, "index": "F2", "name": "Small Permutation Problem (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1107}, {"contestId": 1909, "index": "F1", "name": "Small Permutation Problem (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "combinatorics", "dp", "math"], "solvedCount": 2075}, {"contestId": 1909, "index": "E", "name": "Multiple Lamps", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 1578}, {"contestId": 1909, "index": "D", "name": "Split Plus K", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy", "math", "number theory"], "solvedCount": 4843}, {"contestId": 1909, "index": "C", "name": "Heavy Intervals", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "math", "sortings"], "solvedCount": 12550}, {"contestId": 1909, "index": "B", "name": "Make Almost Equal With Mod", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "constructive algorithms", "math", "number theory"], "solvedCount": 24075}, {"contestId": 1909, "index": "A", "name": "Distinct Buttons", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 18528}, {"contestId": 1907, "index": "G", "name": "Lights", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation"], "solvedCount": 2188}, {"contestId": 1907, "index": "F", "name": "Shift and Reverse", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "sortings"], "solvedCount": 5537}, {"contestId": 1907, "index": "E", "name": "Good Triples", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "combinatorics", "number theory"], "solvedCount": 13103}, {"contestId": 1907, "index": "D", "name": "Jumping Through Segments", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "constructive algorithms"], "solvedCount": 19026}, {"contestId": 1907, "index": "C", "name": "Removal of Unattractive Pairs", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "strings"], "solvedCount": 22123}, {"contestId": 1907, "index": "B", "name": "YetnotherrokenKeoard", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "implementation", "strings"], "solvedCount": 28497}, {"contestId": 1907, "index": "A", "name": "Rook", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 39844}, {"contestId": 1906, "index": "M", "name": "Triangle Construction", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy", "math"], "solvedCount": 3179}, {"contestId": 1906, "index": "L", "name": "Palindromic Parentheses", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 659}, {"contestId": 1906, "index": "K", "name": "Deck-Building Game", "type": "PROGRAMMING", "rating": 2500, "tags": ["divide and conquer", "math"], "solvedCount": 384}, {"contestId": 1906, "index": "J", "name": "Count BFS Graph", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp"], "solvedCount": 969}, {"contestId": 1906, "index": "I", "name": "Contingency Plan 2", "type": "PROGRAMMING", "rating": 2900, "tags": ["graph matchings"], "solvedCount": 197}, {"contestId": 1906, "index": "H", "name": "Twin Friends", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp"], "solvedCount": 966}, {"contestId": 1906, "index": "G", "name": "Grid Game 2", "type": "PROGRAMMING", "rating": 2900, "tags": ["games", "number theory"], "solvedCount": 287}, {"contestId": 1906, "index": "F", "name": "Maximize The Value", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "sortings"], "solvedCount": 1450}, {"contestId": 1906, "index": "E", "name": "Merge Not Sort", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "dp"], "solvedCount": 1958}, {"contestId": 1906, "index": "D", "name": "Spaceship Exploration", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "geometry"], "solvedCount": 147}, {"contestId": 1906, "index": "C", "name": "Cursed Game", "type": "PROGRAMMING", "rating": 3000, "tags": ["interactive"], "solvedCount": 234}, {"contestId": 1906, "index": "B", "name": "Button Pressing", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "constructive algorithms", "hashing"], "solvedCount": 693}, {"contestId": 1906, "index": "A", "name": "Easy As ABC", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force"], "solvedCount": 5467}, {"contestId": 1905, "index": "F", "name": "Field Should Not Be Empty", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["brute force", "data structures", "divide and conquer"], "solvedCount": 613}, {"contestId": 1905, "index": "E", "name": "One-X", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "solvedCount": 1150}, {"contestId": 1905, "index": "D", "name": "Cyclic MEX", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "implementation", "math", "two pointers"], "solvedCount": 4337}, {"contestId": 1905, "index": "C", "name": "Largest Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "strings"], "solvedCount": 13628}, {"contestId": 1905, "index": "B", "name": "Begginer's Zelda", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "trees"], "solvedCount": 17787}, {"contestId": 1905, "index": "A", "name": "Constructive Problems", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 23931}, {"contestId": 1904, "index": "F", "name": "Beautiful Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 437}, {"contestId": 1904, "index": "E", "name": "Tree Queries", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 1174}, {"contestId": 1904, "index": "D2", "name": "Set To Max (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "implementation", "sortings"], "solvedCount": 5224}, {"contestId": 1904, "index": "D1", "name": "Set To Max (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 7966}, {"contestId": 1904, "index": "C", "name": "Array Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "data structures", "sortings", "two pointers"], "solvedCount": 18723}, {"contestId": 1904, "index": "B", "name": "Collecting Game", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["binary search", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 21586}, {"contestId": 1904, "index": "A", "name": "Forked!", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 30182}, {"contestId": 1903, "index": "F", "name": "Babysitting", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["2-sat", "binary search", "data structures", "graphs", "trees"], "solvedCount": 786}, {"contestId": 1903, "index": "E", "name": "Geo Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["greedy", "interactive", "math"], "solvedCount": 2338}, {"contestId": 1903, "index": "D2", "name": "Maximum And Queries (hard version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "divide and conquer", "dp", "greedy"], "solvedCount": 914}, {"contestId": 1903, "index": "D1", "name": "Maximum And Queries (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "bitmasks", "brute force", "greedy"], "solvedCount": 6567}, {"contestId": 1903, "index": "C", "name": "Theofanis' Nightmare", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 13732}, {"contestId": 1903, "index": "B", "name": "StORage room", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy"], "solvedCount": 14145}, {"contestId": 1903, "index": "A", "name": "Halloumi Boxes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 54966}, {"contestId": 1902, "index": "F", "name": "Trees and XOR Queries Again", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "implementation", "math", "trees"], "solvedCount": 1287}, {"contestId": 1902, "index": "E", "name": "Collapsing Strings", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "strings", "trees"], "solvedCount": 5012}, {"contestId": 1902, "index": "D", "name": "Robot Queries", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation"], "solvedCount": 4687}, {"contestId": 1902, "index": "C", "name": "Insert and Equalize", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 15582}, {"contestId": 1902, "index": "B", "name": "Getting Points", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "brute force", "greedy"], "solvedCount": 15691}, {"contestId": 1902, "index": "A", "name": "Binary Imbalance", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 22572}, {"contestId": 1901, "index": "F", "name": "Landscaping", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "geometry", "two pointers"], "solvedCount": 177}, {"contestId": 1901, "index": "E", "name": "Compressed Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1812}, {"contestId": 1901, "index": "D", "name": "Yet Another Monster Fight", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "dp", "greedy", "implementation", "math"], "solvedCount": 7923}, {"contestId": 1901, "index": "C", "name": "Add, Divide and Floor", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 13489}, {"contestId": 1901, "index": "B", "name": "Chip and Ribbon", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 16120}, {"contestId": 1901, "index": "A", "name": "Line Trip", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 52544}, {"contestId": 1900, "index": "F", "name": "Local Deletions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 327}, {"contestId": 1900, "index": "E", "name": "Transitive Graph", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation"], "solvedCount": 2420}, {"contestId": 1900, "index": "D", "name": "Small GCD", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "math", "number theory"], "solvedCount": 4885}, {"contestId": 1900, "index": "C", "name": "Anji's Binary Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 13588}, {"contestId": 1900, "index": "B", "name": "Laura and Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["dp", "math"], "solvedCount": 19430}, {"contestId": 1900, "index": "A", "name": "Cover in Water", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 45227}, {"contestId": 1899, "index": "G", "name": "Unusual Entertainment", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dfs and similar", "dsu", "shortest paths", "sortings", "trees", "two pointers"], "solvedCount": 3688}, {"contestId": 1899, "index": "F", "name": "Alex's whims", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 8937}, {"contestId": 1899, "index": "E", "name": "Queue Sort", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 17369}, {"contestId": 1899, "index": "D", "name": "Yarik and Musical Notes", "type": "PROGRAMMING", "rating": 1300, "tags": ["hashing", "math", "number theory"], "solvedCount": 15003}, {"contestId": 1899, "index": "C", "name": "Yarik and Array", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "greedy", "two pointers"], "solvedCount": 28033}, {"contestId": 1899, "index": "B", "name": "250 Thousand Tons of TNT", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "implementation", "number theory"], "solvedCount": 27012}, {"contestId": 1899, "index": "A", "name": "Game with Integers", "type": "PROGRAMMING", "rating": 800, "tags": ["games", "math", "number theory"], "solvedCount": 68513}, {"contestId": 1898, "index": "F", "name": "Vova Escapes the Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "dfs and similar", "divide and conquer", "shortest paths"], "solvedCount": 879}, {"contestId": 1898, "index": "E", "name": "Sofia and Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "greedy", "sortings", "strings", "two pointers"], "solvedCount": 2556}, {"contestId": 1898, "index": "D", "name": "Absolute Beauty", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["greedy", "math"], "solvedCount": 6007}, {"contestId": 1898, "index": "C", "name": "Colorful Grid", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms"], "solvedCount": 6209}, {"contestId": 1898, "index": "B", "name": "Milena and Admirer", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 13591}, {"contestId": 1898, "index": "A", "name": "Milica and String", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 16911}, {"contestId": 1896, "index": "H2", "name": "Cyclic Hamming (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3500, "tags": ["brute force", "dp", "fft", "math", "number theory"], "solvedCount": 122}, {"contestId": 1896, "index": "H1", "name": "Cyclic Hamming (Easy Version)", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["brute force", "divide and conquer", "dp", "fft", "math", "number theory"], "solvedCount": 102}, {"contestId": 1896, "index": "G", "name": "Pepe Racing", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["constructive algorithms", "implementation", "interactive", "sortings"], "solvedCount": 388}, {"contestId": 1896, "index": "F", "name": "Bracket Xoring", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 887}, {"contestId": 1896, "index": "E", "name": "Permutation Sorting", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "sortings"], "solvedCount": 2489}, {"contestId": 1896, "index": "D", "name": "Ones and Twos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "divide and conquer", "math", "two pointers"], "solvedCount": 6495}, {"contestId": 1896, "index": "C", "name": "Matching Arrays", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "greedy", "sortings"], "solvedCount": 10927}, {"contestId": 1896, "index": "B", "name": "AB Flipping", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "strings", "two pointers"], "solvedCount": 17038}, {"contestId": 1896, "index": "A", "name": "Jagged Swaps", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["sortings"], "solvedCount": 40078}, {"contestId": 1895, "index": "G", "name": "Two Characters, Two Colors", "type": "PROGRAMMING", "rating": 3100, "tags": ["binary search", "data structures", "dp", "flows", "greedy"], "solvedCount": 261}, {"contestId": 1895, "index": "F", "name": "Fancy Arrays", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "math", "matrices"], "solvedCount": 888}, {"contestId": 1895, "index": "E", "name": "Infinite Card Game", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "dsu", "games", "graphs", "greedy", "sortings", "two pointers"], "solvedCount": 1740}, {"contestId": 1895, "index": "D", "name": "XOR Construction", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "data structures", "math", "string suffix structures", "trees"], "solvedCount": 6657}, {"contestId": 1895, "index": "C", "name": "Torn Lucky Ticket", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "hashing", "implementation", "math"], "solvedCount": 12350}, {"contestId": 1895, "index": "B", "name": "Points and Minimum Distance", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math", "sortings"], "solvedCount": 21189}, {"contestId": 1895, "index": "A", "name": "Treasure Chest", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 25367}, {"contestId": 1894, "index": "B", "name": "Two Out of Three", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 17407}, {"contestId": 1894, "index": "A", "name": "Secret Sport", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 19905}, {"contestId": 1893, "index": "E", "name": "Cacti Symphony", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["combinatorics", "dfs and similar", "dp", "graphs"], "solvedCount": 215}, {"contestId": 1893, "index": "D", "name": "Colorful Constructive", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 998}, {"contestId": 1893, "index": "C", "name": "Freedom of Choice", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 3010}, {"contestId": 1893, "index": "B", "name": "Neutral Tonality", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 10349}, {"contestId": 1893, "index": "A", "name": "Anonymous Informant", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "solvedCount": 14122}, {"contestId": 1891, "index": "F", "name": "A Growing Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 4324}, {"contestId": 1891, "index": "E", "name": "Brukhovich and Exams", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "greedy", "implementation", "math", "sortings"], "solvedCount": 940}, {"contestId": 1891, "index": "D", "name": "Suspicious logarithms", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "brute force", "math"], "solvedCount": 4333}, {"contestId": 1891, "index": "C", "name": "Smilo and Monsters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 17044}, {"contestId": 1891, "index": "B", "name": "Deja Vu", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["brute force", "math", "sortings"], "solvedCount": 23509}, {"contestId": 1891, "index": "A", "name": "Sorting with Twos", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 20096}, {"contestId": 1890, "index": "B", "name": "Qingshan Loves Strings", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 18274}, {"contestId": 1890, "index": "A", "name": "Doremy's Paint 3", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 41321}, {"contestId": 1889, "index": "F", "name": "Doremy's Average Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "dp", "greedy", "trees"], "solvedCount": 140}, {"contestId": 1889, "index": "E", "name": "Doremy's Swapping Trees", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 135}, {"contestId": 1889, "index": "D", "name": "Game of Stacks", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["brute force", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 781}, {"contestId": 1889, "index": "C2", "name": "Doremy's Drying Plan (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["data structures", "dp"], "solvedCount": 1119}, {"contestId": 1889, "index": "C1", "name": "Doremy's Drying Plan (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "solvedCount": 3665}, {"contestId": 1889, "index": "B", "name": "Doremy's Connecting Plan", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 8197}, {"contestId": 1889, "index": "A", "name": "Qingshan Loves Strings 2", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 14612}, {"contestId": 1887, "index": "F", "name": "Minimum Segments", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["constructive algorithms"], "solvedCount": 216}, {"contestId": 1887, "index": "E", "name": "Good Colorings", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["binary search", "constructive algorithms", "graphs", "interactive"], "solvedCount": 449}, {"contestId": 1887, "index": "D", "name": "Split", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["binary search", "data structures", "divide and conquer", "dsu", "math", "trees", "two pointers"], "solvedCount": 1114}, {"contestId": 1887, "index": "C", "name": "Minimum Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "hashing", "two pointers"], "solvedCount": 2047}, {"contestId": 1887, "index": "B", "name": "Time Travel", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "graphs", "shortest paths"], "solvedCount": 3498}, {"contestId": 1886, "index": "F", "name": "Diamond Theft", "type": "PROGRAMMING", "rating": 3300, "tags": ["data structures", "greedy"], "solvedCount": 231}, {"contestId": 1886, "index": "E", "name": "I Wanna be the Team Leader", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math", "sortings", "two pointers"], "solvedCount": 1682}, {"contestId": 1886, "index": "D", "name": "Monocarp and the Set", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "data structures", "math"], "solvedCount": 3897}, {"contestId": 1886, "index": "C", "name": "Decreasing String", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "strings"], "solvedCount": 14073}, {"contestId": 1886, "index": "B", "name": "Fear of the Dark", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "geometry", "math"], "solvedCount": 17367}, {"contestId": 1886, "index": "A", "name": "Sum of Three", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 27004}, {"contestId": 1885, "index": "A", "name": "Deterministic Scheduling for Extended Reality over 5G and Beyond", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 0}, {"contestId": 1884, "index": "E", "name": "Hard Design", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["greedy", "implementation", "math"], "solvedCount": 354}, {"contestId": 1884, "index": "D", "name": "Counting Rhyme", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "math", "number theory"], "solvedCount": 3713}, {"contestId": 1884, "index": "C", "name": "Medium Design", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "solvedCount": 6937}, {"contestId": 1884, "index": "B", "name": "Haunted House", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "greedy", "math", "two pointers"], "solvedCount": 14004}, {"contestId": 1884, "index": "A", "name": "Simple Design", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 18553}, {"contestId": 1883, "index": "G2", "name": "Dances (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "greedy", "sortings", "two pointers"], "solvedCount": 6143}, {"contestId": 1883, "index": "G1", "name": "Dances (Easy version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 1400, "tags": ["binary search", "greedy", "two pointers"], "solvedCount": 15345}, {"contestId": 1883, "index": "F", "name": "You Are So Beautiful", "type": "PROGRAMMING", "points": 2750.0, "rating": 1400, "tags": ["data structures"], "solvedCount": 11059}, {"contestId": 1883, "index": "E", "name": "Look Back", "type": "PROGRAMMING", "points": 2500.0, "rating": 1700, "tags": ["bitmasks", "greedy"], "solvedCount": 9283}, {"contestId": 1883, "index": "D", "name": "In Love", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["data structures", "greedy"], "solvedCount": 13547}, {"contestId": 1883, "index": "C", "name": "Raspberries", "type": "PROGRAMMING", "points": 1500.0, "rating": 1000, "tags": ["dp", "math"], "solvedCount": 38816}, {"contestId": 1883, "index": "B", "name": "Chemistry", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["strings"], "solvedCount": 45939}, {"contestId": 1883, "index": "A", "name": "Morning", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 27740}, {"contestId": 1882, "index": "E2", "name": "Two Permutations (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 333}, {"contestId": 1882, "index": "E1", "name": "Two Permutations (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "greedy", "number theory"], "solvedCount": 1145}, {"contestId": 1882, "index": "D", "name": "Tree XOR", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 6368}, {"contestId": 1882, "index": "C", "name": "Card Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "greedy"], "solvedCount": 13819}, {"contestId": 1882, "index": "B", "name": "Sets and Union", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy"], "solvedCount": 16779}, {"contestId": 1882, "index": "A", "name": "Increasing Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 26752}, {"contestId": 1881, "index": "G", "name": "Anya and the Mysterious String", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures"], "solvedCount": 2687}, {"contestId": 1881, "index": "F", "name": "Minimum Maximum Distance", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees"], "solvedCount": 8507}, {"contestId": 1881, "index": "E", "name": "Block Sequence", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp"], "solvedCount": 19244}, {"contestId": 1881, "index": "D", "name": "Divide and Equalize", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "number theory"], "solvedCount": 23083}, {"contestId": 1881, "index": "C", "name": "Perfect Square", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 18539}, {"contestId": 1881, "index": "B", "name": "Three Threadlets", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 27407}, {"contestId": 1881, "index": "A", "name": "Don't Try to Count", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "strings"], "solvedCount": 44931}, {"contestId": 1879, "index": "F", "name": "Last Man Standing", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "data structures", "number theory"], "solvedCount": 572}, {"contestId": 1879, "index": "E", "name": "Interactive Game with Coloring", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation", "interactive", "trees"], "solvedCount": 1372}, {"contestId": 1879, "index": "D", "name": "Sum of XOR Functions", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "combinatorics", "divide and conquer", "dp", "math"], "solvedCount": 8953}, {"contestId": 1879, "index": "C", "name": "Make it Alternating", "type": "PROGRAMMING", "rating": 1300, "tags": ["combinatorics", "dp", "greedy"], "solvedCount": 22216}, {"contestId": 1879, "index": "B", "name": "Chips on the Board", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 24096}, {"contestId": 1879, "index": "A", "name": "Rigged!", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 24100}, {"contestId": 1878, "index": "G", "name": "wxhtzdy ORO Tree", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dfs and similar", "implementation", "trees"], "solvedCount": 1347}, {"contestId": 1878, "index": "F", "name": "Vasilije Loves Number Theory", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "math", "number theory"], "solvedCount": 4557}, {"contestId": 1878, "index": "E", "name": "Iva & Pav", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "bitmasks", "data structures", "greedy"], "solvedCount": 16727}, {"contestId": 1878, "index": "D", "name": "Reverse Madness", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 9452}, {"contestId": 1878, "index": "C", "name": "Vasilije in Cacak", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 45101}, {"contestId": 1878, "index": "B", "name": "Aleksa and Stack", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 33275}, {"contestId": 1878, "index": "A", "name": "How Much Does Daytona Cost?", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 60775}, {"contestId": 1877, "index": "C", "name": "Joyboard", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["math", "number theory"], "solvedCount": 12236}, {"contestId": 1877, "index": "A", "name": "Goals of Victory", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 37171}, {"contestId": 1876, "index": "G", "name": "Clubstep", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["binary search", "brute force", "data structures", "greedy", "trees"], "solvedCount": 219}, {"contestId": 1876, "index": "F", "name": "Indefinite Clownfish", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["binary search", "graphs"], "solvedCount": 179}, {"contestId": 1876, "index": "E", "name": "Ball-Stackable", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 323}, {"contestId": 1876, "index": "D", "name": "Lexichromatography", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "two pointers"], "solvedCount": 971}, {"contestId": 1876, "index": "C", "name": "Autosynthesis", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "sortings"], "solvedCount": 2555}, {"contestId": 1876, "index": "B", "name": "Effects of Anti Pimples", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "number theory", "sortings"], "solvedCount": 9457}, {"contestId": 1876, "index": "A", "name": "Helmets in Night Light", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "sortings"], "solvedCount": 26159}, {"contestId": 1875, "index": "D", "name": "Jellyfish and Mex", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dp"], "solvedCount": 10471}, {"contestId": 1875, "index": "C", "name": "Jellyfish and Green Apple", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["bitmasks", "greedy", "math", "number theory"], "solvedCount": 13050}, {"contestId": 1875, "index": "A", "name": "Jellyfish and Undertale", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "greedy"], "solvedCount": 35928}, {"contestId": 1874, "index": "G", "name": "Jellyfish and Inscryption", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["dp"], "solvedCount": 118}, {"contestId": 1874, "index": "F", "name": "Jellyfish and OEIS", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp"], "solvedCount": 315}, {"contestId": 1874, "index": "E", "name": "Jellyfish and Hack", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "math"], "solvedCount": 415}, {"contestId": 1874, "index": "D", "name": "Jellyfish and Miku", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["divide and conquer", "dp", "math", "probabilities"], "solvedCount": 842}, {"contestId": 1874, "index": "C", "name": "Jellyfish and EVA", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dp", "graphs", "greedy", "math", "probabilities"], "solvedCount": 2002}, {"contestId": 1874, "index": "B", "name": "Jellyfish and Math", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 1270}, {"contestId": 1874, "index": "A", "name": "Jellyfish and Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "games", "greedy", "implementation"], "solvedCount": 18628}, {"contestId": 1873, "index": "H", "name": "Mad City", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dsu", "games", "graphs", "shortest paths", "trees"], "solvedCount": 8672}, {"contestId": 1873, "index": "G", "name": "ABBC or BACB", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 15501}, {"contestId": 1873, "index": "F", "name": "Money Trees", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "greedy", "math", "two pointers"], "solvedCount": 18199}, {"contestId": 1873, "index": "E", "name": "Building an Aquarium", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "sortings"], "solvedCount": 35110}, {"contestId": 1873, "index": "D", "name": "1D Eraser", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "two pointers"], "solvedCount": 39532}, {"contestId": 1873, "index": "C", "name": "Target Practice", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 54614}, {"contestId": 1873, "index": "B", "name": "Good Kid", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 56752}, {"contestId": 1873, "index": "A", "name": "Short Sort", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 63627}, {"contestId": 1872, "index": "G", "name": "Replace With Product", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "greedy", "math"], "solvedCount": 4713}, {"contestId": 1872, "index": "F", "name": "Selling a Menagerie", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "dsu", "graphs", "implementation", "math"], "solvedCount": 7096}, {"contestId": 1872, "index": "E", "name": "Data Structures Fan", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "bitmasks", "data structures", "dp"], "solvedCount": 17524}, {"contestId": 1872, "index": "D", "name": "Plus Minus Permutation", "type": "PROGRAMMING", "rating": 1200, "tags": ["math"], "solvedCount": 31583}, {"contestId": 1872, "index": "C", "name": "Non-coprime Split", "type": "PROGRAMMING", "rating": 1100, "tags": ["math", "number theory"], "solvedCount": 25340}, {"contestId": 1872, "index": "B", "name": "The Corridor or There and Back Again", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 29673}, {"contestId": 1872, "index": "A", "name": "Two Vessels", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 41508}, {"contestId": 1870, "index": "H", "name": "Standard Graph Problem", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures", "graphs", "greedy", "trees"], "solvedCount": 110}, {"contestId": 1870, "index": "G", "name": "MEXanization", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 257}, {"contestId": 1870, "index": "F", "name": "Lazy Numbers", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["binary search", "math"], "solvedCount": 531}, {"contestId": 1870, "index": "E", "name": "Another MEX Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["bitmasks", "brute force", "dp", "shortest paths"], "solvedCount": 2750}, {"contestId": 1870, "index": "D", "name": "Prefix Purchase", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 7649}, {"contestId": 1870, "index": "C", "name": "Colorful Table", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["binary search", "data structures", "dp", "implementation", "math", "two pointers"], "solvedCount": 12535}, {"contestId": 1870, "index": "B", "name": "Friendly Arrays", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 15370}, {"contestId": 1870, "index": "A", "name": "MEXanized Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 19834}, {"contestId": 1869, "index": "B", "name": "2D Traveling", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["geometry", "math", "shortest paths", "sortings"], "solvedCount": 20686}, {"contestId": 1869, "index": "A", "name": "Make It Zero", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 30726}, {"contestId": 1868, "index": "F", "name": "LIS?", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 85}, {"contestId": 1868, "index": "E", "name": "Min-Sum-Max", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 102}, {"contestId": 1868, "index": "D", "name": "Flower-like Pseudotree", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["constructive algorithms", "graphs", "greedy", "implementation", "trees"], "solvedCount": 323}, {"contestId": 1868, "index": "C", "name": "Travel Plan", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["combinatorics", "dp", "implementation", "math", "trees"], "solvedCount": 1292}, {"contestId": 1868, "index": "B2", "name": "Candy Party (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "implementation", "math"], "solvedCount": 2599}, {"contestId": 1868, "index": "B1", "name": "Candy Party (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "graphs", "greedy", "implementation", "math"], "solvedCount": 7727}, {"contestId": 1868, "index": "A", "name": "Fill in the Matrix", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13021}, {"contestId": 1867, "index": "F", "name": "Most Different Tree", "type": "PROGRAMMING", "points": 4000.0, "rating": 2700, "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "hashing"], "solvedCount": 457}, {"contestId": 1867, "index": "E2", "name": "Salyg1n and Array (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "interactive"], "solvedCount": 3583}, {"contestId": 1867, "index": "E1", "name": "Salyg1n and Array (simple version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 4116}, {"contestId": 1867, "index": "D", "name": "Cyclic Operations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation"], "solvedCount": 6508}, {"contestId": 1867, "index": "C", "name": "Salyg1n and the MEX Game", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["constructive algorithms", "data structures", "games", "greedy", "interactive"], "solvedCount": 12176}, {"contestId": 1867, "index": "B", "name": "XOR Palindromes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "strings"], "solvedCount": 18042}, {"contestId": 1867, "index": "A", "name": "green_gold_dog, array and permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 20846}, {"contestId": 1866, "index": "M", "name": "Mighty Rock Tower", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math", "probabilities"], "solvedCount": 903}, {"contestId": 1866, "index": "L", "name": "Lihmuf Balling", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "brute force", "math"], "solvedCount": 817}, {"contestId": 1866, "index": "K", "name": "Keen Tree Calculation", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "geometry", "graphs", "implementation", "trees"], "solvedCount": 509}, {"contestId": 1866, "index": "J", "name": "Jackets and Packets", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp"], "solvedCount": 352}, {"contestId": 1866, "index": "I", "name": "Imagination Castle", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "games", "two pointers"], "solvedCount": 862}, {"contestId": 1866, "index": "H", "name": "Happy Sets", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics"], "solvedCount": 1803}, {"contestId": 1866, "index": "G", "name": "Grouped Carriages", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "dp", "flows", "greedy"], "solvedCount": 1969}, {"contestId": 1866, "index": "F", "name": "Freak Joker Process", "type": "PROGRAMMING", "rating": 3100, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 147}, {"contestId": 1866, "index": "E", "name": "Elevators of Tamem", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp"], "solvedCount": 477}, {"contestId": 1866, "index": "D", "name": "Digital Wallet", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy"], "solvedCount": 1469}, {"contestId": 1866, "index": "C", "name": "Completely Searching for Inversions", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graphs"], "solvedCount": 3283}, {"contestId": 1866, "index": "B", "name": "Battling with Numbers", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 8606}, {"contestId": 1866, "index": "A", "name": "Ambitious Kid", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 35894}, {"contestId": 1864, "index": "I", "name": "Future Dominators", "type": "PROGRAMMING", "points": 4250.0, "rating": 3500, "tags": ["graphs", "greedy"], "solvedCount": 99}, {"contestId": 1864, "index": "H", "name": "Asterism Stream", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["dp", "math", "matrices"], "solvedCount": 413}, {"contestId": 1864, "index": "G", "name": "Magic Square", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["combinatorics", "constructive algorithms", "implementation"], "solvedCount": 296}, {"contestId": 1864, "index": "F", "name": "Exotic Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 1560}, {"contestId": 1864, "index": "E", "name": "Guess Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "data structures", "games", "math", "probabilities", "sortings", "strings", "trees"], "solvedCount": 2859}, {"contestId": 1864, "index": "D", "name": "Matrix Cascade", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math"], "solvedCount": 7328}, {"contestId": 1864, "index": "C", "name": "Divisor Chain", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "math", "number theory"], "solvedCount": 14653}, {"contestId": 1864, "index": "B", "name": "Swap and Reverse", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 16152}, {"contestId": 1864, "index": "A", "name": "Increasing and Decreasing", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 20999}, {"contestId": 1863, "index": "I", "name": "Redundant Routes", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "trees"], "solvedCount": 116}, {"contestId": 1863, "index": "H", "name": "Goldberg Machine 3", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp", "trees"], "solvedCount": 103}, {"contestId": 1863, "index": "G", "name": "Swaps", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["combinatorics", "dp", "graphs", "math"], "solvedCount": 733}, {"contestId": 1863, "index": "F", "name": "Divide, XOR, and Conquer", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "dp", "math"], "solvedCount": 1245}, {"contestId": 1863, "index": "E", "name": "Speedrun", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "sortings", "two pointers"], "solvedCount": 3012}, {"contestId": 1863, "index": "D", "name": "Two-Colored Dominoes", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 10381}, {"contestId": 1863, "index": "C", "name": "MEX Repetition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 15066}, {"contestId": 1863, "index": "B", "name": "Split Sort", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["greedy", "math", "sortings"], "solvedCount": 16266}, {"contestId": 1863, "index": "A", "name": "Channel", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 18561}, {"contestId": 1862, "index": "G", "name": "The Great Equalizer", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "math", "sortings"], "solvedCount": 3225}, {"contestId": 1862, "index": "F", "name": "Magic Will Save the World", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "bitmasks", "brute force", "dp"], "solvedCount": 7068}, {"contestId": 1862, "index": "E", "name": "Kolya and Movie Theatre", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 12095}, {"contestId": 1862, "index": "D", "name": "Ice Cream Balls", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "combinatorics", "constructive algorithms", "math"], "solvedCount": 18888}, {"contestId": 1862, "index": "C", "name": "Flower City Fence", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "data structures", "implementation", "sortings"], "solvedCount": 22235}, {"contestId": 1862, "index": "B", "name": "Sequence Game", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 43126}, {"contestId": 1862, "index": "A", "name": "Gift Carpet", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "implementation", "strings"], "solvedCount": 34848}, {"contestId": 1861, "index": "F", "name": "Four Suits", "type": "PROGRAMMING", "rating": 3200, "tags": ["binary search", "bitmasks", "flows", "greedy"], "solvedCount": 240}, {"contestId": 1861, "index": "E", "name": "Non-Intersecting Subpermutations", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "dp", "implementation", "math"], "solvedCount": 1919}, {"contestId": 1861, "index": "D", "name": "Sorting By Multiplication", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "greedy"], "solvedCount": 7553}, {"contestId": 1861, "index": "C", "name": "Queries for the Array", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dfs and similar", "implementation", "strings", "trees"], "solvedCount": 11490}, {"contestId": 1861, "index": "B", "name": "Two Binary Strings", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 23091}, {"contestId": 1861, "index": "A", "name": "Prime Deletion", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 25132}, {"contestId": 1860, "index": "F", "name": "Evaluate RBS", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "geometry", "implementation", "math", "sortings"], "solvedCount": 302}, {"contestId": 1860, "index": "E", "name": "Fast Travel Text Editor", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1624}, {"contestId": 1860, "index": "D", "name": "Balanced String", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"], "solvedCount": 3335}, {"contestId": 1860, "index": "C", "name": "Game on Permutation", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "dp", "games", "greedy"], "solvedCount": 14777}, {"contestId": 1860, "index": "B", "name": "Fancy Coins", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "brute force", "greedy", "math"], "solvedCount": 18205}, {"contestId": 1860, "index": "A", "name": "Not a Substring", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "strings"], "solvedCount": 22896}, {"contestId": 1859, "index": "F", "name": "Teleportation in Byteland", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "shortest paths", "trees"], "solvedCount": 434}, {"contestId": 1859, "index": "E", "name": "Maximum Monogonosity", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["brute force", "dp", "math"], "solvedCount": 1962}, {"contestId": 1859, "index": "D", "name": "Andrey and Escape from Capygrad", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "data structures", "dp", "dsu", "greedy", "sortings"], "solvedCount": 7623}, {"contestId": 1859, "index": "C", "name": "Another Permutation Problem", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["brute force", "dp", "greedy", "math"], "solvedCount": 18065}, {"contestId": 1859, "index": "B", "name": "Olya and Game with Arrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 35352}, {"contestId": 1859, "index": "A", "name": "United We Stand", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 42983}, {"contestId": 1858, "index": "E2", "name": "Rollbacks (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["data structures", "interactive", "trees"], "solvedCount": 1157}, {"contestId": 1858, "index": "E1", "name": "Rollbacks (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["brute force", "data structures", "dfs and similar", "trees"], "solvedCount": 1433}, {"contestId": 1858, "index": "D", "name": "Trees and Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 3050}, {"contestId": 1858, "index": "C", "name": "Yet Another Permutation Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 24700}, {"contestId": 1858, "index": "B", "name": "The Walkway", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "dp", "greedy", "math", "number theory"], "solvedCount": 12389}, {"contestId": 1858, "index": "A", "name": "Buttons", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "greedy", "math"], "solvedCount": 51571}, {"contestId": 1857, "index": "G", "name": "Counting Graphs", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "divide and conquer", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 5035}, {"contestId": 1857, "index": "F", "name": "Sum and Product", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures", "math"], "solvedCount": 13391}, {"contestId": 1857, "index": "E", "name": "Power of Points", "type": "PROGRAMMING", "rating": 1500, "tags": ["math", "sortings"], "solvedCount": 14063}, {"contestId": 1857, "index": "D", "name": "Strong Vertices", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "sortings", "trees"], "solvedCount": 24555}, {"contestId": 1857, "index": "C", "name": "Assembly via Minimums", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 34075}, {"contestId": 1857, "index": "B", "name": "Maximum Rounding", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation", "math"], "solvedCount": 24077}, {"contestId": 1857, "index": "A", "name": "Array Coloring", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 62565}, {"contestId": 1856, "index": "E2", "name": "PermuTree (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["bitmasks", "dfs and similar", "dp", "fft", "greedy", "implementation", "math", "trees"], "solvedCount": 1617}, {"contestId": 1856, "index": "E1", "name": "PermuTree (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 5983}, {"contestId": 1856, "index": "D", "name": "More Wrong", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["divide and conquer", "interactive"], "solvedCount": 3551}, {"contestId": 1856, "index": "C", "name": "To Become Max", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "dp"], "solvedCount": 15512}, {"contestId": 1856, "index": "B", "name": "Good Arrays", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 26205}, {"contestId": 1856, "index": "A", "name": "Tales of a Sort", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 27490}, {"contestId": 1855, "index": "B", "name": "Longest Divisors Interval", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "combinatorics", "greedy", "math", "number theory"], "solvedCount": 35608}, {"contestId": 1855, "index": "A", "name": "Dalton the Teacher", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 29108}, {"contestId": 1854, "index": "F", "name": "Mark and Spaceship", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["brute force", "dp"], "solvedCount": 134}, {"contestId": 1854, "index": "E", "name": "Game Bundles", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["brute force", "constructive algorithms", "dp", "greedy", "math"], "solvedCount": 492}, {"contestId": 1854, "index": "D", "name": "Michael and Hotel", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["binary search", "interactive", "trees"], "solvedCount": 601}, {"contestId": 1854, "index": "C", "name": "Expected Destruction", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 1666}, {"contestId": 1854, "index": "B", "name": "Earn or Unlock", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dp"], "solvedCount": 3928}, {"contestId": 1854, "index": "A2", "name": "Dual (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "math"], "solvedCount": 7563}, {"contestId": 1854, "index": "A1", "name": "Dual (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 15316}, {"contestId": 1853, "index": "B", "name": "Fibonaccharsis", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "brute force", "math"], "solvedCount": 18820}, {"contestId": 1853, "index": "A", "name": "Desorting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 43594}, {"contestId": 1852, "index": "F", "name": "Panda Meetups", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "dp", "flows"], "solvedCount": 140}, {"contestId": 1852, "index": "E", "name": "Rivalries", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 213}, {"contestId": 1852, "index": "D", "name": "Miriany and Matchstick", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 557}, {"contestId": 1852, "index": "C", "name": "Ina of the Mountain", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 1868}, {"contestId": 1852, "index": "B", "name": "Imbalanced Arrays", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "graphs", "greedy", "math", "sortings", "two pointers"], "solvedCount": 5104}, {"contestId": 1852, "index": "A", "name": "Ntarsis' Set", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "math", "number theory"], "solvedCount": 8728}, {"contestId": 1851, "index": "G", "name": "Vlad and the Mountains", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "dsu", "graphs", "implementation", "sortings", "trees", "two pointers"], "solvedCount": 3682}, {"contestId": 1851, "index": "F", "name": "Lisa and the Martians", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "greedy", "math", "strings", "trees"], "solvedCount": 6745}, {"contestId": 1851, "index": "E", "name": "Nastya and Potions", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "sortings"], "solvedCount": 12130}, {"contestId": 1851, "index": "D", "name": "Prefix Permutation Sums", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 16543}, {"contestId": 1851, "index": "C", "name": "Tiles Comeback", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy"], "solvedCount": 25019}, {"contestId": 1851, "index": "B", "name": "Parity Sort", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 31085}, {"contestId": 1851, "index": "A", "name": "Escalator Conversations", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 30742}, {"contestId": 1850, "index": "H", "name": "The Third Letter", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation"], "solvedCount": 9284}, {"contestId": 1850, "index": "G", "name": "The Morning Star", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "data structures", "geometry", "implementation", "math", "sortings"], "solvedCount": 14394}, {"contestId": 1850, "index": "F", "name": "We Were Both Children", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 22593}, {"contestId": 1850, "index": "E", "name": "Cardboard for Pictures", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "geometry", "implementation", "math"], "solvedCount": 29287}, {"contestId": 1850, "index": "D", "name": "Balanced Round", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "greedy", "implementation", "sortings"], "solvedCount": 48876}, {"contestId": 1850, "index": "C", "name": "Word on the Paper", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 49685}, {"contestId": 1850, "index": "B", "name": "Ten Words of Wisdom", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 47366}, {"contestId": 1850, "index": "A", "name": "To My Critics", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 66316}, {"contestId": 1849, "index": "F", "name": "XOR Partition", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "greedy", "trees"], "solvedCount": 788}, {"contestId": 1849, "index": "E", "name": "Max to the Right of Min", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "two pointers"], "solvedCount": 2004}, {"contestId": 1849, "index": "D", "name": "Array Painting", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "greedy", "two pointers"], "solvedCount": 9674}, {"contestId": 1849, "index": "C", "name": "Binary String Copying", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "data structures", "hashing", "strings"], "solvedCount": 11784}, {"contestId": 1849, "index": "B", "name": "Monsters", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math", "sortings"], "solvedCount": 35055}, {"contestId": 1849, "index": "A", "name": "Morning Sandwich", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 31181}, {"contestId": 1848, "index": "F", "name": "Vika and Wiki", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["binary search", "bitmasks", "combinatorics", "divide and conquer", "dp", "math"], "solvedCount": 1817}, {"contestId": 1848, "index": "E", "name": "Vika and Stone Skipping", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 853}, {"contestId": 1848, "index": "D", "name": "Vika and Bonuses", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "brute force", "math", "ternary search"], "solvedCount": 2836}, {"contestId": 1848, "index": "C", "name": "Vika and Price Tags", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["math", "number theory"], "solvedCount": 6897}, {"contestId": 1848, "index": "B", "name": "Vika and the Bridge", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "solvedCount": 19714}, {"contestId": 1848, "index": "A", "name": "Vika and Her Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["games", "math"], "solvedCount": 17896}, {"contestId": 1847, "index": "F", "name": "The Boss's Identity", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "bitmasks", "data structures", "dfs and similar", "greedy", "math", "sortings"], "solvedCount": 971}, {"contestId": 1847, "index": "E", "name": "Triangle Platinum?", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["brute force", "combinatorics", "implementation", "interactive", "math", "probabilities"], "solvedCount": 355}, {"contestId": 1847, "index": "D", "name": "Professor Higashikata", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dsu", "greedy", "implementation", "strings"], "solvedCount": 4073}, {"contestId": 1847, "index": "C", "name": "Vampiric Powers, anyone?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["bitmasks", "brute force", "dp", "greedy"], "solvedCount": 14055}, {"contestId": 1847, "index": "B", "name": "Hamon Odyssey", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["bitmasks", "greedy", "two pointers"], "solvedCount": 21449}, {"contestId": 1847, "index": "A", "name": "The Man who became a God ", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 22557}, {"contestId": 1846, "index": "G", "name": "Rudolf and CodeVid-23", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 5035}, {"contestId": 1846, "index": "F", "name": "Rudolph and Mimic", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "implementation", "interactive"], "solvedCount": 3496}, {"contestId": 1846, "index": "E2", "name": "Rudolf and Snowflakes (hard version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "brute force", "implementation", "math"], "solvedCount": 7882}, {"contestId": 1846, "index": "E1", "name": "Rudolf and Snowflakes (simple version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation", "math"], "solvedCount": 21116}, {"contestId": 1846, "index": "D", "name": "Rudolph and Christmas Tree", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "geometry", "math"], "solvedCount": 21298}, {"contestId": 1846, "index": "C", "name": "Rudolf and the Another Competition", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings"], "solvedCount": 20666}, {"contestId": 1846, "index": "B", "name": "Rudolph and Tic-Tac-Toe", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 28195}, {"contestId": 1846, "index": "A", "name": "Rudolph and Cut the Rope ", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 33856}, {"contestId": 1845, "index": "F", "name": "Swimmers in the Pool", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "fft", "math", "number theory"], "solvedCount": 410}, {"contestId": 1845, "index": "E", "name": "Boxes and Balls", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "implementation", "math"], "solvedCount": 1466}, {"contestId": 1845, "index": "D", "name": "Rating System", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "math", "two pointers"], "solvedCount": 8577}, {"contestId": 1845, "index": "C", "name": "Strong Password", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "dp", "greedy", "strings"], "solvedCount": 15784}, {"contestId": 1845, "index": "B", "name": "Come Together", "type": "PROGRAMMING", "rating": 900, "tags": ["geometry", "implementation", "math"], "solvedCount": 22887}, {"contestId": 1845, "index": "A", "name": "Forbidden Integer", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 36567}, {"contestId": 1844, "index": "H", "name": "Multiple of Three Cycles", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["combinatorics", "data structures", "dp", "dsu", "math"], "solvedCount": 204}, {"contestId": 1844, "index": "G", "name": "Tree Weights", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "implementation", "math", "matrices", "number theory", "trees"], "solvedCount": 1086}, {"contestId": 1844, "index": "F2", "name": "Min Cost Permutation (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math", "sortings"], "solvedCount": 457}, {"contestId": 1844, "index": "F1", "name": "Min Cost Permutation (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 869}, {"contestId": 1844, "index": "E", "name": "Great Grids", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 2049}, {"contestId": 1844, "index": "D", "name": "Row Major", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "number theory", "strings"], "solvedCount": 13370}, {"contestId": 1844, "index": "C", "name": "Particles", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["dp", "greedy", "implementation", "math"], "solvedCount": 17046}, {"contestId": 1844, "index": "B", "name": "Permutations & Primes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 19410}, {"contestId": 1844, "index": "A", "name": "Subtraction Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "games"], "solvedCount": 25466}, {"contestId": 1843, "index": "F2", "name": "Omsk Metro (hard version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "math", "trees"], "solvedCount": 1874}, {"contestId": 1843, "index": "F1", "name": "Omsk Metro (simple version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "solvedCount": 5920}, {"contestId": 1843, "index": "E", "name": "Tracking Segments", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "data structures", "two pointers"], "solvedCount": 15347}, {"contestId": 1843, "index": "D", "name": "Apple Tree", "type": "PROGRAMMING", "rating": 1200, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "solvedCount": 20122}, {"contestId": 1843, "index": "C", "name": "Sum in Binary Tree", "type": "PROGRAMMING", "rating": 800, "tags": ["bitmasks", "combinatorics", "math", "trees"], "solvedCount": 37043}, {"contestId": 1843, "index": "B", "name": "Long Long", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math", "two pointers"], "solvedCount": 30776}, {"contestId": 1843, "index": "A", "name": "Sasha and Array Coloring", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 36124}, {"contestId": 1842, "index": "I", "name": "Tenzing and Necklace", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["divide and conquer", "dp", "greedy"], "solvedCount": 159}, {"contestId": 1842, "index": "H", "name": "Tenzing and Random Real Numbers", "type": "PROGRAMMING", "points": 3750.0, "rating": 3000, "tags": ["bitmasks", "dp", "graphs", "math", "probabilities"], "solvedCount": 792}, {"contestId": 1842, "index": "G", "name": "Tenzing and Random Operations", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 1284}, {"contestId": 1842, "index": "F", "name": "Tenzing and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "greedy", "shortest paths", "sortings", "trees"], "solvedCount": 1618}, {"contestId": 1842, "index": "E", "name": "Tenzing and Triangle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dp", "geometry", "greedy", "math"], "solvedCount": 1766}, {"contestId": 1842, "index": "D", "name": "Tenzing and His Animal Friends ", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 4445}, {"contestId": 1842, "index": "C", "name": "Tenzing and Balls", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp"], "solvedCount": 15056}, {"contestId": 1842, "index": "B", "name": "Tenzing and Books", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 21191}, {"contestId": 1842, "index": "A", "name": "Tenzing and Tsondu", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["games", "math"], "solvedCount": 20479}, {"contestId": 1841, "index": "F", "name": "Monocarp and a Strategic Game", "type": "PROGRAMMING", "rating": 2700, "tags": ["geometry", "sortings", "two pointers"], "solvedCount": 569}, {"contestId": 1841, "index": "E", "name": "Fill the Matrix", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "greedy", "math"], "solvedCount": 2230}, {"contestId": 1841, "index": "D", "name": "Pairs of Segments", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "greedy", "sortings", "two pointers"], "solvedCount": 4926}, {"contestId": 1841, "index": "C", "name": "Ranom Numbers", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "dp", "greedy", "math", "strings"], "solvedCount": 8637}, {"contestId": 1841, "index": "B", "name": "Keep it Beautiful", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 23061}, {"contestId": 1841, "index": "A", "name": "Game with Board", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "games"], "solvedCount": 25518}, {"contestId": 1840, "index": "G2", "name": "In Search of Truth (Hard Version)", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "interactive", "math", "meet-in-the-middle", "probabilities"], "solvedCount": 1125}, {"contestId": 1840, "index": "G1", "name": "In Search of Truth (Easy Version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "interactive", "math", "meet-in-the-middle", "probabilities"], "solvedCount": 2629}, {"contestId": 1840, "index": "F", "name": "Railguns", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dfs and similar", "dp", "graphs"], "solvedCount": 2006}, {"contestId": 1840, "index": "E", "name": "Character Blocking", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "hashing", "implementation"], "solvedCount": 8878}, {"contestId": 1840, "index": "D", "name": "Wooden Toy Festival", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 15338}, {"contestId": 1840, "index": "C", "name": "Ski Resort", "type": "PROGRAMMING", "rating": 1000, "tags": ["combinatorics", "math", "two pointers"], "solvedCount": 37663}, {"contestId": 1840, "index": "B", "name": "Binary Cafe", "type": "PROGRAMMING", "rating": 1100, "tags": ["bitmasks", "combinatorics", "math"], "solvedCount": 23837}, {"contestId": 1840, "index": "A", "name": "Cipher Shifer", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings", "two pointers"], "solvedCount": 36464}, {"contestId": 1839, "index": "E", "name": "Decreasing Game", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "interactive"], "solvedCount": 1385}, {"contestId": 1839, "index": "D", "name": "Ball Sorting", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "dp", "sortings"], "solvedCount": 2549}, {"contestId": 1839, "index": "C", "name": "Insert Zero and Invert Prefix", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms"], "solvedCount": 12962}, {"contestId": 1839, "index": "B", "name": "Lamps", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 16111}, {"contestId": 1839, "index": "A", "name": "The Good Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math"], "solvedCount": 18039}, {"contestId": 1838, "index": "F", "name": "Stuck Conveyor", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 355}, {"contestId": 1838, "index": "E", "name": "Count Supersequences", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1669}, {"contestId": 1838, "index": "D", "name": "Bracket Walk", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "greedy", "strings"], "solvedCount": 3530}, {"contestId": 1838, "index": "C", "name": "No Prime Differences", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 16321}, {"contestId": 1838, "index": "B", "name": "Minimize Permutation Subarrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 17289}, {"contestId": 1838, "index": "A", "name": "Blackboard List", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 22248}, {"contestId": 1837, "index": "F", "name": "Editorial for Two", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "greedy", "implementation"], "solvedCount": 2467}, {"contestId": 1837, "index": "E", "name": "Playoff Fixing", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "trees"], "solvedCount": 2419}, {"contestId": 1837, "index": "D", "name": "Bracket Coloring", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18484}, {"contestId": 1837, "index": "C", "name": "Best Binary String", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 23721}, {"contestId": 1837, "index": "B", "name": "Comparison String", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy"], "solvedCount": 39555}, {"contestId": 1837, "index": "A", "name": "Grasshopper on a Line", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 43098}, {"contestId": 1836, "index": "B", "name": "Astrophysicists", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 13275}, {"contestId": 1836, "index": "A", "name": "Destroyer", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 21099}, {"contestId": 1835, "index": "F", "name": "Good Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["bitmasks", "dfs and similar", "graph matchings", "graphs", "implementation"], "solvedCount": 212}, {"contestId": 1835, "index": "E", "name": "Old Mobile", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["combinatorics", "dp", "probabilities"], "solvedCount": 251}, {"contestId": 1835, "index": "D", "name": "Doctor's Brown Hypothesis", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["dfs and similar", "graphs", "math", "number theory"], "solvedCount": 601}, {"contestId": 1835, "index": "C", "name": "Twin Clusters", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "probabilities"], "solvedCount": 1094}, {"contestId": 1835, "index": "B", "name": "Lottery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["binary search", "brute force", "greedy", "math", "two pointers"], "solvedCount": 1033}, {"contestId": 1835, "index": "A", "name": "k-th equality", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "implementation", "math"], "solvedCount": 8453}, {"contestId": 1834, "index": "F", "name": "Typewriter", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "math"], "solvedCount": 590}, {"contestId": 1834, "index": "E", "name": "MEX of LCM", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "data structures", "implementation", "math", "number theory"], "solvedCount": 2521}, {"contestId": 1834, "index": "D", "name": "Survey in Class", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 5158}, {"contestId": 1834, "index": "C", "name": "Game with Reversing", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["games", "greedy", "math", "strings"], "solvedCount": 14383}, {"contestId": 1834, "index": "B", "name": "Maximum Strength", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 16340}, {"contestId": 1834, "index": "A", "name": "Unit Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 34489}, {"contestId": 1833, "index": "G", "name": "Ksyusha and Chinchilla", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "solvedCount": 5997}, {"contestId": 1833, "index": "F", "name": "Ira and Flamenco", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "constructive algorithms", "data structures", "implementation", "math", "sortings", "two pointers"], "solvedCount": 8959}, {"contestId": 1833, "index": "E", "name": "Round Dance", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "shortest paths"], "solvedCount": 15376}, {"contestId": 1833, "index": "D", "name": "Flipper", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 14485}, {"contestId": 1833, "index": "C", "name": "Vlad Building Beautiful Array", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 27279}, {"contestId": 1833, "index": "B", "name": "Restore the Weather", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "sortings"], "solvedCount": 28551}, {"contestId": 1833, "index": "A", "name": "Musical Puzzle", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 34209}, {"contestId": 1832, "index": "F", "name": "Zombies", "type": "PROGRAMMING", "rating": 3200, "tags": ["binary search", "dp"], "solvedCount": 327}, {"contestId": 1832, "index": "E", "name": "Combinatorics Problem", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "combinatorics", "dp"], "solvedCount": 2382}, {"contestId": 1832, "index": "D2", "name": "Red-Blue Operations (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 2135}, {"contestId": 1832, "index": "D1", "name": "Red-Blue Operations (Easy Version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "greedy", "implementation", "math"], "solvedCount": 3167}, {"contestId": 1832, "index": "C", "name": "Contrast Value", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 27562}, {"contestId": 1832, "index": "B", "name": "Maximum Sum", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "sortings", "two pointers"], "solvedCount": 28654}, {"contestId": 1832, "index": "A", "name": "New Palindrome", "type": "PROGRAMMING", "rating": 800, "tags": ["strings"], "solvedCount": 27458}, {"contestId": 1831, "index": "B", "name": "Array merging", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 27806}, {"contestId": 1831, "index": "A", "name": "Twin Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 36024}, {"contestId": 1830, "index": "F", "name": "The Third Grace", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["data structures", "dp"], "solvedCount": 308}, {"contestId": 1830, "index": "E", "name": "Bully Sort", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "math"], "solvedCount": 284}, {"contestId": 1830, "index": "D", "name": "Mex Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "dp", "trees"], "solvedCount": 816}, {"contestId": 1830, "index": "C", "name": "Hyperregular Bracket Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["combinatorics", "greedy", "hashing", "math", "number theory", "sortings"], "solvedCount": 1956}, {"contestId": 1830, "index": "B", "name": "The BOSS Can Count Pairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "math"], "solvedCount": 5429}, {"contestId": 1830, "index": "A", "name": "Copil Copac Draws Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 17045}, {"contestId": 1829, "index": "H", "name": "Don't Blame Me", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "combinatorics", "dp", "math"], "solvedCount": 9290}, {"contestId": 1829, "index": "G", "name": "Hits Different", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "implementation", "math"], "solvedCount": 12792}, {"contestId": 1829, "index": "F", "name": "Forever Winter", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "graphs", "math"], "solvedCount": 20135}, {"contestId": 1829, "index": "E", "name": "The Lakes", "type": "PROGRAMMING", "rating": 1100, "tags": ["dfs and similar", "dsu", "graphs", "implementation"], "solvedCount": 23660}, {"contestId": 1829, "index": "D", "name": "Gold Rush", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dfs and similar", "dp", "implementation"], "solvedCount": 30433}, {"contestId": 1829, "index": "C", "name": "Mr. Perfectly Fine", "type": "PROGRAMMING", "rating": 800, "tags": ["bitmasks", "greedy", "implementation"], "solvedCount": 31048}, {"contestId": 1829, "index": "B", "name": "Blank Space", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 61711}, {"contestId": 1829, "index": "A", "name": "Love Story", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 61778}, {"contestId": 1828, "index": "B", "name": "Permutation Swap", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["math", "number theory"], "solvedCount": 31142}, {"contestId": 1828, "index": "A", "name": "Divisible Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 24727}, {"contestId": 1827, "index": "F", "name": "Copium Permutation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 126}, {"contestId": 1827, "index": "E", "name": "Bus Routes", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 511}, {"contestId": 1827, "index": "D", "name": "Two Centroids", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 839}, {"contestId": 1827, "index": "C", "name": "Palindrome Partition", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "strings"], "solvedCount": 1518}, {"contestId": 1827, "index": "B2", "name": "Range Sorting (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy"], "solvedCount": 2116}, {"contestId": 1827, "index": "B1", "name": "Range Sorting (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["binary search", "dp", "dsu", "greedy", "trees", "two pointers"], "solvedCount": 4266}, {"contestId": 1827, "index": "A", "name": "Counting Orders", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["combinatorics", "math", "sortings", "two pointers"], "solvedCount": 23876}, {"contestId": 1826, "index": "F", "name": "Fading into Fog", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["geometry", "interactive", "math", "probabilities"], "solvedCount": 426}, {"contestId": 1826, "index": "E", "name": "Walk the Runway", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"], "solvedCount": 1803}, {"contestId": 1826, "index": "D", "name": "Running Miles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["brute force", "dp", "greedy"], "solvedCount": 12659}, {"contestId": 1826, "index": "C", "name": "Dreaming of Freedom", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy", "math", "number theory"], "solvedCount": 14875}, {"contestId": 1826, "index": "B", "name": "Lunatic Never Content", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math", "number theory"], "solvedCount": 22960}, {"contestId": 1826, "index": "A", "name": "Trust Nobody", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation", "sortings"], "solvedCount": 16510}, {"contestId": 1825, "index": "B", "name": "LuoTianyi and the Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 15651}, {"contestId": 1825, "index": "A", "name": "LuoTianyi and the Palindrome String", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 20392}, {"contestId": 1824, "index": "E", "name": "LuoTianyi and Cartridge", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 174}, {"contestId": 1824, "index": "D", "name": "LuoTianyi and the Function", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 565}, {"contestId": 1824, "index": "C", "name": "LuoTianyi and XOR-Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "dsu", "greedy", "trees"], "solvedCount": 1564}, {"contestId": 1824, "index": "B2", "name": "LuoTianyi and the Floating Islands (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "math", "probabilities", "trees"], "solvedCount": 3075}, {"contestId": 1824, "index": "B1", "name": "LuoTianyi and the Floating Islands (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["combinatorics", "math", "probabilities", "trees"], "solvedCount": 5374}, {"contestId": 1824, "index": "A", "name": "LuoTianyi and the Show", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 12117}, {"contestId": 1823, "index": "F", "name": "Random Walk", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "graphs", "math", "probabilities", "trees"], "solvedCount": 1114}, {"contestId": 1823, "index": "E", "name": "Removing Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "dp", "games", "graphs", "math"], "solvedCount": 1379}, {"contestId": 1823, "index": "D", "name": "Unique Palindromes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "math", "strings"], "solvedCount": 4168}, {"contestId": 1823, "index": "C", "name": "Strongly Composite", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["greedy", "math", "number theory"], "solvedCount": 13325}, {"contestId": 1823, "index": "B", "name": "Sort with Step", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "math", "sortings"], "solvedCount": 17387}, {"contestId": 1823, "index": "A", "name": "A-characteristic", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 16905}, {"contestId": 1822, "index": "G2", "name": "Magic Triples (Hard Version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "data structures", "math", "number theory"], "solvedCount": 2741}, {"contestId": 1822, "index": "G1", "name": "Magic Triples (Easy Version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "data structures", "math", "number theory"], "solvedCount": 8325}, {"contestId": 1822, "index": "F", "name": "Gardening Friends", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 7044}, {"contestId": 1822, "index": "E", "name": "Making Anti-Palindromes", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "math", "strings"], "solvedCount": 11724}, {"contestId": 1822, "index": "D", "name": "Super-Permutation", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 18128}, {"contestId": 1822, "index": "C", "name": "Bun Lover", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 24163}, {"contestId": 1822, "index": "B", "name": "Karina and Array", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math", "sortings"], "solvedCount": 26014}, {"contestId": 1822, "index": "A", "name": "TubeTube Feed", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 25516}, {"contestId": 1821, "index": "F", "name": "Timber", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 855}, {"contestId": 1821, "index": "E", "name": "Rearrange Brackets", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dp", "greedy", "sortings", "strings"], "solvedCount": 2555}, {"contestId": 1821, "index": "D", "name": "Black Cells", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "greedy", "math"], "solvedCount": 5350}, {"contestId": 1821, "index": "C", "name": "Tear It Apart", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation", "math", "strings"], "solvedCount": 15536}, {"contestId": 1821, "index": "B", "name": "Sort the Subarray", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy"], "solvedCount": 23424}, {"contestId": 1821, "index": "A", "name": "Matching", "type": "PROGRAMMING", "rating": 800, "tags": ["combinatorics", "math"], "solvedCount": 20674}, {"contestId": 1820, "index": "B", "name": "JoJo's Incredible Adventures", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math", "strings", "two pointers"], "solvedCount": 18776}, {"contestId": 1820, "index": "A", "name": "Yura's New Name", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 17329}, {"contestId": 1819, "index": "F", "name": "Willy-nilly, Crack, Into Release!", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 145}, {"contestId": 1819, "index": "E", "name": "Roads in E City", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["interactive", "math", "probabilities", "trees"], "solvedCount": 352}, {"contestId": 1819, "index": "D", "name": "Misha and Apples", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["brute force", "data structures", "dp", "two pointers"], "solvedCount": 789}, {"contestId": 1819, "index": "C", "name": "The Fox and the Complete Tree Traversal", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "implementation", "math", "trees"], "solvedCount": 1649}, {"contestId": 1819, "index": "B", "name": "The Butcher", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["geometry", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 3949}, {"contestId": 1819, "index": "A", "name": "Constructive Problem", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["brute force", "greedy"], "solvedCount": 13912}, {"contestId": 1818, "index": "B", "name": "Indivisible", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 16346}, {"contestId": 1818, "index": "A", "name": "Politics", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 13842}, {"contestId": 1817, "index": "F", "name": "Entangled Substrings", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["string suffix structures", "strings"], "solvedCount": 268}, {"contestId": 1817, "index": "E", "name": "Half-sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["brute force", "divide and conquer", "greedy"], "solvedCount": 313}, {"contestId": 1817, "index": "D", "name": "Toy Machine", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "games", "implementation"], "solvedCount": 964}, {"contestId": 1817, "index": "C", "name": "Similar Polynomials", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["combinatorics", "math"], "solvedCount": 1144}, {"contestId": 1817, "index": "B", "name": "Fish Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 4691}, {"contestId": 1817, "index": "A", "name": "Almost Increasing Subsequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 12244}, {"contestId": 1816, "index": "B", "name": "Grid Reconstruction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 16198}, {"contestId": 1816, "index": "A", "name": "Ian Visits Mary", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "geometry", "number theory"], "solvedCount": 18465}, {"contestId": 1815, "index": "F", "name": "OH NO1 (-2-3-4)", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 303}, {"contestId": 1815, "index": "E", "name": "Bosco and Particle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["dp", "math", "number theory", "strings"], "solvedCount": 379}, {"contestId": 1815, "index": "D", "name": "XOR Counting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "combinatorics", "dp", "math"], "solvedCount": 1315}, {"contestId": 1815, "index": "C", "name": "Between", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 2184}, {"contestId": 1815, "index": "B", "name": "Sum Graph", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "graphs", "implementation", "interactive", "shortest paths", "trees"], "solvedCount": 3340}, {"contestId": 1815, "index": "A", "name": "Ian and Array Sorting", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "math"], "solvedCount": 15256}, {"contestId": 1814, "index": "F", "name": "Communication Towers", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "divide and conquer", "dsu"], "solvedCount": 796}, {"contestId": 1814, "index": "E", "name": "Chain Chips", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "matrices"], "solvedCount": 1559}, {"contestId": 1814, "index": "D", "name": "Balancing Weapons", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "brute force", "data structures", "math", "two pointers"], "solvedCount": 955}, {"contestId": 1814, "index": "C", "name": "Search in Parallel", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 11942}, {"contestId": 1814, "index": "B", "name": "Long Legs", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "math"], "solvedCount": 10909}, {"contestId": 1814, "index": "A", "name": "Coins", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 39589}, {"contestId": 1812, "index": "J", "name": "Unmysterious Language", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "strings"], "solvedCount": 6176}, {"contestId": 1812, "index": "I", "name": "Mountain Climber", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 280}, {"contestId": 1812, "index": "H", "name": "Expected Twist", "type": "PROGRAMMING", "tags": ["*special", "interactive"], "solvedCount": 159}, {"contestId": 1812, "index": "G", "name": "Colour Vision", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 586}, {"contestId": 1812, "index": "F", "name": "Factorization", "type": "PROGRAMMING", "tags": ["*special", "number theory"], "solvedCount": 1303}, {"contestId": 1812, "index": "E", "name": "Not a Geometry Problem", "type": "PROGRAMMING", "tags": ["*special", "*special", "constructive algorithms", "geometry", "math"], "solvedCount": 4196}, {"contestId": 1812, "index": "D", "name": "Trivial Conjecture", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "math", "number theory"], "solvedCount": 4807}, {"contestId": 1812, "index": "C", "name": "Digits", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 1320}, {"contestId": 1812, "index": "B", "name": "Was it Rated?", "type": "PROGRAMMING", "tags": ["*special", "*special", "*special", "brute force", "implementation"], "solvedCount": 5945}, {"contestId": 1812, "index": "A", "name": "Are You a Robot?", "type": "PROGRAMMING", "tags": ["*special", "*special", "*special", "expression parsing", "strings"], "solvedCount": 13913}, {"contestId": 1811, "index": "G2", "name": "Vlad and the Nice Paths (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "combinatorics", "data structures", "dp", "math", "two pointers"], "solvedCount": 1964}, {"contestId": 1811, "index": "G1", "name": "Vlad and the Nice Paths (easy version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 2297}, {"contestId": 1811, "index": "F", "name": "Is It Flower?", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "graphs", "implementation"], "solvedCount": 2021}, {"contestId": 1811, "index": "E", "name": "Living Sequence", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "dp", "math", "number theory"], "solvedCount": 13667}, {"contestId": 1811, "index": "D", "name": "Umka and a Long Flight", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 8290}, {"contestId": 1811, "index": "C", "name": "Restore the Array", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 21543}, {"contestId": 1811, "index": "B", "name": "Conveyor Belts", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 21739}, {"contestId": 1811, "index": "A", "name": "Insert Digit", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math", "strings"], "solvedCount": 33505}, {"contestId": 1810, "index": "H", "name": "Last Number", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["combinatorics", "math"], "solvedCount": 159}, {"contestId": 1810, "index": "G", "name": "The Maximum Prefix", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp"], "solvedCount": 882}, {"contestId": 1810, "index": "F", "name": "M-tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "math", "sortings", "trees"], "solvedCount": 628}, {"contestId": 1810, "index": "E", "name": "Monsters", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 3595}, {"contestId": 1810, "index": "D", "name": "Climbing the Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["binary search", "math"], "solvedCount": 8108}, {"contestId": 1810, "index": "C", "name": "Make It Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 15815}, {"contestId": 1810, "index": "B", "name": "Candies", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 18320}, {"contestId": 1810, "index": "A", "name": "Beautiful Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy"], "solvedCount": 21503}, {"contestId": 1809, "index": "G", "name": "Prediction", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "dp", "math"], "solvedCount": 489}, {"contestId": 1809, "index": "F", "name": "Traveling in Berland", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "graphs", "greedy", "implementation"], "solvedCount": 847}, {"contestId": 1809, "index": "E", "name": "Two Tanks", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dp", "implementation", "math"], "solvedCount": 980}, {"contestId": 1809, "index": "D", "name": "Binary String Sorting", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 6945}, {"contestId": 1809, "index": "C", "name": "Sum on Subarrays", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 14367}, {"contestId": 1809, "index": "B", "name": "Points on Plane", "type": "PROGRAMMING", "rating": 1000, "tags": ["binary search", "greedy", "math"], "solvedCount": 21458}, {"contestId": 1809, "index": "A", "name": "Garland", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 24705}, {"contestId": 1808, "index": "E3", "name": "Minibuses on Venus (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2800, "tags": ["brute force", "combinatorics", "dp", "math"], "solvedCount": 499}, {"contestId": 1808, "index": "E2", "name": "Minibuses on Venus (medium version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["combinatorics", "divide and conquer", "dp", "matrices"], "solvedCount": 771}, {"contestId": 1808, "index": "E1", "name": "Minibuses on Venus (easy version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 1487}, {"contestId": 1808, "index": "D", "name": "Petya, Petya, Petr, and Palindromes", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "brute force", "data structures", "two pointers"], "solvedCount": 2546}, {"contestId": 1808, "index": "C", "name": "Unlucky Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 4132}, {"contestId": 1808, "index": "B", "name": "Playing in a Casino", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math", "sortings"], "solvedCount": 23376}, {"contestId": 1808, "index": "A", "name": "Lucky Numbers", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 19739}, {"contestId": 1807, "index": "G2", "name": "Subsequence Addition (Hard Version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["bitmasks", "dp", "greedy", "implementation", "sortings"], "solvedCount": 23661}, {"contestId": 1807, "index": "G1", "name": "Subsequence Addition (Easy Version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 21030}, {"contestId": 1807, "index": "F", "name": "Bouncy Ball", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dfs and similar", "implementation"], "solvedCount": 6967}, {"contestId": 1807, "index": "E", "name": "Interview", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "implementation", "interactive"], "solvedCount": 15064}, {"contestId": 1807, "index": "D", "name": "Odd Queries", "type": "PROGRAMMING", "rating": 900, "tags": ["data structures", "implementation"], "solvedCount": 44475}, {"contestId": 1807, "index": "C", "name": "Find and Replace", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "strings"], "solvedCount": 32724}, {"contestId": 1807, "index": "B", "name": "Grab the Candies", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 46384}, {"contestId": 1807, "index": "A", "name": "Plus or Minus", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 74743}, {"contestId": 1806, "index": "F2", "name": "GCD Master (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["greedy", "math", "sortings"], "solvedCount": 398}, {"contestId": 1806, "index": "F1", "name": "GCD Master (easy version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["greedy", "math", "number theory", "sortings"], "solvedCount": 429}, {"contestId": 1806, "index": "E", "name": "Tree Master", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["brute force", "data structures", "dfs and similar", "trees"], "solvedCount": 3157}, {"contestId": 1806, "index": "D", "name": "DSU Master", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["combinatorics", "dp", "dsu", "math"], "solvedCount": 1033}, {"contestId": 1806, "index": "C", "name": "Sequence Master", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 8278}, {"contestId": 1806, "index": "B", "name": "Mex Master", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19104}, {"contestId": 1806, "index": "A", "name": "Walking Master", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "greedy", "math"], "solvedCount": 33635}, {"contestId": 1805, "index": "F2", "name": "Survival of the Weakest (hard version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["greedy", "math", "sortings", "two pointers"], "solvedCount": 407}, {"contestId": 1805, "index": "F1", "name": "Survival of the Weakest (easy version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["binary search", "brute force", "implementation", "math", "sortings"], "solvedCount": 1131}, {"contestId": 1805, "index": "E", "name": "There Should Be a Lot of Maximums", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "trees", "two pointers"], "solvedCount": 1778}, {"contestId": 1805, "index": "D", "name": "A Wide, Wide Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 7826}, {"contestId": 1805, "index": "C", "name": "Place for a Selfie", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "data structures", "geometry", "math"], "solvedCount": 13582}, {"contestId": 1805, "index": "B", "name": "The String Has a Target", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 19349}, {"contestId": 1805, "index": "A", "name": "We Need the Zero", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "brute force"], "solvedCount": 32452}, {"contestId": 1804, "index": "H", "name": "Code Lock", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["bitmasks", "dp"], "solvedCount": 222}, {"contestId": 1804, "index": "G", "name": "Flow Control", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "dsu", "implementation"], "solvedCount": 219}, {"contestId": 1804, "index": "F", "name": "Approximate Diameter", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "divide and conquer", "graphs", "shortest paths"], "solvedCount": 1077}, {"contestId": 1804, "index": "E", "name": "Routing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs"], "solvedCount": 1602}, {"contestId": 1804, "index": "D", "name": "Accommodation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 4983}, {"contestId": 1804, "index": "C", "name": "Pull Your Luck", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 13099}, {"contestId": 1804, "index": "B", "name": "Vaccination", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "implementation"], "solvedCount": 15027}, {"contestId": 1804, "index": "A", "name": "Lame King", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 18385}, {"contestId": 1802, "index": "B", "name": "Settlement of Guinea Pigs", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["greedy", "implementation", "math"], "solvedCount": 14147}, {"contestId": 1802, "index": "A", "name": "Likes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 16305}, {"contestId": 1801, "index": "G", "name": "A task for substrings", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "strings"], "solvedCount": 493}, {"contestId": 1801, "index": "F", "name": "Another n-dimensional chocolate bar", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["dp", "math", "meet-in-the-middle", "number theory"], "solvedCount": 689}, {"contestId": 1801, "index": "E", "name": "Gasoline prices", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "hashing", "trees"], "solvedCount": 565}, {"contestId": 1801, "index": "D", "name": "The way home", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "data structures", "dp", "graphs", "greedy", "shortest paths", "sortings"], "solvedCount": 2593}, {"contestId": 1801, "index": "C", "name": "Music Festival", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "greedy", "sortings"], "solvedCount": 3832}, {"contestId": 1801, "index": "B", "name": "Buying gifts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 7051}, {"contestId": 1801, "index": "A", "name": "The Very Beautiful Blanket", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 9375}, {"contestId": 1800, "index": "G", "name": "Symmetree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "hashing", "implementation", "trees"], "solvedCount": 2374}, {"contestId": 1800, "index": "F", "name": "Dasha and Nightmares", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "hashing", "meet-in-the-middle", "strings"], "solvedCount": 4320}, {"contestId": 1800, "index": "E2", "name": "Unforgivable Curse (hard version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "strings"], "solvedCount": 14411}, {"contestId": 1800, "index": "E1", "name": "Unforgivable Curse (easy version)", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "strings"], "solvedCount": 14550}, {"contestId": 1800, "index": "D", "name": "Remove Two Letters", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "greedy", "hashing", "strings"], "solvedCount": 27173}, {"contestId": 1800, "index": "C2", "name": "Powering the Hero (hard version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy"], "solvedCount": 25163}, {"contestId": 1800, "index": "C1", "name": "Powering the Hero (easy version)", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "greedy"], "solvedCount": 25793}, {"contestId": 1800, "index": "B", "name": "Count the Number of Pairs", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "strings"], "solvedCount": 27310}, {"contestId": 1800, "index": "A", "name": "Is It a Cat?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 34687}, {"contestId": 1799, "index": "H", "name": "Tree Cutting", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["bitmasks", "dfs and similar", "dp"], "solvedCount": 361}, {"contestId": 1799, "index": "G", "name": "Count Voting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"], "solvedCount": 906}, {"contestId": 1799, "index": "F", "name": "Halve or Subtract", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "brute force", "dp", "greedy", "sortings"], "solvedCount": 958}, {"contestId": 1799, "index": "E", "name": "City Union", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "dsu", "geometry", "greedy", "implementation", "math"], "solvedCount": 1335}, {"contestId": 1799, "index": "D2", "name": "Hot Start Up (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 2806}, {"contestId": 1799, "index": "D1", "name": "Hot Start Up (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"], "solvedCount": 5253}, {"contestId": 1799, "index": "C", "name": "Double Lexicographically Minimum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "strings"], "solvedCount": 6505}, {"contestId": 1799, "index": "B", "name": "Equalize by Divide", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 12208}, {"contestId": 1799, "index": "A", "name": "Recent Actions", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["data structures", "greedy", "implementation", "math"], "solvedCount": 12040}, {"contestId": 1798, "index": "F", "name": "Gifts from Grandfather Ahmed", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "math", "number theory"], "solvedCount": 561}, {"contestId": 1798, "index": "E", "name": "Multitest Generator", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "dp"], "solvedCount": 1773}, {"contestId": 1798, "index": "D", "name": "Shocking Arrangement", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 12087}, {"contestId": 1798, "index": "C", "name": "Candy Store", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["greedy", "math", "number theory"], "solvedCount": 8864}, {"contestId": 1798, "index": "B", "name": "Three Sevens", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 17955}, {"contestId": 1798, "index": "A", "name": "Showstopper", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 20748}, {"contestId": 1797, "index": "F", "name": "Li Hua and Path", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "trees"], "solvedCount": 396}, {"contestId": 1797, "index": "E", "name": "Li Hua and Array", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "data structures", "dsu", "math", "number theory", "two pointers"], "solvedCount": 1488}, {"contestId": 1797, "index": "D", "name": "Li Hua and Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 4353}, {"contestId": 1797, "index": "C", "name": "Li Hua and Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "interactive"], "solvedCount": 8506}, {"contestId": 1797, "index": "B", "name": "Li Hua and Pattern", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20271}, {"contestId": 1797, "index": "A", "name": "Li Hua and Maze", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "flows", "graphs", "greedy", "implementation"], "solvedCount": 18648}, {"contestId": 1796, "index": "F", "name": "Strange Triples", "type": "PROGRAMMING", "rating": 2900, "tags": ["brute force", "math", "number theory"], "solvedCount": 207}, {"contestId": 1796, "index": "E", "name": "Colored Subgraphs", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "games", "greedy", "trees"], "solvedCount": 878}, {"contestId": 1796, "index": "D", "name": "Maximum Subarray", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy", "two pointers"], "solvedCount": 4903}, {"contestId": 1796, "index": "C", "name": "Maximum Set", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "math"], "solvedCount": 11483}, {"contestId": 1796, "index": "B", "name": "Asterisk-Minor Template", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 17612}, {"contestId": 1796, "index": "A", "name": "Typical Interview Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 19372}, {"contestId": 1795, "index": "G", "name": "Removal Sequences", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "dfs and similar", "graphs"], "solvedCount": 746}, {"contestId": 1795, "index": "F", "name": "Blocking Chips", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1257}, {"contestId": 1795, "index": "E", "name": "Explosions?", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "math"], "solvedCount": 2243}, {"contestId": 1795, "index": "D", "name": "Triangle Coloring", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "math"], "solvedCount": 11242}, {"contestId": 1795, "index": "C", "name": "Tea Tasting", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 15318}, {"contestId": 1795, "index": "B", "name": "Ideal Point", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "geometry", "greedy"], "solvedCount": 23261}, {"contestId": 1795, "index": "A", "name": "Two Towers", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 24211}, {"contestId": 1794, "index": "E", "name": "Labeling the Tree with Distances", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dp", "greedy", "hashing", "implementation", "trees"], "solvedCount": 1383}, {"contestId": 1794, "index": "D", "name": "Counting Factorizations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "divide and conquer", "dp", "math", "number theory"], "solvedCount": 4054}, {"contestId": 1794, "index": "C", "name": "Scoring Subsequences", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["binary search", "greedy", "math", "two pointers"], "solvedCount": 18052}, {"contestId": 1794, "index": "B", "name": "Not Dividing", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 31011}, {"contestId": 1794, "index": "A", "name": "Prefix and Suffix Array", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["strings"], "solvedCount": 18292}, {"contestId": 1793, "index": "F", "name": "Rebrending", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["brute force", "data structures", "divide and conquer", "implementation"], "solvedCount": 1532}, {"contestId": 1793, "index": "E", "name": "Velepin and Marketing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 1208}, {"contestId": 1793, "index": "D", "name": "Moscow Gorillas", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "dp", "greedy", "implementation", "math", "two pointers"], "solvedCount": 6722}, {"contestId": 1793, "index": "C", "name": "Dora and Search", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "data structures", "two pointers"], "solvedCount": 26628}, {"contestId": 1793, "index": "B", "name": "Fedya and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 16687}, {"contestId": 1793, "index": "A", "name": "Yet Another Promotion", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 18555}, {"contestId": 1792, "index": "F2", "name": "Graph Coloring (hard version)", "type": "PROGRAMMING", "rating": 2900, "tags": ["brute force", "combinatorics", "divide and conquer", "dp", "fft", "graphs"], "solvedCount": 438}, {"contestId": 1792, "index": "F1", "name": "Graph Coloring (easy version)", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp", "graphs"], "solvedCount": 822}, {"contestId": 1792, "index": "E", "name": "Divisors and Table", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "dfs and similar", "dp", "number theory"], "solvedCount": 1522}, {"contestId": 1792, "index": "D", "name": "Fixed Prefix Permutations", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "bitmasks", "data structures", "hashing", "math", "sortings"], "solvedCount": 7185}, {"contestId": 1792, "index": "C", "name": "Min Max Sort", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "greedy", "math", "two pointers"], "solvedCount": 15747}, {"contestId": 1792, "index": "B", "name": "Stand-up Comedian", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "math"], "solvedCount": 23145}, {"contestId": 1792, "index": "A", "name": "GamingForces", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 29720}, {"contestId": 1791, "index": "G2", "name": "Teleporters (Hard Version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 5334}, {"contestId": 1791, "index": "G1", "name": "Teleporters (Easy Version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 28459}, {"contestId": 1791, "index": "F", "name": "Range Update Point Query", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "data structures"], "solvedCount": 14248}, {"contestId": 1791, "index": "E", "name": "Negatives and Positives", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "greedy", "sortings"], "solvedCount": 35089}, {"contestId": 1791, "index": "D", "name": "Distinct Split", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy", "strings"], "solvedCount": 40086}, {"contestId": 1791, "index": "C", "name": "Prepend and Append", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "two pointers"], "solvedCount": 59668}, {"contestId": 1791, "index": "B", "name": "Following Directions", "type": "PROGRAMMING", "rating": 800, "tags": ["geometry", "implementation"], "solvedCount": 49112}, {"contestId": 1791, "index": "A", "name": "Codeforces Checking", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 71983}, {"contestId": 1790, "index": "G", "name": "Tokens on Graph", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1244}, {"contestId": 1790, "index": "F", "name": "Timofey and Black-White Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dfs and similar", "divide and conquer", "graphs", "greedy", "math", "shortest paths", "trees"], "solvedCount": 3761}, {"contestId": 1790, "index": "E", "name": "Vlad and a Pair of Numbers", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 16553}, {"contestId": 1790, "index": "D", "name": "Matryoshkas", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 25847}, {"contestId": 1790, "index": "C", "name": "Premutation", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation", "math"], "solvedCount": 25902}, {"contestId": 1790, "index": "B", "name": "Taisia and Dice", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "greedy", "math"], "solvedCount": 28422}, {"contestId": 1790, "index": "A", "name": "Polycarp and the Day of Pi", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math", "strings"], "solvedCount": 39517}, {"contestId": 1789, "index": "F", "name": "Serval and Brain Power", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "dp", "greedy", "implementation", "strings"], "solvedCount": 904}, {"contestId": 1789, "index": "E", "name": "Serval and Music Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "dp", "implementation", "math", "number theory"], "solvedCount": 906}, {"contestId": 1789, "index": "D", "name": "Serval and Shift-Shift-Shift", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["bitmasks", "brute force", "constructive algorithms", "implementation"], "solvedCount": 1833}, {"contestId": 1789, "index": "C", "name": "Serval and Toxel's Arrays", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["combinatorics", "dp", "implementation", "math"], "solvedCount": 9562}, {"contestId": 1789, "index": "B", "name": "Serval and Inversion Magic", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["brute force", "implementation", "strings", "two pointers"], "solvedCount": 16881}, {"contestId": 1789, "index": "A", "name": "Serval and Mocha's Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math", "number theory"], "solvedCount": 25633}, {"contestId": 1788, "index": "F", "name": "XOR, Tree, and Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "trees"], "solvedCount": 968}, {"contestId": 1788, "index": "E", "name": "Sum Over Zero", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dfs and similar", "dp"], "solvedCount": 3022}, {"contestId": 1788, "index": "D", "name": "Moving Dots", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["binary search", "brute force", "combinatorics", "math", "two pointers"], "solvedCount": 4296}, {"contestId": 1788, "index": "C", "name": "Matching Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 18602}, {"contestId": 1788, "index": "B", "name": "Sum of Two Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "implementation", "math", "probabilities"], "solvedCount": 21483}, {"contestId": 1788, "index": "A", "name": "One and Two", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "math"], "solvedCount": 41162}, {"contestId": 1787, "index": "I", "name": "Treasure Hunt", "type": "PROGRAMMING", "points": 3750.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "two pointers"], "solvedCount": 333}, {"contestId": 1787, "index": "H", "name": "Codeforces Scoreboard", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["binary search", "data structures", "dp", "geometry"], "solvedCount": 307}, {"contestId": 1787, "index": "G", "name": "Colorful Tree Again", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["brute force", "data structures", "trees"], "solvedCount": 514}, {"contestId": 1787, "index": "F", "name": "Inverse Transformation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 760}, {"contestId": 1787, "index": "E", "name": "The Harmonization of XOR", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 2548}, {"contestId": 1787, "index": "D", "name": "Game on Axis", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "implementation"], "solvedCount": 3657}, {"contestId": 1787, "index": "C", "name": "Remove the Bracket", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["dp", "greedy", "math"], "solvedCount": 7790}, {"contestId": 1787, "index": "B", "name": "Number Factorization", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math", "number theory"], "solvedCount": 14301}, {"contestId": 1787, "index": "A", "name": "Exponential Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 19860}, {"contestId": 1786, "index": "B", "name": "Cake Assembly Line", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "sortings"], "solvedCount": 9534}, {"contestId": 1786, "index": "A2", "name": "Alternating Deck (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 11901}, {"contestId": 1786, "index": "A1", "name": "Non-alternating Deck (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 14452}, {"contestId": 1784, "index": "F", "name": "Minimums or Medians", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": [], "solvedCount": 304}, {"contestId": 1784, "index": "E", "name": "Infinite Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["brute force", "combinatorics", "dp", "games", "probabilities"], "solvedCount": 385}, {"contestId": 1784, "index": "D", "name": "Wooden Spoon", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp"], "solvedCount": 1167}, {"contestId": 1784, "index": "C", "name": "Monsters (hard version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["data structures", "greedy"], "solvedCount": 1807}, {"contestId": 1784, "index": "B", "name": "Letter Exchange", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 3551}, {"contestId": 1784, "index": "A", "name": "Monsters (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy"], "solvedCount": 16474}, {"contestId": 1783, "index": "G", "name": "Weighed Tree Radius", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 526}, {"contestId": 1783, "index": "F", "name": "Double Sort II", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "flows", "graph matchings", "graphs"], "solvedCount": 1209}, {"contestId": 1783, "index": "E", "name": "Game of the Year", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "data structures", "math", "number theory"], "solvedCount": 2303}, {"contestId": 1783, "index": "D", "name": "Different Arrays", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "implementation"], "solvedCount": 4958}, {"contestId": 1783, "index": "C", "name": "Yet Another Tournament", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 10180}, {"contestId": 1783, "index": "B", "name": "Matrix of Differences", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 18846}, {"contestId": 1783, "index": "A", "name": "Make it Beautiful", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math", "sortings"], "solvedCount": 38875}, {"contestId": 1781, "index": "H2", "name": "Window Signals (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3500, "tags": [], "solvedCount": 109}, {"contestId": 1781, "index": "H1", "name": "Window Signals (easy version)", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": [], "solvedCount": 135}, {"contestId": 1781, "index": "G", "name": "Diverse Coloring", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "trees"], "solvedCount": 255}, {"contestId": 1781, "index": "F", "name": "Bracket Insertion", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "trees"], "solvedCount": 1082}, {"contestId": 1781, "index": "E", "name": "Rectangle Shrinking", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["binary search", "brute force", "data structures", "greedy", "implementation", "two pointers"], "solvedCount": 1385}, {"contestId": 1781, "index": "D", "name": "Many Perfect Squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "math", "number theory"], "solvedCount": 5968}, {"contestId": 1781, "index": "C", "name": "Equal Frequencies", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings", "strings"], "solvedCount": 9022}, {"contestId": 1781, "index": "B", "name": "Going to the Cinema", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 14212}, {"contestId": 1781, "index": "A", "name": "Parallel Projection", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "math"], "solvedCount": 15515}, {"contestId": 1780, "index": "G", "name": "Delicious Dessert", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "dsu", "hashing", "math", "number theory", "string suffix structures"], "solvedCount": 841}, {"contestId": 1780, "index": "F", "name": "Three Chairs", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "number theory", "sortings"], "solvedCount": 1698}, {"contestId": 1780, "index": "E", "name": "Josuke and Complete Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "brute force", "data structures", "math", "number theory"], "solvedCount": 1631}, {"contestId": 1780, "index": "D", "name": "Bit Guessing Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "bitmasks", "constructive algorithms", "interactive"], "solvedCount": 5495}, {"contestId": 1780, "index": "B", "name": "GCD Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 22045}, {"contestId": 1780, "index": "A", "name": "Hayato and School", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 22339}, {"contestId": 1779, "index": "H", "name": "Olympic Team Building", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["brute force", "meet-in-the-middle"], "solvedCount": 162}, {"contestId": 1779, "index": "G", "name": "The Game of the Century", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 361}, {"contestId": 1779, "index": "F", "name": "Xorcerer's Stones", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "solvedCount": 1333}, {"contestId": 1779, "index": "E", "name": "Anya's Simultaneous Exhibition", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "graphs", "greedy", "interactive", "sortings"], "solvedCount": 1902}, {"contestId": 1779, "index": "D", "name": "Boris and His Amazing Haircut", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "dp", "dsu", "greedy", "sortings"], "solvedCount": 8599}, {"contestId": 1779, "index": "C", "name": "Least Prefix Sum", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 13621}, {"contestId": 1779, "index": "B", "name": "MKnez's ConstructiveForces Task", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 24609}, {"contestId": 1779, "index": "A", "name": "Hall of Fame", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 23773}, {"contestId": 1778, "index": "F", "name": "Maximizing Root", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "math", "number theory", "trees"], "solvedCount": 785}, {"contestId": 1778, "index": "E", "name": "The Tree Has Fallen!", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "dfs and similar", "math", "trees"], "solvedCount": 997}, {"contestId": 1778, "index": "D", "name": "Flexible String Revisit", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 3102}, {"contestId": 1778, "index": "C", "name": "Flexible String", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["bitmasks", "brute force", "strings"], "solvedCount": 9738}, {"contestId": 1778, "index": "B", "name": "The Forbidden Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "math"], "solvedCount": 13993}, {"contestId": 1778, "index": "A", "name": "Flip Flop Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 25210}, {"contestId": 1777, "index": "F", "name": "Comfortably Numb", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "strings", "trees"], "solvedCount": 1177}, {"contestId": 1777, "index": "E", "name": "Edge Reverse", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "dfs and similar", "graphs", "trees"], "solvedCount": 2094}, {"contestId": 1777, "index": "D", "name": "Score of a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "math", "probabilities", "trees"], "solvedCount": 4095}, {"contestId": 1777, "index": "C", "name": "Quiz Master", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "math", "number theory", "sortings", "two pointers"], "solvedCount": 10522}, {"contestId": 1777, "index": "B", "name": "Emordnilap", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["combinatorics", "greedy", "math"], "solvedCount": 18508}, {"contestId": 1777, "index": "A", "name": "Everybody Likes Good Arrays!", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 33780}, {"contestId": 1776, "index": "N", "name": "Count Permutations", "type": "PROGRAMMING", "rating": 3500, "tags": ["math"], "solvedCount": 92}, {"contestId": 1776, "index": "M", "name": "Parmigiana With Seafood", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "dp", "greedy", "trees"], "solvedCount": 470}, {"contestId": 1776, "index": "L", "name": "Controllers", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "math"], "solvedCount": 8813}, {"contestId": 1776, "index": "K", "name": "Uniform Chemistry", "type": "PROGRAMMING", "rating": 3200, "tags": ["dp", "math"], "solvedCount": 75}, {"contestId": 1776, "index": "J", "name": "Italian Data Centers", "type": "PROGRAMMING", "rating": 2500, "tags": ["graphs", "shortest paths"], "solvedCount": 816}, {"contestId": 1776, "index": "I", "name": "Spinach Pizza", "type": "PROGRAMMING", "rating": 2500, "tags": ["games", "geometry", "greedy", "interactive"], "solvedCount": 767}, {"contestId": 1776, "index": "H", "name": "Beppa and SwerChat", "type": "PROGRAMMING", "rating": 1300, "tags": ["two pointers"], "solvedCount": 7006}, {"contestId": 1776, "index": "G", "name": "Another Wine Tasting Event", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "solvedCount": 2231}, {"contestId": 1776, "index": "F", "name": "Train Splitting", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 3867}, {"contestId": 1776, "index": "E", "name": "Crossing the Railways", "type": "PROGRAMMING", "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 86}, {"contestId": 1776, "index": "D", "name": "Teamwork", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 407}, {"contestId": 1776, "index": "C", "name": "Library game", "type": "PROGRAMMING", "rating": 2500, "tags": ["games", "greedy", "interactive", "sortings"], "solvedCount": 908}, {"contestId": 1776, "index": "B", "name": "Vittorio Plays with LEGO Bricks", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "geometry"], "solvedCount": 1468}, {"contestId": 1776, "index": "A", "name": "Walking Boy", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 7462}, {"contestId": 1775, "index": "F", "name": "Laboratory on Pluto", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["constructive algorithms", "dp", "greedy", "math"], "solvedCount": 818}, {"contestId": 1775, "index": "E", "name": "The Human Equation", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["greedy", "implementation"], "solvedCount": 3597}, {"contestId": 1775, "index": "D", "name": "Friendly Spiders", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "math", "number theory", "shortest paths"], "solvedCount": 7368}, {"contestId": 1775, "index": "C", "name": "Interesting Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["bitmasks", "math"], "solvedCount": 12375}, {"contestId": 1775, "index": "B", "name": "Gardener and the Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 17312}, {"contestId": 1775, "index": "A2", "name": "Gardener and the Capybaras (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19485}, {"contestId": 1775, "index": "A1", "name": "Gardener and the Capybaras (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 20161}, {"contestId": 1774, "index": "H", "name": "Maximum Permutation", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 151}, {"contestId": 1774, "index": "G", "name": "Segment Covering", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 539}, {"contestId": 1774, "index": "F2", "name": "Magician and Pigs (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["binary search", "brute force", "data structures", "implementation"], "solvedCount": 775}, {"contestId": 1774, "index": "F1", "name": "Magician and Pigs (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 1158}, {"contestId": 1774, "index": "E", "name": "Two Chess Pieces", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 3795}, {"contestId": 1774, "index": "D", "name": "Same Count One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "two pointers"], "solvedCount": 8687}, {"contestId": 1774, "index": "C", "name": "Ice and Fire", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 12864}, {"contestId": 1774, "index": "B", "name": "Coloring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 13404}, {"contestId": 1774, "index": "A", "name": "Add Plus Minus Sign", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 23136}, {"contestId": 1773, "index": "L", "name": "Lisa's Sequences", "type": "PROGRAMMING", "rating": 3500, "tags": ["dp"], "solvedCount": 72}, {"contestId": 1773, "index": "K", "name": "King's Puzzle", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 1573}, {"contestId": 1773, "index": "J", "name": "Jumbled Trees", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "math"], "solvedCount": 120}, {"contestId": 1773, "index": "I", "name": "Interactive Factorial Guessing", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "games", "implementation", "interactive"], "solvedCount": 532}, {"contestId": 1773, "index": "H", "name": "Hot and Cold", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "interactive"], "solvedCount": 414}, {"contestId": 1773, "index": "G", "name": "Game of Questions", "type": "PROGRAMMING", "rating": 2800, "tags": ["bitmasks", "combinatorics", "dp", "fft", "math", "probabilities"], "solvedCount": 460}, {"contestId": 1773, "index": "F", "name": "Football", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 4500}, {"contestId": 1773, "index": "E", "name": "Easy Assembly", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 5472}, {"contestId": 1773, "index": "D", "name": "Dominoes", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "flows", "graph matchings", "greedy"], "solvedCount": 567}, {"contestId": 1773, "index": "C", "name": "Cactus Meets Torus", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 35}, {"contestId": 1773, "index": "B", "name": "BinCoin", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "divide and conquer", "hashing", "implementation", "probabilities", "trees"], "solvedCount": 874}, {"contestId": 1773, "index": "A", "name": "Amazing Trick", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "graph matchings", "math", "probabilities"], "solvedCount": 1746}, {"contestId": 1772, "index": "G", "name": "Gaining Rating", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "greedy", "implementation", "math", "sortings", "two pointers"], "solvedCount": 1517}, {"contestId": 1772, "index": "F", "name": "Copy of a Copy of a Copy", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation", "sortings"], "solvedCount": 2620}, {"contestId": 1772, "index": "E", "name": "Permutation Game", "type": "PROGRAMMING", "rating": 1700, "tags": ["games"], "solvedCount": 7349}, {"contestId": 1772, "index": "D", "name": "Absolute Sorting", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 17571}, {"contestId": 1772, "index": "C", "name": "Different Differences", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 25247}, {"contestId": 1772, "index": "B", "name": "Matrix Rotation", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 31745}, {"contestId": 1772, "index": "A", "name": "A+B?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 55017}, {"contestId": 1771, "index": "F", "name": "Hossam and Range Minimum Query", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["binary search", "bitmasks", "data structures", "hashing", "probabilities", "strings", "trees"], "solvedCount": 1375}, {"contestId": 1771, "index": "E", "name": "Hossam and a Letter", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["brute force", "dp", "implementation", "two pointers"], "solvedCount": 762}, {"contestId": 1771, "index": "D", "name": "Hossam and (sub-)palindromic tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["brute force", "data structures", "dfs and similar", "dp", "strings", "trees"], "solvedCount": 3035}, {"contestId": 1771, "index": "C", "name": "Hossam and Trainees", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["greedy", "math", "number theory"], "solvedCount": 10697}, {"contestId": 1771, "index": "B", "name": "Hossam and Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "dp", "two pointers"], "solvedCount": 17976}, {"contestId": 1771, "index": "A", "name": "Hossam and Combinatorics", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["combinatorics", "math", "sortings"], "solvedCount": 24361}, {"contestId": 1770, "index": "H", "name": "Koxia, Mahiru and Winter Festival", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 154}, {"contestId": 1770, "index": "G", "name": "Koxia and Bracket", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["divide and conquer", "fft", "math"], "solvedCount": 181}, {"contestId": 1770, "index": "F", "name": "Koxia and Sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"], "solvedCount": 801}, {"contestId": 1770, "index": "E", "name": "Koxia and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "math", "probabilities", "trees"], "solvedCount": 1484}, {"contestId": 1770, "index": "D", "name": "Koxia and Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "flows", "games", "graph matchings", "graphs", "implementation"], "solvedCount": 4165}, {"contestId": 1770, "index": "C", "name": "Koxia and Number Theory", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["brute force", "chinese remainder theorem", "math", "number theory"], "solvedCount": 9131}, {"contestId": 1770, "index": "B", "name": "Koxia and Permutation", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 20283}, {"contestId": 1770, "index": "A", "name": "Koxia and Whiteboards", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy"], "solvedCount": 24587}, {"contestId": 1769, "index": "D3", "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 III", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "brute force"], "solvedCount": 121}, {"contestId": 1769, "index": "D2", "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 II", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "brute force"], "solvedCount": 200}, {"contestId": 1769, "index": "D1", "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 I", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "brute force", "dp"], "solvedCount": 406}, {"contestId": 1769, "index": "C2", "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 II", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "dp"], "solvedCount": 1046}, {"contestId": 1769, "index": "C1", "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 I", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "brute force", "dp", "greedy"], "solvedCount": 1029}, {"contestId": 1769, "index": "B2", "name": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 II", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "binary search", "brute force", "math"], "solvedCount": 912}, {"contestId": 1769, "index": "B1", "name": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 I", "type": "PROGRAMMING", "rating": 1000, "tags": ["*special", "brute force", "implementation", "math"], "solvedCount": 1481}, {"contestId": 1769, "index": "A", "name": "\u0423\u0437\u043a\u0430\u044f \u0434\u043e\u0440\u043e\u0433\u0430", "type": "PROGRAMMING", "rating": 800, "tags": ["*special", "math"], "solvedCount": 2056}, {"contestId": 1768, "index": "F", "name": "Wonderful Jump", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["dp", "greedy"], "solvedCount": 1022}, {"contestId": 1768, "index": "E", "name": "Partial Sorting", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 2060}, {"contestId": 1768, "index": "D", "name": "Lucky Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 8089}, {"contestId": 1768, "index": "C", "name": "Elemental Decompress", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 15129}, {"contestId": 1768, "index": "B", "name": "Quick Sort", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "math"], "solvedCount": 24613}, {"contestId": 1768, "index": "A", "name": "Greatest Convex", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math", "number theory"], "solvedCount": 30059}, {"contestId": 1767, "index": "F", "name": "Two Subtrees", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 362}, {"contestId": 1767, "index": "E", "name": "Algebra Flash", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "brute force", "dp", "graphs", "math", "meet-in-the-middle", "trees"], "solvedCount": 1077}, {"contestId": 1767, "index": "D", "name": "Playoff", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "constructive algorithms", "dp", "greedy", "math"], "solvedCount": 10759}, {"contestId": 1767, "index": "C", "name": "Count Binary Strings", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 2869}, {"contestId": 1767, "index": "B", "name": "Block Towers", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 21452}, {"contestId": 1767, "index": "A", "name": "Cut the Triangle", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 21184}, {"contestId": 1766, "index": "F", "name": "MCF", "type": "PROGRAMMING", "rating": 2800, "tags": ["flows"], "solvedCount": 327}, {"contestId": 1766, "index": "E", "name": "Decomposition", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 1352}, {"contestId": 1766, "index": "D", "name": "Lucky Chains", "type": "PROGRAMMING", "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 9870}, {"contestId": 1766, "index": "C", "name": "Hamiltonian Wall", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "implementation"], "solvedCount": 14429}, {"contestId": 1766, "index": "B", "name": "Notepad#", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 22743}, {"contestId": 1766, "index": "A", "name": "Extremely Round", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 35689}, {"contestId": 1765, "index": "N", "name": "Number Reduction", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"], "solvedCount": 5525}, {"contestId": 1765, "index": "M", "name": "Minimum LCM", "type": "PROGRAMMING", "rating": 1000, "tags": ["math", "number theory"], "solvedCount": 23247}, {"contestId": 1765, "index": "L", "name": "Project Manager", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 638}, {"contestId": 1765, "index": "K", "name": "Torus Path", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 6426}, {"contestId": 1765, "index": "J", "name": "Hero to Zero", "type": "PROGRAMMING", "rating": 2900, "tags": ["graph matchings", "math"], "solvedCount": 239}, {"contestId": 1765, "index": "I", "name": "Infinite Chess", "type": "PROGRAMMING", "rating": 2800, "tags": ["implementation", "shortest paths"], "solvedCount": 242}, {"contestId": 1765, "index": "H", "name": "Hospital Queue", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "graphs", "greedy", "implementation"], "solvedCount": 1456}, {"contestId": 1765, "index": "G", "name": "Guess the String", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "interactive", "probabilities"], "solvedCount": 442}, {"contestId": 1765, "index": "F", "name": "Chemistry Lab", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "geometry", "probabilities"], "solvedCount": 700}, {"contestId": 1765, "index": "E", "name": "Exchange", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "math"], "solvedCount": 11075}, {"contestId": 1765, "index": "D", "name": "Watch the Videos", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "constructive algorithms", "two pointers"], "solvedCount": 4629}, {"contestId": 1765, "index": "C", "name": "Card Guessing", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "probabilities"], "solvedCount": 487}, {"contestId": 1765, "index": "B", "name": "Broken Keyboard", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 9454}, {"contestId": 1765, "index": "A", "name": "Access Levels", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "dsu", "flows", "graph matchings"], "solvedCount": 778}, {"contestId": 1764, "index": "H", "name": "Doremy's Paint 2", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures"], "solvedCount": 232}, {"contestId": 1764, "index": "G3", "name": "Doremy's Perfect DS Class (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 3300, "tags": ["binary search", "interactive"], "solvedCount": 505}, {"contestId": 1764, "index": "G2", "name": "Doremy's Perfect DS Class (Medium Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 3000, "tags": ["binary search", "interactive"], "solvedCount": 576}, {"contestId": 1764, "index": "G1", "name": "Doremy's Perfect DS Class (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["binary search", "interactive"], "solvedCount": 637}, {"contestId": 1764, "index": "F", "name": "Doremy's Experimental Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "sortings", "trees"], "solvedCount": 1092}, {"contestId": 1764, "index": "E", "name": "Doremy's Number Line", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["dp", "greedy", "sortings"], "solvedCount": 1358}, {"contestId": 1764, "index": "D", "name": "Doremy's Pegging Game", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["combinatorics", "dp", "math"], "solvedCount": 2976}, {"contestId": 1764, "index": "C", "name": "Doremy's City Construction", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["graphs", "greedy"], "solvedCount": 10049}, {"contestId": 1764, "index": "B", "name": "Doremy's Perfect Math Class", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["math", "number theory"], "solvedCount": 16909}, {"contestId": 1764, "index": "A", "name": "Doremy's Paint", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 17116}, {"contestId": 1763, "index": "F", "name": "Edge Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "solvedCount": 568}, {"contestId": 1763, "index": "E", "name": "Node Pairs", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "graphs", "math", "number theory"], "solvedCount": 1970}, {"contestId": 1763, "index": "D", "name": "Valid Bitonic Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "dp", "implementation", "math", "number theory"], "solvedCount": 2197}, {"contestId": 1763, "index": "C", "name": "Another Array Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 7343}, {"contestId": 1763, "index": "B", "name": "Incinerate", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "brute force", "data structures", "implementation", "math", "sortings"], "solvedCount": 15750}, {"contestId": 1763, "index": "A", "name": "Absolute Maximization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 16506}, {"contestId": 1762, "index": "G", "name": "Unequal Adjacent Elements", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "sortings"], "solvedCount": 124}, {"contestId": 1762, "index": "F", "name": "Good Pairs ", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["binary search", "data structures", "dp"], "solvedCount": 784}, {"contestId": 1762, "index": "E", "name": "Tree Sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "math", "trees"], "solvedCount": 744}, {"contestId": 1762, "index": "D", "name": "GCD Queries ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "interactive", "number theory"], "solvedCount": 3990}, {"contestId": 1762, "index": "C", "name": "Binary Strings are Fun", "type": "PROGRAMMING", "points": 1750.0, "rating": 1400, "tags": ["combinatorics", "math"], "solvedCount": 9795}, {"contestId": 1762, "index": "B", "name": "Make Array Good", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "number theory", "sortings"], "solvedCount": 17974}, {"contestId": 1762, "index": "A", "name": "Divide and Conquer", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math", "number theory"], "solvedCount": 20014}, {"contestId": 1761, "index": "G", "name": "Centroid Guess", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["interactive", "probabilities", "trees"], "solvedCount": 149}, {"contestId": 1761, "index": "F2", "name": "Anti-median (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["combinatorics", "dp", "math"], "solvedCount": 95}, {"contestId": 1761, "index": "F1", "name": "Anti-median (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "math"], "solvedCount": 241}, {"contestId": 1761, "index": "E", "name": "Make It Connected", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "brute force", "constructive algorithms", "dsu", "graphs", "greedy", "matrices", "trees", "two pointers"], "solvedCount": 2021}, {"contestId": 1761, "index": "D", "name": "Carry Bit", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["combinatorics", "math"], "solvedCount": 2616}, {"contestId": 1761, "index": "C", "name": "Set Construction", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 10323}, {"contestId": 1761, "index": "B", "name": "Elimination of a Ring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 14193}, {"contestId": 1761, "index": "A", "name": "Two Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 27798}, {"contestId": 1760, "index": "G", "name": "SlavicG's Favorite Problem", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "dfs and similar", "graphs"], "solvedCount": 8901}, {"contestId": 1760, "index": "F", "name": "Quests", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 13817}, {"contestId": 1760, "index": "E", "name": "Binary Inversions", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy", "math"], "solvedCount": 21997}, {"contestId": 1760, "index": "D", "name": "Challenging Valleys", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "two pointers"], "solvedCount": 25668}, {"contestId": 1760, "index": "C", "name": "Advantage", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 40967}, {"contestId": 1760, "index": "B", "name": "Atilla's Favorite Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "strings"], "solvedCount": 49784}, {"contestId": 1760, "index": "A", "name": "Medium Number", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 70778}, {"contestId": 1759, "index": "G", "name": "Restore the Permutation", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 5001}, {"contestId": 1759, "index": "F", "name": "All Possible Digits", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "data structures", "greedy", "math", "number theory"], "solvedCount": 4256}, {"contestId": 1759, "index": "E", "name": "The Humanoid", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp", "sortings"], "solvedCount": 11885}, {"contestId": 1759, "index": "D", "name": "Make It Round", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "number theory"], "solvedCount": 16862}, {"contestId": 1759, "index": "C", "name": "Thermostat", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "math", "shortest paths"], "solvedCount": 18816}, {"contestId": 1759, "index": "B", "name": "Lost Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 23043}, {"contestId": 1759, "index": "A", "name": "Yes-Yes?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 31738}, {"contestId": 1758, "index": "F", "name": "Decent Division", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["constructive algorithms", "data structures"], "solvedCount": 197}, {"contestId": 1758, "index": "E", "name": "Tick, Tock", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs"], "solvedCount": 911}, {"contestId": 1758, "index": "D", "name": "Range = \u221aSum", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "brute force", "constructive algorithms", "math", "two pointers"], "solvedCount": 8017}, {"contestId": 1758, "index": "C", "name": "Almost All Multiples", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "number theory"], "solvedCount": 14751}, {"contestId": 1758, "index": "B", "name": "XOR = Average", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 22873}, {"contestId": 1758, "index": "A", "name": "SSeeeeiinngg DDoouubbllee", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "strings"], "solvedCount": 26210}, {"contestId": 1754, "index": "B", "name": "Kevin and Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 19395}, {"contestId": 1754, "index": "A", "name": "Technical Support", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 23907}, {"contestId": 1753, "index": "F", "name": "Minecraft Series", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["brute force", "two pointers"], "solvedCount": 230}, {"contestId": 1753, "index": "E", "name": "N Machines", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["binary search", "brute force", "greedy"], "solvedCount": 401}, {"contestId": 1753, "index": "D", "name": "The Beach", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1913}, {"contestId": 1753, "index": "C", "name": "Wish I Knew How to Sort", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "math", "probabilities"], "solvedCount": 4898}, {"contestId": 1753, "index": "B", "name": "Factorial Divisibility", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 13832}, {"contestId": 1753, "index": "A2", "name": "Make Nonzero Sum (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 11157}, {"contestId": 1753, "index": "A1", "name": "Make Nonzero Sum (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 15930}, {"contestId": 1750, "index": "H", "name": "BinaryStringForces", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "dp"], "solvedCount": 112}, {"contestId": 1750, "index": "G", "name": "Doping", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["combinatorics", "dp", "math"], "solvedCount": 286}, {"contestId": 1750, "index": "F", "name": "Majority", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "strings"], "solvedCount": 1040}, {"contestId": 1750, "index": "E", "name": "Bracket Cost", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy", "strings"], "solvedCount": 1552}, {"contestId": 1750, "index": "D", "name": "Count GCD", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 6663}, {"contestId": 1750, "index": "C", "name": "Complementary XOR", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 10114}, {"contestId": 1750, "index": "B", "name": "Maximum Substring", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 16598}, {"contestId": 1750, "index": "A", "name": "Indirect Sort", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 17493}, {"contestId": 1749, "index": "F", "name": "Distance to the Path", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 569}, {"contestId": 1749, "index": "E", "name": "Cactus Wall", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1906}, {"contestId": 1749, "index": "D", "name": "Counting Arrays", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 6019}, {"contestId": 1749, "index": "C", "name": "Number Game", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "data structures", "games", "greedy", "implementation"], "solvedCount": 15086}, {"contestId": 1749, "index": "B", "name": "Death's Blessing", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy"], "solvedCount": 21837}, {"contestId": 1749, "index": "A", "name": "Cowardly Rooks", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 22917}, {"contestId": 1748, "index": "F", "name": "Circular Xor Reversal", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 363}, {"contestId": 1748, "index": "E", "name": "Yet Another Array Counting Problem", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "flows", "math", "trees"], "solvedCount": 2314}, {"contestId": 1748, "index": "D", "name": "ConstructOR ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "chinese remainder theorem", "combinatorics", "constructive algorithms", "math", "number theory"], "solvedCount": 3011}, {"contestId": 1748, "index": "C", "name": "Zero-Sum Prefixes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "solvedCount": 12214}, {"contestId": 1748, "index": "B", "name": "Diverse Substrings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "implementation", "strings"], "solvedCount": 16196}, {"contestId": 1748, "index": "A", "name": "The Ultimate Square", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 24876}, {"contestId": 1747, "index": "E", "name": "List Generation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "dp", "math"], "solvedCount": 578}, {"contestId": 1747, "index": "D", "name": "Yet Another Problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures"], "solvedCount": 5117}, {"contestId": 1747, "index": "C", "name": "Swap Game", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["games"], "solvedCount": 22552}, {"contestId": 1747, "index": "B", "name": "BAN BAN", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 24919}, {"contestId": 1747, "index": "A", "name": "Two Groups", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 25875}, {"contestId": 1746, "index": "G", "name": "Olympiad Training", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["binary search", "data structures", "dp", "flows", "geometry", "implementation", "sortings"], "solvedCount": 103}, {"contestId": 1746, "index": "F", "name": "Kazaee", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "hashing", "probabilities"], "solvedCount": 2290}, {"contestId": 1746, "index": "E2", "name": "Joking (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3200, "tags": ["dp", "interactive"], "solvedCount": 434}, {"contestId": 1746, "index": "E1", "name": "Joking (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "interactive", "ternary search"], "solvedCount": 1543}, {"contestId": 1746, "index": "D", "name": "Paths on the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"], "solvedCount": 4913}, {"contestId": 1746, "index": "C", "name": "Permutation Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 13577}, {"contestId": 1746, "index": "B", "name": "Rebellion", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "two pointers"], "solvedCount": 18065}, {"contestId": 1746, "index": "A", "name": "Maxmina", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20690}, {"contestId": 1744, "index": "F", "name": "MEX vs MED", "type": "PROGRAMMING", "rating": 2000, "tags": ["math", "two pointers"], "solvedCount": 3424}, {"contestId": 1744, "index": "E2", "name": "Divisible Numbers (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "math", "number theory"], "solvedCount": 6174}, {"contestId": 1744, "index": "E1", "name": "Divisible Numbers (easy version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "math", "number theory"], "solvedCount": 11888}, {"contestId": 1744, "index": "D", "name": "Divisibility by 2^n", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "math", "sortings"], "solvedCount": 23227}, {"contestId": 1744, "index": "C", "name": "Traffic Light", "type": "PROGRAMMING", "rating": 1000, "tags": ["binary search", "implementation", "two pointers"], "solvedCount": 35597}, {"contestId": 1744, "index": "B", "name": "Even-Odd Increments ", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 24429}, {"contestId": 1744, "index": "A", "name": "Number Replacement", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 28110}, {"contestId": 1743, "index": "G", "name": "Antifibonacci Cut", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "data structures", "dp", "hashing", "math"], "solvedCount": 278}, {"contestId": 1743, "index": "F", "name": "Intersection and Union", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "matrices", "probabilities"], "solvedCount": 1654}, {"contestId": 1743, "index": "E", "name": "FTL", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dp"], "solvedCount": 1754}, {"contestId": 1743, "index": "D", "name": "Problem with Random Tests", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "greedy", "probabilities"], "solvedCount": 8041}, {"contestId": 1743, "index": "C", "name": "Save the Magazines", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 20108}, {"contestId": 1743, "index": "B", "name": "Permutation Value", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 22817}, {"contestId": 1743, "index": "A", "name": "Password", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "combinatorics", "implementation", "math"], "solvedCount": 28249}, {"contestId": 1742, "index": "G", "name": "Orray", "type": "PROGRAMMING", "rating": 1500, "tags": ["bitmasks", "brute force", "greedy", "math", "sortings"], "solvedCount": 12222}, {"contestId": 1742, "index": "F", "name": "Smaller", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 13152}, {"contestId": 1742, "index": "E", "name": "Scuza", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "greedy", "math"], "solvedCount": 31700}, {"contestId": 1742, "index": "D", "name": "Coprime", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy", "number theory"], "solvedCount": 29016}, {"contestId": 1742, "index": "C", "name": "Stripes", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 36452}, {"contestId": 1742, "index": "B", "name": "Increasing", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 54805}, {"contestId": 1742, "index": "A", "name": "Sum", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 89753}, {"contestId": 1741, "index": "G", "name": "Kirill and Company", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "flows", "graphs", "shortest paths"], "solvedCount": 1703}, {"contestId": 1741, "index": "F", "name": "Multi-Colored Segments", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "math", "sortings"], "solvedCount": 2681}, {"contestId": 1741, "index": "E", "name": "Sending a Sequence Over the Network", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp"], "solvedCount": 15088}, {"contestId": 1741, "index": "D", "name": "Masha and a Beautiful Tree", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "divide and conquer", "graphs", "sortings", "trees"], "solvedCount": 17183}, {"contestId": 1741, "index": "C", "name": "Minimize the Thickness", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy", "math", "two pointers"], "solvedCount": 18694}, {"contestId": 1741, "index": "B", "name": "Funny Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 26275}, {"contestId": 1741, "index": "A", "name": "Compare T-Shirt Sizes", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "implementation", "strings"], "solvedCount": 32581}, {"contestId": 1740, "index": "I", "name": "Arranging Crystal Balls", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "divide and conquer", "dp", "geometry", "graphs", "number theory"], "solvedCount": 128}, {"contestId": 1740, "index": "H", "name": "MEX Tree Manipulation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "trees"], "solvedCount": 272}, {"contestId": 1740, "index": "G", "name": "Dangerous Laser Power", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["constructive algorithms", "dsu", "sortings"], "solvedCount": 325}, {"contestId": 1740, "index": "F", "name": "Conditional Mix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"], "solvedCount": 907}, {"contestId": 1740, "index": "E", "name": "Hanging Hearts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4755}, {"contestId": 1740, "index": "D", "name": "Knowledge Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "data structures"], "solvedCount": 8749}, {"contestId": 1740, "index": "C", "name": "Bricks and Bags", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "games", "greedy", "sortings"], "solvedCount": 11933}, {"contestId": 1740, "index": "B", "name": "Jumbo Extra Cheese 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["geometry", "greedy", "sortings"], "solvedCount": 14147}, {"contestId": 1740, "index": "A", "name": "Factorise N+M", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "number theory"], "solvedCount": 21812}, {"contestId": 1739, "index": "F", "name": "Keyboard Design", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "data structures", "dp", "string suffix structures", "strings"], "solvedCount": 591}, {"contestId": 1739, "index": "E", "name": "Cleaning Robot", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "dp"], "solvedCount": 1340}, {"contestId": 1739, "index": "D", "name": "Reset K Edges", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 5705}, {"contestId": 1739, "index": "C", "name": "Card Game", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "constructive algorithms", "dp", "games"], "solvedCount": 9717}, {"contestId": 1739, "index": "B", "name": "Array Recovery", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 23665}, {"contestId": 1739, "index": "A", "name": "Immobile Knight", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 23333}, {"contestId": 1738, "index": "H", "name": "Palindrome Addicts", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["data structures", "strings"], "solvedCount": 262}, {"contestId": 1738, "index": "G", "name": "Anti-Increasing Addicts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["constructive algorithms", "dp", "greedy", "math"], "solvedCount": 504}, {"contestId": 1738, "index": "F", "name": "Connectivity Addicts", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "interactive", "shortest paths", "trees"], "solvedCount": 1317}, {"contestId": 1738, "index": "E", "name": "Balance Addicts", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp", "math", "two pointers"], "solvedCount": 1633}, {"contestId": 1738, "index": "D", "name": "Permutation Addicts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 3639}, {"contestId": 1738, "index": "C", "name": "Even Number Addicts", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "games", "greedy", "math"], "solvedCount": 12179}, {"contestId": 1738, "index": "B", "name": "Prefix Sum Addicts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 17620}, {"contestId": 1738, "index": "A", "name": "Glory Addicts", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 13951}, {"contestId": 1737, "index": "G", "name": "Ela Takes Dancing Class", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["binary search", "data structures"], "solvedCount": 143}, {"contestId": 1737, "index": "F", "name": "Ela and Prime GCD", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 149}, {"contestId": 1737, "index": "E", "name": "Ela Goes Hiking", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 999}, {"contestId": 1737, "index": "D", "name": "Ela and the Wiring Wizard", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "dp", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 2015}, {"contestId": 1737, "index": "C", "name": "Ela and Crickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "games", "implementation", "math"], "solvedCount": 6196}, {"contestId": 1737, "index": "B", "name": "Ela's Fitness and the Luxury Number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "implementation", "math"], "solvedCount": 9903}, {"contestId": 1737, "index": "A", "name": "Ela Sorting Books", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "strings"], "solvedCount": 10553}, {"contestId": 1736, "index": "E", "name": "Swap and Take", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "greedy"], "solvedCount": 798}, {"contestId": 1736, "index": "D", "name": "Equal Binary Subsequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "geometry", "greedy", "implementation", "strings"], "solvedCount": 2654}, {"contestId": 1736, "index": "C2", "name": "Good Subarrays (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "two pointers"], "solvedCount": 1396}, {"contestId": 1736, "index": "C1", "name": "Good Subarrays (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["binary search", "data structures", "schedules", "two pointers"], "solvedCount": 15919}, {"contestId": 1736, "index": "B", "name": "Playing with GCD", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math", "number theory"], "solvedCount": 19306}, {"contestId": 1736, "index": "A", "name": "Make A Equal to B", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 23694}, {"contestId": 1735, "index": "F", "name": "Pebbles and Beads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["data structures", "geometry"], "solvedCount": 244}, {"contestId": 1735, "index": "E", "name": "House Planning", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "graph matchings", "greedy"], "solvedCount": 1174}, {"contestId": 1735, "index": "D", "name": "Meta-set", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["brute force", "combinatorics", "data structures", "hashing", "math"], "solvedCount": 6120}, {"contestId": 1735, "index": "C", "name": "Phase Shift", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"], "solvedCount": 10528}, {"contestId": 1735, "index": "B", "name": "Tea with Tangerines", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["greedy", "math"], "solvedCount": 18864}, {"contestId": 1735, "index": "A", "name": "Working Week", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 20798}, {"contestId": 1734, "index": "F", "name": "Zeros and Ones", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["bitmasks", "divide and conquer", "dp", "math"], "solvedCount": 889}, {"contestId": 1734, "index": "E", "name": "Rectangular Congruence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["constructive algorithms", "number theory"], "solvedCount": 3094}, {"contestId": 1734, "index": "D", "name": "Slime Escape", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "two pointers"], "solvedCount": 6752}, {"contestId": 1734, "index": "C", "name": "Removing Smallest Multiples", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["greedy", "math"], "solvedCount": 23534}, {"contestId": 1734, "index": "B", "name": "Bright, Nice, Brilliant", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 16176}, {"contestId": 1734, "index": "A", "name": "Select Three Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 21764}, {"contestId": 1733, "index": "E", "name": "Conveyor", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 1375}, {"contestId": 1733, "index": "D2", "name": "Zero-One (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dp", "greedy"], "solvedCount": 4515}, {"contestId": 1733, "index": "D1", "name": "Zero-One (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 14552}, {"contestId": 1733, "index": "C", "name": "Parity Shuffle Sorting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "sortings"], "solvedCount": 16489}, {"contestId": 1733, "index": "B", "name": "Rule of League", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 20568}, {"contestId": 1733, "index": "A", "name": "Consecutive Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 21455}, {"contestId": 1732, "index": "E", "name": "Location", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dp", "math", "number theory"], "solvedCount": 485}, {"contestId": 1732, "index": "D2", "name": "Balance (Hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["brute force", "data structures", "number theory"], "solvedCount": 1475}, {"contestId": 1732, "index": "D1", "name": "Balance (Easy version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation", "number theory"], "solvedCount": 9449}, {"contestId": 1732, "index": "C2", "name": "Sheikh (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "greedy", "implementation", "two pointers"], "solvedCount": 2788}, {"contestId": 1732, "index": "C1", "name": "Sheikh (Easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "bitmasks", "greedy", "two pointers"], "solvedCount": 6771}, {"contestId": 1732, "index": "B", "name": "Ugu", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 16419}, {"contestId": 1732, "index": "A", "name": "Bestie", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 16473}, {"contestId": 1731, "index": "F", "name": "Function Sum", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "fft", "math"], "solvedCount": 746}, {"contestId": 1731, "index": "E", "name": "Graph Cost", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "greedy", "math", "number theory"], "solvedCount": 3243}, {"contestId": 1731, "index": "D", "name": "Valiant's New Map", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "solvedCount": 7993}, {"contestId": 1731, "index": "C", "name": "Even Subarrays", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "brute force", "hashing", "math", "number theory"], "solvedCount": 10955}, {"contestId": 1731, "index": "B", "name": "Kill Demodogs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 22524}, {"contestId": 1731, "index": "A", "name": "Joey Takes Money", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 23174}, {"contestId": 1730, "index": "F", "name": "Almost Sorted", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "data structures", "dp"], "solvedCount": 639}, {"contestId": 1730, "index": "E", "name": "Maximums and Minimums", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["combinatorics", "data structures", "divide and conquer", "number theory"], "solvedCount": 699}, {"contestId": 1730, "index": "D", "name": "Prefixes and Suffixes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["constructive algorithms", "strings", "two pointers"], "solvedCount": 2850}, {"contestId": 1730, "index": "C", "name": "Minimum Notation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["data structures", "greedy", "math", "sortings"], "solvedCount": 17431}, {"contestId": 1730, "index": "B", "name": "Meeting on the Line", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "geometry", "greedy", "implementation", "math", "ternary search"], "solvedCount": 14895}, {"contestId": 1730, "index": "A", "name": "Planets", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 23939}, {"contestId": 1729, "index": "G", "name": "Cut Substrings", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "hashing", "strings", "two pointers"], "solvedCount": 2353}, {"contestId": 1729, "index": "F", "name": "Kirei and the Linear Function", "type": "PROGRAMMING", "rating": 1900, "tags": ["hashing", "math"], "solvedCount": 4407}, {"contestId": 1729, "index": "E", "name": "Guess the Cycle Size", "type": "PROGRAMMING", "rating": 1800, "tags": ["interactive", "probabilities"], "solvedCount": 7600}, {"contestId": 1729, "index": "D", "name": "Friends and the Restaurant", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 25810}, {"contestId": 1729, "index": "C", "name": "Jumping on Tiles", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "strings"], "solvedCount": 20967}, {"contestId": 1729, "index": "B", "name": "Decode String", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 31727}, {"contestId": 1729, "index": "A", "name": "Two Elevators", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 43739}, {"contestId": 1728, "index": "G", "name": "Illumination", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "dp", "math", "two pointers"], "solvedCount": 529}, {"contestId": 1728, "index": "F", "name": "Fishermen", "type": "PROGRAMMING", "rating": 3100, "tags": ["flows", "graph matchings", "greedy"], "solvedCount": 478}, {"contestId": 1728, "index": "E", "name": "Red-Black Pepper", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "data structures", "greedy", "math", "number theory"], "solvedCount": 1917}, {"contestId": 1728, "index": "D", "name": "Letter Picking", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "games", "two pointers"], "solvedCount": 7861}, {"contestId": 1728, "index": "C", "name": "Digital Logarithm", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 17183}, {"contestId": 1728, "index": "B", "name": "Best Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20460}, {"contestId": 1728, "index": "A", "name": "Colored Balls: Revisited", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "solvedCount": 25155}, {"contestId": 1726, "index": "H", "name": "Mainak and the Bleeding Polygon", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["binary search", "geometry", "implementation", "math"], "solvedCount": 97}, {"contestId": 1726, "index": "G", "name": "A Certain Magical Party", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["combinatorics", "data structures", "greedy", "sortings"], "solvedCount": 344}, {"contestId": 1726, "index": "F", "name": "Late For Work (submissions are not allowed)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "greedy", "schedules", "shortest paths"], "solvedCount": 131}, {"contestId": 1726, "index": "E", "name": "Almost Perfect", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["combinatorics", "fft", "math"], "solvedCount": 1568}, {"contestId": 1726, "index": "D", "name": "Edge Split", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "probabilities", "trees"], "solvedCount": 3952}, {"contestId": 1726, "index": "C", "name": "Jatayu's Balanced Bracket Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["data structures", "dsu", "graphs", "greedy"], "solvedCount": 13052}, {"contestId": 1726, "index": "B", "name": "Mainak and Interesting Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 16302}, {"contestId": 1726, "index": "A", "name": "Mainak and Array", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "math"], "solvedCount": 28882}, {"contestId": 1725, "index": "M", "name": "Moving Both Hands", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 3778}, {"contestId": 1725, "index": "L", "name": "Lemper Cooking Competition", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 1008}, {"contestId": 1725, "index": "K", "name": "Kingdom of Criticism", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dsu"], "solvedCount": 735}, {"contestId": 1725, "index": "J", "name": "Journey", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "trees"], "solvedCount": 429}, {"contestId": 1725, "index": "I", "name": "Imitating the Key Tree", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "dsu", "trees"], "solvedCount": 257}, {"contestId": 1725, "index": "H", "name": "Hot Black Hot White", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "math"], "solvedCount": 2857}, {"contestId": 1725, "index": "G", "name": "Garage", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "geometry", "math"], "solvedCount": 6401}, {"contestId": 1725, "index": "F", "name": "Field Photography", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "data structures", "sortings"], "solvedCount": 1079}, {"contestId": 1725, "index": "E", "name": "Electrical Efficiency", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "data structures", "dp", "math", "number theory", "trees"], "solvedCount": 543}, {"contestId": 1725, "index": "D", "name": "Deducing Sortability", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "bitmasks", "math"], "solvedCount": 177}, {"contestId": 1725, "index": "C", "name": "Circular Mirror", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "combinatorics", "geometry", "math", "two pointers"], "solvedCount": 1794}, {"contestId": 1725, "index": "B", "name": "Basketball Together", "type": "PROGRAMMING", "rating": 1000, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 20874}, {"contestId": 1725, "index": "A", "name": "Accumulation of Dominoes", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 9760}, {"contestId": 1722, "index": "G", "name": "Even-Odd XOR", "type": "PROGRAMMING", "rating": 1500, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 13093}, {"contestId": 1722, "index": "F", "name": "L-shapes", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "implementation"], "solvedCount": 7594}, {"contestId": 1722, "index": "E", "name": "Counting Rectangles", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dp", "implementation"], "solvedCount": 12286}, {"contestId": 1722, "index": "D", "name": "Line", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 25302}, {"contestId": 1722, "index": "C", "name": "Word Game", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "implementation"], "solvedCount": 33782}, {"contestId": 1722, "index": "B", "name": "Colourblindness", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 52130}, {"contestId": 1722, "index": "A", "name": "Spell Check", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 58583}, {"contestId": 1721, "index": "F", "name": "Matching Reduction", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "constructive algorithms", "dfs and similar", "flows", "graph matchings", "graphs", "interactive"], "solvedCount": 465}, {"contestId": 1721, "index": "E", "name": "Prefix Function Queries", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "hashing", "string suffix structures", "strings", "trees"], "solvedCount": 2332}, {"contestId": 1721, "index": "D", "name": "Maximum AND", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "dfs and similar", "divide and conquer", "greedy", "sortings"], "solvedCount": 7223}, {"contestId": 1721, "index": "C", "name": "Min-Max Array Transformation", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "greedy", "two pointers"], "solvedCount": 14215}, {"contestId": 1721, "index": "B", "name": "Deadly Laser", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 23228}, {"contestId": 1721, "index": "A", "name": "Image", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 27822}, {"contestId": 1720, "index": "E", "name": "Misha and Paintings", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "solvedCount": 900}, {"contestId": 1720, "index": "D2", "name": "Xor-Subsequence (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "data structures", "dp", "strings", "trees"], "solvedCount": 2027}, {"contestId": 1720, "index": "D1", "name": "Xor-Subsequence (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dp", "strings", "trees", "two pointers"], "solvedCount": 6415}, {"contestId": 1720, "index": "C", "name": "Corners", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 17746}, {"contestId": 1720, "index": "B", "name": "Interesting Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["brute force", "data structures", "greedy", "math", "sortings"], "solvedCount": 21865}, {"contestId": 1720, "index": "A", "name": "Burenka Plays with Fractions", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math", "number theory"], "solvedCount": 23466}, {"contestId": 1719, "index": "C", "name": "Fighting Tournament", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "data structures", "implementation", "two pointers"], "solvedCount": 13990}, {"contestId": 1719, "index": "B", "name": "Mathematical Circus", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 18984}, {"contestId": 1719, "index": "A", "name": "Chip Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "math"], "solvedCount": 26358}, {"contestId": 1718, "index": "F", "name": "Burenka, an Array and Queries", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["data structures", "math", "number theory"], "solvedCount": 182}, {"contestId": 1718, "index": "E", "name": "Impressionism", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms", "graphs", "implementation", "math"], "solvedCount": 145}, {"contestId": 1718, "index": "D", "name": "Permutation for Burenka", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["data structures", "graph matchings", "greedy", "math", "trees"], "solvedCount": 381}, {"contestId": 1718, "index": "C", "name": "Tonya and Burenka-179", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["data structures", "greedy", "math", "number theory"], "solvedCount": 1733}, {"contestId": 1718, "index": "B", "name": "Fibonacci Strings", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["greedy", "implementation", "math", "number theory"], "solvedCount": 3193}, {"contestId": 1718, "index": "A2", "name": "Burenka and Traditions (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["data structures", "dp", "greedy"], "solvedCount": 5636}, {"contestId": 1718, "index": "A1", "name": "Burenka and Traditions (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy"], "solvedCount": 6171}, {"contestId": 1717, "index": "F", "name": "Madoka and The First Session", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["constructive algorithms", "flows", "graph matchings", "graphs", "implementation"], "solvedCount": 594}, {"contestId": 1717, "index": "E", "name": "Madoka and The Best University", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["math", "number theory"], "solvedCount": 3094}, {"contestId": 1717, "index": "D", "name": "Madoka and The Corruption Scheme", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "solvedCount": 4723}, {"contestId": 1717, "index": "C", "name": "Madoka and Formal Statement", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 15411}, {"contestId": 1717, "index": "B", "name": "Madoka and Underground Competitions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 15297}, {"contestId": 1717, "index": "A", "name": "Madoka and Strange Thoughts", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 20320}, {"contestId": 1716, "index": "F", "name": "Bags with Balls", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 1221}, {"contestId": 1716, "index": "E", "name": "Swap and Maximum Block", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "data structures", "dfs and similar", "divide and conquer", "dp"], "solvedCount": 1220}, {"contestId": 1716, "index": "D", "name": "Chip Move", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "math"], "solvedCount": 5777}, {"contestId": 1716, "index": "C", "name": "Robot in a Hallway", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy", "implementation", "ternary search"], "solvedCount": 4424}, {"contestId": 1716, "index": "B", "name": "Permutation Chain", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 21762}, {"contestId": 1716, "index": "A", "name": "2-3 Moves", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 34620}, {"contestId": 1715, "index": "F", "name": "Crop Squares", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "geometry", "interactive", "math"], "solvedCount": 562}, {"contestId": 1715, "index": "E", "name": "Long Way Home", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "dp", "geometry", "graphs", "greedy", "shortest paths"], "solvedCount": 1965}, {"contestId": 1715, "index": "D", "name": "2+ doors", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["2-sat", "bitmasks", "graphs", "greedy"], "solvedCount": 5571}, {"contestId": 1715, "index": "C", "name": "Monoblock", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["combinatorics", "data structures", "implementation", "math"], "solvedCount": 9574}, {"contestId": 1715, "index": "B", "name": "Beautiful Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 27435}, {"contestId": 1715, "index": "A", "name": "Crossmarket", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 24019}, {"contestId": 1714, "index": "G", "name": "Path Prefixes", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 8846}, {"contestId": 1714, "index": "F", "name": "Build a Tree and That Is It", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 3521}, {"contestId": 1714, "index": "E", "name": "Add Modulo 10", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "math", "number theory"], "solvedCount": 20055}, {"contestId": 1714, "index": "D", "name": "Color with Occurrences", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "solvedCount": 9888}, {"contestId": 1714, "index": "C", "name": "Minimum  Varied Number", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 32366}, {"contestId": 1714, "index": "B", "name": "Remove Prefix", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 32067}, {"contestId": 1714, "index": "A", "name": "Everyone Loves to Sleep", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "math"], "solvedCount": 31556}, {"contestId": 1713, "index": "F", "name": "Lost Array", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "solvedCount": 617}, {"contestId": 1713, "index": "E", "name": "Cross Swapping", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["2-sat", "data structures", "dsu", "greedy", "matrices"], "solvedCount": 1854}, {"contestId": 1713, "index": "D", "name": "Tournament Countdown", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "interactive", "number theory", "probabilities"], "solvedCount": 6021}, {"contestId": 1713, "index": "C", "name": "Build Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1200, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 18340}, {"contestId": 1713, "index": "B", "name": "Optimal Reduction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 22124}, {"contestId": 1713, "index": "A", "name": "Traveling Salesman Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "greedy", "implementation"], "solvedCount": 22467}, {"contestId": 1712, "index": "F", "name": "Triameter", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 415}, {"contestId": 1712, "index": "E2", "name": "LCM Sum (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2500, "tags": ["brute force", "data structures", "math", "number theory", "two pointers"], "solvedCount": 1501}, {"contestId": 1712, "index": "E1", "name": "LCM Sum (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "brute force", "combinatorics", "math", "number theory", "two pointers"], "solvedCount": 2341}, {"contestId": 1712, "index": "D", "name": "Empty Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "shortest paths"], "solvedCount": 4872}, {"contestId": 1712, "index": "C", "name": "Sort Zero", "type": "PROGRAMMING", "points": 1500.0, "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 20748}, {"contestId": 1712, "index": "B", "name": "Woeful Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 22082}, {"contestId": 1712, "index": "A", "name": "Wonderful Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 24612}, {"contestId": 1711, "index": "B", "name": "Party", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "graphs"], "solvedCount": 14074}, {"contestId": 1711, "index": "A", "name": "Perfect Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 25923}, {"contestId": 1710, "index": "E", "name": "Two Arrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["binary search", "games", "graph matchings"], "solvedCount": 560}, {"contestId": 1710, "index": "D", "name": "Recover the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["constructive algorithms", "trees"], "solvedCount": 533}, {"contestId": 1710, "index": "C", "name": "XOR Triangle", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "math"], "solvedCount": 1526}, {"contestId": 1710, "index": "B", "name": "Rain", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "brute force", "data structures", "geometry", "greedy", "implementation", "math"], "solvedCount": 2657}, {"contestId": 1710, "index": "A", "name": "Color the Picture", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 11599}, {"contestId": 1709, "index": "F", "name": "Multiset of Strings", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "brute force", "dp", "fft", "flows", "graphs", "math", "meet-in-the-middle", "trees"], "solvedCount": 637}, {"contestId": 1709, "index": "E", "name": "XOR Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "solvedCount": 3435}, {"contestId": 1709, "index": "D", "name": "Rorororobot", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "greedy", "math"], "solvedCount": 9376}, {"contestId": 1709, "index": "C", "name": "Recover an RBS", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 9603}, {"contestId": 1709, "index": "B", "name": "Also Try Minecraft", "type": "PROGRAMMING", "rating": 900, "tags": ["data structures", "dp", "implementation"], "solvedCount": 24563}, {"contestId": 1709, "index": "A", "name": "Three Doors", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 30724}, {"contestId": 1708, "index": "B", "name": "Difference of GCDs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 24449}, {"contestId": 1708, "index": "A", "name": "Difference Operations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 22237}, {"contestId": 1707, "index": "F", "name": "Bugaboo", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["bitmasks", "constructive algorithms", "dp", "number theory"], "solvedCount": 167}, {"contestId": 1707, "index": "E", "name": "Replace", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["binary search", "data structures"], "solvedCount": 892}, {"contestId": 1707, "index": "D", "name": "Partial Virtual Trees", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "solvedCount": 759}, {"contestId": 1707, "index": "C", "name": "DFS Trees", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1695}, {"contestId": 1707, "index": "B", "name": "Difference Array", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["brute force", "data structures", "implementation", "sortings"], "solvedCount": 6073}, {"contestId": 1707, "index": "A", "name": "Doremy's IQ", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "solvedCount": 14690}, {"contestId": 1706, "index": "E", "name": "Qpwoeirut and Vertices", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "trees"], "solvedCount": 3224}, {"contestId": 1706, "index": "D2", "name": "Chopping Carrots (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 1852}, {"contestId": 1706, "index": "D1", "name": "Chopping Carrots (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "number theory"], "solvedCount": 7458}, {"contestId": 1706, "index": "C", "name": "Qpwoeirut And The City", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp", "flows", "greedy", "implementation"], "solvedCount": 15759}, {"contestId": 1706, "index": "B", "name": "Making Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "greedy", "math"], "solvedCount": 17201}, {"contestId": 1706, "index": "A", "name": "Another String Minimization Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["2-sat", "constructive algorithms", "greedy", "string suffix structures", "strings"], "solvedCount": 23580}, {"contestId": 1705, "index": "F", "name": "Mark and the Online Exam", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "constructive algorithms", "interactive", "probabilities"], "solvedCount": 651}, {"contestId": 1705, "index": "E", "name": "Mark and Professor Koro", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "data structures", "greedy"], "solvedCount": 2259}, {"contestId": 1705, "index": "D", "name": "Mark and Lightbulbs", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["combinatorics", "constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 6770}, {"contestId": 1705, "index": "C", "name": "Mark and His Unfinished Essay", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "implementation"], "solvedCount": 14063}, {"contestId": 1705, "index": "B", "name": "Mark the Dust Sweeper", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 24360}, {"contestId": 1705, "index": "A", "name": "Mark the Photographer", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 26198}, {"contestId": 1704, "index": "H2", "name": "Game of AI (hard version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["combinatorics", "fft", "math"], "solvedCount": 103}, {"contestId": 1704, "index": "H1", "name": "Game of AI (easy version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["combinatorics", "constructive algorithms", "dp", "fft", "math"], "solvedCount": 227}, {"contestId": 1704, "index": "G", "name": "Mio and Lucky Array", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "fft", "math", "strings"], "solvedCount": 129}, {"contestId": 1704, "index": "F", "name": "Colouring Game", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "dp", "games"], "solvedCount": 1233}, {"contestId": 1704, "index": "E", "name": "Count Seconds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "math"], "solvedCount": 2518}, {"contestId": 1704, "index": "D", "name": "Magical Array", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "hashing", "implementation", "math"], "solvedCount": 5253}, {"contestId": 1704, "index": "C", "name": "Virus", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 20189}, {"contestId": 1704, "index": "B", "name": "Luke is a Foodie", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 23786}, {"contestId": 1704, "index": "A", "name": "Two 0-1 Sequences", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 16379}, {"contestId": 1703, "index": "G", "name": "Good Key, Bad Key", "type": "PROGRAMMING", "rating": 1600, "tags": ["bitmasks", "brute force", "dp", "greedy", "math"], "solvedCount": 11942}, {"contestId": 1703, "index": "F", "name": "Yet Another Problem About Pairs Satisfying an Inequality", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "data structures", "dp", "greedy", "sortings"], "solvedCount": 24932}, {"contestId": 1703, "index": "E", "name": "Mirror Grid", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"], "solvedCount": 23044}, {"contestId": 1703, "index": "D", "name": "Double Strings", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "data structures", "strings"], "solvedCount": 27734}, {"contestId": 1703, "index": "C", "name": "Cypher", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 38695}, {"contestId": 1703, "index": "B", "name": "ICPC Balloons", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "implementation"], "solvedCount": 58591}, {"contestId": 1703, "index": "A", "name": "YES or YES?", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 83963}, {"contestId": 1702, "index": "G2", "name": "Passable Paths (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 5235}, {"contestId": 1702, "index": "G1", "name": "Passable Paths (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "trees"], "solvedCount": 5967}, {"contestId": 1702, "index": "F", "name": "Equate Multisets", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "data structures", "greedy", "math", "number theory"], "solvedCount": 9081}, {"contestId": 1702, "index": "E", "name": "Split Into Two Sets", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 15726}, {"contestId": 1702, "index": "D", "name": "Not a Cheap String", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy"], "solvedCount": 24991}, {"contestId": 1702, "index": "C", "name": "Train and Queries", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy"], "solvedCount": 23953}, {"contestId": 1702, "index": "B", "name": "Polycarp Writes a String from Memory", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 28590}, {"contestId": 1702, "index": "A", "name": "Round Down the Price", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 36801}, {"contestId": 1701, "index": "F", "name": "Points", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "data structures", "implementation", "math", "matrices"], "solvedCount": 1046}, {"contestId": 1701, "index": "E", "name": "Text Editor", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "dp", "greedy", "strings"], "solvedCount": 1301}, {"contestId": 1701, "index": "D", "name": "Permutation Restoration", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "greedy", "math", "sortings", "two pointers"], "solvedCount": 6090}, {"contestId": 1701, "index": "C", "name": "Schedule Management", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "greedy", "implementation", "two pointers"], "solvedCount": 20466}, {"contestId": 1701, "index": "B", "name": "Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 20565}, {"contestId": 1701, "index": "A", "name": "Grass Field", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 27013}, {"contestId": 1700, "index": "F", "name": "Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 999}, {"contestId": 1700, "index": "E", "name": "Serega the Pirate", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "constructive algorithms"], "solvedCount": 920}, {"contestId": 1700, "index": "D", "name": "River Locks", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "dp", "greedy", "math"], "solvedCount": 6603}, {"contestId": 1700, "index": "C", "name": "Helping the Nature", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 11761}, {"contestId": 1700, "index": "B", "name": "Palindromic Numbers ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 19572}, {"contestId": 1700, "index": "A", "name": "Optimal Path", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 23451}, {"contestId": 1699, "index": "E", "name": "Three Days Grace", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 1318}, {"contestId": 1699, "index": "D", "name": "Almost Triple Deletions", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"], "solvedCount": 3366}, {"contestId": 1699, "index": "C", "name": "The Third Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 10451}, {"contestId": 1699, "index": "B", "name": "Almost Ternary Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["bitmasks", "constructive algorithms", "matrices"], "solvedCount": 20784}, {"contestId": 1699, "index": "A", "name": "The Third Three Number Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 24475}, {"contestId": 1698, "index": "G", "name": "Long Binary String", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["bitmasks", "math", "matrices", "meet-in-the-middle", "number theory"], "solvedCount": 367}, {"contestId": 1698, "index": "F", "name": "Equal Reversal", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "graphs", "implementation", "math"], "solvedCount": 702}, {"contestId": 1698, "index": "E", "name": "PermutationForces II", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "combinatorics", "greedy", "sortings", "trees", "two pointers"], "solvedCount": 1723}, {"contestId": 1698, "index": "D", "name": "Fixed Point Guessing", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 10820}, {"contestId": 1698, "index": "C", "name": "3SUM Closure", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "data structures"], "solvedCount": 19363}, {"contestId": 1698, "index": "B", "name": "Rising Sand", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 21265}, {"contestId": 1698, "index": "A", "name": "XOR Mixup", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["bitmasks", "brute force"], "solvedCount": 31297}, {"contestId": 1697, "index": "F", "name": "Too Many Constraints", "type": "PROGRAMMING", "rating": 2800, "tags": ["2-sat", "constructive algorithms", "graphs", "implementation"], "solvedCount": 650}, {"contestId": 1697, "index": "E", "name": "Coloring", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "combinatorics", "constructive algorithms", "dp", "geometry", "graphs", "greedy", "implementation", "math"], "solvedCount": 1357}, {"contestId": 1697, "index": "D", "name": "Guess The String", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 4780}, {"contestId": 1697, "index": "C", "name": "awoo's Favorite Problem", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "implementation", "strings", "two pointers"], "solvedCount": 15327}, {"contestId": 1697, "index": "B", "name": "Promo", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "sortings"], "solvedCount": 28975}, {"contestId": 1697, "index": "A", "name": "Parkway Walk", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 26395}, {"contestId": 1696, "index": "H", "name": "Maximum Product?", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["brute force", "combinatorics", "dp", "greedy", "implementation", "math", "two pointers"], "solvedCount": 180}, {"contestId": 1696, "index": "G", "name": "Fishingprince Plays With Array Again", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["brute force", "data structures", "geometry", "math"], "solvedCount": 301}, {"contestId": 1696, "index": "F", "name": "Tree Recovery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 1053}, {"contestId": 1696, "index": "E", "name": "Placing Jinas", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["combinatorics", "math"], "solvedCount": 4568}, {"contestId": 1696, "index": "D", "name": "Permutation Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "greedy", "shortest paths"], "solvedCount": 5759}, {"contestId": 1696, "index": "C", "name": "Fishingprince Plays With Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 12280}, {"contestId": 1696, "index": "B", "name": "NIT Destroys the Universe", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy"], "solvedCount": 28450}, {"contestId": 1696, "index": "A", "name": "NIT orz!", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "greedy"], "solvedCount": 19670}, {"contestId": 1695, "index": "E", "name": "Ambiguous Dominoes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 474}, {"contestId": 1695, "index": "D2", "name": "Tree Queries (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2153}, {"contestId": 1695, "index": "D1", "name": "Tree Queries (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2335}, {"contestId": 1695, "index": "C", "name": "Zero Path", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 12779}, {"contestId": 1695, "index": "B", "name": "Circle Game", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["games", "greedy"], "solvedCount": 19401}, {"contestId": 1695, "index": "A", "name": "Subrectangle Guess", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games"], "solvedCount": 16636}, {"contestId": 1694, "index": "B", "name": "Paranoid String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20172}, {"contestId": 1694, "index": "A", "name": "Creep", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 23290}, {"contestId": 1693, "index": "F", "name": "I Might Be Wrong", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["binary search", "greedy", "two pointers"], "solvedCount": 546}, {"contestId": 1693, "index": "E", "name": "Outermost Maximums", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "greedy"], "solvedCount": 488}, {"contestId": 1693, "index": "D", "name": "Decinc Dividing", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 1032}, {"contestId": 1693, "index": "C", "name": "Keshi in Search of AmShZ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 2934}, {"contestId": 1693, "index": "B", "name": "Fake Plastic Trees", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 9196}, {"contestId": 1693, "index": "A", "name": "Directional Increase", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 17054}, {"contestId": 1692, "index": "H", "name": "Gambling", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 8636}, {"contestId": 1692, "index": "G", "name": "2^Sort", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "dp", "sortings", "two pointers"], "solvedCount": 22177}, {"contestId": 1692, "index": "F", "name": "3SUM", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "math"], "solvedCount": 25627}, {"contestId": 1692, "index": "E", "name": "Binary Deque", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "implementation", "two pointers"], "solvedCount": 27642}, {"contestId": 1692, "index": "D", "name": "The Clock", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 20785}, {"contestId": 1692, "index": "C", "name": "Where's the Bishop?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 37068}, {"contestId": 1692, "index": "B", "name": "All Distinct", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 37072}, {"contestId": 1692, "index": "A", "name": "Marathon", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 76608}, {"contestId": 1691, "index": "F", "name": "K-Set Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "solvedCount": 1074}, {"contestId": 1691, "index": "E", "name": "Number of Groups", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "solvedCount": 1959}, {"contestId": 1691, "index": "D", "name": "Max GEQ Sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "implementation", "two pointers"], "solvedCount": 6670}, {"contestId": 1691, "index": "C", "name": "Sum of Substrings", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"], "solvedCount": 16673}, {"contestId": 1691, "index": "B", "name": "Shoe Shuffling", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "solvedCount": 28832}, {"contestId": 1691, "index": "A", "name": "Beat The Odds", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 31542}, {"contestId": 1690, "index": "G", "name": "Count the Trains", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 3854}, {"contestId": 1690, "index": "F", "name": "Shifting String", "type": "PROGRAMMING", "rating": 1700, "tags": ["graphs", "math", "number theory", "strings"], "solvedCount": 8056}, {"contestId": 1690, "index": "E", "name": "Price Maximization", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy", "math", "two pointers"], "solvedCount": 16304}, {"contestId": 1690, "index": "D", "name": "Black and White Stripe", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "two pointers"], "solvedCount": 38226}, {"contestId": 1690, "index": "C", "name": "Restoring the Duration of Tasks", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 27302}, {"contestId": 1690, "index": "B", "name": "Array Decrements", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 26421}, {"contestId": 1690, "index": "A", "name": "Print a Pedestal (Codeforces logo?)", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 34867}, {"contestId": 1689, "index": "E", "name": "ANDfinity", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 1301}, {"contestId": 1689, "index": "D", "name": "Lena and Matrix", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["data structures", "dp", "geometry", "shortest paths"], "solvedCount": 4511}, {"contestId": 1689, "index": "C", "name": "Infected Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 12402}, {"contestId": 1689, "index": "B", "name": "Mystic Permutation", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["data structures", "greedy"], "solvedCount": 18403}, {"contestId": 1689, "index": "A", "name": "Lex String", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 17387}, {"contestId": 1688, "index": "C", "name": "Manipulating History", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 8547}, {"contestId": 1688, "index": "B", "name": "Patchouli's Magical Talisman", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["bitmasks", "constructive algorithms", "greedy", "sortings"], "solvedCount": 18769}, {"contestId": 1688, "index": "A", "name": "Cirno's Perfect Bitmasks Classroom", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "brute force"], "solvedCount": 22752}, {"contestId": 1687, "index": "F", "name": "Koishi's Unconscious Permutation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["fft", "math"], "solvedCount": 98}, {"contestId": 1687, "index": "E", "name": "Become Big For Me", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 291}, {"contestId": 1687, "index": "D", "name": "Cute number", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["binary search", "brute force", "data structures", "dsu", "implementation", "math"], "solvedCount": 699}, {"contestId": 1687, "index": "C", "name": "Sanae and Giant Robot", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "brute force", "data structures", "dsu", "greedy", "sortings"], "solvedCount": 1593}, {"contestId": 1687, "index": "B", "name": "Railway System", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "greedy", "interactive", "sortings"], "solvedCount": 3980}, {"contestId": 1687, "index": "A", "name": "The Enchanted Forest", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "greedy"], "solvedCount": 10988}, {"contestId": 1686, "index": "B", "name": "Odd Subarrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["dp", "greedy"], "solvedCount": 19034}, {"contestId": 1686, "index": "A", "name": "Everything Everywhere All But One", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 20905}, {"contestId": 1685, "index": "E", "name": "The Ultimate LIS Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "greedy"], "solvedCount": 188}, {"contestId": 1685, "index": "D2", "name": "Permutation Weight (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 123}, {"contestId": 1685, "index": "D1", "name": "Permutation Weight (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "dsu"], "solvedCount": 478}, {"contestId": 1685, "index": "C", "name": "Bring Balance", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 1237}, {"contestId": 1685, "index": "B", "name": "Linguistics", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["greedy", "implementation", "sortings", "strings"], "solvedCount": 3498}, {"contestId": 1685, "index": "A", "name": "Circular Local MiniMax", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 18225}, {"contestId": 1684, "index": "H", "name": "Hard Cut", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "math"], "solvedCount": 268}, {"contestId": 1684, "index": "G", "name": "Euclid Guess", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "flows", "graph matchings", "math", "number theory"], "solvedCount": 705}, {"contestId": 1684, "index": "F", "name": "Diverse Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "two pointers"], "solvedCount": 1011}, {"contestId": 1684, "index": "E", "name": "MEX vs DIFF", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 3390}, {"contestId": 1684, "index": "D", "name": "Traps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 10324}, {"contestId": 1684, "index": "C", "name": "Column Swapping", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 12968}, {"contestId": 1684, "index": "B", "name": "Z mod X = C", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 21485}, {"contestId": 1684, "index": "A", "name": "Digit Minimization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "games", "math", "strings"], "solvedCount": 24482}, {"contestId": 1682, "index": "F", "name": "MCMF?", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["data structures", "flows", "graphs", "greedy", "sortings", "two pointers"], "solvedCount": 359}, {"contestId": 1682, "index": "E", "name": "Unordered Swaps", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 671}, {"contestId": 1682, "index": "D", "name": "Circular Spanning Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 3521}, {"contestId": 1682, "index": "C", "name": "LIS or Reverse LIS?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 15921}, {"contestId": 1682, "index": "B", "name": "AND Sorting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "sortings"], "solvedCount": 22279}, {"contestId": 1682, "index": "A", "name": "Palindromic Indices", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 19652}, {"contestId": 1681, "index": "F", "name": "Unique Occurrences", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "solvedCount": 2050}, {"contestId": 1681, "index": "E", "name": "Labyrinth Adventures", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "matrices", "shortest paths"], "solvedCount": 858}, {"contestId": 1681, "index": "D", "name": "Required Length", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dfs and similar", "dp", "hashing", "shortest paths"], "solvedCount": 10398}, {"contestId": 1681, "index": "C", "name": "Double Sort", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 18328}, {"contestId": 1681, "index": "B", "name": "Card Trick", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 20658}, {"contestId": 1681, "index": "A", "name": "Game with Cards", "type": "PROGRAMMING", "rating": 800, "tags": ["games", "greedy"], "solvedCount": 21451}, {"contestId": 1680, "index": "F", "name": "Lenient Vertex Cover", "type": "PROGRAMMING", "rating": 2600, "tags": ["dfs and similar", "divide and conquer", "dsu", "graphs", "trees"], "solvedCount": 817}, {"contestId": 1680, "index": "E", "name": "Moving Chips", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "dp", "greedy"], "solvedCount": 4079}, {"contestId": 1680, "index": "D", "name": "Dog Walking", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "greedy", "math"], "solvedCount": 1270}, {"contestId": 1680, "index": "C", "name": "Binary String", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "greedy", "strings", "two pointers"], "solvedCount": 10635}, {"contestId": 1680, "index": "B", "name": "Robots", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 18831}, {"contestId": 1680, "index": "A", "name": "Minimums and Maximums", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 22051}, {"contestId": 1679, "index": "F", "name": "Formalism for Formalism", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "dp", "math"], "solvedCount": 639}, {"contestId": 1679, "index": "E", "name": "Typical Party in Dorm", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp", "strings"], "solvedCount": 1309}, {"contestId": 1679, "index": "D", "name": "Toss a Coin to Your Graph...", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "dfs and similar", "dp", "graphs"], "solvedCount": 5480}, {"contestId": 1679, "index": "C", "name": "Rooks Defenders", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 11082}, {"contestId": 1679, "index": "B", "name": "Stone Age Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["data structures", "implementation"], "solvedCount": 23011}, {"contestId": 1679, "index": "A", "name": "AvtoBus", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 31723}, {"contestId": 1678, "index": "B2", "name": "Tokitsukaze and Good 01-String (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "greedy", "implementation"], "solvedCount": 7009}, {"contestId": 1678, "index": "B1", "name": "Tokitsukaze and Good 01-String (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["implementation"], "solvedCount": 16455}, {"contestId": 1678, "index": "A", "name": "Tokitsukaze and All Zero Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 18683}, {"contestId": 1677, "index": "F", "name": "Tokitsukaze and Gems", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp", "math"], "solvedCount": 102}, {"contestId": 1677, "index": "E", "name": "Tokitsukaze and Beautiful Subsegments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 623}, {"contestId": 1677, "index": "D", "name": "Tokitsukaze and Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math"], "solvedCount": 1373}, {"contestId": 1677, "index": "C", "name": "Tokitsukaze and Two Colorful Tapes", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 3886}, {"contestId": 1677, "index": "B", "name": "Tokitsukaze and Meeting", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "implementation", "math"], "solvedCount": 4423}, {"contestId": 1677, "index": "A", "name": "Tokitsukaze and Strange Inequality", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "dp"], "solvedCount": 9047}, {"contestId": 1676, "index": "H2", "name": "Maximum Crossings (Hard Version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 12162}, {"contestId": 1676, "index": "H1", "name": "Maximum Crossings (Easy Version)", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"], "solvedCount": 15460}, {"contestId": 1676, "index": "G", "name": "White-Black Balanced Subtrees", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 19802}, {"contestId": 1676, "index": "F", "name": "Longest Strike", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 18884}, {"contestId": 1676, "index": "E", "name": "Eating Queries", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 30224}, {"contestId": 1676, "index": "D", "name": "X-Sum", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 27721}, {"contestId": 1676, "index": "C", "name": "Most Similar Words", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "implementation", "implementation", "math", "strings"], "solvedCount": 32660}, {"contestId": 1676, "index": "B", "name": "Equal Candies", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math", "sortings"], "solvedCount": 55235}, {"contestId": 1676, "index": "A", "name": "Lucky?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 76373}, {"contestId": 1675, "index": "G", "name": "Sorting Pancakes", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"], "solvedCount": 2000}, {"contestId": 1675, "index": "F", "name": "Vlad and Unfinished Business", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 5935}, {"contestId": 1675, "index": "E", "name": "Replace With the Previous, Minimize", "type": "PROGRAMMING", "rating": 1500, "tags": ["dsu", "greedy", "strings"], "solvedCount": 11582}, {"contestId": 1675, "index": "D", "name": "Vertical Paths", "type": "PROGRAMMING", "rating": 1300, "tags": ["graphs", "implementation", "trees"], "solvedCount": 14129}, {"contestId": 1675, "index": "C", "name": "Detective Task", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 18923}, {"contestId": 1675, "index": "B", "name": "Make It Increasing", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 34822}, {"contestId": 1675, "index": "A", "name": "Food for Animals", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 35120}, {"contestId": 1674, "index": "G", "name": "Remove Directed Edges", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp", "graphs"], "solvedCount": 2744}, {"contestId": 1674, "index": "F", "name": "Desktop Rearrangement", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 5371}, {"contestId": 1674, "index": "E", "name": "Breaking the Wall", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 6905}, {"contestId": 1674, "index": "D", "name": "A-B-C Sort", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 17287}, {"contestId": 1674, "index": "C", "name": "Infinite Replacement", "type": "PROGRAMMING", "rating": 1000, "tags": ["combinatorics", "implementation", "strings"], "solvedCount": 25039}, {"contestId": 1674, "index": "B", "name": "Dictionary", "type": "PROGRAMMING", "rating": 800, "tags": ["combinatorics", "math"], "solvedCount": 27844}, {"contestId": 1674, "index": "A", "name": "Number Transformation", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 27307}, {"contestId": 1673, "index": "F", "name": "Anti-Theft Road Planning", "type": "PROGRAMMING", "points": 3250.0, "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "interactive", "math"], "solvedCount": 903}, {"contestId": 1673, "index": "E", "name": "Power or XOR?", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "math", "number theory"], "solvedCount": 764}, {"contestId": 1673, "index": "D", "name": "Lost Arithmetic Progression", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 3465}, {"contestId": 1673, "index": "C", "name": "Palindrome Basis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp", "math", "number theory"], "solvedCount": 15287}, {"contestId": 1673, "index": "B", "name": "A Perfectly Balanced String?", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["brute force", "greedy", "strings"], "solvedCount": 18252}, {"contestId": 1673, "index": "A", "name": "Subtle Substring Subtraction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "greedy", "strings"], "solvedCount": 18819}, {"contestId": 1672, "index": "I", "name": "PermutationForces", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["data structures", "greedy"], "solvedCount": 216}, {"contestId": 1672, "index": "H", "name": "Zigu Zagu", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 1082}, {"contestId": 1672, "index": "G", "name": "Cross Xor", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["constructive algorithms", "graphs", "math", "matrices"], "solvedCount": 366}, {"contestId": 1672, "index": "F2", "name": "Checker for Array Shuffling", "type": "PROGRAMMING", "points": 1250.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 878}, {"contestId": 1672, "index": "F1", "name": "Array Shuffling", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 3345}, {"contestId": 1672, "index": "E", "name": "notepad.exe", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "greedy", "interactive"], "solvedCount": 2436}, {"contestId": 1672, "index": "D", "name": "Cyclic Rotation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "solvedCount": 6687}, {"contestId": 1672, "index": "C", "name": "Unequal Array", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 13698}, {"contestId": 1672, "index": "B", "name": "I love AAAB", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 16223}, {"contestId": 1672, "index": "A", "name": "Log Chopping", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["games", "implementation", "math"], "solvedCount": 16538}, {"contestId": 1671, "index": "F", "name": "Permutation Counting", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "combinatorics", "dp", "fft", "math"], "solvedCount": 371}, {"contestId": 1671, "index": "E", "name": "Preorder", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "divide and conquer", "dp", "dsu", "hashing", "sortings", "trees"], "solvedCount": 2971}, {"contestId": 1671, "index": "D", "name": "Insert a Progression", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 8182}, {"contestId": 1671, "index": "C", "name": "Dolce Vita", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "brute force", "greedy", "math"], "solvedCount": 21146}, {"contestId": 1671, "index": "B", "name": "Consecutive Points Segment", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "math", "sortings"], "solvedCount": 19224}, {"contestId": 1671, "index": "A", "name": "String Building", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 20953}, {"contestId": 1670, "index": "F", "name": "Jee, You See?", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp"], "solvedCount": 1132}, {"contestId": 1670, "index": "E", "name": "Hemose on the Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "trees"], "solvedCount": 1859}, {"contestId": 1670, "index": "D", "name": "Very Suspicious", "type": "PROGRAMMING", "points": 2250.0, "rating": 1700, "tags": ["binary search", "brute force", "geometry", "greedy", "implementation", "math"], "solvedCount": 5436}, {"contestId": 1670, "index": "C", "name": "Where is the Pizza?", "type": "PROGRAMMING", "points": 1750.0, "rating": 1400, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "implementation", "math"], "solvedCount": 10613}, {"contestId": 1670, "index": "B", "name": "Dorms War", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "strings"], "solvedCount": 13158}, {"contestId": 1670, "index": "A", "name": "Prof. Slim", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 15768}, {"contestId": 1669, "index": "H", "name": "Maximal AND", "type": "PROGRAMMING", "rating": 1300, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 24103}, {"contestId": 1669, "index": "G", "name": "Fall Down", "type": "PROGRAMMING", "rating": 1200, "tags": ["dfs and similar", "implementation"], "solvedCount": 20508}, {"contestId": 1669, "index": "F", "name": "Eating Candies", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 32729}, {"contestId": 1669, "index": "E", "name": "2-Letter Strings", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "math", "strings"], "solvedCount": 19872}, {"contestId": 1669, "index": "D", "name": "Colorful Stamp", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 24105}, {"contestId": 1669, "index": "C", "name": "Odd/Even Increments", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "greedy", "implementation", "math"], "solvedCount": 38752}, {"contestId": 1669, "index": "B", "name": "Triple", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 49958}, {"contestId": 1669, "index": "A", "name": "Division?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 76803}, {"contestId": 1668, "index": "B", "name": "Social Distance", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "math", "sortings"], "solvedCount": 17425}, {"contestId": 1668, "index": "A", "name": "Direction Change", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 16571}, {"contestId": 1667, "index": "F", "name": "Yin Yang", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["implementation"], "solvedCount": 110}, {"contestId": 1667, "index": "E", "name": "Centroid Probabilities", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 741}, {"contestId": 1667, "index": "D", "name": "Edge Elimination", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "solvedCount": 712}, {"contestId": 1667, "index": "C", "name": "Half Queen Cover", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "math"], "solvedCount": 1811}, {"contestId": 1667, "index": "B", "name": "Optimal Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 4047}, {"contestId": 1667, "index": "A", "name": "Make it Increasing", "type": "PROGRAMMING", "points": 250.0, "rating": 1300, "tags": ["brute force", "greedy", "math"], "solvedCount": 15386}, {"contestId": 1666, "index": "L", "name": "Labyrinth", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "graphs"], "solvedCount": 3488}, {"contestId": 1666, "index": "K", "name": "Kingdom Partition", "type": "PROGRAMMING", "rating": 3200, "tags": ["flows"], "solvedCount": 297}, {"contestId": 1666, "index": "J", "name": "Job Lookup", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dp", "shortest paths", "trees"], "solvedCount": 1479}, {"contestId": 1666, "index": "I", "name": "Interactive Treasure Hunt", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "geometry", "interactive", "math"], "solvedCount": 1643}, {"contestId": 1666, "index": "H", "name": "Heroes of Might", "type": "PROGRAMMING", "rating": 3500, "tags": ["math"], "solvedCount": 76}, {"contestId": 1666, "index": "G", "name": "Global Warming", "type": "PROGRAMMING", "rating": 3100, "tags": ["geometry", "math"], "solvedCount": 145}, {"contestId": 1666, "index": "F", "name": "Fancy Stack", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp", "implementation"], "solvedCount": 1403}, {"contestId": 1666, "index": "E", "name": "Even Split", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "solvedCount": 812}, {"contestId": 1666, "index": "D", "name": "Deletive Editing", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy"], "solvedCount": 13992}, {"contestId": 1666, "index": "C", "name": "Connect the Points", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "constructive algorithms", "geometry"], "solvedCount": 3498}, {"contestId": 1666, "index": "B", "name": "Budget Distribution", "type": "PROGRAMMING", "rating": 3300, "tags": [], "solvedCount": 60}, {"contestId": 1666, "index": "A", "name": "Admissible Map", "type": "PROGRAMMING", "rating": 3300, "tags": [], "solvedCount": 131}, {"contestId": 1665, "index": "E", "name": "MinimizOR", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "brute force", "data structures", "divide and conquer", "greedy", "implementation", "two pointers"], "solvedCount": 1680}, {"contestId": 1665, "index": "D", "name": "GCD Guess", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "games", "interactive", "math", "number theory"], "solvedCount": 4313}, {"contestId": 1665, "index": "C", "name": "Tree Infection", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "greedy", "sortings", "trees"], "solvedCount": 9195}, {"contestId": 1665, "index": "B", "name": "Array Cloning Technique", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 26365}, {"contestId": 1665, "index": "A", "name": "GCD vs LCM", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 25066}, {"contestId": 1663, "index": "H", "name": "Cross-Language Program", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms"], "solvedCount": 1307}, {"contestId": 1663, "index": "G", "name": "Six Characters", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "strings"], "solvedCount": 216}, {"contestId": 1663, "index": "F", "name": "In Every Generation...", "type": "PROGRAMMING", "tags": ["*special", "strings"], "solvedCount": 363}, {"contestId": 1663, "index": "E", "name": "Are You Safe?", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 573}, {"contestId": 1663, "index": "D", "name": "Is it rated - 3", "type": "PROGRAMMING", "tags": ["*special", "combinatorics", "dp", "math"], "solvedCount": 1456}, {"contestId": 1663, "index": "C", "name": "P\u014dja Verdon", "type": "PROGRAMMING", "tags": ["*special", "implementation", "math"], "solvedCount": 5801}, {"contestId": 1663, "index": "B", "name": "Mike's Sequence", "type": "PROGRAMMING", "tags": ["*special", "divide and conquer", "implementation", "math"], "solvedCount": 3505}, {"contestId": 1663, "index": "A", "name": "Who Tested?", "type": "PROGRAMMING", "tags": ["*special", "expression parsing", "trees"], "solvedCount": 10760}, {"contestId": 1662, "index": "O", "name": "Circular Maze", "type": "PROGRAMMING", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "solvedCount": 1479}, {"contestId": 1662, "index": "N", "name": "Drone Photo", "type": "PROGRAMMING", "tags": ["combinatorics", "math", "sortings"], "solvedCount": 837}, {"contestId": 1662, "index": "M", "name": "Bottle Arrangements", "type": "PROGRAMMING", "tags": ["constructive algorithms"], "solvedCount": 3680}, {"contestId": 1662, "index": "L", "name": "Il Derby della Madonnina", "type": "PROGRAMMING", "tags": ["data structures", "dp", "math"], "solvedCount": 1175}, {"contestId": 1662, "index": "K", "name": "Pandemic Restrictions", "type": "PROGRAMMING", "tags": ["geometry", "ternary search"], "solvedCount": 351}, {"contestId": 1662, "index": "J", "name": "Training Camp", "type": "PROGRAMMING", "tags": ["flows", "graphs"], "solvedCount": 289}, {"contestId": 1662, "index": "I", "name": "Ice Cream Shop", "type": "PROGRAMMING", "tags": ["brute force", "implementation", "sortings"], "solvedCount": 2296}, {"contestId": 1662, "index": "H", "name": "Boundary", "type": "PROGRAMMING", "tags": ["brute force", "math"], "solvedCount": 3182}, {"contestId": 1662, "index": "G", "name": "Gastronomic Event", "type": "PROGRAMMING", "tags": ["dp", "greedy", "trees"], "solvedCount": 504}, {"contestId": 1662, "index": "F", "name": "Antennas", "type": "PROGRAMMING", "tags": ["data structures", "dfs and similar", "graphs", "graphs", "implementation", "implementation", "shortest paths", "shortest paths"], "solvedCount": 1126}, {"contestId": 1662, "index": "E", "name": "Round Table", "type": "PROGRAMMING", "tags": ["math"], "solvedCount": 158}, {"contestId": 1662, "index": "D", "name": "Evolution of Weasels", "type": "PROGRAMMING", "tags": ["greedy", "implementation", "strings"], "solvedCount": 1984}, {"contestId": 1662, "index": "C", "name": "European Trip", "type": "PROGRAMMING", "tags": ["dp", "graphs", "math", "matrices"], "solvedCount": 362}, {"contestId": 1662, "index": "B", "name": "Toys", "type": "PROGRAMMING", "tags": ["greedy", "strings"], "solvedCount": 144}, {"contestId": 1662, "index": "A", "name": "Organizing SWERC", "type": "PROGRAMMING", "tags": ["brute force", "implementation"], "solvedCount": 4585}, {"contestId": 1661, "index": "F", "name": "Teleporters", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "greedy"], "solvedCount": 708}, {"contestId": 1661, "index": "E", "name": "Narrow Components", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "dp", "dsu", "math", "trees"], "solvedCount": 1029}, {"contestId": 1661, "index": "D", "name": "Progressions Covering", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy"], "solvedCount": 5076}, {"contestId": 1661, "index": "C", "name": "Water the Trees", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "greedy", "math"], "solvedCount": 10002}, {"contestId": 1661, "index": "B", "name": "Getting Zero", "type": "PROGRAMMING", "rating": 1300, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 19281}, {"contestId": 1661, "index": "A", "name": "Array Balancing", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 18863}, {"contestId": 1660, "index": "F2", "name": "Promising String (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "implementation", "math", "strings"], "solvedCount": 2959}, {"contestId": 1660, "index": "F1", "name": "Promising String (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "implementation", "math", "strings"], "solvedCount": 7704}, {"contestId": 1660, "index": "E", "name": "Matrix and Shifts", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 7853}, {"contestId": 1660, "index": "D", "name": "Maximum Product Strikes Back", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "implementation", "math", "two pointers"], "solvedCount": 10138}, {"contestId": 1660, "index": "C", "name": "Get an Even String", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "strings"], "solvedCount": 20970}, {"contestId": 1660, "index": "B", "name": "Vlad and Candies", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 29014}, {"contestId": 1660, "index": "A", "name": "Vasya and Coins", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 37969}, {"contestId": 1659, "index": "F", "name": "Tree and Permutation Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "games", "graphs", "trees"], "solvedCount": 234}, {"contestId": 1659, "index": "E", "name": "AND-MEX Walk", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 1803}, {"contestId": 1659, "index": "D", "name": "Reverse Sort Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math", "two pointers"], "solvedCount": 4311}, {"contestId": 1659, "index": "C", "name": "Line Empire", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "brute force", "dp", "greedy", "implementation", "math"], "solvedCount": 12844}, {"contestId": 1659, "index": "B", "name": "Bit Flipping", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "greedy", "strings"], "solvedCount": 11708}, {"contestId": 1659, "index": "A", "name": "Red Versus Blue", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 24677}, {"contestId": 1658, "index": "F", "name": "Juju and Binary String", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 863}, {"contestId": 1658, "index": "E", "name": "Gojou and Matrix Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dp", "games", "hashing", "implementation", "math", "number theory", "sortings"], "solvedCount": 1133}, {"contestId": 1658, "index": "D2", "name": "388535 (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["bitmasks", "brute force", "data structures", "math"], "solvedCount": 2867}, {"contestId": 1658, "index": "D1", "name": "388535 (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["bitmasks", "math"], "solvedCount": 9672}, {"contestId": 1658, "index": "C", "name": "Shinju and the Lost Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 9765}, {"contestId": 1658, "index": "B", "name": "Marin and Anti-coprime Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 19146}, {"contestId": 1658, "index": "A", "name": "Marin and Photoshoot", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 20723}, {"contestId": 1657, "index": "F", "name": "Words on Tree", "type": "PROGRAMMING", "rating": 2600, "tags": ["2-sat", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 661}, {"contestId": 1657, "index": "E", "name": "Star MST", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "dp", "graph matchings", "math"], "solvedCount": 2317}, {"contestId": 1657, "index": "D", "name": "For Gamers. By Gamers.", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "greedy", "math", "sortings"], "solvedCount": 5171}, {"contestId": 1657, "index": "C", "name": "Bracket Sequence Deletion", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 17441}, {"contestId": 1657, "index": "B", "name": "XY Sequence", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 23289}, {"contestId": 1657, "index": "A", "name": "Integer Moves", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 24524}, {"contestId": 1656, "index": "I", "name": "Neighbour Ordering", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["constructive algorithms", "graphs"], "solvedCount": 143}, {"contestId": 1656, "index": "H", "name": "Equal LCM Subsets", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["data structures", "math", "number theory"], "solvedCount": 680}, {"contestId": 1656, "index": "G", "name": "Cycle Palindrome", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 445}, {"contestId": 1656, "index": "F", "name": "Parametric MST", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["binary search", "constructive algorithms", "graphs", "greedy", "math", "sortings"], "solvedCount": 1136}, {"contestId": 1656, "index": "E", "name": "Equal Tree Sums", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "math", "trees"], "solvedCount": 3696}, {"contestId": 1656, "index": "D", "name": "K-good", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 7291}, {"contestId": 1656, "index": "C", "name": "Make Equal With Mod", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["constructive algorithms", "math", "number theory", "sortings"], "solvedCount": 20432}, {"contestId": 1656, "index": "B", "name": "Subtract Operation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "greedy", "math", "two pointers"], "solvedCount": 22715}, {"contestId": 1656, "index": "A", "name": "Good Pairs", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "sortings"], "solvedCount": 20082}, {"contestId": 1654, "index": "H", "name": "Three Minimums", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "divide and conquer", "dp", "fft", "math"], "solvedCount": 92}, {"contestId": 1654, "index": "G", "name": "Snowy Mountain", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 431}, {"contestId": 1654, "index": "F", "name": "Minimal String Xoration", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "data structures", "divide and conquer", "greedy", "hashing", "sortings", "strings"], "solvedCount": 1383}, {"contestId": 1654, "index": "E", "name": "Arithmetic Operations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "data structures", "graphs", "math"], "solvedCount": 2253}, {"contestId": 1654, "index": "D", "name": "Potion Brewing Class", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "math", "number theory", "trees"], "solvedCount": 2971}, {"contestId": 1654, "index": "C", "name": "Alice and the Cake", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 14253}, {"contestId": 1654, "index": "B", "name": "Prefix Removals", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["strings"], "solvedCount": 16316}, {"contestId": 1654, "index": "A", "name": "Maximum Cake Tastiness", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "sortings"], "solvedCount": 19135}, {"contestId": 1651, "index": "F", "name": "Tower Defense", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "brute force", "data structures"], "solvedCount": 442}, {"contestId": 1651, "index": "E", "name": "Sum of Matchings", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "graph matchings", "greedy", "math"], "solvedCount": 574}, {"contestId": 1651, "index": "D", "name": "Nearest Excluded Points", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 5907}, {"contestId": 1651, "index": "C", "name": "Fault-tolerant Network", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 11304}, {"contestId": 1651, "index": "B", "name": "Prove Him Wrong", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20047}, {"contestId": 1651, "index": "A", "name": "Playoff", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 26238}, {"contestId": 1650, "index": "G", "name": "Counting Shortcuts", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 2724}, {"contestId": 1650, "index": "F", "name": "Vitaly and Advanced Useless Algorithms", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "greedy", "implementation"], "solvedCount": 1597}, {"contestId": 1650, "index": "E", "name": "Rescheduling the Exam", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "solvedCount": 4363}, {"contestId": 1650, "index": "D", "name": "Twist the Permutation", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 13742}, {"contestId": 1650, "index": "C", "name": "Weight of the System of Nested Segments", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "hashing", "implementation", "sortings"], "solvedCount": 17783}, {"contestId": 1650, "index": "B", "name": "DIV + MOD", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 29058}, {"contestId": 1650, "index": "A", "name": "Deletions of Two Adjacent Letters", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 36371}, {"contestId": 1649, "index": "B", "name": "Game of Ball Passing", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "implementation"], "solvedCount": 13592}, {"contestId": 1649, "index": "A", "name": "Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 15816}, {"contestId": 1648, "index": "F", "name": "Two Avenues", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "dfs and similar", "graphs"], "solvedCount": 160}, {"contestId": 1648, "index": "E", "name": "Air Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "implementation", "trees"], "solvedCount": 456}, {"contestId": 1648, "index": "D", "name": "Serious Business", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "dp", "implementation", "shortest paths"], "solvedCount": 952}, {"contestId": 1648, "index": "C", "name": "Tyler and Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "data structures", "implementation"], "solvedCount": 3153}, {"contestId": 1648, "index": "B", "name": "Integral Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "data structures", "math"], "solvedCount": 6935}, {"contestId": 1648, "index": "A", "name": "Weird Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["combinatorics", "data structures", "geometry", "math", "matrices", "sortings"], "solvedCount": 15697}, {"contestId": 1647, "index": "F", "name": "Madoka and Laziness", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["dp", "greedy"], "solvedCount": 510}, {"contestId": 1647, "index": "E", "name": "Madoka and the Sixth-graders", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "greedy"], "solvedCount": 1068}, {"contestId": 1647, "index": "D", "name": "Madoka and the Best School in Russia", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "dp", "math", "number theory"], "solvedCount": 5554}, {"contestId": 1647, "index": "C", "name": "Madoka and Childish Pranks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy"], "solvedCount": 13094}, {"contestId": 1647, "index": "B", "name": "Madoka and the Elegant Gift", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "graphs", "implementation"], "solvedCount": 16417}, {"contestId": 1647, "index": "A", "name": "Madoka and Math Dad", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 23187}, {"contestId": 1646, "index": "F", "name": "Playing Around the Table", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 640}, {"contestId": 1646, "index": "E", "name": "Power Board", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "dp", "math", "number theory"], "solvedCount": 2626}, {"contestId": 1646, "index": "D", "name": "Weight the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 4152}, {"contestId": 1646, "index": "C", "name": "Factorials and Powers of Two", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "math"], "solvedCount": 16719}, {"contestId": 1646, "index": "B", "name": "Quality vs Quantity", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 21808}, {"contestId": 1646, "index": "A", "name": "Square Counting", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["math"], "solvedCount": 24902}, {"contestId": 1644, "index": "F", "name": "Basis", "type": "PROGRAMMING", "rating": 2900, "tags": ["combinatorics", "fft", "math", "number theory"], "solvedCount": 396}, {"contestId": 1644, "index": "E", "name": "Expand the Path", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "combinatorics", "data structures", "implementation", "math"], "solvedCount": 3380}, {"contestId": 1644, "index": "D", "name": "Cross Coloring", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "math"], "solvedCount": 7609}, {"contestId": 1644, "index": "C", "name": "Increase Subarray Sums", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 14450}, {"contestId": 1644, "index": "B", "name": "Anti-Fibonacci Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 21048}, {"contestId": 1644, "index": "A", "name": "Doors and Keys", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 28042}, {"contestId": 1642, "index": "B", "name": "Power Walking", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["greedy"], "solvedCount": 17670}, {"contestId": 1642, "index": "A", "name": "Hard Way", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry"], "solvedCount": 16515}, {"contestId": 1641, "index": "F", "name": "Covering Circle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["geometry"], "solvedCount": 114}, {"contestId": 1641, "index": "E", "name": "Special Positions", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["combinatorics", "divide and conquer", "fft", "math"], "solvedCount": 260}, {"contestId": 1641, "index": "D", "name": "Two Arrays", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "combinatorics", "greedy", "hashing", "math", "two pointers"], "solvedCount": 1387}, {"contestId": 1641, "index": "C", "name": "Anonymity Is Important", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "brute force", "data structures", "dsu", "greedy", "sortings"], "solvedCount": 2654}, {"contestId": 1641, "index": "B", "name": "Repetitions Decoding", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 3946}, {"contestId": 1641, "index": "A", "name": "Great Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 18537}, {"contestId": 1639, "index": "K", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "J", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "I", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "H", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "G", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "F", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "E", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "D", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "C", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "B", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1639, "index": "A", "name": "Treasure Hunt", "type": "PROGRAMMING", "tags": ["graphs", "interactive"], "solvedCount": 0}, {"contestId": 1638, "index": "F", "name": "Two Posters", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["brute force", "data structures", "greedy", "two pointers"], "solvedCount": 250}, {"contestId": 1638, "index": "E", "name": "Colorful Operations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 2199}, {"contestId": 1638, "index": "D", "name": "Big Brush", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 4471}, {"contestId": 1638, "index": "C", "name": "Inversion Graph", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["data structures", "dsu", "graphs", "math"], "solvedCount": 15418}, {"contestId": 1638, "index": "B", "name": "Odd Swap Sort", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["data structures", "math", "sortings"], "solvedCount": 21685}, {"contestId": 1638, "index": "A", "name": "Reverse", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 21871}, {"contestId": 1637, "index": "H", "name": "Minimize Inversions Number", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures", "greedy", "math", "sortings"], "solvedCount": 529}, {"contestId": 1637, "index": "G", "name": "Birthday", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 580}, {"contestId": 1637, "index": "F", "name": "Towers", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1911}, {"contestId": 1637, "index": "E", "name": "Best Pair", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 3568}, {"contestId": 1637, "index": "D", "name": "Yet Another Minimization Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy", "math"], "solvedCount": 8325}, {"contestId": 1637, "index": "C", "name": "Andrew and Stones", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 18376}, {"contestId": 1637, "index": "B", "name": "MEX and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "dp", "greedy", "math"], "solvedCount": 15131}, {"contestId": 1637, "index": "A", "name": "Sorting Parts", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "sortings"], "solvedCount": 23398}, {"contestId": 1635, "index": "F", "name": "Closest Pair ", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "greedy"], "solvedCount": 1304}, {"contestId": 1635, "index": "E", "name": "Cars ", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "solvedCount": 2550}, {"contestId": 1635, "index": "D", "name": "Infinite Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 1800, "tags": ["bitmasks", "dp", "math", "matrices", "number theory", "strings"], "solvedCount": 6796}, {"contestId": 1635, "index": "C", "name": "Differential Sorting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 21233}, {"contestId": 1635, "index": "B", "name": "Avoid Local Maximums", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["greedy"], "solvedCount": 18260}, {"contestId": 1635, "index": "A", "name": "Min Or Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "greedy"], "solvedCount": 24685}, {"contestId": 1634, "index": "F", "name": "Fibonacci Additions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force", "data structures", "hashing", "implementation", "math"], "solvedCount": 1766}, {"contestId": 1634, "index": "E", "name": "Fair Share", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graph matchings", "graphs"], "solvedCount": 1900}, {"contestId": 1634, "index": "D", "name": "Finding Zero", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 4586}, {"contestId": 1634, "index": "C", "name": "OKEA", "type": "PROGRAMMING", "points": 1500.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 18738}, {"contestId": 1634, "index": "B", "name": "Fortune Telling", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["bitmasks", "math"], "solvedCount": 19496}, {"contestId": 1634, "index": "A", "name": "Reverse and Concatenate", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 24314}, {"contestId": 1633, "index": "F", "name": "Perfect Matching", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "divide and conquer", "interactive", "trees"], "solvedCount": 344}, {"contestId": 1633, "index": "E", "name": "Spanning Tree Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 1637}, {"contestId": 1633, "index": "D", "name": "Make Them Equal", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy"], "solvedCount": 16648}, {"contestId": 1633, "index": "C", "name": "Kill the Monster", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "math"], "solvedCount": 20768}, {"contestId": 1633, "index": "B", "name": "Minority", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 28629}, {"contestId": 1633, "index": "A", "name": "Div. 7", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force"], "solvedCount": 34791}, {"contestId": 1632, "index": "E2", "name": "Distance Tree (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["binary search", "dfs and similar", "shortest paths", "trees"], "solvedCount": 1089}, {"contestId": 1632, "index": "E1", "name": "Distance Tree (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 1262}, {"contestId": 1632, "index": "D", "name": "New Year Concert", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "greedy", "math", "number theory", "two pointers"], "solvedCount": 5034}, {"contestId": 1632, "index": "C", "name": "Strange Test", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "bitmasks", "brute force", "dp", "math"], "solvedCount": 13513}, {"contestId": 1632, "index": "B", "name": "Roof Construction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 26688}, {"contestId": 1632, "index": "A", "name": "ABC", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 30366}, {"contestId": 1631, "index": "B", "name": "Fun with Even Subarrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "greedy"], "solvedCount": 23406}, {"contestId": 1631, "index": "A", "name": "Min Max Swap", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 30621}, {"contestId": 1630, "index": "F", "name": "Making It Bipartite", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["flows", "graph matchings", "graphs", "number theory"], "solvedCount": 745}, {"contestId": 1630, "index": "E", "name": "Expected Components", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "math", "number theory", "probabilities"], "solvedCount": 478}, {"contestId": 1630, "index": "D", "name": "Flipping Range", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "greedy", "number theory"], "solvedCount": 1830}, {"contestId": 1630, "index": "C", "name": "Paint the Middle", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["dp", "greedy", "sortings", "two pointers"], "solvedCount": 3161}, {"contestId": 1630, "index": "B", "name": "Range and Partition", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 6158}, {"contestId": 1630, "index": "A", "name": "And Matching", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 15537}, {"contestId": 1629, "index": "B", "name": "GCD Arrays", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["greedy", "math", "number theory"], "solvedCount": 24325}, {"contestId": 1629, "index": "A", "name": "Download More RAM", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 30220}, {"contestId": 1628, "index": "F", "name": "Spaceship Crisis Management", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["binary search", "data structures", "geometry", "sortings"], "solvedCount": 92}, {"contestId": 1628, "index": "E", "name": "Groceries in Meteor Town", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["binary search", "data structures", "dsu", "trees"], "solvedCount": 1037}, {"contestId": 1628, "index": "D2", "name": "Game on Sum (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["combinatorics", "dp", "games", "math"], "solvedCount": 2355}, {"contestId": 1628, "index": "D1", "name": "Game on Sum (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["combinatorics", "dp", "games", "math"], "solvedCount": 3454}, {"contestId": 1628, "index": "C", "name": "Grid Xor", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "implementation", "interactive", "math"], "solvedCount": 3436}, {"contestId": 1628, "index": "B", "name": "Peculiar Movie Preferences", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["greedy", "strings"], "solvedCount": 12231}, {"contestId": 1628, "index": "A", "name": "Meximum Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "two pointers"], "solvedCount": 16333}, {"contestId": 1627, "index": "F", "name": "Not Splitting", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["geometry", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 628}, {"contestId": 1627, "index": "E", "name": "Not Escaping", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "implementation", "shortest paths", "two pointers"], "solvedCount": 2614}, {"contestId": 1627, "index": "D", "name": "Not Adding", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "dp", "math", "number theory"], "solvedCount": 8886}, {"contestId": 1627, "index": "C", "name": "Not Assigning", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "dfs and similar", "number theory", "trees"], "solvedCount": 15603}, {"contestId": 1627, "index": "B", "name": "Not Sitting", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["games", "greedy", "sortings"], "solvedCount": 17246}, {"contestId": 1627, "index": "A", "name": "Not Shading", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 24496}, {"contestId": 1626, "index": "F", "name": "A Random Code Problem", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"], "solvedCount": 827}, {"contestId": 1626, "index": "E", "name": "Black and White Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "greedy", "trees"], "solvedCount": 1726}, {"contestId": 1626, "index": "D", "name": "Martial Arts Tournament", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "brute force", "greedy", "math"], "solvedCount": 4188}, {"contestId": 1626, "index": "C", "name": "Monsters And Spells", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "math", "two pointers"], "solvedCount": 11428}, {"contestId": 1626, "index": "B", "name": "Minor Reduction", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "strings"], "solvedCount": 23562}, {"contestId": 1626, "index": "A", "name": "Equidistant Letters", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 30189}, {"contestId": 1625, "index": "E2", "name": "Cats on the Upgrade (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2800, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 631}, {"contestId": 1625, "index": "E1", "name": "Cats on the Upgrade (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "dfs and similar", "divide and conquer", "dp", "graphs", "trees"], "solvedCount": 1114}, {"contestId": 1625, "index": "D", "name": "Binary Spiders", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "data structures", "implementation", "math", "sortings", "trees"], "solvedCount": 2201}, {"contestId": 1625, "index": "C", "name": "Road Optimization", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp"], "solvedCount": 12099}, {"contestId": 1625, "index": "B", "name": "Elementary Particles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 16566}, {"contestId": 1625, "index": "A", "name": "Ancient Civilization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 17828}, {"contestId": 1624, "index": "G", "name": "MinOr Tree", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 6810}, {"contestId": 1624, "index": "F", "name": "Interacdive Problem", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 3620}, {"contestId": 1624, "index": "E", "name": "Masha-forgetful", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "constructive algorithms", "dp", "hashing", "implementation", "strings"], "solvedCount": 4405}, {"contestId": 1624, "index": "D", "name": "Palindromes Coloring", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "greedy", "sortings", "strings"], "solvedCount": 18271}, {"contestId": 1624, "index": "C", "name": "Division by Two and Permutation", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "flows", "graph matchings", "greedy", "math"], "solvedCount": 25995}, {"contestId": 1624, "index": "B", "name": "Make AP", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "math"], "solvedCount": 44524}, {"contestId": 1624, "index": "A", "name": "Plus One on the Subset", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 56704}, {"contestId": 1623, "index": "E", "name": "Middle Duplication", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "greedy", "strings", "trees"], "solvedCount": 1207}, {"contestId": 1623, "index": "D", "name": "Robot Cleaner Revisit", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["implementation", "math", "probabilities"], "solvedCount": 1433}, {"contestId": 1623, "index": "C", "name": "Balanced Stone Heaps", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["binary search", "greedy"], "solvedCount": 13395}, {"contestId": 1623, "index": "B", "name": "Game on Ranges", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "dfs and similar", "implementation", "sortings"], "solvedCount": 14371}, {"contestId": 1623, "index": "A", "name": "Robot Cleaner", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "math"], "solvedCount": 20349}, {"contestId": 1622, "index": "F", "name": "Quadratic Set", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "hashing", "math", "number theory"], "solvedCount": 788}, {"contestId": 1622, "index": "E", "name": "Math Test", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "brute force", "greedy"], "solvedCount": 2069}, {"contestId": 1622, "index": "D", "name": "Shuffle", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "math", "two pointers"], "solvedCount": 4484}, {"contestId": 1622, "index": "C", "name": "Set or Decrease", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "greedy", "sortings"], "solvedCount": 14591}, {"contestId": 1622, "index": "B", "name": "Berland Music", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "greedy", "math", "sortings"], "solvedCount": 21882}, {"contestId": 1622, "index": "A", "name": "Construct a Rectangle", "type": "PROGRAMMING", "rating": 800, "tags": ["geometry", "math"], "solvedCount": 31227}, {"contestId": 1621, "index": "I", "name": "Two Sequences", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["data structures", "hashing", "string suffix structures"], "solvedCount": 139}, {"contestId": 1621, "index": "H", "name": "Trains and Airplanes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 190}, {"contestId": 1621, "index": "G", "name": "Weighted Increasing Subsequences", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "dp", "math"], "solvedCount": 697}, {"contestId": 1621, "index": "F", "name": "Strange Instructions", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 584}, {"contestId": 1621, "index": "E", "name": "New School", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 1814}, {"contestId": 1621, "index": "D", "name": "The Winter Hike", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 4256}, {"contestId": 1621, "index": "C", "name": "Hidden Permutations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "interactive", "math"], "solvedCount": 7251}, {"contestId": 1621, "index": "B", "name": "Integers Shop", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 14036}, {"contestId": 1621, "index": "A", "name": "Stable Arrangement of Rooks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 24361}, {"contestId": 1620, "index": "G", "name": "Subsequences Galore", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp"], "solvedCount": 1012}, {"contestId": 1620, "index": "F", "name": "Bipartite Array", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "greedy"], "solvedCount": 688}, {"contestId": 1620, "index": "E", "name": "Replace the Numbers", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures", "dsu", "implementation"], "solvedCount": 9013}, {"contestId": 1620, "index": "D", "name": "Exact Change", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 4496}, {"contestId": 1620, "index": "C", "name": "BA-String", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "dp", "greedy", "implementation", "math"], "solvedCount": 6891}, {"contestId": 1620, "index": "B", "name": "Triangles on a Rectangle", "type": "PROGRAMMING", "rating": 1000, "tags": ["geometry", "greedy", "math"], "solvedCount": 26046}, {"contestId": 1620, "index": "A", "name": "Equal or Not Equal", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "dsu", "implementation"], "solvedCount": 22278}, {"contestId": 1619, "index": "H", "name": "Permutation and Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "data structures", "divide and conquer", "two pointers"], "solvedCount": 1337}, {"contestId": 1619, "index": "G", "name": "Unusual Minesweeper", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "dfs and similar", "dsu", "greedy", "sortings"], "solvedCount": 2609}, {"contestId": 1619, "index": "F", "name": "Let's Play the Hat?", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 2260}, {"contestId": 1619, "index": "E", "name": "MEX and Increments", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation", "math", "sortings"], "solvedCount": 9801}, {"contestId": 1619, "index": "D", "name": "New Year's Problem", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 8122}, {"contestId": 1619, "index": "C", "name": "Wrong Addition", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"], "solvedCount": 22079}, {"contestId": 1619, "index": "B", "name": "Squares and Cubes", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 32087}, {"contestId": 1619, "index": "A", "name": "Square String?", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 58182}, {"contestId": 1618, "index": "G", "name": "Trader Problem", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dsu", "greedy", "sortings"], "solvedCount": 1784}, {"contestId": 1618, "index": "F", "name": "Reverse", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "implementation", "math", "strings"], "solvedCount": 4507}, {"contestId": 1618, "index": "E", "name": "Singers' Tour", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 7556}, {"contestId": 1618, "index": "D", "name": "Array and Operations", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "math"], "solvedCount": 20041}, {"contestId": 1618, "index": "C", "name": "Paint the Array", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"], "solvedCount": 27613}, {"contestId": 1618, "index": "B", "name": "Missing Bigram", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 23292}, {"contestId": 1618, "index": "A", "name": "Polycarp and Sums of Subsequences", "type": "PROGRAMMING", "rating": 800, "tags": ["math", "sortings"], "solvedCount": 33417}, {"contestId": 1617, "index": "E", "name": "Christmas Chocolates", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "dp", "games", "graphs", "implementation", "math", "number theory", "shortest paths", "trees"], "solvedCount": 933}, {"contestId": 1617, "index": "D2", "name": "Too Many Impostors (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["constructive algorithms", "implementation", "interactive", "math"], "solvedCount": 1941}, {"contestId": 1617, "index": "D1", "name": "Too Many Impostors (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "implementation", "interactive"], "solvedCount": 4990}, {"contestId": 1617, "index": "C", "name": "Paprika and Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["binary search", "greedy", "math", "sortings"], "solvedCount": 15623}, {"contestId": 1617, "index": "B", "name": "GCD Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 25470}, {"contestId": 1617, "index": "A", "name": "Forbidden Subsequence", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 16689}, {"contestId": 1616, "index": "H", "name": "Keep XOR Low", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["bitmasks", "combinatorics", "data structures", "divide and conquer", "dp", "math"], "solvedCount": 1122}, {"contestId": 1616, "index": "G", "name": "Just Add an Edge", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dfs and similar", "dp", "graphs"], "solvedCount": 339}, {"contestId": 1616, "index": "F", "name": "Tricolor Triangles", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["brute force", "graphs", "math", "matrices"], "solvedCount": 670}, {"contestId": 1616, "index": "E", "name": "Lexicographically Small Enough", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "data structures", "greedy", "strings"], "solvedCount": 2590}, {"contestId": 1616, "index": "D", "name": "Keep the Average High", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "greedy", "math"], "solvedCount": 5245}, {"contestId": 1616, "index": "C", "name": "Representative Edges", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "geometry", "implementation", "math"], "solvedCount": 12776}, {"contestId": 1616, "index": "B", "name": "Mirror in the String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "strings"], "solvedCount": 20255}, {"contestId": 1616, "index": "A", "name": "Integer Diversity", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 23398}, {"contestId": 1615, "index": "H", "name": "Reindeer Games", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "flows", "graphs", "shortest paths"], "solvedCount": 362}, {"contestId": 1615, "index": "G", "name": "Maximum Adjacent Pairs", "type": "PROGRAMMING", "points": 3750.0, "rating": 3300, "tags": ["constructive algorithms", "graph matchings"], "solvedCount": 167}, {"contestId": 1615, "index": "F", "name": "LEGOndary Grandmaster", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1037}, {"contestId": 1615, "index": "E", "name": "Purple Crayon", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "games", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 1606}, {"contestId": 1615, "index": "D", "name": "X(or)-mas Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 2012}, {"contestId": 1615, "index": "C", "name": "Menorah", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "graphs", "greedy", "math"], "solvedCount": 8913}, {"contestId": 1615, "index": "B", "name": "And It's Non-Zero", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 17192}, {"contestId": 1615, "index": "A", "name": "Closing The Gap", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 21284}, {"contestId": 1614, "index": "E", "name": "Divan and a Cottage", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["binary search", "data structures"], "solvedCount": 907}, {"contestId": 1614, "index": "D2", "name": "Divan and Kostomuksha (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["dp", "number theory"], "solvedCount": 2561}, {"contestId": 1614, "index": "D1", "name": "Divan and Kostomuksha (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "number theory"], "solvedCount": 4222}, {"contestId": 1614, "index": "C", "name": "Divan and bitwise operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "solvedCount": 10823}, {"contestId": 1614, "index": "B", "name": "Divan and a New Project ", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 23902}, {"contestId": 1614, "index": "A", "name": "Divan and a Store", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 24015}, {"contestId": 1613, "index": "F", "name": "Tree Coloring", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "divide and conquer", "fft"], "solvedCount": 772}, {"contestId": 1613, "index": "E", "name": "Crazy Robot", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "graphs"], "solvedCount": 5630}, {"contestId": 1613, "index": "D", "name": "MEX Sequences", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "math"], "solvedCount": 5047}, {"contestId": 1613, "index": "C", "name": "Poisoned Dagger", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search"], "solvedCount": 27406}, {"contestId": 1613, "index": "B", "name": "Absent Remainder", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 22767}, {"contestId": 1613, "index": "A", "name": "Long Comparison", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "math"], "solvedCount": 25875}, {"contestId": 1612, "index": "G", "name": "Max Sum Array", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "constructive algorithms", "greedy", "sortings"], "solvedCount": 921}, {"contestId": 1612, "index": "F", "name": "Armor and Weapons", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "greedy", "shortest paths"], "solvedCount": 673}, {"contestId": 1612, "index": "E", "name": "Messages", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "greedy", "probabilities", "sortings"], "solvedCount": 2686}, {"contestId": 1612, "index": "D", "name": "X-Magic Pair", "type": "PROGRAMMING", "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 9920}, {"contestId": 1612, "index": "C", "name": "Chat Ban", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "math"], "solvedCount": 21506}, {"contestId": 1612, "index": "B", "name": "Special Permutation", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18019}, {"contestId": 1612, "index": "A", "name": "Distance", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 18007}, {"contestId": 1611, "index": "G", "name": "Robot and Candies", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "graph matchings", "greedy"], "solvedCount": 699}, {"contestId": 1611, "index": "F", "name": "ATM and Students", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 7019}, {"contestId": 1611, "index": "E2", "name": "Escape The Maze (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "shortest paths", "trees"], "solvedCount": 4110}, {"contestId": 1611, "index": "E1", "name": "Escape The Maze (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "greedy", "shortest paths", "trees", "two pointers"], "solvedCount": 7914}, {"contestId": 1611, "index": "D", "name": "Weights Assignment For Tree Edges", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 10858}, {"contestId": 1611, "index": "C", "name": "Polycarp Recovers the Permutation", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 19040}, {"contestId": 1611, "index": "B", "name": "Team Composition: Programmers and Mathematicians", "type": "PROGRAMMING", "rating": 800, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 31029}, {"contestId": 1611, "index": "A", "name": "Make Even", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 32672}, {"contestId": 1610, "index": "I", "name": "Mashtali vs AtCoder", "type": "PROGRAMMING", "points": 4000.0, "rating": 3100, "tags": ["games", "trees"], "solvedCount": 308}, {"contestId": 1610, "index": "H", "name": "Squid Game", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 596}, {"contestId": 1610, "index": "G", "name": "AmShZ Wins a Bet", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["data structures", "greedy", "hashing"], "solvedCount": 553}, {"contestId": 1610, "index": "F", "name": "Mashtali: a Space Oddysey", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 604}, {"contestId": 1610, "index": "E", "name": "AmShZ and G.O.A.T.", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "greedy", "implementation", "math"], "solvedCount": 1793}, {"contestId": 1610, "index": "D", "name": "Not Quite Lee", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 2882}, {"contestId": 1610, "index": "C", "name": "Keshi Is Throwing a Party", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "greedy"], "solvedCount": 13700}, {"contestId": 1610, "index": "B", "name": "Kalindrome Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "two pointers"], "solvedCount": 19347}, {"contestId": 1610, "index": "A", "name": "Anti Light's Cell Guessing", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"], "solvedCount": 16751}, {"contestId": 1609, "index": "H", "name": "Pushing Robots", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": [], "solvedCount": 97}, {"contestId": 1609, "index": "G", "name": "A Stroll Around the Matrix", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["data structures", "greedy", "math"], "solvedCount": 453}, {"contestId": 1609, "index": "F", "name": "Interesting Sections", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "meet-in-the-middle", "two pointers"], "solvedCount": 885}, {"contestId": 1609, "index": "E", "name": "William The Oblivious ", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "dp", "matrices"], "solvedCount": 2329}, {"contestId": 1609, "index": "D", "name": "Social Network", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dsu", "graphs", "greedy", "implementation", "trees"], "solvedCount": 7904}, {"contestId": 1609, "index": "C", "name": "Complex Market Analysis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "dp", "implementation", "number theory", "schedules", "two pointers"], "solvedCount": 10212}, {"contestId": 1609, "index": "B", "name": "William the Vigilant", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 11984}, {"contestId": 1609, "index": "A", "name": "Divide and Multiply", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "math", "number theory"], "solvedCount": 18136}, {"contestId": 1608, "index": "G", "name": "Alphabetic Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["binary search", "data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "solvedCount": 220}, {"contestId": 1608, "index": "F", "name": "MEX counting", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["combinatorics", "dp", "implementation"], "solvedCount": 715}, {"contestId": 1608, "index": "E", "name": "The Cells on the Paper", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["binary search", "implementation", "sortings"], "solvedCount": 468}, {"contestId": 1608, "index": "D", "name": "Dominoes", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["combinatorics", "fft", "graphs", "math", "number theory"], "solvedCount": 1488}, {"contestId": 1608, "index": "C", "name": "Game Master", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "two pointers"], "solvedCount": 7085}, {"contestId": 1608, "index": "B", "name": "Build the Permutation", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 12262}, {"contestId": 1608, "index": "A", "name": "Find Array", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 19732}, {"contestId": 1607, "index": "H", "name": "Banquet Preparations 2", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 1312}, {"contestId": 1607, "index": "G", "name": "Banquet Preparations 1", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy"], "solvedCount": 1662}, {"contestId": 1607, "index": "F", "name": "Robot on the Board 2", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "solvedCount": 2058}, {"contestId": 1607, "index": "E", "name": "Robot on the Board 1", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 9786}, {"contestId": 1607, "index": "D", "name": "Blue-Red Permutation", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "math", "sortings"], "solvedCount": 17665}, {"contestId": 1607, "index": "C", "name": "Minimum Extraction", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "sortings"], "solvedCount": 26143}, {"contestId": 1607, "index": "B", "name": "Odd Grasshopper", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 32495}, {"contestId": 1607, "index": "A", "name": "Linear Keyboard", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 39406}, {"contestId": 1606, "index": "F", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "trees"], "solvedCount": 616}, {"contestId": 1606, "index": "E", "name": "Arena", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 3879}, {"contestId": 1606, "index": "D", "name": "Red-Blue Matrix", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "solvedCount": 1540}, {"contestId": 1606, "index": "C", "name": "Banknotes", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "number theory"], "solvedCount": 14786}, {"contestId": 1606, "index": "B", "name": "Update Files", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation", "math"], "solvedCount": 19171}, {"contestId": 1606, "index": "A", "name": "AB Balance", "type": "PROGRAMMING", "rating": 900, "tags": ["strings"], "solvedCount": 30787}, {"contestId": 1605, "index": "F", "name": "PalindORme", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["combinatorics", "dp"], "solvedCount": 376}, {"contestId": 1605, "index": "E", "name": "Array Equalizer", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "greedy", "implementation", "math", "number theory", "sortings", "two pointers"], "solvedCount": 1120}, {"contestId": 1605, "index": "D", "name": "Treelabeling", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "games", "greedy", "implementation", "trees"], "solvedCount": 3087}, {"contestId": 1605, "index": "C", "name": "Dominant Character", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["brute force", "greedy", "implementation", "strings"], "solvedCount": 17997}, {"contestId": 1605, "index": "B", "name": "Reverse Sort", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "sortings"], "solvedCount": 18761}, {"contestId": 1605, "index": "A", "name": "A.M. Deviation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 21149}, {"contestId": 1604, "index": "B", "name": "XOR Specia-LIS-t", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": [], "solvedCount": 16035}, {"contestId": 1604, "index": "A", "name": "Era", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 22245}, {"contestId": 1603, "index": "F", "name": "October 18, 2017", "type": "PROGRAMMING", "points": 3750.0, "rating": 2700, "tags": ["combinatorics", "dp", "implementation", "math"], "solvedCount": 307}, {"contestId": 1603, "index": "E", "name": "A Perfect Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["combinatorics", "dp", "math"], "solvedCount": 569}, {"contestId": 1603, "index": "D", "name": "Artistic Partition", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["divide and conquer", "dp", "number theory"], "solvedCount": 795}, {"contestId": 1603, "index": "C", "name": "Extreme Extension", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp", "greedy", "math", "number theory"], "solvedCount": 2189}, {"contestId": 1603, "index": "B", "name": "Moderate Modular Mode", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 14461}, {"contestId": 1603, "index": "A", "name": "Di-visible Confusion", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 17421}, {"contestId": 1602, "index": "B", "name": "Divine Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 14474}, {"contestId": 1602, "index": "A", "name": "Two Subsequences", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 19443}, {"contestId": 1601, "index": "F", "name": "Two Sorts", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["binary search", "dfs and similar", "math", "meet-in-the-middle"], "solvedCount": 260}, {"contestId": 1601, "index": "E", "name": "Phys Ed Online", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures", "dp", "greedy"], "solvedCount": 535}, {"contestId": 1601, "index": "D", "name": "Difficult Mountain", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "dp", "greedy", "sortings"], "solvedCount": 1741}, {"contestId": 1601, "index": "C", "name": "Optimal Insertion", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "divide and conquer", "dp", "greedy", "sortings"], "solvedCount": 2189}, {"contestId": 1601, "index": "B", "name": "Frog Traveler", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths", "two pointers"], "solvedCount": 5263}, {"contestId": 1601, "index": "A", "name": "Array Elimination", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["bitmasks", "greedy", "math", "number theory"], "solvedCount": 17836}, {"contestId": 1600, "index": "J", "name": "Robot Factory", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "dfs and similar"], "solvedCount": 4264}, {"contestId": 1600, "index": "F", "name": "Party Organization", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "math", "probabilities"], "solvedCount": 550}, {"contestId": 1600, "index": "E", "name": "Array Game", "type": "PROGRAMMING", "rating": 1900, "tags": ["games", "greedy", "two pointers"], "solvedCount": 2289}, {"contestId": 1599, "index": "J", "name": "Bob's Beautiful Array", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "brute force", "greedy"], "solvedCount": 320}, {"contestId": 1599, "index": "I", "name": "Desert", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "graphs"], "solvedCount": 126}, {"contestId": 1599, "index": "H", "name": "Hidden Fortress", "type": "PROGRAMMING", "rating": 2100, "tags": ["interactive", "math"], "solvedCount": 1155}, {"contestId": 1599, "index": "G", "name": "Shortest path", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "geometry", "math", "shortest paths"], "solvedCount": 393}, {"contestId": 1599, "index": "F", "name": "Mars", "type": "PROGRAMMING", "rating": 2700, "tags": ["hashing"], "solvedCount": 369}, {"contestId": 1599, "index": "E", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 3200, "tags": ["data structures", "matrices"], "solvedCount": 74}, {"contestId": 1599, "index": "D", "name": "Bubble Popping", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 31}, {"contestId": 1599, "index": "C", "name": "Bubble Strike", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "math", "probabilities", "ternary search"], "solvedCount": 1852}, {"contestId": 1599, "index": "B", "name": "Restaurant Game", "type": "PROGRAMMING", "rating": 3100, "tags": [], "solvedCount": 155}, {"contestId": 1599, "index": "A", "name": "Weights", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "greedy", "two pointers"], "solvedCount": 777}, {"contestId": 1598, "index": "G", "name": "The Sum of Good Numbers", "type": "PROGRAMMING", "rating": 3200, "tags": ["hashing", "math", "string suffix structures", "strings"], "solvedCount": 374}, {"contestId": 1598, "index": "F", "name": "RBS", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp"], "solvedCount": 1535}, {"contestId": 1598, "index": "E", "name": "Staircases", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "dp", "implementation", "math"], "solvedCount": 2431}, {"contestId": 1598, "index": "D", "name": "Training Session", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "data structures", "geometry", "implementation", "math"], "solvedCount": 9532}, {"contestId": 1598, "index": "C", "name": "Delete Two Elements", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "dp", "implementation", "math", "two pointers"], "solvedCount": 22483}, {"contestId": 1598, "index": "B", "name": "Groups", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 16668}, {"contestId": 1598, "index": "A", "name": "Computer Game", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "dfs and similar", "dp", "implementation"], "solvedCount": 24577}, {"contestId": 1594, "index": "F", "name": "Ideal Farm", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "math"], "solvedCount": 1453}, {"contestId": 1594, "index": "E2", "name": "Rubik's Cube Coloring (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "dp", "implementation", "math", "trees"], "solvedCount": 1551}, {"contestId": 1594, "index": "E1", "name": "Rubik's Cube Coloring (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "math"], "solvedCount": 11694}, {"contestId": 1594, "index": "D", "name": "The Number of Imposters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "graphs"], "solvedCount": 8423}, {"contestId": 1594, "index": "C", "name": "Make Them Equal", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["brute force", "greedy", "math", "strings"], "solvedCount": 23783}, {"contestId": 1594, "index": "B", "name": "Special Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "math"], "solvedCount": 21185}, {"contestId": 1594, "index": "A", "name": "Consecutive Sum Riddle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 25972}, {"contestId": 1593, "index": "G", "name": "Changing Brackets", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "data structures", "dp", "greedy"], "solvedCount": 1814}, {"contestId": 1593, "index": "F", "name": "Red-Black Number", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "implementation", "math", "meet-in-the-middle"], "solvedCount": 2587}, {"contestId": 1593, "index": "E", "name": "Gardener and Tree", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dfs and similar", "greedy", "implementation", "trees"], "solvedCount": 13832}, {"contestId": 1593, "index": "D2", "name": "Half of Same", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "math", "number theory"], "solvedCount": 5344}, {"contestId": 1593, "index": "D1", "name": "All are Same", "type": "PROGRAMMING", "rating": 1100, "tags": ["math", "number theory"], "solvedCount": 21199}, {"contestId": 1593, "index": "C", "name": "Save More Mice", "type": "PROGRAMMING", "rating": 1000, "tags": ["binary search", "greedy", "greedy"], "solvedCount": 26804}, {"contestId": 1593, "index": "B", "name": "Make it Divisible by 25", "type": "PROGRAMMING", "rating": 900, "tags": ["dfs and similar", "dp", "greedy", "math", "math"], "solvedCount": 33600}, {"contestId": 1593, "index": "A", "name": "Elections", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 39541}, {"contestId": 1592, "index": "F2", "name": "Alice and Recoloring 2", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["constructive algorithms", "flows", "graph matchings", "greedy"], "solvedCount": 901}, {"contestId": 1592, "index": "F1", "name": "Alice and Recoloring 1", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1019}, {"contestId": 1592, "index": "E", "name": "Bored Bakry", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "greedy", "math", "two pointers"], "solvedCount": 1788}, {"contestId": 1592, "index": "D", "name": "Hemose in ICPC ?", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "dfs and similar", "implementation", "interactive", "math", "number theory", "trees"], "solvedCount": 2442}, {"contestId": 1592, "index": "C", "name": "Bakry and Partitioning", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 8606}, {"contestId": 1592, "index": "B", "name": "Hemose Shopping", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "dsu", "math", "sortings"], "solvedCount": 16667}, {"contestId": 1592, "index": "A", "name": "Gamer Hemose", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["binary search", "greedy", "math", "sortings"], "solvedCount": 23225}, {"contestId": 1588, "index": "F", "name": "Jumping Through the Array", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["binary search", "data structures", "graphs", "two pointers"], "solvedCount": 332}, {"contestId": 1586, "index": "I", "name": "Omkar and Mosaic", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 238}, {"contestId": 1585, "index": "G", "name": "Poachers", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["dp", "games", "graphs", "trees"], "solvedCount": 278}, {"contestId": 1585, "index": "F", "name": "Non-equal Neighbours", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1526}, {"contestId": 1585, "index": "E", "name": "Frequency Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 1139}, {"contestId": 1585, "index": "D", "name": "Yet Another Sorting Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "math"], "solvedCount": 4160}, {"contestId": 1585, "index": "C", "name": "Minimize Distance", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 12567}, {"contestId": 1585, "index": "B", "name": "Array Eversion", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy"], "solvedCount": 15785}, {"contestId": 1585, "index": "A", "name": "Life of a Flower", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 18460}, {"contestId": 1584, "index": "G", "name": "Eligible Segments", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["geometry"], "solvedCount": 238}, {"contestId": 1584, "index": "F", "name": "Strange LCS", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "dp", "graphs", "greedy", "strings"], "solvedCount": 1063}, {"contestId": 1584, "index": "E", "name": "Game with Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "data structures", "games", "greedy"], "solvedCount": 1398}, {"contestId": 1584, "index": "D", "name": "Guess the Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "combinatorics", "interactive", "math"], "solvedCount": 3842}, {"contestId": 1584, "index": "C", "name": "Two Arrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "math", "sortings"], "solvedCount": 17234}, {"contestId": 1584, "index": "B", "name": "Coloring Rectangles", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 13922}, {"contestId": 1584, "index": "A", "name": "Mathematical Addition", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 15199}, {"contestId": 1583, "index": "H", "name": "Omkar and Tours", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "divide and conquer", "sortings", "trees"], "solvedCount": 368}, {"contestId": 1583, "index": "G", "name": "Omkar and Time Travel", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "math"], "solvedCount": 483}, {"contestId": 1583, "index": "F", "name": "Defender of Childhood Dreams", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "divide and conquer"], "solvedCount": 1426}, {"contestId": 1583, "index": "E", "name": "Moment of Bloom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy", "trees"], "solvedCount": 2350}, {"contestId": 1583, "index": "D", "name": "Omkar and the Meaning of Life", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "interactive"], "solvedCount": 5652}, {"contestId": 1583, "index": "C", "name": "Omkar and Determination", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp"], "solvedCount": 7158}, {"contestId": 1583, "index": "B", "name": "Omkar and Heavenly Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "trees"], "solvedCount": 12848}, {"contestId": 1583, "index": "A", "name": "Windblume Ode", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 14045}, {"contestId": 1582, "index": "G", "name": "Kuzya and Homework", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["data structures", "number theory"], "solvedCount": 641}, {"contestId": 1582, "index": "F2", "name": "Korney Korneevich and XOR (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "brute force", "dp", "greedy", "two pointers"], "solvedCount": 1982}, {"contestId": 1582, "index": "F1", "name": "Korney Korneevich and XOR (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["bitmasks", "dp", "greedy"], "solvedCount": 6192}, {"contestId": 1582, "index": "E", "name": "Pchelyonok and Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "greedy", "math"], "solvedCount": 3984}, {"contestId": 1582, "index": "D", "name": "Vupsen, Pupsen and 0", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["constructive algorithms", "math"], "solvedCount": 11225}, {"contestId": 1582, "index": "C", "name": "Grandma Capa Knits a Scarf", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["brute force", "data structures", "greedy", "strings", "two pointers"], "solvedCount": 19530}, {"contestId": 1582, "index": "B", "name": "Luntik and Subsequences", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["combinatorics", "math"], "solvedCount": 26544}, {"contestId": 1582, "index": "A", "name": "Luntik and Concerts", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 19349}, {"contestId": 1581, "index": "B", "name": "Diameter of Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "graphs", "greedy", "math"], "solvedCount": 12031}, {"contestId": 1581, "index": "A", "name": "CQXYM Count Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 13931}, {"contestId": 1580, "index": "F", "name": "Problems for Codeforces", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["combinatorics", "fft", "math"], "solvedCount": 147}, {"contestId": 1580, "index": "E", "name": "Railway Construction", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["brute force", "constructive algorithms", "data structures", "graphs", "shortest paths"], "solvedCount": 102}, {"contestId": 1580, "index": "D", "name": "Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "divide and conquer", "dp", "greedy", "trees"], "solvedCount": 1021}, {"contestId": 1580, "index": "C", "name": "Train Maintenance", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 2035}, {"contestId": 1580, "index": "B", "name": "Mathematics Curriculum", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["brute force", "combinatorics", "dp", "trees"], "solvedCount": 1192}, {"contestId": 1580, "index": "A", "name": "Portal", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "solvedCount": 3821}, {"contestId": 1579, "index": "G", "name": "Minimal Coverage", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"], "solvedCount": 2572}, {"contestId": 1579, "index": "F", "name": "Array Stabilization (AND version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "graphs", "math", "number theory", "shortest paths"], "solvedCount": 5072}, {"contestId": 1579, "index": "E2", "name": "Array Optimization by Deque", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "greedy"], "solvedCount": 7063}, {"contestId": 1579, "index": "E1", "name": "Permutation Minimization by Deque", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 23586}, {"contestId": 1579, "index": "D", "name": "Productive Meeting", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 17461}, {"contestId": 1579, "index": "C", "name": "Ticks", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "implementation"], "solvedCount": 11130}, {"contestId": 1579, "index": "B", "name": "Shifting Sort", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "sortings"], "solvedCount": 18623}, {"contestId": 1579, "index": "A", "name": "Casimir's String Solitaire", "type": "PROGRAMMING", "rating": 800, "tags": ["math", "strings"], "solvedCount": 40746}, {"contestId": 1578, "index": "M", "name": "The Mind", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "interactive", "probabilities"], "solvedCount": 482}, {"contestId": 1578, "index": "L", "name": "Labyrinth", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dsu", "greedy"], "solvedCount": 1361}, {"contestId": 1578, "index": "K", "name": "Kingdom of Islands", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "graphs", "implementation"], "solvedCount": 388}, {"contestId": 1578, "index": "J", "name": "Just Kingdom", "type": "PROGRAMMING", "rating": 3100, "tags": ["brute force", "data structures", "dfs and similar"], "solvedCount": 320}, {"contestId": 1578, "index": "I", "name": "Interactive Rays", "type": "PROGRAMMING", "rating": 3300, "tags": ["geometry", "interactive"], "solvedCount": 70}, {"contestId": 1578, "index": "H", "name": "Higher Order Functions", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation", "strings"], "solvedCount": 2104}, {"contestId": 1578, "index": "G", "name": "Game of Chance", "type": "PROGRAMMING", "rating": 3500, "tags": ["math", "probabilities"], "solvedCount": 51}, {"contestId": 1578, "index": "F", "name": "Framing Pictures", "type": "PROGRAMMING", "rating": 2900, "tags": ["geometry"], "solvedCount": 180}, {"contestId": 1578, "index": "E", "name": "Easy Scheduling", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 3999}, {"contestId": 1578, "index": "D", "name": "Dragon Curve", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 53}, {"contestId": 1578, "index": "C", "name": "Cactus Lady and her Cing", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 11}, {"contestId": 1578, "index": "B", "name": "Building Forest Trails", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dsu"], "solvedCount": 380}, {"contestId": 1578, "index": "A", "name": "Anti-Tetris", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 401}, {"contestId": 1576, "index": "A", "name": "Communication Routing Challenge", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 0}, {"contestId": 1575, "index": "M", "name": "Managing Telephone Poles", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "geometry"], "solvedCount": 307}, {"contestId": 1575, "index": "L", "name": "Longest Array Deconstruction", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "sortings"], "solvedCount": 1604}, {"contestId": 1575, "index": "K", "name": "Knitting Batik", "type": "PROGRAMMING", "rating": 2200, "tags": ["implementation", "math"], "solvedCount": 754}, {"contestId": 1575, "index": "J", "name": "Jeopardy of Dropped Balls", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "dsu", "implementation"], "solvedCount": 4117}, {"contestId": 1575, "index": "I", "name": "Illusions of the Desert", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "trees"], "solvedCount": 961}, {"contestId": 1575, "index": "H", "name": "Holiday Wall Ornaments", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "strings"], "solvedCount": 697}, {"contestId": 1575, "index": "G", "name": "GCD Festival", "type": "PROGRAMMING", "rating": 2200, "tags": ["math", "number theory"], "solvedCount": 774}, {"contestId": 1575, "index": "F", "name": "Finding Expected Value", "type": "PROGRAMMING", "rating": 2900, "tags": ["math"], "solvedCount": 131}, {"contestId": 1575, "index": "E", "name": "Eye-Pleasing City Park Tour", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 372}, {"contestId": 1575, "index": "D", "name": "Divisible by Twenty-Five", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "dfs and similar", "dp"], "solvedCount": 2772}, {"contestId": 1575, "index": "C", "name": "Cyclic Sum", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "fft", "number theory"], "solvedCount": 176}, {"contestId": 1575, "index": "B", "name": "Building an Amusement Park", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "geometry"], "solvedCount": 519}, {"contestId": 1575, "index": "A", "name": "Another Sorting Problem", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "sortings", "strings"], "solvedCount": 4922}, {"contestId": 1574, "index": "F", "name": "Occurrences", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "fft", "graphs"], "solvedCount": 692}, {"contestId": 1574, "index": "E", "name": "Coloring", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "constructive algorithms", "implementation", "math"], "solvedCount": 972}, {"contestId": 1574, "index": "D", "name": "The Strongest Build", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "graphs", "greedy", "hashing", "implementation"], "solvedCount": 4708}, {"contestId": 1574, "index": "C", "name": "Slay the Dragon", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "greedy", "sortings", "ternary search"], "solvedCount": 17905}, {"contestId": 1574, "index": "B", "name": "Combinatorics Homework", "type": "PROGRAMMING", "rating": 1100, "tags": ["combinatorics", "greedy", "math"], "solvedCount": 17823}, {"contestId": 1574, "index": "A", "name": "Regular Bracket Sequences", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 22654}, {"contestId": 1573, "index": "B", "name": "Swaps", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "math", "sortings"], "solvedCount": 15184}, {"contestId": 1573, "index": "A", "name": "Countdown", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 21666}, {"contestId": 1572, "index": "F", "name": "Stations", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["data structures"], "solvedCount": 330}, {"contestId": 1572, "index": "E", "name": "Polygon", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "dp", "geometry"], "solvedCount": 339}, {"contestId": 1572, "index": "D", "name": "Bridge Club", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["flows", "graph matchings", "graphs", "greedy"], "solvedCount": 572}, {"contestId": 1572, "index": "C", "name": "Paint", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["dp", "greedy"], "solvedCount": 1611}, {"contestId": 1572, "index": "B", "name": "Xor of 3", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "greedy", "two pointers"], "solvedCount": 1940}, {"contestId": 1572, "index": "A", "name": "Book", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"], "solvedCount": 9877}, {"contestId": 1571, "index": "J", "name": "Two Railroads", "type": "PROGRAMMING", "rating": 3000, "tags": ["*special"], "solvedCount": 47}, {"contestId": 1571, "index": "I", "name": "Physical Examination", "type": "PROGRAMMING", "rating": 3200, "tags": ["*special", "binary search", "data structures"], "solvedCount": 63}, {"contestId": 1571, "index": "H", "name": "Laser Beams", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "geometry", "probabilities"], "solvedCount": 55}, {"contestId": 1571, "index": "G", "name": "A Battle Against a Dragon", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "data structures", "dp"], "solvedCount": 82}, {"contestId": 1571, "index": "F", "name": "Kotlinforces", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "constructive algorithms", "dp"], "solvedCount": 221}, {"contestId": 1571, "index": "E", "name": "Fix the String", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "bitmasks", "dp", "greedy"], "solvedCount": 363}, {"contestId": 1571, "index": "D", "name": "Sweepstake", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 356}, {"contestId": 1571, "index": "C", "name": "Rhyme", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "implementation"], "solvedCount": 395}, {"contestId": 1571, "index": "B", "name": "Epic Novel", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "math"], "solvedCount": 746}, {"contestId": 1571, "index": "A", "name": "Sequence of Comparisons", "type": "PROGRAMMING", "rating": 800, "tags": ["*special"], "solvedCount": 1571}, {"contestId": 1569, "index": "F", "name": "Palindromic Hamiltonian Path", "type": "PROGRAMMING", "rating": 3000, "tags": ["brute force", "dfs and similar", "dp", "graphs", "hashing"], "solvedCount": 329}, {"contestId": 1569, "index": "E", "name": "Playoff Restoration", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "brute force", "hashing", "implementation", "meet-in-the-middle"], "solvedCount": 839}, {"contestId": 1569, "index": "D", "name": "Inconvenient Pairs", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "implementation", "sortings", "two pointers"], "solvedCount": 4520}, {"contestId": 1569, "index": "C", "name": "Jury Meeting", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "math"], "solvedCount": 12776}, {"contestId": 1569, "index": "B", "name": "Chess Tournament", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 19499}, {"contestId": 1569, "index": "A", "name": "Balanced Substring", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 26121}, {"contestId": 1567, "index": "F", "name": "One-Four Overload", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation"], "solvedCount": 851}, {"contestId": 1567, "index": "E", "name": "Non-Decreasing Dilemma", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "math"], "solvedCount": 3927}, {"contestId": 1567, "index": "D", "name": "Expression Evaluation Error", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 4697}, {"contestId": 1567, "index": "C", "name": "Carrying Conundrum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["bitmasks", "combinatorics", "dp", "math"], "solvedCount": 12713}, {"contestId": 1567, "index": "B", "name": "MEXor Mixup", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["bitmasks", "greedy"], "solvedCount": 27882}, {"contestId": 1567, "index": "A", "name": "Domino Disaster", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 31071}, {"contestId": 1566, "index": "H", "name": "Xor-quiz", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["constructive algorithms", "dp", "interactive", "math", "number theory"], "solvedCount": 143}, {"contestId": 1566, "index": "G", "name": "Four Vertices", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 364}, {"contestId": 1566, "index": "F", "name": "Points Movement", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 1075}, {"contestId": 1566, "index": "E", "name": "Buds Re-hanging", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4337}, {"contestId": 1566, "index": "D2", "name": "Seating Arrangements (hard version) ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 8191}, {"contestId": 1566, "index": "D1", "name": "Seating Arrangements (easy version) ", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 14470}, {"contestId": 1566, "index": "C", "name": "MAX-MEX Cut", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "solvedCount": 18488}, {"contestId": 1566, "index": "B", "name": "MIN-MEX Cut", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "solvedCount": 20660}, {"contestId": 1566, "index": "A", "name": "Median Maximization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["binary search", "greedy", "math"], "solvedCount": 24725}, {"contestId": 1562, "index": "F", "name": "Tubular Bells", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["interactive", "math", "number theory", "probabilities"], "solvedCount": 435}, {"contestId": 1562, "index": "E", "name": "Rescue Niwen!", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["dp", "greedy", "string suffix structures", "strings"], "solvedCount": 1534}, {"contestId": 1562, "index": "D2", "name": "Two Hundred Twenty One (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["data structures", "math"], "solvedCount": 2209}, {"contestId": 1562, "index": "D1", "name": "Two Hundred Twenty One (easy version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "dp", "math"], "solvedCount": 6540}, {"contestId": 1562, "index": "C", "name": "Rings", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "math"], "solvedCount": 13946}, {"contestId": 1562, "index": "B", "name": "Scenes From a Memory", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 20211}, {"contestId": 1562, "index": "A", "name": "The Miracle and the Sleeper", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 26084}, {"contestId": 1561, "index": "D1", "name": "Up the Strip (simplified version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "math", "number theory"], "solvedCount": 5898}, {"contestId": 1561, "index": "C", "name": "Deep Down Below", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 17845}, {"contestId": 1561, "index": "A", "name": "Simply Strange Sort", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "sortings"], "solvedCount": 16925}, {"contestId": 1560, "index": "F2", "name": "Nearest Beautiful Number (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "greedy"], "solvedCount": 4704}, {"contestId": 1560, "index": "F1", "name": "Nearest Beautiful Number (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "dfs and similar", "greedy"], "solvedCount": 6488}, {"contestId": 1560, "index": "E", "name": "Polycarp and String Transformation", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "implementation", "sortings", "strings"], "solvedCount": 8511}, {"contestId": 1560, "index": "D", "name": "Make a Power of Two", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "math", "strings"], "solvedCount": 18939}, {"contestId": 1560, "index": "C", "name": "Infinity Table", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 27479}, {"contestId": 1560, "index": "B", "name": "Who's Opposite?", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 37546}, {"contestId": 1560, "index": "A", "name": "Dislike of Threes", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 67849}, {"contestId": 1559, "index": "E", "name": "Mocha and Stars", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["combinatorics", "dp", "fft", "math", "number theory"], "solvedCount": 2521}, {"contestId": 1559, "index": "D2", "name": "Mocha and Diana (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees", "two pointers"], "solvedCount": 2833}, {"contestId": 1559, "index": "D1", "name": "Mocha and Diana (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "trees"], "solvedCount": 15036}, {"contestId": 1559, "index": "C", "name": "Mocha and Hiking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "graphs"], "solvedCount": 21860}, {"contestId": 1559, "index": "B", "name": "Mocha and Red and Blue", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["dp", "greedy"], "solvedCount": 23425}, {"contestId": 1559, "index": "A", "name": "Mocha and Math", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 38445}, {"contestId": 1558, "index": "F", "name": "Strange Sort", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "sortings"], "solvedCount": 443}, {"contestId": 1558, "index": "E", "name": "Down Below", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "dfs and similar", "graphs", "greedy", "meet-in-the-middle", "shortest paths"], "solvedCount": 569}, {"contestId": 1558, "index": "D", "name": "Top-Notch Insertions", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["combinatorics", "data structures"], "solvedCount": 1081}, {"contestId": 1558, "index": "C", "name": "Bottom-Tier Reversals", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3519}, {"contestId": 1558, "index": "B", "name": "Up the Strip", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["brute force", "dp", "math", "number theory", "two pointers"], "solvedCount": 5084}, {"contestId": 1558, "index": "A", "name": "Charmed by the Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "math"], "solvedCount": 11303}, {"contestId": 1557, "index": "E", "name": "Assiut Chess", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "interactive"], "solvedCount": 745}, {"contestId": 1557, "index": "D", "name": "Ezzat and Grid", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2863}, {"contestId": 1557, "index": "C", "name": "Moamen and XOR", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["bitmasks", "combinatorics", "dp", "math", "matrices"], "solvedCount": 9395}, {"contestId": 1557, "index": "B", "name": "Moamen and k-subarrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 24129}, {"contestId": 1557, "index": "A", "name": "Ezzat and Two Subsequences", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math", "sortings"], "solvedCount": 28637}, {"contestId": 1556, "index": "H", "name": "DIY Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["graphs", "greedy", "math", "probabilities"], "solvedCount": 399}, {"contestId": 1556, "index": "G", "name": "Gates to Another World", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["bitmasks", "data structures", "dsu", "two pointers"], "solvedCount": 377}, {"contestId": 1556, "index": "F", "name": "Sports Betting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "graphs", "math", "probabilities"], "solvedCount": 1371}, {"contestId": 1556, "index": "E", "name": "Equilibrium", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2829}, {"contestId": 1556, "index": "D", "name": "Take a Guess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 7776}, {"contestId": 1556, "index": "C", "name": "Compressed Bracket Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "implementation"], "solvedCount": 5987}, {"contestId": 1556, "index": "B", "name": "Take Your Places!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 13014}, {"contestId": 1556, "index": "A", "name": "A Variety of Operations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 18294}, {"contestId": 1555, "index": "F", "name": "Good Graph", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 951}, {"contestId": 1555, "index": "E", "name": "Boring Segments", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "sortings", "trees", "two pointers"], "solvedCount": 4316}, {"contestId": 1555, "index": "D", "name": "Say No to Palindromes", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "dp", "strings"], "solvedCount": 13965}, {"contestId": 1555, "index": "C", "name": "Coin Rows", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "dp", "implementation"], "solvedCount": 23123}, {"contestId": 1555, "index": "B", "name": "Two Tables", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force"], "solvedCount": 16736}, {"contestId": 1555, "index": "A", "name": "PizzaForces", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "math"], "solvedCount": 29546}, {"contestId": 1554, "index": "E", "name": "You", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dfs and similar", "dp", "math", "number theory"], "solvedCount": 1300}, {"contestId": 1554, "index": "D", "name": "Diane", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 10082}, {"contestId": 1554, "index": "C", "name": "Mikasa", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "bitmasks", "greedy", "implementation"], "solvedCount": 9360}, {"contestId": 1554, "index": "B", "name": "Cobb", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["bitmasks", "brute force", "greedy", "math"], "solvedCount": 13334}, {"contestId": 1554, "index": "A", "name": "Cherry", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["greedy"], "solvedCount": 30513}, {"contestId": 1553, "index": "I", "name": "Stairs", "type": "PROGRAMMING", "points": 5250.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"], "solvedCount": 272}, {"contestId": 1553, "index": "H", "name": "XOR and Distance", "type": "PROGRAMMING", "points": 3750.0, "rating": 2900, "tags": ["bitmasks", "divide and conquer", "trees"], "solvedCount": 784}, {"contestId": 1553, "index": "G", "name": "Common Divisor Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "hashing", "math", "number theory"], "solvedCount": 1153}, {"contestId": 1553, "index": "F", "name": "Pairwise Modulo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "math"], "solvedCount": 2342}, {"contestId": 1553, "index": "E", "name": "Permutation Shift", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs", "math"], "solvedCount": 3524}, {"contestId": 1553, "index": "D", "name": "Backspace", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dp", "greedy", "strings", "two pointers"], "solvedCount": 14557}, {"contestId": 1553, "index": "C", "name": "Penalty", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["bitmasks", "brute force", "dp", "greedy"], "solvedCount": 18991}, {"contestId": 1553, "index": "B", "name": "Reverse String", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "dp", "hashing", "implementation", "strings"], "solvedCount": 14982}, {"contestId": 1553, "index": "A", "name": "Digits Sum", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 32813}, {"contestId": 1552, "index": "I", "name": "Organizing a Music Festival", "type": "PROGRAMMING", "points": 3750.0, "rating": 3400, "tags": ["dfs and similar", "math"], "solvedCount": 140}, {"contestId": 1552, "index": "H", "name": "Guess the Perimeter", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["binary search", "interactive", "number theory"], "solvedCount": 439}, {"contestId": 1552, "index": "G", "name": "A Serious Referee", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["bitmasks", "brute force", "dfs and similar", "sortings"], "solvedCount": 620}, {"contestId": 1552, "index": "F", "name": "Telepanting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "dp", "sortings"], "solvedCount": 3079}, {"contestId": 1552, "index": "E", "name": "Colors and Intervals", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 1991}, {"contestId": 1552, "index": "D", "name": "Array Differentiation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "math"], "solvedCount": 7520}, {"contestId": 1552, "index": "C", "name": "Maximize the Intersections", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "constructive algorithms", "geometry", "greedy", "sortings"], "solvedCount": 6117}, {"contestId": 1552, "index": "B", "name": "Running for Gold", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["combinatorics", "graphs", "greedy", "sortings"], "solvedCount": 16304}, {"contestId": 1552, "index": "A", "name": "Subsequence Permutation", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["sortings", "strings"], "solvedCount": 24520}, {"contestId": 1551, "index": "F", "name": "Equidistant Vertices", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "trees"], "solvedCount": 2002}, {"contestId": 1551, "index": "E", "name": "Fixed Points", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "dp"], "solvedCount": 4237}, {"contestId": 1551, "index": "D2", "name": "Domino (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 2886}, {"contestId": 1551, "index": "D1", "name": "Domino (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 7376}, {"contestId": 1551, "index": "C", "name": "Interesting Story", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "sortings", "strings"], "solvedCount": 14017}, {"contestId": 1551, "index": "B2", "name": "Wonderful Coloring - 2", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 16175}, {"contestId": 1551, "index": "B1", "name": "Wonderful Coloring - 1", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 30560}, {"contestId": 1551, "index": "A", "name": "Polycarp and Coins", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 55444}, {"contestId": 1550, "index": "F", "name": "Jumping Around", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "graphs", "shortest paths"], "solvedCount": 800}, {"contestId": 1550, "index": "E", "name": "Stringforces", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "bitmasks", "brute force", "dp", "strings", "two pointers"], "solvedCount": 1707}, {"contestId": 1550, "index": "D", "name": "Excellent Arrays", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation", "math", "sortings", "two pointers"], "solvedCount": 1927}, {"contestId": 1550, "index": "C", "name": "Manhattan Subarrays", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "geometry", "greedy", "implementation"], "solvedCount": 10510}, {"contestId": 1550, "index": "B", "name": "Maximum Cost Deletion", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 27665}, {"contestId": 1550, "index": "A", "name": "Find The Array", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 28946}, {"contestId": 1549, "index": "B", "name": "Gregor and the Pawn Game", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["dfs and similar", "dp", "flows", "graph matchings", "graphs", "greedy", "implementation"], "solvedCount": 25675}, {"contestId": 1549, "index": "A", "name": "Gregor and Cryptography", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 34379}, {"contestId": 1548, "index": "E", "name": "Gregor and the Two Painters", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "graphs", "greedy", "math"], "solvedCount": 548}, {"contestId": 1548, "index": "D2", "name": "Gregor and the Odd Cows (Hard)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3300, "tags": ["brute force", "geometry", "math", "number theory"], "solvedCount": 280}, {"contestId": 1548, "index": "D1", "name": "Gregor and the Odd Cows (Easy)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "geometry", "math", "number theory"], "solvedCount": 1548}, {"contestId": 1548, "index": "C", "name": "The Three Little Pigs", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 1929}, {"contestId": 1548, "index": "B", "name": "Integers Have Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "data structures", "divide and conquer", "math", "number theory", "two pointers"], "solvedCount": 10744}, {"contestId": 1548, "index": "A", "name": "Web of Lies", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "graphs", "greedy"], "solvedCount": 17124}, {"contestId": 1547, "index": "G", "name": "How Many Paths?", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 3308}, {"contestId": 1547, "index": "F", "name": "Array Stabilization (GCD version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "number theory", "two pointers"], "solvedCount": 6478}, {"contestId": 1547, "index": "E", "name": "Air Conditioners", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "dp", "implementation", "shortest paths", "sortings", "two pointers"], "solvedCount": 15576}, {"contestId": 1547, "index": "D", "name": "Co-growing Sequence", "type": "PROGRAMMING", "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 17860}, {"contestId": 1547, "index": "C", "name": "Pair Programming", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "two pointers"], "solvedCount": 23633}, {"contestId": 1547, "index": "B", "name": "Alphabetical Strings", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "strings"], "solvedCount": 27340}, {"contestId": 1547, "index": "A", "name": "Shortest Path with Obstacle", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 31538}, {"contestId": 1546, "index": "B", "name": "AquaMoon and Stolen String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["interactive", "math"], "solvedCount": 13580}, {"contestId": 1546, "index": "A", "name": "AquaMoon and Two Arrays", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy"], "solvedCount": 18433}, {"contestId": 1545, "index": "F", "name": "AquaMoon and Potatoes", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["brute force", "data structures", "dp"], "solvedCount": 121}, {"contestId": 1545, "index": "E2", "name": "AquaMoon and Time Stop (hard version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 91}, {"contestId": 1545, "index": "E1", "name": "AquaMoon and Time Stop (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 93}, {"contestId": 1545, "index": "D", "name": "AquaMoon and Wrong Coordinate", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 584}, {"contestId": 1545, "index": "C", "name": "AquaMoon and Permutations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["2-sat", "brute force", "combinatorics", "constructive algorithms", "graph matchings", "graphs"], "solvedCount": 672}, {"contestId": 1545, "index": "B", "name": "AquaMoon and Chess", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "math"], "solvedCount": 6391}, {"contestId": 1545, "index": "A", "name": "AquaMoon and Strange Sort", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["sortings"], "solvedCount": 14485}, {"contestId": 1543, "index": "E", "name": "The Final Pursuit", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "graphs", "greedy", "math"], "solvedCount": 430}, {"contestId": 1543, "index": "D2", "name": "RPD and Rap Sheet (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "interactive", "math"], "solvedCount": 2080}, {"contestId": 1543, "index": "D1", "name": "RPD and Rap Sheet (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 7847}, {"contestId": 1543, "index": "C", "name": "Need for Pink Slips", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dfs and similar", "implementation", "math", "probabilities"], "solvedCount": 5486}, {"contestId": 1543, "index": "B", "name": "Customising the Track", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["combinatorics", "greedy", "math"], "solvedCount": 23995}, {"contestId": 1543, "index": "A", "name": "Exciting Bets", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "math", "number theory"], "solvedCount": 34321}, {"contestId": 1542, "index": "E2", "name": "Abnormal Permutation Pairs (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 957}, {"contestId": 1542, "index": "E1", "name": "Abnormal Permutation Pairs (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 1350}, {"contestId": 1542, "index": "D", "name": "Priority Queue", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "dp", "implementation", "math", "ternary search"], "solvedCount": 2768}, {"contestId": 1542, "index": "C", "name": "Strange Function", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 15280}, {"contestId": 1542, "index": "B", "name": "Plus and Multiply", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 25087}, {"contestId": 1542, "index": "A", "name": "Odd Set", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 48667}, {"contestId": 1541, "index": "B", "name": "Pleasant Pairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 33200}, {"contestId": 1541, "index": "A", "name": "Pretty Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 30265}, {"contestId": 1540, "index": "E", "name": "Tasty Dishes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["math", "matrices"], "solvedCount": 122}, {"contestId": 1540, "index": "D", "name": "Inverse Inversions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["binary search", "brute force", "data structures"], "solvedCount": 316}, {"contestId": 1540, "index": "C2", "name": "Converging Array (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2900, "tags": ["dp", "math"], "solvedCount": 509}, {"contestId": 1540, "index": "C1", "name": "Converging Array (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["dp", "math"], "solvedCount": 679}, {"contestId": 1540, "index": "B", "name": "Tree Array", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "dp", "graphs", "math", "probabilities", "trees"], "solvedCount": 2813}, {"contestId": 1540, "index": "A", "name": "Great Graphs", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "sortings"], "solvedCount": 14546}, {"contestId": 1539, "index": "F", "name": "Strange Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 937}, {"contestId": 1539, "index": "E", "name": "Game with Cards", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 1018}, {"contestId": 1539, "index": "D", "name": "PriceFixed", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 12186}, {"contestId": 1539, "index": "C", "name": "Stable Groups", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 27038}, {"contestId": 1539, "index": "B", "name": "Love Song", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["dp", "implementation", "strings"], "solvedCount": 25701}, {"contestId": 1539, "index": "A", "name": "Contest Start", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["combinatorics", "geometry", "greedy", "math"], "solvedCount": 20885}, {"contestId": 1538, "index": "G", "name": "Gift Set", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "greedy", "math", "ternary search"], "solvedCount": 4915}, {"contestId": 1538, "index": "F", "name": "Interesting Function", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "dp", "math", "number theory"], "solvedCount": 20949}, {"contestId": 1538, "index": "E", "name": "Funny Substrings", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "hashing", "implementation", "matrices", "strings"], "solvedCount": 3093}, {"contestId": 1538, "index": "D", "name": "Another Problem About Dividing Numbers", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 14524}, {"contestId": 1538, "index": "C", "name": "Number of Pairs", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "data structures", "math", "two pointers"], "solvedCount": 31818}, {"contestId": 1538, "index": "B", "name": "Friends and Candies", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 32666}, {"contestId": 1538, "index": "A", "name": "Stone Game", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "dp", "greedy"], "solvedCount": 39068}, {"contestId": 1537, "index": "F", "name": "Figure Fixing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "math"], "solvedCount": 2627}, {"contestId": 1537, "index": "E2", "name": "Erase and Extend (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "data structures", "greedy", "hashing", "string suffix structures", "strings", "two pointers"], "solvedCount": 5660}, {"contestId": 1537, "index": "E1", "name": "Erase and Extend (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "brute force", "dp", "greedy", "hashing", "implementation", "string suffix structures", "strings", "two pointers"], "solvedCount": 14652}, {"contestId": 1537, "index": "D", "name": "Deleting Divisors", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["games", "math", "number theory"], "solvedCount": 13133}, {"contestId": 1537, "index": "C", "name": "Challenging Cliffs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 29278}, {"contestId": 1537, "index": "B", "name": "Bad Boy", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 35964}, {"contestId": 1537, "index": "A", "name": "Arithmetic Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 39490}, {"contestId": 1536, "index": "F", "name": "Omkar and Akmar", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["chinese remainder theorem", "combinatorics", "constructive algorithms", "fft", "games", "geometry", "math", "meet-in-the-middle", "string suffix structures"], "solvedCount": 1029}, {"contestId": 1536, "index": "E", "name": "Omkar and Forest", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "graphs", "math", "shortest paths"], "solvedCount": 2572}, {"contestId": 1536, "index": "D", "name": "Omkar and Medians", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 4916}, {"contestId": 1536, "index": "C", "name": "Diluc and Kaeya", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "dp", "hashing", "number theory"], "solvedCount": 15267}, {"contestId": 1536, "index": "B", "name": "Prinzessin der Verurteilung", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "strings"], "solvedCount": 21743}, {"contestId": 1536, "index": "A", "name": "Omkar and Bad Story", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 20531}, {"contestId": 1535, "index": "F", "name": "String Distance", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "brute force", "data structures", "hashing", "implementation", "strings"], "solvedCount": 504}, {"contestId": 1535, "index": "E", "name": "Gold Transfer", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "interactive", "trees"], "solvedCount": 2947}, {"contestId": 1535, "index": "D", "name": "Playoff Tournament", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 8154}, {"contestId": 1535, "index": "C", "name": "Unstable String", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "dp", "greedy", "implementation", "strings", "two pointers"], "solvedCount": 17253}, {"contestId": 1535, "index": "B", "name": "Array Reodering", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "greedy", "math", "number theory", "sortings"], "solvedCount": 32539}, {"contestId": 1535, "index": "A", "name": "Fair Playoff", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 53927}, {"contestId": 1534, "index": "H", "name": "Lost Nodes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "graphs", "interactive", "sortings", "trees"], "solvedCount": 245}, {"contestId": 1534, "index": "G", "name": "A New Beginning", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["data structures", "dp", "geometry", "sortings"], "solvedCount": 734}, {"contestId": 1534, "index": "F2", "name": "Falling Sand (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 3000, "tags": ["dfs and similar", "dp", "graphs", "greedy"], "solvedCount": 652}, {"contestId": 1534, "index": "F1", "name": "Falling Sand (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["dfs and similar", "graphs", "greedy"], "solvedCount": 1332}, {"contestId": 1534, "index": "E", "name": "Lost Array", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["graphs", "greedy", "interactive", "shortest paths"], "solvedCount": 2030}, {"contestId": 1534, "index": "D", "name": "Lost Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "interactive", "trees"], "solvedCount": 6421}, {"contestId": 1534, "index": "C", "name": "Little Alawn's Puzzle", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["combinatorics", "dp", "dsu", "graphs", "math"], "solvedCount": 13325}, {"contestId": 1534, "index": "B", "name": "Histogram Ugliness", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation", "math"], "solvedCount": 12723}, {"contestId": 1534, "index": "A", "name": "Colour the Flag", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 12949}, {"contestId": 1533, "index": "J", "name": "Pawns", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 50}, {"contestId": 1533, "index": "I", "name": "Excursions", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "flows", "graph matchings", "graphs"], "solvedCount": 58}, {"contestId": 1533, "index": "H", "name": "Submatrices", "type": "PROGRAMMING", "tags": ["*special", "bitmasks", "data structures", "dp"], "solvedCount": 89}, {"contestId": 1533, "index": "G", "name": "Biome Map", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 95}, {"contestId": 1533, "index": "F", "name": "Binary String Partition", "type": "PROGRAMMING", "tags": ["*special", "binary search", "greedy"], "solvedCount": 221}, {"contestId": 1533, "index": "E", "name": "Chess Team Forming", "type": "PROGRAMMING", "tags": ["*special", "binary search", "data structures", "greedy"], "solvedCount": 282}, {"contestId": 1533, "index": "D", "name": "String Searching", "type": "PROGRAMMING", "tags": ["*special", "hashing"], "solvedCount": 507}, {"contestId": 1533, "index": "C", "name": "Sweets", "type": "PROGRAMMING", "tags": ["*special", "data structures", "implementation"], "solvedCount": 481}, {"contestId": 1533, "index": "B", "name": "Nearest Point Function", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 778}, {"contestId": 1533, "index": "A", "name": "Travel to Bertown", "type": "PROGRAMMING", "tags": ["*special", "implementation", "math"], "solvedCount": 1087}, {"contestId": 1532, "index": "F", "name": "Prefixes and Suffixes", "type": "PROGRAMMING", "tags": ["*special", "strings"], "solvedCount": 219}, {"contestId": 1532, "index": "E", "name": "Good Array", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 391}, {"contestId": 1532, "index": "D", "name": "Teams Forming", "type": "PROGRAMMING", "tags": ["*special", "sortings"], "solvedCount": 588}, {"contestId": 1532, "index": "C", "name": "Uniform String", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 640}, {"contestId": 1532, "index": "B", "name": "Frog Jumping", "type": "PROGRAMMING", "tags": ["*special", "math"], "solvedCount": 826}, {"contestId": 1532, "index": "A", "name": "A+B (Trial Problem)", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 1146}, {"contestId": 1531, "index": "E3", "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c", "type": "PROGRAMMING", "tags": ["*special", "binary search"], "solvedCount": 271}, {"contestId": 1531, "index": "E2", "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c", "type": "PROGRAMMING", "tags": ["*special", "*special", "brute force"], "solvedCount": 339}, {"contestId": 1531, "index": "E1", "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 359}, {"contestId": 1531, "index": "D", "name": "\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c \u0417\u0438\u043d\u0433\u0435\u0440 | color", "type": "PROGRAMMING", "tags": ["*special", "*special"], "solvedCount": 356}, {"contestId": 1531, "index": "C", "name": "\u0421\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u0447\u043d\u044b\u0439 \u0430\u043c\u0444\u0438\u0442\u0435\u0430\u0442\u0440", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dp"], "solvedCount": 654}, {"contestId": 1531, "index": "B2", "name": "\u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 775}, {"contestId": 1531, "index": "B1", "name": "\u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433", "type": "PROGRAMMING", "tags": ["*special", "*special"], "solvedCount": 1116}, {"contestId": 1531, "index": "A", "name": "\u0417\u0438\u043d\u0433\u0435\u0440 | color", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 1458}, {"contestId": 1530, "index": "H", "name": "Turing's Award", "type": "PROGRAMMING", "points": 4750.0, "rating": 3400, "tags": ["data structures", "dp"], "solvedCount": 186}, {"contestId": 1530, "index": "G", "name": "What a Reversal", "type": "PROGRAMMING", "points": 3750.0, "rating": 3300, "tags": ["constructive algorithms"], "solvedCount": 183}, {"contestId": 1530, "index": "F", "name": "Bingo", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "combinatorics", "dp", "math", "probabilities"], "solvedCount": 923}, {"contestId": 1530, "index": "E", "name": "Minimax", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 3110}, {"contestId": 1530, "index": "D", "name": "Secret Santa", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "flows", "graphs", "greedy", "math"], "solvedCount": 9744}, {"contestId": 1530, "index": "C", "name": "Pursuit", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "brute force", "greedy", "sortings"], "solvedCount": 15198}, {"contestId": 1530, "index": "B", "name": "Putting Plates", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 16128}, {"contestId": 1530, "index": "A", "name": "Binary Decimal", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 21575}, {"contestId": 1529, "index": "B", "name": "Sifid and Strange Subsequences", "type": "PROGRAMMING", "points": 1250.0, "rating": 1100, "tags": ["greedy", "math", "sortings"], "solvedCount": 20941}, {"contestId": 1529, "index": "A", "name": "Eshag Loves Big Arrays", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 30411}, {"contestId": 1528, "index": "F", "name": "AmShZ Farm", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["combinatorics", "fft", "math"], "solvedCount": 316}, {"contestId": 1528, "index": "E", "name": "Mashtali and Hagh Trees", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 562}, {"contestId": 1528, "index": "D", "name": "It's a bird! No, it's a plane! No, it's AaParsa!", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 1616}, {"contestId": 1528, "index": "C", "name": "Trees of Tranquillity", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 2811}, {"contestId": 1528, "index": "B", "name": "Kavi on Pairing Duty", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"], "solvedCount": 9503}, {"contestId": 1528, "index": "A", "name": "Parsa's Humongous Tree", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["dfs and similar", "divide and conquer", "dp", "greedy", "trees"], "solvedCount": 16836}, {"contestId": 1527, "index": "E", "name": "Partition Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "data structures", "divide and conquer", "dp"], "solvedCount": 2676}, {"contestId": 1527, "index": "D", "name": "MEX Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "implementation", "math", "trees"], "solvedCount": 2056}, {"contestId": 1527, "index": "C", "name": "Sequence Pair Weight", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["hashing", "implementation", "math"], "solvedCount": 14376}, {"contestId": 1527, "index": "B2", "name": "Palindrome Game (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "games"], "solvedCount": 8385}, {"contestId": 1527, "index": "B1", "name": "Palindrome Game (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "games"], "solvedCount": 30145}, {"contestId": 1527, "index": "A", "name": "And Then There Were K", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks"], "solvedCount": 39070}, {"contestId": 1526, "index": "F", "name": "Median Queries", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["constructive algorithms", "interactive", "probabilities"], "solvedCount": 321}, {"contestId": 1526, "index": "E", "name": "Oolimry and Suffix Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 1334}, {"contestId": 1526, "index": "D", "name": "Kill Anton", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "data structures", "math", "strings"], "solvedCount": 2612}, {"contestId": 1526, "index": "C2", "name": "Potions (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 26286}, {"contestId": 1526, "index": "C1", "name": "Potions (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy"], "solvedCount": 25208}, {"contestId": 1526, "index": "B", "name": "I Hate 1111", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "math", "number theory"], "solvedCount": 34120}, {"contestId": 1526, "index": "A", "name": "Mean Inequality", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 24694}, {"contestId": 1525, "index": "F", "name": "Goblins And Gnomes", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "flows", "graph matchings"], "solvedCount": 363}, {"contestId": 1525, "index": "E", "name": "Assimilation IV", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math", "probabilities", "two pointers"], "solvedCount": 2236}, {"contestId": 1525, "index": "D", "name": "Armchairs", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "flows", "graph matchings", "greedy"], "solvedCount": 10358}, {"contestId": 1525, "index": "C", "name": "Robot Collisions", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 4686}, {"contestId": 1525, "index": "B", "name": "Permutation Sort", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 25866}, {"contestId": 1525, "index": "A", "name": "Potion-making", "type": "PROGRAMMING", "rating": 800, "tags": ["math", "number theory"], "solvedCount": 26356}, {"contestId": 1523, "index": "H", "name": "Hopping Around the Array ", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 399}, {"contestId": 1523, "index": "G", "name": "Try Booking", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["data structures", "divide and conquer"], "solvedCount": 504}, {"contestId": 1523, "index": "F", "name": "Favorite Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["bitmasks", "dp"], "solvedCount": 458}, {"contestId": 1523, "index": "E", "name": "Crypto Lights", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 1841}, {"contestId": 1523, "index": "D", "name": "Love-Hate", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dp", "probabilities"], "solvedCount": 2353}, {"contestId": 1523, "index": "C", "name": "Compression and Expansion", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "data structures", "greedy", "implementation", "trees"], "solvedCount": 9037}, {"contestId": 1523, "index": "B", "name": "Lord of the Values", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms"], "solvedCount": 12288}, {"contestId": 1523, "index": "A", "name": "Game of Life", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 13665}, {"contestId": 1521, "index": "E", "name": "Nastia and a Beautiful Matrix", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "constructive algorithms", "dp", "greedy"], "solvedCount": 714}, {"contestId": 1521, "index": "D", "name": "Nastia Plays with a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "solvedCount": 2147}, {"contestId": 1521, "index": "C", "name": "Nastia and a Hidden Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "interactive"], "solvedCount": 4535}, {"contestId": 1521, "index": "B", "name": "Nastia and a Good Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 22402}, {"contestId": 1521, "index": "A", "name": "Nastia and Nearly Good Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 40330}, {"contestId": 1520, "index": "G", "name": "To Go Or Not To Go?", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dfs and similar", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 4014}, {"contestId": 1520, "index": "F2", "name": "Guess the K-th Zero (Hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "data structures", "interactive"], "solvedCount": 3193}, {"contestId": 1520, "index": "F1", "name": "Guess the K-th Zero (Easy version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "interactive"], "solvedCount": 13329}, {"contestId": 1520, "index": "E", "name": "Arranging The Sheep", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "math"], "solvedCount": 25017}, {"contestId": 1520, "index": "D", "name": "Same Differences", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "hashing", "math"], "solvedCount": 56012}, {"contestId": 1520, "index": "C", "name": "Not Adjacent Matrix", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 33513}, {"contestId": 1520, "index": "B", "name": "Ordinary Numbers", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math", "number theory"], "solvedCount": 47456}, {"contestId": 1520, "index": "A", "name": "Do Not Be Distracted!", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 55909}, {"contestId": 1519, "index": "F", "name": "Chests and Keys", "type": "PROGRAMMING", "rating": 3200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "flows"], "solvedCount": 576}, {"contestId": 1519, "index": "E", "name": "Off by One", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "geometry", "graphs", "sortings", "trees"], "solvedCount": 863}, {"contestId": 1519, "index": "D", "name": "Maximum Sum of Products", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "dp", "implementation", "math", "two pointers"], "solvedCount": 16373}, {"contestId": 1519, "index": "C", "name": "Berland Regional", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "data structures", "greedy", "number theory", "sortings"], "solvedCount": 19575}, {"contestId": 1519, "index": "B", "name": "The Cake Is a Lie", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "math"], "solvedCount": 32403}, {"contestId": 1519, "index": "A", "name": "Red and Blue Beans", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 29846}, {"contestId": 1517, "index": "H", "name": "Fly Around the World", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "geometry"], "solvedCount": 80}, {"contestId": 1517, "index": "G", "name": "Starry Night Camping", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms", "flows", "graphs"], "solvedCount": 549}, {"contestId": 1517, "index": "F", "name": "Reunion", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 541}, {"contestId": 1517, "index": "E", "name": "Group Photo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "implementation", "two pointers"], "solvedCount": 1010}, {"contestId": 1517, "index": "D", "name": "Explorer Space", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 8537}, {"contestId": 1517, "index": "C", "name": "Fillomino 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "dfs and similar", "greedy", "implementation"], "solvedCount": 13853}, {"contestId": 1517, "index": "B", "name": "Morning Jogging", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 13559}, {"contestId": 1517, "index": "A", "name": "Sum of 2050", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 26337}, {"contestId": 1516, "index": "E", "name": "Baby Ehab Plays with Permutations", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "dp", "math"], "solvedCount": 937}, {"contestId": 1516, "index": "D", "name": "Cut", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "dp", "graphs", "number theory", "two pointers"], "solvedCount": 4793}, {"contestId": 1516, "index": "C", "name": "Baby Ehab Partitions Again", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "solvedCount": 12989}, {"contestId": 1516, "index": "B", "name": "AGAGA XOOORRR", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "brute force", "dp", "greedy"], "solvedCount": 22379}, {"contestId": 1516, "index": "A", "name": "Tit for Tat", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 24240}, {"contestId": 1515, "index": "I", "name": "Phoenix and Diamonds", "type": "PROGRAMMING", "points": 5000.0, "rating": 3400, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 360}, {"contestId": 1515, "index": "H", "name": "Phoenix and Bits", "type": "PROGRAMMING", "points": 4250.0, "rating": 3500, "tags": ["bitmasks", "brute force", "data structures", "sortings"], "solvedCount": 323}, {"contestId": 1515, "index": "G", "name": "Phoenix and Odometers", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "math", "number theory"], "solvedCount": 1235}, {"contestId": 1515, "index": "F", "name": "Phoenix and Earthquake", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1945}, {"contestId": 1515, "index": "E", "name": "Phoenix and Computers", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["combinatorics", "dp", "math"], "solvedCount": 3999}, {"contestId": 1515, "index": "D", "name": "Phoenix and Socks", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 12181}, {"contestId": 1515, "index": "C", "name": "Phoenix and Towers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 18126}, {"contestId": 1515, "index": "B", "name": "Phoenix and Puzzle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "geometry", "math", "number theory"], "solvedCount": 26155}, {"contestId": 1515, "index": "A", "name": "Phoenix and Gold", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 20680}, {"contestId": 1514, "index": "E", "name": "Baby Ehab's Hyper Apartment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "graphs", "interactive", "sortings", "two pointers"], "solvedCount": 670}, {"contestId": 1514, "index": "D", "name": "Cut and Stick", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 4639}, {"contestId": 1514, "index": "C", "name": "Product 1 Modulo N", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy", "number theory"], "solvedCount": 16826}, {"contestId": 1514, "index": "B", "name": "AND 0, Sum Big", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "combinatorics", "math"], "solvedCount": 29943}, {"contestId": 1514, "index": "A", "name": "Perfectly Imperfect Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 24896}, {"contestId": 1513, "index": "F", "name": "Swapping Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "data structures", "sortings"], "solvedCount": 1347}, {"contestId": 1513, "index": "E", "name": "Cost Equilibrium", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["combinatorics", "constructive algorithms", "math", "sortings"], "solvedCount": 1585}, {"contestId": 1513, "index": "D", "name": "GCD and MST", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "number theory", "sortings"], "solvedCount": 6054}, {"contestId": 1513, "index": "C", "name": "Add One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "matrices"], "solvedCount": 15552}, {"contestId": 1513, "index": "B", "name": "AND Sequences", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "math"], "solvedCount": 17370}, {"contestId": 1513, "index": "A", "name": "Array and Peaks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 19845}, {"contestId": 1512, "index": "G", "name": "Short Task", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "math", "number theory"], "solvedCount": 8855}, {"contestId": 1512, "index": "F", "name": "Education", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 6572}, {"contestId": 1512, "index": "E", "name": "Permutation by Sum", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "greedy", "math"], "solvedCount": 11038}, {"contestId": 1512, "index": "D", "name": "Corrupted Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 23725}, {"contestId": 1512, "index": "C", "name": "A-B Palindrome", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 21120}, {"contestId": 1512, "index": "B", "name": "Almost Rectangle", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 26010}, {"contestId": 1512, "index": "A", "name": "Spy Detected!", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 72418}, {"contestId": 1511, "index": "G", "name": "Chips on a Board", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "data structures", "dp", "games", "two pointers"], "solvedCount": 895}, {"contestId": 1511, "index": "F", "name": "Chainword", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "data structures", "dp", "matrices", "string suffix structures", "strings"], "solvedCount": 503}, {"contestId": 1511, "index": "E", "name": "Colorings and Dominoes", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "greedy", "math"], "solvedCount": 2753}, {"contestId": 1511, "index": "D", "name": "Min Cost String", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "strings"], "solvedCount": 12048}, {"contestId": 1511, "index": "C", "name": "Yet Another Card Deck", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "data structures", "implementation", "trees"], "solvedCount": 28145}, {"contestId": 1511, "index": "B", "name": "GCD Length", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 23957}, {"contestId": 1511, "index": "A", "name": "Review Site", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 28283}, {"contestId": 1510, "index": "K", "name": "King's Task", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "graphs", "implementation"], "solvedCount": 5755}, {"contestId": 1510, "index": "J", "name": "Japanese Game", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "math"], "solvedCount": 544}, {"contestId": 1510, "index": "I", "name": "Is It Rated?", "type": "PROGRAMMING", "rating": 2700, "tags": ["greedy", "interactive", "math", "probabilities"], "solvedCount": 544}, {"contestId": 1510, "index": "H", "name": "Hard Optimization", "type": "PROGRAMMING", "rating": 3200, "tags": ["dp"], "solvedCount": 133}, {"contestId": 1510, "index": "G", "name": "Guide", "type": "PROGRAMMING", "rating": 2100, "tags": [], "solvedCount": 1345}, {"contestId": 1510, "index": "F", "name": "Fiber Shape", "type": "PROGRAMMING", "rating": 2800, "tags": [], "solvedCount": 62}, {"contestId": 1510, "index": "E", "name": "Equilibrium Point /\\textbackslash/\\textbackslash", "type": "PROGRAMMING", "rating": 2700, "tags": [], "solvedCount": 264}, {"contestId": 1510, "index": "D", "name": "Digits", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math", "number theory"], "solvedCount": 2026}, {"contestId": 1510, "index": "C", "name": "Cactus Not Enough", "type": "PROGRAMMING", "rating": 2900, "tags": ["dfs and similar", "graph matchings", "graphs"], "solvedCount": 228}, {"contestId": 1510, "index": "B", "name": "Button Lock", "type": "PROGRAMMING", "rating": 2600, "tags": ["flows", "graph matchings", "graphs"], "solvedCount": 909}, {"contestId": 1510, "index": "A", "name": "ASCII Automata Art", "type": "PROGRAMMING", "rating": 3100, "tags": [], "solvedCount": 161}, {"contestId": 1509, "index": "C", "name": "The Sports Festival", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "greedy"], "solvedCount": 14030}, {"contestId": 1509, "index": "B", "name": "TMT Document", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 22473}, {"contestId": 1509, "index": "A", "name": "Average Height", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 26589}, {"contestId": 1508, "index": "F", "name": "Optimal Encoding", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["brute force", "data structures"], "solvedCount": 138}, {"contestId": 1508, "index": "E", "name": "Tree Calendar", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["brute force", "constructive algorithms", "data structures", "dfs and similar", "sortings", "trees"], "solvedCount": 372}, {"contestId": 1508, "index": "D", "name": "Swap Pass", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["constructive algorithms", "geometry", "sortings"], "solvedCount": 681}, {"contestId": 1508, "index": "C", "name": "Complete the MST", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1606}, {"contestId": 1508, "index": "B", "name": "Almost Sorted", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation"], "solvedCount": 4236}, {"contestId": 1508, "index": "A", "name": "Binary Literature", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "implementation", "strings", "two pointers"], "solvedCount": 6487}, {"contestId": 1506, "index": "G", "name": "Maximize the Remaining String", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "solvedCount": 4600}, {"contestId": 1506, "index": "F", "name": "Triangular Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "graphs", "math", "shortest paths", "sortings"], "solvedCount": 3554}, {"contestId": 1506, "index": "E", "name": "Restoring the Permutation", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13841}, {"contestId": 1506, "index": "D", "name": "Epic Transformation", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 23935}, {"contestId": 1506, "index": "C", "name": "Double-ended Strings", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation", "strings"], "solvedCount": 30212}, {"contestId": 1506, "index": "B", "name": "Partial Replacement", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 20686}, {"contestId": 1506, "index": "A", "name": "Strange Table", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 31556}, {"contestId": 1505, "index": "I", "name": "Mysterious language again, seriously?", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special"], "solvedCount": 588}, {"contestId": 1505, "index": "H", "name": "L BREAK into program", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special"], "solvedCount": 535}, {"contestId": 1505, "index": "G", "name": "Encoded message", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "implementation"], "solvedCount": 326}, {"contestId": 1505, "index": "F", "name": "Math", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "math"], "solvedCount": 1555}, {"contestId": 1505, "index": "E", "name": "Cakewalk", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "greedy", "implementation", "shortest paths"], "solvedCount": 1849}, {"contestId": 1505, "index": "D", "name": "Xenolith? Hippodrome?", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "number theory"], "solvedCount": 841}, {"contestId": 1505, "index": "C", "name": "Fibonacci Words", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"], "solvedCount": 6597}, {"contestId": 1505, "index": "B", "name": "DMCA", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "implementation", "number theory"], "solvedCount": 6361}, {"contestId": 1505, "index": "A", "name": "Is it rated - 2", "type": "PROGRAMMING", "rating": 900, "tags": ["*special", "implementation", "interactive"], "solvedCount": 15365}, {"contestId": 1504, "index": "B", "name": "Flip the Bits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 21975}, {"contestId": 1504, "index": "A", "name": " D\u00e9j\u00e0 Vu", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "strings"], "solvedCount": 22387}, {"contestId": 1503, "index": "F", "name": "Balance the Cards", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation"], "solvedCount": 203}, {"contestId": 1503, "index": "E", "name": "2-Coloring", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 766}, {"contestId": 1503, "index": "D", "name": "Flip the Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["2-sat", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 1213}, {"contestId": 1503, "index": "C", "name": "Travelling Salesman Problem", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "sortings", "two pointers"], "solvedCount": 3642}, {"contestId": 1503, "index": "B", "name": "3-Coloring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "games", "interactive"], "solvedCount": 7380}, {"contestId": 1503, "index": "A", "name": "Balance the Bits", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 14075}, {"contestId": 1501, "index": "B", "name": "Napoleon Cake", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["dp", "implementation", "sortings"], "solvedCount": 20417}, {"contestId": 1501, "index": "A", "name": "Alexey and Train", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 11809}, {"contestId": 1500, "index": "F", "name": "Cupboards Jumps", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp"], "solvedCount": 374}, {"contestId": 1500, "index": "E", "name": "Subset Trick", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["binary search", "data structures"], "solvedCount": 301}, {"contestId": 1500, "index": "D", "name": "Tiles for Bathroom", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "sortings", "two pointers"], "solvedCount": 566}, {"contestId": 1500, "index": "C", "name": "Matrix Sorting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "two pointers"], "solvedCount": 878}, {"contestId": 1500, "index": "B", "name": "Two chandeliers", "type": "PROGRAMMING", "points": 750.0, "rating": 2200, "tags": ["binary search", "brute force", "chinese remainder theorem", "math", "number theory"], "solvedCount": 2178}, {"contestId": 1500, "index": "A", "name": "Going Home", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["brute force", "hashing", "implementation", "math"], "solvedCount": 9219}, {"contestId": 1499, "index": "G", "name": "Graph Coloring", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "graphs", "interactive"], "solvedCount": 221}, {"contestId": 1499, "index": "F", "name": "Diameter Cuts", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "solvedCount": 1494}, {"contestId": 1499, "index": "E", "name": "Chaotic Merge", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "math", "strings"], "solvedCount": 1592}, {"contestId": 1499, "index": "D", "name": "The Number of Pairs", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math", "number theory"], "solvedCount": 6581}, {"contestId": 1499, "index": "C", "name": "Minimum Grid Path", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "greedy", "math"], "solvedCount": 13099}, {"contestId": 1499, "index": "B", "name": "Binary Removals", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 21432}, {"contestId": 1499, "index": "A", "name": "Domino on Windowsill", "type": "PROGRAMMING", "rating": 800, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 21649}, {"contestId": 1498, "index": "F", "name": "Christmas Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "data structures", "dfs and similar", "dp", "games", "math", "trees"], "solvedCount": 1007}, {"contestId": 1498, "index": "E", "name": "Two Houses", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "graphs", "greedy", "interactive", "sortings"], "solvedCount": 2021}, {"contestId": 1498, "index": "D", "name": "Bananas in a Microwave", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "implementation"], "solvedCount": 2442}, {"contestId": 1498, "index": "C", "name": "Planar Reflections", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "data structures", "dp"], "solvedCount": 10964}, {"contestId": 1498, "index": "B", "name": "Box Fitting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "bitmasks", "data structures", "greedy"], "solvedCount": 20271}, {"contestId": 1498, "index": "A", "name": "GCD Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math"], "solvedCount": 24100}, {"contestId": 1497, "index": "E2", "name": "Square-Free Division (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 1845}, {"contestId": 1497, "index": "E1", "name": "Square-Free Division (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 8786}, {"contestId": 1497, "index": "D", "name": "Genius", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "dp", "graphs", "number theory"], "solvedCount": 1630}, {"contestId": 1497, "index": "C2", "name": "k-LCM (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "math"], "solvedCount": 18565}, {"contestId": 1497, "index": "C1", "name": "k-LCM (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 27803}, {"contestId": 1497, "index": "B", "name": "M-arrays", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 23500}, {"contestId": 1497, "index": "A", "name": "Meximization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "data structures", "greedy", "sortings"], "solvedCount": 25290}, {"contestId": 1496, "index": "B", "name": "Max and Mex", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"], "solvedCount": 17951}, {"contestId": 1496, "index": "A", "name": "Split it!", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "solvedCount": 21731}, {"contestId": 1495, "index": "F", "name": "Squares", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "graphs", "trees"], "solvedCount": 389}, {"contestId": 1495, "index": "E", "name": "Qingshan and Daniel", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 529}, {"contestId": 1495, "index": "D", "name": "BFS Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["combinatorics", "dfs and similar", "graphs", "math", "shortest paths", "trees"], "solvedCount": 1437}, {"contestId": 1495, "index": "C", "name": "Garden of the Sun", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "graphs"], "solvedCount": 2827}, {"contestId": 1495, "index": "B", "name": "Let's Go Hiking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["games", "greedy"], "solvedCount": 6191}, {"contestId": 1495, "index": "A", "name": "Diamond Miner", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["geometry", "greedy", "math", "sortings"], "solvedCount": 17518}, {"contestId": 1494, "index": "F", "name": "Delete The Edges", "type": "PROGRAMMING", "rating": 2900, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation"], "solvedCount": 463}, {"contestId": 1494, "index": "E", "name": "A-Z Graph", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "data structures", "graphs", "hashing"], "solvedCount": 1944}, {"contestId": 1494, "index": "D", "name": "Dogeforces", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "sortings", "trees"], "solvedCount": 2696}, {"contestId": 1494, "index": "C", "name": "1D Sokoban", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"], "solvedCount": 5602}, {"contestId": 1494, "index": "B", "name": "Berland Crossword", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "brute force", "greedy", "implementation"], "solvedCount": 14955}, {"contestId": 1494, "index": "A", "name": "ABC String", "type": "PROGRAMMING", "rating": 900, "tags": ["bitmasks", "brute force", "implementation"], "solvedCount": 21930}, {"contestId": 1493, "index": "F", "name": "Enchanted Matrix", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["bitmasks", "interactive", "number theory"], "solvedCount": 481}, {"contestId": 1493, "index": "E", "name": "Enormous XOR", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "constructive algorithms", "greedy", "math", "strings", "two pointers"], "solvedCount": 1007}, {"contestId": 1493, "index": "D", "name": "GCD of an Array", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["brute force", "data structures", "hashing", "implementation", "math", "number theory", "sortings", "two pointers"], "solvedCount": 5409}, {"contestId": 1493, "index": "C", "name": "K-beautiful Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "strings"], "solvedCount": 4786}, {"contestId": 1493, "index": "B", "name": "Planet Lapituletti", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 12169}, {"contestId": 1493, "index": "A", "name": "Anti-knapsack", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19598}, {"contestId": 1492, "index": "E", "name": "Almost Fault-Tolerant Database", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "implementation"], "solvedCount": 1266}, {"contestId": 1492, "index": "D", "name": "Genius's Gambit", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 6340}, {"contestId": 1492, "index": "C", "name": "Maximum width", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 17032}, {"contestId": 1492, "index": "B", "name": "Card Deck", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "greedy", "math"], "solvedCount": 19355}, {"contestId": 1492, "index": "A", "name": "Three swimmers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 23129}, {"contestId": 1491, "index": "I", "name": "Ruler Of The Zoo", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["brute force", "data structures"], "solvedCount": 102}, {"contestId": 1491, "index": "H", "name": "Yuezheng Ling and Dynamic Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["data structures", "trees"], "solvedCount": 1051}, {"contestId": 1491, "index": "G", "name": "Switch and Flip", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 942}, {"contestId": 1491, "index": "F", "name": "Magnets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 1064}, {"contestId": 1491, "index": "E", "name": "Fib-tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "dfs and similar", "divide and conquer", "number theory", "trees"], "solvedCount": 2264}, {"contestId": 1491, "index": "D", "name": "Zookeeper and The Infinite Zoo", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math"], "solvedCount": 7741}, {"contestId": 1491, "index": "C", "name": "Pekora and Trampoline", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "solvedCount": 8213}, {"contestId": 1491, "index": "B", "name": "Minimal Cost", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "math"], "solvedCount": 14068}, {"contestId": 1491, "index": "A", "name": "K-th Largest Value", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 18749}, {"contestId": 1490, "index": "G", "name": "Old Floppy Drive ", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "math"], "solvedCount": 5959}, {"contestId": 1490, "index": "F", "name": "Equalize the Array", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "solvedCount": 17556}, {"contestId": 1490, "index": "E", "name": "Accidental Victory", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 20257}, {"contestId": 1490, "index": "D", "name": "Permutation Transformation", "type": "PROGRAMMING", "rating": 1200, "tags": ["dfs and similar", "divide and conquer", "implementation"], "solvedCount": 20707}, {"contestId": 1490, "index": "C", "name": "Sum of Cubes", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "brute force", "brute force", "math"], "solvedCount": 36349}, {"contestId": 1490, "index": "B", "name": "Balanced Remainders", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 27209}, {"contestId": 1490, "index": "A", "name": "Dense Array", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 32226}, {"contestId": 1488, "index": "J", "name": "Flower Shop", "type": "PROGRAMMING", "rating": 3100, "tags": ["*special", "data structures", "fft", "math"], "solvedCount": 40}, {"contestId": 1488, "index": "I", "name": "Demonic Invasion", "type": "PROGRAMMING", "rating": 3100, "tags": ["*special", "flows"], "solvedCount": 42}, {"contestId": 1488, "index": "H", "name": "Build From Suffixes", "type": "PROGRAMMING", "rating": 2800, "tags": ["*special", "combinatorics", "data structures"], "solvedCount": 64}, {"contestId": 1488, "index": "G", "name": "Painting Numbers", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "data structures", "greedy", "number theory"], "solvedCount": 130}, {"contestId": 1488, "index": "F", "name": "Dogecoin", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "*special", "binary search", "data structures"], "solvedCount": 183}, {"contestId": 1488, "index": "E", "name": "Palindromic Doubles", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "data structures", "dp"], "solvedCount": 223}, {"contestId": 1488, "index": "D", "name": "Problemsolving Marathon", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "binary search", "greedy"], "solvedCount": 349}, {"contestId": 1488, "index": "C", "name": "Two Policemen", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "binary search", "brute force", "math"], "solvedCount": 445}, {"contestId": 1488, "index": "B", "name": "RBS Deletion", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "greedy"], "solvedCount": 587}, {"contestId": 1488, "index": "A", "name": "From Zero To Y", "type": "PROGRAMMING", "rating": 900, "tags": ["*special", "math"], "solvedCount": 1689}, {"contestId": 1487, "index": "G", "name": "String Counting", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 647}, {"contestId": 1487, "index": "F", "name": "Ones", "type": "PROGRAMMING", "rating": 2900, "tags": ["dp", "greedy", "shortest paths"], "solvedCount": 437}, {"contestId": 1487, "index": "E", "name": "Cheap Dinner", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "graphs", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 4860}, {"contestId": 1487, "index": "D", "name": "Pythagorean Triples", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "math", "number theory"], "solvedCount": 19584}, {"contestId": 1487, "index": "C", "name": "Minimum Ties", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "math"], "solvedCount": 14979}, {"contestId": 1487, "index": "B", "name": "Cat Cycle", "type": "PROGRAMMING", "rating": 1200, "tags": ["math", "number theory"], "solvedCount": 24737}, {"contestId": 1487, "index": "A", "name": "Arena", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 27128}, {"contestId": 1486, "index": "F", "name": "Pairs of Paths", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "trees"], "solvedCount": 745}, {"contestId": 1486, "index": "E", "name": "Paired Payment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "brute force", "constructive algorithms", "dp", "flows", "graphs", "shortest paths"], "solvedCount": 3151}, {"contestId": 1486, "index": "D", "name": "Max Median", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "data structures", "dp"], "solvedCount": 8776}, {"contestId": 1486, "index": "C2", "name": "Guessing the Greatest (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "interactive"], "solvedCount": 9338}, {"contestId": 1486, "index": "C1", "name": "Guessing the Greatest (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["binary search", "interactive"], "solvedCount": 13463}, {"contestId": 1486, "index": "B", "name": "Eastern Exhibition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "geometry", "shortest paths", "sortings"], "solvedCount": 18160}, {"contestId": 1486, "index": "A", "name": "Shifting Stacks", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 26336}, {"contestId": 1485, "index": "F", "name": "Copy or Prefix Sum", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["combinatorics", "data structures", "dp", "sortings"], "solvedCount": 2141}, {"contestId": 1485, "index": "E", "name": "Move and Swap", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1456}, {"contestId": 1485, "index": "D", "name": "Multiples and Power Differences", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["constructive algorithms", "graphs", "math", "number theory"], "solvedCount": 5451}, {"contestId": 1485, "index": "C", "name": "Floor and Mod", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "math", "number theory"], "solvedCount": 10550}, {"contestId": 1485, "index": "B", "name": "Replace and Keep Sorted", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "implementation", "math"], "solvedCount": 17557}, {"contestId": 1485, "index": "A", "name": "Add and Divide", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 27446}, {"contestId": 1482, "index": "H", "name": "Exam", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "trees"], "solvedCount": 536}, {"contestId": 1482, "index": "G", "name": "Vabank", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["binary search", "interactive"], "solvedCount": 328}, {"contestId": 1482, "index": "F", "name": "Useful Edges", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["graphs", "shortest paths"], "solvedCount": 1656}, {"contestId": 1482, "index": "E", "name": "Skyline Photo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 3538}, {"contestId": 1482, "index": "D", "name": "Playlist", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dsu", "implementation", "shortest paths"], "solvedCount": 4011}, {"contestId": 1482, "index": "C", "name": "Basic Diplomacy", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 9783}, {"contestId": 1482, "index": "B", "name": "Restore Modulo", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["implementation", "math"], "solvedCount": 9445}, {"contestId": 1482, "index": "A", "name": "Prison Break", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 20933}, {"contestId": 1481, "index": "F", "name": "AB Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["dp", "greedy", "trees"], "solvedCount": 655}, {"contestId": 1481, "index": "E", "name": "Sorting Books", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2294}, {"contestId": 1481, "index": "D", "name": "AB Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 4736}, {"contestId": 1481, "index": "C", "name": "Fence Painting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 12134}, {"contestId": 1481, "index": "B", "name": "New Colony", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 19579}, {"contestId": 1481, "index": "A", "name": "Space Navigation ", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 25439}, {"contestId": 1480, "index": "B", "name": "The Great Hero", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 17654}, {"contestId": 1480, "index": "A", "name": "Yet Another String Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "greedy", "strings"], "solvedCount": 26629}, {"contestId": 1479, "index": "E", "name": "School Clubs", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "fft", "math", "number theory", "probabilities"], "solvedCount": 252}, {"contestId": 1479, "index": "D", "name": "Odd Mineral Resource", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["binary search", "bitmasks", "brute force", "data structures", "probabilities", "trees"], "solvedCount": 1240}, {"contestId": 1479, "index": "C", "name": "Continuous City", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 1394}, {"contestId": 1479, "index": "B2", "name": "Painting the Array II", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 4254}, {"contestId": 1479, "index": "B1", "name": "Painting the Array I", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 7241}, {"contestId": 1479, "index": "A", "name": "Searching Local Minimum", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "interactive", "ternary search"], "solvedCount": 12522}, {"contestId": 1478, "index": "C", "name": "Nezzar and Symmetric Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "math", "sortings"], "solvedCount": 10305}, {"contestId": 1478, "index": "B", "name": "Nezzar and Lucky Number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "dp", "greedy", "math"], "solvedCount": 18698}, {"contestId": 1478, "index": "A", "name": "Nezzar and Colorful Balls", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy"], "solvedCount": 27400}, {"contestId": 1477, "index": "F", "name": "Nezzar and Chocolate Bars", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["combinatorics", "fft", "math", "probabilities"], "solvedCount": 157}, {"contestId": 1477, "index": "E", "name": "Nezzar and Tournaments", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["data structures", "greedy"], "solvedCount": 165}, {"contestId": 1477, "index": "D", "name": "Nezzar and Hidden Permutations", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 689}, {"contestId": 1477, "index": "C", "name": "Nezzar and Nice Beatmap", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "geometry", "greedy", "math", "sortings"], "solvedCount": 2509}, {"contestId": 1477, "index": "B", "name": "Nezzar and Binary String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "greedy"], "solvedCount": 3439}, {"contestId": 1477, "index": "A", "name": "Nezzar and Board", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 6254}, {"contestId": 1476, "index": "G", "name": "Minimum Difference", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "hashing", "sortings", "two pointers"], "solvedCount": 660}, {"contestId": 1476, "index": "F", "name": "Lanterns", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "data structures", "dp"], "solvedCount": 979}, {"contestId": 1476, "index": "E", "name": "Pattern Matching", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "data structures", "dfs and similar", "graphs", "hashing", "sortings", "strings"], "solvedCount": 2526}, {"contestId": 1476, "index": "D", "name": "Journey", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dp", "dsu", "implementation"], "solvedCount": 9009}, {"contestId": 1476, "index": "C", "name": "Longest Simple Cycle", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "graphs", "greedy"], "solvedCount": 11983}, {"contestId": 1476, "index": "B", "name": "Inflation", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "greedy", "math"], "solvedCount": 20845}, {"contestId": 1476, "index": "A", "name": "K-divisible Sum", "type": "PROGRAMMING", "rating": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "solvedCount": 42062}, {"contestId": 1475, "index": "G", "name": "Strange Beauty", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "math", "number theory", "sortings"], "solvedCount": 7407}, {"contestId": 1475, "index": "F", "name": "Unusual Matrix", "type": "PROGRAMMING", "rating": 1900, "tags": ["2-sat", "brute force", "constructive algorithms"], "solvedCount": 5664}, {"contestId": 1475, "index": "E", "name": "Advertising Agency", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "math", "sortings"], "solvedCount": 15736}, {"contestId": 1475, "index": "D", "name": "Cleaning the Phone", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp", "sortings", "two pointers"], "solvedCount": 10752}, {"contestId": 1475, "index": "C", "name": "Ball in Berland", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "graphs", "math"], "solvedCount": 24265}, {"contestId": 1475, "index": "B", "name": "New Year's Number", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "dp", "math"], "solvedCount": 53558}, {"contestId": 1475, "index": "A", "name": "Odd Divisor", "type": "PROGRAMMING", "rating": 900, "tags": ["math", "number theory"], "solvedCount": 74074}, {"contestId": 1474, "index": "F", "name": "1 2 3 4 ...", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "math", "matrices"], "solvedCount": 290}, {"contestId": 1474, "index": "E", "name": "What Is It?", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1417}, {"contestId": 1474, "index": "D", "name": "Cleaning", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 4187}, {"contestId": 1474, "index": "C", "name": "Array Destruction", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 13654}, {"contestId": 1474, "index": "B", "name": "Different Divisors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 34580}, {"contestId": 1474, "index": "A", "name": "Puzzle From the Future", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 23047}, {"contestId": 1473, "index": "G", "name": "Tiles", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 441}, {"contestId": 1473, "index": "F", "name": "Strange Set", "type": "PROGRAMMING", "rating": 2700, "tags": ["flows", "math"], "solvedCount": 1070}, {"contestId": 1473, "index": "E", "name": "Minimum Path", "type": "PROGRAMMING", "rating": 2400, "tags": ["graphs", "shortest paths"], "solvedCount": 4175}, {"contestId": 1473, "index": "D", "name": "Program", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "implementation", "strings"], "solvedCount": 10325}, {"contestId": 1473, "index": "C", "name": "No More Inversions", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "math"], "solvedCount": 13080}, {"contestId": 1473, "index": "B", "name": "String LCM", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "math", "number theory", "strings"], "solvedCount": 33601}, {"contestId": 1473, "index": "A", "name": "Replacing Elements", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "math", "sortings"], "solvedCount": 35593}, {"contestId": 1472, "index": "G", "name": "Moving to the Capital", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 5214}, {"contestId": 1472, "index": "F", "name": "New Year's Puzzle", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dp", "graph matchings", "greedy", "sortings"], "solvedCount": 3204}, {"contestId": 1472, "index": "E", "name": "Correct Placement", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "sortings", "two pointers"], "solvedCount": 8558}, {"contestId": 1472, "index": "D", "name": "Even-Odd Game", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "games", "greedy", "sortings"], "solvedCount": 29233}, {"contestId": 1472, "index": "C", "name": "Long Jumps", "type": "PROGRAMMING", "rating": 1100, "tags": ["dp", "graphs"], "solvedCount": 33664}, {"contestId": 1472, "index": "B", "name": "Fair Division", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "math"], "solvedCount": 56028}, {"contestId": 1472, "index": "A", "name": "Cards for Friends", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 44065}, {"contestId": 1471, "index": "B", "name": "Strange List", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 19715}, {"contestId": 1471, "index": "A", "name": "Strange Partition", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "math", "number theory"], "solvedCount": 31869}, {"contestId": 1470, "index": "F", "name": "Strange Covering", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["divide and conquer"], "solvedCount": 149}, {"contestId": 1470, "index": "E", "name": "Strange Permutation", "type": "PROGRAMMING", "points": 2000.0, "rating": 3200, "tags": ["binary search", "combinatorics", "data structures", "dp", "graphs", "implementation", "two pointers"], "solvedCount": 330}, {"contestId": 1470, "index": "D", "name": "Strange Housing", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy"], "solvedCount": 3980}, {"contestId": 1470, "index": "C", "name": "Strange Shuffle", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["binary search", "brute force", "constructive algorithms", "interactive"], "solvedCount": 1398}, {"contestId": 1470, "index": "B", "name": "Strange Definition", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["bitmasks", "graphs", "hashing", "math", "number theory"], "solvedCount": 6552}, {"contestId": 1470, "index": "A", "name": "Strange Birthday Party", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["binary search", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 25797}, {"contestId": 1469, "index": "F", "name": "Power Sockets", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 1037}, {"contestId": 1469, "index": "E", "name": "A Bit Similar", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "brute force", "hashing", "string suffix structures", "strings", "two pointers"], "solvedCount": 2084}, {"contestId": 1469, "index": "D", "name": "Ceil Divisions", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 9788}, {"contestId": 1469, "index": "C", "name": "Building a Fence", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "implementation", "two pointers"], "solvedCount": 11155}, {"contestId": 1469, "index": "B", "name": "Red and Blue", "type": "PROGRAMMING", "rating": 1000, "tags": ["dp", "greedy"], "solvedCount": 29516}, {"contestId": 1469, "index": "A", "name": "Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 28972}, {"contestId": 1468, "index": "N", "name": "Waste Sorting", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 8725}, {"contestId": 1468, "index": "M", "name": "Similar Sets", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "graphs", "implementation"], "solvedCount": 1017}, {"contestId": 1468, "index": "L", "name": "Prime Divisors Selection", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "greedy", "math", "number theory"], "solvedCount": 349}, {"contestId": 1468, "index": "K", "name": "The Robot", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "implementation"], "solvedCount": 5390}, {"contestId": 1468, "index": "J", "name": "Road Reform", "type": "PROGRAMMING", "rating": 1800, "tags": ["dsu", "graphs", "greedy"], "solvedCount": 5079}, {"contestId": 1468, "index": "I", "name": "Plane Tiling", "type": "PROGRAMMING", "rating": 2500, "tags": ["geometry", "implementation", "math"], "solvedCount": 533}, {"contestId": 1468, "index": "H", "name": "K and Medians", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1878}, {"contestId": 1468, "index": "G", "name": "Hobbits", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "geometry"], "solvedCount": 847}, {"contestId": 1468, "index": "F", "name": "Full Turn", "type": "PROGRAMMING", "rating": 1700, "tags": ["geometry", "hashing", "number theory"], "solvedCount": 4017}, {"contestId": 1468, "index": "E", "name": "Four Segments", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 9503}, {"contestId": 1468, "index": "D", "name": "Firecrackers", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "sortings"], "solvedCount": 5051}, {"contestId": 1468, "index": "C", "name": "Berpizza", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 9238}, {"contestId": 1468, "index": "B", "name": "Bakery", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "dsu"], "solvedCount": 235}, {"contestId": 1468, "index": "A", "name": "LaIS", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dp", "greedy"], "solvedCount": 1841}, {"contestId": 1467, "index": "E", "name": "Distinctive Roots in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 1534}, {"contestId": 1467, "index": "D", "name": "Sum of Paths", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["combinatorics", "dp", "math"], "solvedCount": 3855}, {"contestId": 1467, "index": "C", "name": "Three Bags", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 6604}, {"contestId": 1467, "index": "B", "name": "Hills And Valleys", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation"], "solvedCount": 11306}, {"contestId": 1467, "index": "A", "name": "Wizard of Orz", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 24976}, {"contestId": 1466, "index": "I", "name": "The Riddle of the Sphinx", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["binary search", "data structures", "data structures", "interactive"], "solvedCount": 221}, {"contestId": 1466, "index": "H", "name": "Finding satisfactory solutions", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["combinatorics", "dp", "graphs", "greedy", "math"], "solvedCount": 415}, {"contestId": 1466, "index": "G", "name": "Song of the Sirens", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "divide and conquer", "hashing", "math", "string suffix structures", "strings"], "solvedCount": 969}, {"contestId": 1466, "index": "F", "name": "Euclid's nightmare", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings"], "solvedCount": 2958}, {"contestId": 1466, "index": "E", "name": "Apollo versus Pan", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["bitmasks", "brute force", "math"], "solvedCount": 7857}, {"contestId": 1466, "index": "D", "name": "13th Labour of Heracles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "greedy", "sortings", "trees"], "solvedCount": 12961}, {"contestId": 1466, "index": "C", "name": "Canine poetry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "strings"], "solvedCount": 18353}, {"contestId": 1466, "index": "B", "name": "Last minute enhancements", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["dp", "greedy"], "solvedCount": 23171}, {"contestId": 1466, "index": "A", "name": "Bovine Dilemma", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "geometry", "math"], "solvedCount": 22931}, {"contestId": 1464, "index": "F", "name": "My Beautiful Madness", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 402}, {"contestId": 1463, "index": "F", "name": "Max Correct Set", "type": "PROGRAMMING", "rating": 3100, "tags": ["bitmasks", "dp", "math"], "solvedCount": 671}, {"contestId": 1463, "index": "E", "name": "Plan of Lectures", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation", "sortings", "trees"], "solvedCount": 1631}, {"contestId": 1463, "index": "D", "name": "Pairs", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "greedy", "two pointers"], "solvedCount": 4663}, {"contestId": 1463, "index": "C", "name": "Busy Robot", "type": "PROGRAMMING", "rating": 1800, "tags": ["implementation"], "solvedCount": 5861}, {"contestId": 1463, "index": "B", "name": "Find The Array", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 20431}, {"contestId": 1463, "index": "A", "name": "Dungeon", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "math"], "solvedCount": 26991}, {"contestId": 1462, "index": "F", "name": "The Treasure of The Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 7608}, {"contestId": 1462, "index": "E2", "name": "Close Tuples (hard version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "combinatorics", "implementation", "math", "sortings", "two pointers"], "solvedCount": 10693}, {"contestId": 1462, "index": "E1", "name": "Close Tuples (easy version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "combinatorics", "math", "sortings", "two pointers"], "solvedCount": 14630}, {"contestId": 1462, "index": "D", "name": "Add to Neighbour and Remove", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "math", "number theory"], "solvedCount": 17601}, {"contestId": 1462, "index": "C", "name": "Unique Number", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "greedy", "math"], "solvedCount": 34675}, {"contestId": 1462, "index": "B", "name": "Last Year's Substring", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "implementation", "strings"], "solvedCount": 28317}, {"contestId": 1462, "index": "A", "name": "Favorite Sequence", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "two pointers"], "solvedCount": 45748}, {"contestId": 1461, "index": "F", "name": "Mathematical Expression", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 586}, {"contestId": 1461, "index": "E", "name": "Water Level", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["brute force", "graphs", "greedy", "implementation", "math"], "solvedCount": 2168}, {"contestId": 1461, "index": "D", "name": "Divide and Summarize", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation", "sortings"], "solvedCount": 9793}, {"contestId": 1461, "index": "C", "name": "Random Events", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dp", "math", "probabilities"], "solvedCount": 11903}, {"contestId": 1461, "index": "B", "name": "Find the Spruce", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dp", "implementation"], "solvedCount": 12975}, {"contestId": 1461, "index": "A", "name": "String Generation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18819}, {"contestId": 1459, "index": "B", "name": "Move and Turn", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "math"], "solvedCount": 17707}, {"contestId": 1459, "index": "A", "name": "Red-Blue Shuffle", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["math", "probabilities"], "solvedCount": 17393}, {"contestId": 1458, "index": "F", "name": "Range Diameter Sum", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 384}, {"contestId": 1458, "index": "E", "name": "Nim Shortcuts", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["data structures", "games"], "solvedCount": 530}, {"contestId": 1458, "index": "D", "name": "Flip and Reverse", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["data structures", "graphs", "greedy"], "solvedCount": 1364}, {"contestId": 1458, "index": "C", "name": "Latin Square", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["math", "matrices"], "solvedCount": 1493}, {"contestId": 1458, "index": "B", "name": "Glass Half Spilled", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp"], "solvedCount": 3902}, {"contestId": 1458, "index": "A", "name": "Row GCD", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 22049}, {"contestId": 1456, "index": "E", "name": "XOR-ranges", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp", "greedy"], "solvedCount": 358}, {"contestId": 1455, "index": "G", "name": "Forbidden Value", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "dp"], "solvedCount": 450}, {"contestId": 1455, "index": "F", "name": "String and Operations", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "greedy"], "solvedCount": 479}, {"contestId": 1455, "index": "E", "name": "Four Points", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "flows", "geometry", "greedy", "implementation", "math", "ternary search"], "solvedCount": 1600}, {"contestId": 1455, "index": "D", "name": "Sequence and Swaps", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "sortings"], "solvedCount": 12827}, {"contestId": 1455, "index": "C", "name": "Ping-pong", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "games", "math"], "solvedCount": 20088}, {"contestId": 1455, "index": "B", "name": "Jumps", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 22674}, {"contestId": 1455, "index": "A", "name": "Strange Functions", "type": "PROGRAMMING", "rating": 800, "tags": ["math", "number theory"], "solvedCount": 27009}, {"contestId": 1454, "index": "F", "name": "Array Partition", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 4387}, {"contestId": 1454, "index": "E", "name": "Number of Simple Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "solvedCount": 6289}, {"contestId": 1454, "index": "D", "name": "Number into Sequence", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 21402}, {"contestId": 1454, "index": "C", "name": "Sequence Transformation", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 22087}, {"contestId": 1454, "index": "B", "name": "Unique Bid Auction", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 29319}, {"contestId": 1454, "index": "A", "name": "Special Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "probabilities"], "solvedCount": 42575}, {"contestId": 1453, "index": "F", "name": "Even Harder", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["dp"], "solvedCount": 918}, {"contestId": 1453, "index": "E", "name": "Dog Snacks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2152}, {"contestId": 1453, "index": "D", "name": "Checkpoints", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy", "math", "probabilities"], "solvedCount": 4324}, {"contestId": 1453, "index": "C", "name": "Triangles", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "implementation"], "solvedCount": 6186}, {"contestId": 1453, "index": "B", "name": "Suffix Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13776}, {"contestId": 1453, "index": "A", "name": "Cancel the Trains", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 23511}, {"contestId": 1452, "index": "G", "name": "Game On Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 520}, {"contestId": 1452, "index": "F", "name": "Divide Powers", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 343}, {"contestId": 1452, "index": "E", "name": "Two Editorials", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 1644}, {"contestId": 1452, "index": "D", "name": "Radio Towers", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "dp", "math"], "solvedCount": 8440}, {"contestId": 1452, "index": "C", "name": "Two Brackets", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 20404}, {"contestId": 1452, "index": "B", "name": "Toy Blocks", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "greedy", "math", "sortings"], "solvedCount": 15187}, {"contestId": 1452, "index": "A", "name": "Robot Program", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 22559}, {"contestId": 1451, "index": "F", "name": "Nullify The Matrix", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "games"], "solvedCount": 1097}, {"contestId": 1451, "index": "E2", "name": "Bitwise Queries (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 3203}, {"contestId": 1451, "index": "E1", "name": "Bitwise Queries (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 4662}, {"contestId": 1451, "index": "D", "name": "Circle Game", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["games", "geometry", "math"], "solvedCount": 9880}, {"contestId": 1451, "index": "C", "name": "String Equality", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp", "greedy", "hashing", "implementation", "strings"], "solvedCount": 16558}, {"contestId": 1451, "index": "B", "name": "Non-Substring Subsequence", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["dp", "greedy", "implementation", "strings"], "solvedCount": 19920}, {"contestId": 1451, "index": "A", "name": "Subtract or Divide", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 24942}, {"contestId": 1450, "index": "H2", "name": "Multithreading (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3300, "tags": ["combinatorics", "implementation", "math"], "solvedCount": 249}, {"contestId": 1450, "index": "H1", "name": "Multithreading (Easy Version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["combinatorics", "fft", "math"], "solvedCount": 474}, {"contestId": 1450, "index": "G", "name": "Communism", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["bitmasks", "dp", "trees"], "solvedCount": 336}, {"contestId": 1450, "index": "F", "name": "The Struggling Contestant", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1402}, {"contestId": 1450, "index": "E", "name": "Capitalism", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1309}, {"contestId": 1450, "index": "D", "name": "Rating Compression", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "data structures", "greedy", "implementation", "two pointers"], "solvedCount": 5687}, {"contestId": 1450, "index": "C2", "name": "Errich-Tac-Toe (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["constructive algorithms", "math"], "solvedCount": 3930}, {"contestId": 1450, "index": "C1", "name": "Errich-Tac-Toe (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "math"], "solvedCount": 5693}, {"contestId": 1450, "index": "B", "name": "Balls of Steel", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "geometry", "greedy"], "solvedCount": 15597}, {"contestId": 1450, "index": "A", "name": "Avoid Trygub", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 18258}, {"contestId": 1447, "index": "B", "name": "Numbers Box", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 21188}, {"contestId": 1447, "index": "A", "name": "Add Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 14246}, {"contestId": 1446, "index": "F", "name": "Line Distance", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["binary search", "data structures", "geometry"], "solvedCount": 359}, {"contestId": 1446, "index": "E", "name": "Long Recovery", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "dfs and similar"], "solvedCount": 114}, {"contestId": 1446, "index": "D2", "name": "Frequency Problem (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["data structures", "greedy", "two pointers"], "solvedCount": 1585}, {"contestId": 1446, "index": "D1", "name": "Frequency Problem (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["data structures", "greedy"], "solvedCount": 1945}, {"contestId": 1446, "index": "C", "name": "Xor Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "dp", "trees"], "solvedCount": 3907}, {"contestId": 1446, "index": "B", "name": "Catching Cheaters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "strings"], "solvedCount": 8418}, {"contestId": 1446, "index": "A", "name": "Knapsack", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 16800}, {"contestId": 1445, "index": "B", "name": "Elimination", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "math"], "solvedCount": 15621}, {"contestId": 1445, "index": "A", "name": "Array Rearrangment", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 19712}, {"contestId": 1444, "index": "E", "name": "Finding the Vertex", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["brute force", "dfs and similar", "dp", "interactive", "trees"], "solvedCount": 159}, {"contestId": 1444, "index": "D", "name": "Rectangular Polyline", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms", "dp", "geometry"], "solvedCount": 627}, {"contestId": 1444, "index": "C", "name": "Team-Building", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "solvedCount": 1736}, {"contestId": 1444, "index": "B", "name": "Divide and Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "math", "sortings"], "solvedCount": 6584}, {"contestId": 1444, "index": "A", "name": "Division", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "math", "number theory"], "solvedCount": 13909}, {"contestId": 1443, "index": "E", "name": "Long Permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "math", "two pointers"], "solvedCount": 1366}, {"contestId": 1443, "index": "C", "name": "The Delivery Dilemma", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 16271}, {"contestId": 1443, "index": "B", "name": "Saving the City", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "math", "sortings"], "solvedCount": 16209}, {"contestId": 1443, "index": "A", "name": "Kids Seating", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 16504}, {"contestId": 1442, "index": "F", "name": "Differentiating Games", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["games", "interactive"], "solvedCount": 156}, {"contestId": 1442, "index": "E", "name": "Black, White and Grey Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 694}, {"contestId": 1442, "index": "D", "name": "Sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 2626}, {"contestId": 1442, "index": "C", "name": "Graph Transpositions", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dfs and similar", "graphs", "greedy", "shortest paths"], "solvedCount": 1870}, {"contestId": 1442, "index": "B", "name": "Identify the Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "data structures", "dsu", "greedy", "implementation"], "solvedCount": 4825}, {"contestId": 1442, "index": "A", "name": "Extreme Subtraction", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 9327}, {"contestId": 1440, "index": "B", "name": "Sum of Medians", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "math"], "solvedCount": 24220}, {"contestId": 1440, "index": "A", "name": "Buy the String", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 20145}, {"contestId": 1439, "index": "E", "name": "Cheat and Win", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["bitmasks", "data structures", "games", "trees"], "solvedCount": 243}, {"contestId": 1439, "index": "D", "name": "INOI Final Contests", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["combinatorics", "dp", "fft"], "solvedCount": 433}, {"contestId": 1439, "index": "C", "name": "Greedy Shopping", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["binary search", "data structures", "divide and conquer", "greedy", "implementation"], "solvedCount": 2055}, {"contestId": 1439, "index": "B", "name": "Graph Subset Problem", "type": "PROGRAMMING", "points": 1250.0, "rating": 2600, "tags": ["constructive algorithms", "data structures", "graphs"], "solvedCount": 1560}, {"contestId": 1439, "index": "A2", "name": "Binary Table (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 5291}, {"contestId": 1439, "index": "A1", "name": "Binary Table (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9644}, {"contestId": 1438, "index": "F", "name": "Olha and Igor", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["interactive", "probabilities", "trees"], "solvedCount": 693}, {"contestId": 1438, "index": "E", "name": "Yurii Can Do Everything", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "divide and conquer", "two pointers"], "solvedCount": 1431}, {"contestId": 1438, "index": "D", "name": "Powerful Ksenia", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 4391}, {"contestId": 1438, "index": "C", "name": "Engineer Artem", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["2-sat", "chinese remainder theorem", "constructive algorithms", "fft", "flows"], "solvedCount": 11126}, {"contestId": 1438, "index": "B", "name": "Valerii Against Everyone", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 24116}, {"contestId": 1438, "index": "A", "name": "Specific Tastes of Andre ", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 19585}, {"contestId": 1437, "index": "G", "name": "Death DBMS", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 1136}, {"contestId": 1437, "index": "F", "name": "Emotional Fishermen", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "math", "two pointers"], "solvedCount": 1444}, {"contestId": 1437, "index": "E", "name": "Make It Increasing", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "implementation"], "solvedCount": 3666}, {"contestId": 1437, "index": "D", "name": "Minimal Height Tree", "type": "PROGRAMMING", "rating": 1600, "tags": ["graphs", "greedy", "shortest paths", "trees"], "solvedCount": 13765}, {"contestId": 1437, "index": "C", "name": "Chef Monocarp", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "flows", "graph matchings", "greedy", "math", "sortings"], "solvedCount": 11480}, {"contestId": 1437, "index": "B", "name": "Reverse Binary Strings", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20221}, {"contestId": 1437, "index": "A", "name": "Marketing Scheme", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 18287}, {"contestId": 1436, "index": "F", "name": "Sum Over Subsets", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 571}, {"contestId": 1436, "index": "E", "name": "Complicated Computations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 2524}, {"contestId": 1436, "index": "D", "name": "Bandit in a City", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 6306}, {"contestId": 1436, "index": "C", "name": "Binary Search", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "combinatorics"], "solvedCount": 11387}, {"contestId": 1436, "index": "B", "name": "Prime Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 21274}, {"contestId": 1436, "index": "A", "name": "Reorder", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 23107}, {"contestId": 1434, "index": "E", "name": "A Convex Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["dsu", "games"], "solvedCount": 218}, {"contestId": 1433, "index": "G", "name": "Reducing Delivery Cost", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "graphs", "shortest paths"], "solvedCount": 4732}, {"contestId": 1433, "index": "F", "name": "Zero Remainder Sum ", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"], "solvedCount": 6413}, {"contestId": 1433, "index": "E", "name": "Two Round Dances", "type": "PROGRAMMING", "rating": 1300, "tags": ["combinatorics", "math"], "solvedCount": 19271}, {"contestId": 1433, "index": "D", "name": "Districts Connection", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "dfs and similar"], "solvedCount": 26881}, {"contestId": 1433, "index": "C", "name": "Dominant Piranha", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 27938}, {"contestId": 1433, "index": "B", "name": "Yet Another Bookshelf", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 29254}, {"contestId": 1433, "index": "A", "name": "Boring Apartments", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 58207}, {"contestId": 1431, "index": "J", "name": "Zero-XOR Array", "type": "PROGRAMMING", "rating": 3400, "tags": ["*special", "dp"], "solvedCount": 46}, {"contestId": 1431, "index": "I", "name": "Cyclic Shifts", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "strings"], "solvedCount": 48}, {"contestId": 1431, "index": "H", "name": "Rogue-like Game", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "brute force", "greedy", "two pointers"], "solvedCount": 71}, {"contestId": 1431, "index": "G", "name": "Number Deletion Game", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dp", "games", "greedy"], "solvedCount": 195}, {"contestId": 1431, "index": "F", "name": "Neural Network Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "binary search", "greedy"], "solvedCount": 159}, {"contestId": 1431, "index": "E", "name": "Chess Match", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 229}, {"contestId": 1431, "index": "D", "name": "Used Markers", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "greedy"], "solvedCount": 477}, {"contestId": 1431, "index": "C", "name": "Black Friday", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "implementation"], "solvedCount": 726}, {"contestId": 1431, "index": "B", "name": "Polycarp and the Language of Gods", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation", "two pointers"], "solvedCount": 1034}, {"contestId": 1431, "index": "A", "name": "Selling Hamburgers", "type": "PROGRAMMING", "rating": 800, "tags": ["*special"], "solvedCount": 2029}, {"contestId": 1430, "index": "G", "name": "Yet Another DAG Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "dfs and similar", "dp", "flows", "graphs", "math"], "solvedCount": 819}, {"contestId": 1430, "index": "F", "name": "Realistic Gameplay", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "greedy"], "solvedCount": 975}, {"contestId": 1430, "index": "E", "name": "String Reversal", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy", "strings"], "solvedCount": 6995}, {"contestId": 1430, "index": "D", "name": "String Deletion", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 9089}, {"contestId": 1430, "index": "C", "name": "Numbers on Whiteboard", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "solvedCount": 26480}, {"contestId": 1430, "index": "B", "name": "Barrels", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 19788}, {"contestId": 1430, "index": "A", "name": "Number of Apartments", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 21388}, {"contestId": 1428, "index": "H", "name": "Rotary Laser Lock", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["binary search", "interactive"], "solvedCount": 118}, {"contestId": 1428, "index": "G2", "name": "Lucky Numbers (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["dp", "greedy"], "solvedCount": 690}, {"contestId": 1428, "index": "G1", "name": "Lucky Numbers (Easy Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp", "greedy"], "solvedCount": 616}, {"contestId": 1428, "index": "F", "name": "Fruit Sequences", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 2476}, {"contestId": 1428, "index": "E", "name": "Carrots for Rabbits", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "solvedCount": 3950}, {"contestId": 1428, "index": "D", "name": "Bouncing Boomerangs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 4615}, {"contestId": 1428, "index": "C", "name": "ABBB", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "data structures", "greedy", "strings"], "solvedCount": 21631}, {"contestId": 1428, "index": "B", "name": "Belted Rooms", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["graphs", "implementation"], "solvedCount": 14915}, {"contestId": 1428, "index": "A", "name": "Box is Pull", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 16753}, {"contestId": 1427, "index": "H", "name": "Prison Break", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["binary search", "games", "geometry", "ternary search"], "solvedCount": 88}, {"contestId": 1427, "index": "G", "name": "One Billion Shades of Grey", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["flows", "graphs"], "solvedCount": 472}, {"contestId": 1427, "index": "F", "name": "Boring Card Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "greedy", "trees"], "solvedCount": 366}, {"contestId": 1427, "index": "E", "name": "Xum", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "math", "matrices", "number theory"], "solvedCount": 1554}, {"contestId": 1427, "index": "D", "name": "Unshuffling a Deck", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3614}, {"contestId": 1427, "index": "C", "name": "The Hard Work of Paparazzi", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp"], "solvedCount": 5894}, {"contestId": 1427, "index": "B", "name": "Chess Cheater", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 11275}, {"contestId": 1427, "index": "A", "name": "Avoiding Zero", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math", "sortings"], "solvedCount": 17673}, {"contestId": 1426, "index": "F", "name": "Number of Subsequences", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dp", "strings"], "solvedCount": 5750}, {"contestId": 1426, "index": "E", "name": "Rock, Paper, Scissors", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "constructive algorithms", "flows", "greedy", "math"], "solvedCount": 7830}, {"contestId": 1426, "index": "D", "name": "Non-zero Segments", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 16984}, {"contestId": 1426, "index": "C", "name": "Increase and Copy", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 20108}, {"contestId": 1426, "index": "B", "name": "Symmetric Matrix", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 21270}, {"contestId": 1426, "index": "A", "name": "Floor Number", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 51949}, {"contestId": 1425, "index": "I", "name": "Impressive Harvesting of The Orchard", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"], "solvedCount": 261}, {"contestId": 1425, "index": "H", "name": "Huge Boxes of Animal Toys", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms"], "solvedCount": 4303}, {"contestId": 1425, "index": "F", "name": "Flamingoes of Mystery", "type": "PROGRAMMING", "rating": 1400, "tags": ["interactive"], "solvedCount": 6555}, {"contestId": 1425, "index": "E", "name": "Excitation of Atoms", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation"], "solvedCount": 994}, {"contestId": 1425, "index": "D", "name": "Danger of Mad Snakes", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "dp", "math"], "solvedCount": 871}, {"contestId": 1425, "index": "C", "name": "Captain of Knights", "type": "PROGRAMMING", "rating": 3100, "tags": ["math"], "solvedCount": 45}, {"contestId": 1425, "index": "B", "name": "Blue and Red of Our Faculty!", "type": "PROGRAMMING", "rating": 2600, "tags": ["divide and conquer", "dp"], "solvedCount": 330}, {"contestId": 1425, "index": "A", "name": "Arena of Greed", "type": "PROGRAMMING", "rating": 1400, "tags": ["games", "greedy"], "solvedCount": 6944}, {"contestId": 1424, "index": "M", "name": "Ancient Language", "type": "PROGRAMMING", "rating": 2200, "tags": ["graphs", "sortings"], "solvedCount": 560}, {"contestId": 1424, "index": "G", "name": "Years", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "sortings"], "solvedCount": 6419}, {"contestId": 1423, "index": "N", "name": "BubbleSquare Tokens", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 165}, {"contestId": 1423, "index": "M", "name": "Milutin's Plums", "type": "PROGRAMMING", "rating": 2800, "tags": ["interactive"], "solvedCount": 291}, {"contestId": 1423, "index": "L", "name": "Light switches", "type": "PROGRAMMING", "rating": 2600, "tags": ["meet-in-the-middle"], "solvedCount": 526}, {"contestId": 1423, "index": "K", "name": "Lonely Numbers", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "math", "number theory", "two pointers"], "solvedCount": 5188}, {"contestId": 1423, "index": "J", "name": "Bubble Cup hypothesis", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "solvedCount": 842}, {"contestId": 1423, "index": "I", "name": "Lookup Tables", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks"], "solvedCount": 138}, {"contestId": 1423, "index": "H", "name": "Virus", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "dsu", "graphs"], "solvedCount": 579}, {"contestId": 1423, "index": "G", "name": "Growing flowers", "type": "PROGRAMMING", "rating": 3500, "tags": ["data structures"], "solvedCount": 231}, {"contestId": 1423, "index": "F", "name": "Coins", "type": "PROGRAMMING", "rating": 2700, "tags": ["math"], "solvedCount": 410}, {"contestId": 1423, "index": "E", "name": "5G Antenna Towers", "type": "PROGRAMMING", "rating": 2700, "tags": ["geometry"], "solvedCount": 91}, {"contestId": 1423, "index": "D", "name": "Does anyone else hate the wind?", "type": "PROGRAMMING", "rating": 3100, "tags": [], "solvedCount": 48}, {"contestId": 1423, "index": "C", "name": "Du\u0161an's Railway", "type": "PROGRAMMING", "rating": 3500, "tags": ["divide and conquer", "graphs", "trees"], "solvedCount": 209}, {"contestId": 1423, "index": "B", "name": "Valuable Paper", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "flows", "graph matchings", "graphs"], "solvedCount": 1943}, {"contestId": 1423, "index": "A", "name": "Wakanda Forever", "type": "PROGRAMMING", "rating": 3500, "tags": [], "solvedCount": 89}, {"contestId": 1422, "index": "F", "name": "Boring Queries", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["data structures", "math", "number theory"], "solvedCount": 1170}, {"contestId": 1422, "index": "E", "name": "Minlexes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "greedy", "implementation", "strings"], "solvedCount": 812}, {"contestId": 1422, "index": "D", "name": "Returning Home", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["graphs", "shortest paths", "sortings"], "solvedCount": 2996}, {"contestId": 1422, "index": "C", "name": "Bargain", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"], "solvedCount": 8553}, {"contestId": 1422, "index": "B", "name": "Nice Matrix", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["greedy", "implementation", "math"], "solvedCount": 14779}, {"contestId": 1422, "index": "A", "name": "Fence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "math"], "solvedCount": 21397}, {"contestId": 1421, "index": "E", "name": "Swedish Heroes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "dp", "implementation"], "solvedCount": 808}, {"contestId": 1421, "index": "D", "name": "Hexagons", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math", "shortest paths"], "solvedCount": 4293}, {"contestId": 1421, "index": "C", "name": "Palindromifier", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "strings"], "solvedCount": 13231}, {"contestId": 1421, "index": "B", "name": "Putting Bricks in the Wall", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13334}, {"contestId": 1421, "index": "A", "name": "XORwice", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 32595}, {"contestId": 1420, "index": "E", "name": "Battle Lemmings", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "greedy"], "solvedCount": 995}, {"contestId": 1420, "index": "D", "name": "Rescue Nibel!", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["combinatorics", "data structures", "sortings"], "solvedCount": 8067}, {"contestId": 1420, "index": "C2", "name": "Pok\u00e9mon Army (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "greedy", "implementation"], "solvedCount": 4947}, {"contestId": 1420, "index": "C1", "name": "Pok\u00e9mon Army (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 18395}, {"contestId": 1420, "index": "B", "name": "Rock and Lever", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "math"], "solvedCount": 30850}, {"contestId": 1420, "index": "A", "name": "Cubes Sorting", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math", "sortings"], "solvedCount": 24499}, {"contestId": 1419, "index": "F", "name": "Rain of Fire", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "implementation"], "solvedCount": 528}, {"contestId": 1419, "index": "E", "name": "Decryption", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 3391}, {"contestId": 1419, "index": "D2", "name": "Sage's Birthday (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 16750}, {"contestId": 1419, "index": "D1", "name": "Sage's Birthday (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "sortings"], "solvedCount": 25641}, {"contestId": 1419, "index": "C", "name": "Killjoy", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["greedy", "implementation", "math"], "solvedCount": 15977}, {"contestId": 1419, "index": "B", "name": "Stairs", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 16728}, {"contestId": 1419, "index": "A", "name": "Digit Game", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["games", "greedy", "implementation"], "solvedCount": 20220}, {"contestId": 1418, "index": "G", "name": "Three Occurrences", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "hashing", "two pointers"], "solvedCount": 2382}, {"contestId": 1418, "index": "F", "name": "Equal Product", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "math", "number theory", "two pointers"], "solvedCount": 400}, {"contestId": 1418, "index": "E", "name": "Expected Damage", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "combinatorics", "probabilities"], "solvedCount": 2058}, {"contestId": 1418, "index": "D", "name": "Trash Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "implementation"], "solvedCount": 4562}, {"contestId": 1418, "index": "C", "name": "Mortal Kombat Tower", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "graphs", "greedy", "shortest paths"], "solvedCount": 24100}, {"contestId": 1418, "index": "B", "name": "Negative Prefixes", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "sortings"], "solvedCount": 17147}, {"contestId": 1418, "index": "A", "name": "Buying Torches", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"], "solvedCount": 28190}, {"contestId": 1417, "index": "B", "name": "Two Arrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math", "sortings"], "solvedCount": 14737}, {"contestId": 1417, "index": "A", "name": "Copy-paste", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 18512}, {"contestId": 1416, "index": "F", "name": "Showing Off", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["flows", "graph matchings", "greedy", "implementation"], "solvedCount": 566}, {"contestId": 1416, "index": "E", "name": "Split", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["binary search", "data structures", "dp", "greedy"], "solvedCount": 372}, {"contestId": 1416, "index": "D", "name": "Graph and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "dsu", "graphs", "implementation", "trees"], "solvedCount": 2402}, {"contestId": 1416, "index": "C", "name": "XOR Inverse", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "divide and conquer", "dp", "greedy", "math", "sortings", "strings", "trees"], "solvedCount": 4753}, {"contestId": 1416, "index": "B", "name": "Make Them Equal", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 6423}, {"contestId": 1416, "index": "A", "name": "k-Amazing Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "data structures", "implementation", "two pointers"], "solvedCount": 14545}, {"contestId": 1415, "index": "F", "name": "Cakes for Clones", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp"], "solvedCount": 539}, {"contestId": 1415, "index": "E", "name": "New Game Plus!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 2901}, {"contestId": 1415, "index": "D", "name": "XOR-gun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "constructive algorithms"], "solvedCount": 5824}, {"contestId": 1415, "index": "C", "name": "Bouncing Ball", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "dp", "implementation"], "solvedCount": 11407}, {"contestId": 1415, "index": "B", "name": "Repainting Street", "type": "PROGRAMMING", "points": 1250.0, "rating": 1100, "tags": ["brute force", "brute force", "greedy"], "solvedCount": 12379}, {"contestId": 1415, "index": "A", "name": "Prison Break", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math"], "solvedCount": 15652}, {"contestId": 1413, "index": "F", "name": "Roads and Ramen", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "trees"], "solvedCount": 904}, {"contestId": 1413, "index": "E", "name": "Solo mid Oracle", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["greedy", "math", "ternary search"], "solvedCount": 2103}, {"contestId": 1413, "index": "D", "name": "Shurikens", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 6704}, {"contestId": 1413, "index": "C", "name": "Perform Easily", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "brute force", "dp", "implementation", "sortings", "two pointers"], "solvedCount": 5940}, {"contestId": 1413, "index": "B", "name": "A New Technique", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 11853}, {"contestId": 1413, "index": "A", "name": "Finding Sasuke", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 15086}, {"contestId": 1411, "index": "G", "name": "No Game No Life", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["bitmasks", "games", "math", "matrices"], "solvedCount": 741}, {"contestId": 1411, "index": "F", "name": "The Thorny Path", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["greedy", "math"], "solvedCount": 409}, {"contestId": 1411, "index": "E", "name": "Poman Numbers", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["bitmasks", "greedy", "math", "strings"], "solvedCount": 1739}, {"contestId": 1411, "index": "D", "name": "Grime Zoo", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "greedy", "implementation", "strings"], "solvedCount": 2624}, {"contestId": 1411, "index": "C", "name": "Peaceful Rooks", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 8317}, {"contestId": 1411, "index": "B", "name": "Fair Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "number theory"], "solvedCount": 24553}, {"contestId": 1411, "index": "A", "name": "In-game Chat", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 21469}, {"contestId": 1409, "index": "F", "name": "Subsequences of Length Two", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "strings"], "solvedCount": 4888}, {"contestId": 1409, "index": "E", "name": "Two Platforms", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp", "sortings", "two pointers"], "solvedCount": 8202}, {"contestId": 1409, "index": "D", "name": "Decrease the Sum of Digits", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 20495}, {"contestId": 1409, "index": "C", "name": "Yet Another Array Restoration", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "math", "number theory"], "solvedCount": 24122}, {"contestId": 1409, "index": "B", "name": "Minimum Product", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy", "math"], "solvedCount": 30152}, {"contestId": 1409, "index": "A", "name": "Yet Another Two Integers Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 73983}, {"contestId": 1408, "index": "I", "name": "Bitwise Magic", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["dp", "math"], "solvedCount": 187}, {"contestId": 1408, "index": "H", "name": "Rainbow Triples", "type": "PROGRAMMING", "points": 3750.0, "rating": 3300, "tags": ["binary search", "data structures", "flows", "greedy"], "solvedCount": 484}, {"contestId": 1408, "index": "G", "name": "Clusterization Counting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["combinatorics", "dp", "dsu", "fft", "graphs", "trees"], "solvedCount": 1223}, {"contestId": 1408, "index": "F", "name": "Two Different", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 2518}, {"contestId": 1408, "index": "E", "name": "Avoid Rainbow Cycles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 2116}, {"contestId": 1408, "index": "D", "name": "Searchlights", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "sortings", "two pointers"], "solvedCount": 4490}, {"contestId": 1408, "index": "C", "name": "Discrete Acceleration", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["binary search", "dp", "implementation", "math", "two pointers"], "solvedCount": 9092}, {"contestId": 1408, "index": "B", "name": "Arrays Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 10237}, {"contestId": 1408, "index": "A", "name": "Circle Coloring", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 12659}, {"contestId": 1407, "index": "E", "name": "Egor in the Republic of Dagestan", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 1799}, {"contestId": 1407, "index": "D", "name": "Discrete Centrifugal Jumps", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "graphs"], "solvedCount": 5320}, {"contestId": 1407, "index": "C", "name": "Chocolate Bunny", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "interactive", "math", "two pointers"], "solvedCount": 13378}, {"contestId": 1407, "index": "B", "name": "Big Vova", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 17552}, {"contestId": 1407, "index": "A", "name": "Ahahahahahahahaha", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 20948}, {"contestId": 1406, "index": "E", "name": "Deleting Numbers", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["interactive", "math", "number theory"], "solvedCount": 1795}, {"contestId": 1406, "index": "D", "name": "Three Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 3640}, {"contestId": 1406, "index": "C", "name": "Link Cut Centroids", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 11083}, {"contestId": 1406, "index": "B", "name": "Maximum Product", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "solvedCount": 23665}, {"contestId": 1406, "index": "A", "name": "Subset Mex", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "math"], "solvedCount": 22296}, {"contestId": 1405, "index": "B", "name": "Array Cancellation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 22470}, {"contestId": 1405, "index": "A", "name": "Permutation Forgery", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 21766}, {"contestId": 1404, "index": "E", "name": "Bricks", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["flows", "graph matchings", "graphs"], "solvedCount": 1444}, {"contestId": 1404, "index": "D", "name": "Game of Pairs", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "interactive", "math", "number theory"], "solvedCount": 1194}, {"contestId": 1404, "index": "C", "name": "Fixed Point Removal", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 2839}, {"contestId": 1404, "index": "B", "name": "Tree Tag", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "trees"], "solvedCount": 7839}, {"contestId": 1404, "index": "A", "name": "Balanced Bitstring", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation", "strings"], "solvedCount": 17262}, {"contestId": 1403, "index": "C", "name": "Chess Rush", "type": "PROGRAMMING", "rating": 3200, "tags": ["*special", "combinatorics", "dp", "implementation", "math"], "solvedCount": 73}, {"contestId": 1403, "index": "B", "name": "Spring cleaning", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 379}, {"contestId": 1403, "index": "A", "name": "The Potion of Great Power", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special", "2-sat", "binary search", "data structures", "graphs", "interactive", "sortings", "two pointers"], "solvedCount": 300}, {"contestId": 1402, "index": "C", "name": "Star Trek", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "combinatorics", "dfs and similar", "dp", "games", "graphs", "matrices", "trees"], "solvedCount": 223}, {"contestId": 1402, "index": "B", "name": "Roads", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "geometry", "sortings"], "solvedCount": 125}, {"contestId": 1402, "index": "A", "name": "Fancy Fence", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "data structures", "dsu", "implementation", "math", "sortings"], "solvedCount": 1284}, {"contestId": 1401, "index": "F", "name": "Reverse and Swap", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "bitmasks", "data structures"], "solvedCount": 1865}, {"contestId": 1401, "index": "E", "name": "Divide Square", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "geometry", "implementation", "sortings"], "solvedCount": 2549}, {"contestId": 1401, "index": "D", "name": "Maximum Distributed Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "implementation", "math", "number theory", "sortings", "trees"], "solvedCount": 9895}, {"contestId": 1401, "index": "C", "name": "Mere Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "math", "number theory", "sortings"], "solvedCount": 25617}, {"contestId": 1401, "index": "B", "name": "Ternary Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 21427}, {"contestId": 1401, "index": "A", "name": "Distance and Axis", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 28148}, {"contestId": 1400, "index": "G", "name": "Mercenaries", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "dsu", "math", "two pointers"], "solvedCount": 1084}, {"contestId": 1400, "index": "F", "name": "x-prime Substrings", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dfs and similar", "dp", "string suffix structures", "strings"], "solvedCount": 1026}, {"contestId": 1400, "index": "E", "name": "Clear the Multiset", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 5927}, {"contestId": 1400, "index": "D", "name": "Zigzags", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "combinatorics", "data structures", "math", "two pointers"], "solvedCount": 10934}, {"contestId": 1400, "index": "C", "name": "Binary String Reconstruction", "type": "PROGRAMMING", "rating": 1500, "tags": ["2-sat", "brute force", "constructive algorithms", "greedy"], "solvedCount": 18041}, {"contestId": 1400, "index": "B", "name": "RPG Protagonist", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "greedy", "math"], "solvedCount": 11471}, {"contestId": 1400, "index": "A", "name": "String Similarity", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "strings"], "solvedCount": 27539}, {"contestId": 1399, "index": "F", "name": "Yet Another Segments Subset", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "graphs", "sortings"], "solvedCount": 1767}, {"contestId": 1399, "index": "E2", "name": "Weights Division (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "dfs and similar", "greedy", "sortings", "trees", "two pointers"], "solvedCount": 2401}, {"contestId": 1399, "index": "E1", "name": "Weights Division (easy version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 6117}, {"contestId": 1399, "index": "D", "name": "Binary String To Subsequences", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 19271}, {"contestId": 1399, "index": "C", "name": "Boats Competition", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "greedy", "two pointers"], "solvedCount": 31040}, {"contestId": 1399, "index": "B", "name": "Gifts Fixing", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 45476}, {"contestId": 1399, "index": "A", "name": "Remove Smallest", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 73669}, {"contestId": 1398, "index": "G", "name": "Running Competition", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "fft", "math", "number theory"], "solvedCount": 1203}, {"contestId": 1398, "index": "F", "name": "Controversial Rounds", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 1342}, {"contestId": 1398, "index": "E", "name": "Two Types of Spells", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "solvedCount": 2513}, {"contestId": 1398, "index": "D", "name": "Colored Rectangles", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "greedy", "sortings"], "solvedCount": 12113}, {"contestId": 1398, "index": "C", "name": "Good Subarrays", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "math"], "solvedCount": 31574}, {"contestId": 1398, "index": "B", "name": "Substring Removal Game", "type": "PROGRAMMING", "rating": 800, "tags": ["games", "greedy", "sortings"], "solvedCount": 25360}, {"contestId": 1398, "index": "A", "name": "Bad Triangle", "type": "PROGRAMMING", "rating": 800, "tags": ["geometry", "math"], "solvedCount": 28211}, {"contestId": 1397, "index": "B", "name": "Power Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "math", "number theory", "sortings"], "solvedCount": 15173}, {"contestId": 1397, "index": "A", "name": "Juggling Letters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 29222}, {"contestId": 1396, "index": "E", "name": "Distance Matching", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 401}, {"contestId": 1396, "index": "D", "name": "Rainbow Rectangles", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["data structures", "sortings", "two pointers"], "solvedCount": 335}, {"contestId": 1396, "index": "C", "name": "Monster Invaders", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp", "greedy", "implementation"], "solvedCount": 2697}, {"contestId": 1396, "index": "B", "name": "Stoned Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "games", "greedy"], "solvedCount": 12180}, {"contestId": 1396, "index": "A", "name": "Multiples of Length", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 16182}, {"contestId": 1395, "index": "C", "name": "Boboniu and Bit Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "brute force", "dp", "greedy"], "solvedCount": 14803}, {"contestId": 1395, "index": "B", "name": "Boboniu Plays Chess", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["constructive algorithms"], "solvedCount": 16235}, {"contestId": 1395, "index": "A", "name": "Boboniu Likes to Color Balls", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "math"], "solvedCount": 24920}, {"contestId": 1394, "index": "E", "name": "Boboniu and Banknote Collection", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["strings"], "solvedCount": 160}, {"contestId": 1394, "index": "D", "name": "Boboniu and Jianghu", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["dp", "greedy", "sortings", "trees"], "solvedCount": 1128}, {"contestId": 1394, "index": "C", "name": "Boboniu and String", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["binary search", "geometry", "ternary search"], "solvedCount": 1169}, {"contestId": 1394, "index": "B", "name": "Boboniu Walks on Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["brute force", "dfs and similar", "graphs", "hashing"], "solvedCount": 2095}, {"contestId": 1394, "index": "A", "name": "Boboniu Chats with Du", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy", "sortings", "two pointers"], "solvedCount": 6973}, {"contestId": 1393, "index": "E2", "name": "Twilight and Ancient Scroll (harder version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3200, "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings", "two pointers"], "solvedCount": 394}, {"contestId": 1393, "index": "E1", "name": "Twilight and Ancient Scroll (easier version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings"], "solvedCount": 414}, {"contestId": 1393, "index": "D", "name": "Rarity and New Dress", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["dfs and similar", "dp", "implementation", "shortest paths"], "solvedCount": 4112}, {"contestId": 1393, "index": "C", "name": "Pinkie Pie Eats Patty-cakes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 10853}, {"contestId": 1393, "index": "B", "name": "Applejack and Storages", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 17125}, {"contestId": 1393, "index": "A", "name": "Rainbow Dash, Fluttershy and Chess Coloring", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 20699}, {"contestId": 1392, "index": "I", "name": "Kevin and Grid", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["fft", "graphs", "math"], "solvedCount": 216}, {"contestId": 1392, "index": "H", "name": "ZS Shuffles Cards", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 851}, {"contestId": 1392, "index": "G", "name": "Omkar and Pies", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "dfs and similar", "dp", "math", "shortest paths"], "solvedCount": 635}, {"contestId": 1392, "index": "F", "name": "Omkar and Landslide", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 2292}, {"contestId": 1392, "index": "E", "name": "Omkar and Duck", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 3668}, {"contestId": 1392, "index": "D", "name": "Omkar and Bed Wars", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "greedy"], "solvedCount": 9417}, {"contestId": 1392, "index": "C", "name": "Omkar and Waterslide", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 19260}, {"contestId": 1392, "index": "B", "name": "Omkar and Infinity Clock", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 18649}, {"contestId": 1392, "index": "A", "name": "Omkar and Password", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 21227}, {"contestId": 1391, "index": "E", "name": "Pairs of Pairs", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1840}, {"contestId": 1391, "index": "D", "name": "505", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "implementation"], "solvedCount": 5533}, {"contestId": 1391, "index": "C", "name": "Cyclic Permutations ", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["combinatorics", "dp", "graphs", "math"], "solvedCount": 15556}, {"contestId": 1391, "index": "B", "name": "Fix You", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 28759}, {"contestId": 1391, "index": "A", "name": "Suborrays", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 24783}, {"contestId": 1389, "index": "G", "name": "Directing Edges", "type": "PROGRAMMING", "rating": 2800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 438}, {"contestId": 1389, "index": "F", "name": "Bicolored Segments", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "graph matchings", "sortings"], "solvedCount": 1148}, {"contestId": 1389, "index": "E", "name": "Calendar Ambiguity", "type": "PROGRAMMING", "rating": 2200, "tags": ["math", "number theory"], "solvedCount": 3621}, {"contestId": 1389, "index": "D", "name": "Segment Intersections", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 4439}, {"contestId": 1389, "index": "C", "name": "Good String", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp", "greedy", "two pointers"], "solvedCount": 19981}, {"contestId": 1389, "index": "B", "name": "Array Walk", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "dp", "greedy"], "solvedCount": 18650}, {"contestId": 1389, "index": "A", "name": "LCM Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 46497}, {"contestId": 1388, "index": "E", "name": "Uncle Bogdan and Projections", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["data structures", "geometry", "sortings"], "solvedCount": 624}, {"contestId": 1388, "index": "D", "name": "Captain Flint and Treasure", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "solvedCount": 6669}, {"contestId": 1388, "index": "C", "name": "Uncle Bogdan and Country Happiness", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "greedy", "math", "trees"], "solvedCount": 10118}, {"contestId": 1388, "index": "B", "name": "Captain Flint and a Long Voyage", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 22591}, {"contestId": 1388, "index": "A", "name": "Captain Flint and Crew Recruitment", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 25434}, {"contestId": 1387, "index": "C", "name": "Viruses", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "dp", "shortest paths", "string suffix structures"], "solvedCount": 163}, {"contestId": 1387, "index": "B2", "name": "Village (Maximum)", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "dfs and similar", "trees"], "solvedCount": 1079}, {"contestId": 1387, "index": "B1", "name": "Village (Minimum)", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dp", "greedy", "trees"], "solvedCount": 1684}, {"contestId": 1387, "index": "A", "name": "Graph", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "binary search", "dfs and similar", "dp", "math", "ternary search"], "solvedCount": 811}, {"contestId": 1386, "index": "C", "name": "Joker", "type": "PROGRAMMING", "rating": 2800, "tags": ["*special", "bitmasks", "data structures", "divide and conquer", "dsu"], "solvedCount": 610}, {"contestId": 1386, "index": "B", "name": "Mixture", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "data structures", "geometry", "math", "sortings"], "solvedCount": 131}, {"contestId": 1386, "index": "A", "name": "Colors", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "binary search", "constructive algorithms", "interactive"], "solvedCount": 339}, {"contestId": 1385, "index": "G", "name": "Columns Swaps", "type": "PROGRAMMING", "rating": 2300, "tags": ["2-sat", "dfs and similar", "dsu", "graphs", "implementation"], "solvedCount": 1714}, {"contestId": 1385, "index": "F", "name": "Removing Leaves", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy", "implementation", "trees"], "solvedCount": 2715}, {"contestId": 1385, "index": "E", "name": "Directing Edges", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 8260}, {"contestId": 1385, "index": "D", "name": "a-Good String", "type": "PROGRAMMING", "rating": 1500, "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "implementation"], "solvedCount": 20559}, {"contestId": 1385, "index": "C", "name": "Make It Good", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy"], "solvedCount": 28160}, {"contestId": 1385, "index": "B", "name": "Restore the Permutation by Merger", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 38624}, {"contestId": 1385, "index": "A", "name": "Three Pairwise Maximums", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 41501}, {"contestId": 1384, "index": "B2", "name": "Koa and the Beach (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2200, "tags": ["constructive algorithms", "dp", "greedy", "implementation"], "solvedCount": 2551}, {"contestId": 1384, "index": "B1", "name": "Koa and the Beach (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["brute force", "dp", "greedy"], "solvedCount": 4013}, {"contestId": 1384, "index": "A", "name": "Common Prefixes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 19365}, {"contestId": 1383, "index": "F", "name": "Special Edges", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["flows", "graphs"], "solvedCount": 407}, {"contestId": 1383, "index": "E", "name": "Strange Operation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "data structures", "dp"], "solvedCount": 966}, {"contestId": 1383, "index": "D", "name": "Rearrange", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "sortings"], "solvedCount": 727}, {"contestId": 1383, "index": "C", "name": "String Transformation 2", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["bitmasks", "dp", "graphs", "trees"], "solvedCount": 617}, {"contestId": 1383, "index": "B", "name": "GameGame", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "dp", "games", "greedy", "math"], "solvedCount": 5277}, {"contestId": 1383, "index": "A", "name": "String Transformation 1", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dsu", "graphs", "greedy", "sortings", "strings", "trees", "two pointers"], "solvedCount": 10962}, {"contestId": 1382, "index": "B", "name": "Sequential Nim", "type": "PROGRAMMING", "points": 1250.0, "rating": 1100, "tags": ["dp", "games"], "solvedCount": 25516}, {"contestId": 1382, "index": "A", "name": "Common Subsequence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 26949}, {"contestId": 1381, "index": "E", "name": "Origami", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["geometry", "math", "sortings"], "solvedCount": 273}, {"contestId": 1381, "index": "D", "name": "The Majestic Brown Tree Snake", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "dp", "greedy", "trees", "two pointers"], "solvedCount": 741}, {"contestId": 1381, "index": "C", "name": "Mastermind", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "graph matchings", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 1682}, {"contestId": 1381, "index": "B", "name": "Unmerge", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"], "solvedCount": 9229}, {"contestId": 1381, "index": "A2", "name": "Prefix Flip (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "implementation", "strings", "two pointers"], "solvedCount": 13816}, {"contestId": 1381, "index": "A1", "name": "Prefix Flip (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "data structures", "strings"], "solvedCount": 21206}, {"contestId": 1380, "index": "G", "name": "Circular Dungeon", "type": "PROGRAMMING", "rating": 2600, "tags": ["greedy", "math", "probabilities"], "solvedCount": 873}, {"contestId": 1380, "index": "F", "name": "Strange Addition", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "matrices"], "solvedCount": 852}, {"contestId": 1380, "index": "E", "name": "Merging Towers", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dsu", "implementation", "trees"], "solvedCount": 2335}, {"contestId": 1380, "index": "D", "name": "Berserk And Fireball", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation", "math", "two pointers"], "solvedCount": 4848}, {"contestId": 1380, "index": "C", "name": "Create The Teams", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "solvedCount": 21953}, {"contestId": 1380, "index": "B", "name": "Universal Solution", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy"], "solvedCount": 15006}, {"contestId": 1380, "index": "A", "name": "Three Indices", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "data structures"], "solvedCount": 32763}, {"contestId": 1379, "index": "F2", "name": "Chess Strikes Back (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 546}, {"contestId": 1379, "index": "F1", "name": "Chess Strikes Back (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["binary search", "data structures"], "solvedCount": 643}, {"contestId": 1379, "index": "E", "name": "Inverse Genealogy", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "divide and conquer", "dp", "math", "trees"], "solvedCount": 449}, {"contestId": 1379, "index": "D", "name": "New Passenger Trams", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "brute force", "data structures", "sortings", "two pointers"], "solvedCount": 1121}, {"contestId": 1379, "index": "C", "name": "Choosing flowers", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 5835}, {"contestId": 1379, "index": "B", "name": "Dubious Cyrpto", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["binary search", "brute force", "math", "number theory"], "solvedCount": 12961}, {"contestId": 1379, "index": "A", "name": "Acacius and String", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "implementation", "strings"], "solvedCount": 12174}, {"contestId": 1375, "index": "I", "name": "Cubic Lattice", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["geometry", "math", "matrices", "number theory"], "solvedCount": 275}, {"contestId": 1375, "index": "H", "name": "Set Merging", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 460}, {"contestId": 1375, "index": "G", "name": "Tree Modification", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graph matchings", "graphs", "trees"], "solvedCount": 2057}, {"contestId": 1375, "index": "F", "name": "Integer Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["constructive algorithms", "games", "interactive", "math"], "solvedCount": 2383}, {"contestId": 1375, "index": "E", "name": "Inversion SwapSort", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 3226}, {"contestId": 1375, "index": "D", "name": "Replace by MEX", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "sortings"], "solvedCount": 9693}, {"contestId": 1375, "index": "C", "name": "Element Extermination", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 22227}, {"contestId": 1375, "index": "B", "name": "Neighbor Grid", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 17619}, {"contestId": 1375, "index": "A", "name": "Sign Flipping", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 18618}, {"contestId": 1374, "index": "F", "name": "Cyclic Shifts Sorting", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "solvedCount": 1356}, {"contestId": 1374, "index": "E2", "name": "Reading Books (hard version)", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "greedy", "implementation", "sortings", "ternary search", "two pointers"], "solvedCount": 986}, {"contestId": 1374, "index": "E1", "name": "Reading Books (easy version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 14567}, {"contestId": 1374, "index": "D", "name": "Zero Remainder Array", "type": "PROGRAMMING", "rating": 1400, "tags": ["math", "sortings", "two pointers"], "solvedCount": 27435}, {"contestId": 1374, "index": "C", "name": "Move Brackets", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "strings"], "solvedCount": 55638}, {"contestId": 1374, "index": "B", "name": "Multiply by 2, divide by 6", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 60950}, {"contestId": 1374, "index": "A", "name": "Required Remainder", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 59189}, {"contestId": 1373, "index": "G", "name": "Pawns", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "greedy"], "solvedCount": 870}, {"contestId": 1373, "index": "F", "name": "Network Coverage", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 1772}, {"contestId": 1373, "index": "E", "name": "Sum of Digits", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "greedy"], "solvedCount": 2857}, {"contestId": 1373, "index": "D", "name": "Maximum Sum on Even Positions", "type": "PROGRAMMING", "rating": 1600, "tags": ["divide and conquer", "dp", "greedy", "implementation"], "solvedCount": 16682}, {"contestId": 1373, "index": "C", "name": "Pluses and Minuses", "type": "PROGRAMMING", "rating": 1300, "tags": ["math"], "solvedCount": 18931}, {"contestId": 1373, "index": "B", "name": "01 Game", "type": "PROGRAMMING", "rating": 900, "tags": ["games"], "solvedCount": 44093}, {"contestId": 1373, "index": "A", "name": "Donut Shops", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "implementation", "math"], "solvedCount": 28496}, {"contestId": 1372, "index": "F", "name": "Omkar and Modes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["binary search", "divide and conquer", "interactive"], "solvedCount": 476}, {"contestId": 1372, "index": "E", "name": "Omkar and Last Floor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "greedy", "two pointers"], "solvedCount": 1338}, {"contestId": 1372, "index": "D", "name": "Omkar and Circle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dp", "games", "greedy"], "solvedCount": 5569}, {"contestId": 1372, "index": "C", "name": "Omkar and Baseball", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "math"], "solvedCount": 18623}, {"contestId": 1372, "index": "B", "name": "Omkar and Last Class of Math", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "math", "number theory"], "solvedCount": 32133}, {"contestId": 1372, "index": "A", "name": "Omkar and Completion", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 32751}, {"contestId": 1371, "index": "F", "name": "Raging Thunder", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation"], "solvedCount": 659}, {"contestId": 1371, "index": "E2", "name": "Asterism (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["binary search", "combinatorics", "dp", "math", "number theory", "sortings"], "solvedCount": 2432}, {"contestId": 1371, "index": "E1", "name": "Asterism (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "brute force", "combinatorics", "math", "number theory", "sortings"], "solvedCount": 5387}, {"contestId": 1371, "index": "D", "name": "Grid-00100", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 13463}, {"contestId": 1371, "index": "C", "name": "A Cookie for You", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["greedy", "implementation", "math"], "solvedCount": 21056}, {"contestId": 1371, "index": "B", "name": "Magical Calendar", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math"], "solvedCount": 19424}, {"contestId": 1371, "index": "A", "name": "Magical Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 48966}, {"contestId": 1370, "index": "F2", "name": "The Hidden Pair (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"], "solvedCount": 1602}, {"contestId": 1370, "index": "F1", "name": "The Hidden Pair (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"], "solvedCount": 1720}, {"contestId": 1370, "index": "E", "name": "Binary Subsequence Rotation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 5053}, {"contestId": 1370, "index": "D", "name": "Odd-Even Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "dp", "dsu", "greedy", "implementation"], "solvedCount": 10389}, {"contestId": 1370, "index": "C", "name": "Number Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["games", "math", "number theory"], "solvedCount": 26135}, {"contestId": 1370, "index": "B", "name": "GCD Compression", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 24491}, {"contestId": 1370, "index": "A", "name": "Maximum GCD", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math", "number theory"], "solvedCount": 58589}, {"contestId": 1369, "index": "F", "name": "BareLee", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "dp", "games"], "solvedCount": 687}, {"contestId": 1369, "index": "E", "name": "DeadLee", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "greedy", "implementation", "sortings"], "solvedCount": 2358}, {"contestId": 1369, "index": "D", "name": "TediousLee", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "graphs", "greedy", "math", "trees"], "solvedCount": 8938}, {"contestId": 1369, "index": "C", "name": "RationalLee", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "math", "sortings", "two pointers"], "solvedCount": 20234}, {"contestId": 1369, "index": "B", "name": "AccurateLee", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation", "strings"], "solvedCount": 25101}, {"contestId": 1369, "index": "A", "name": "FashionabLee", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "math"], "solvedCount": 38168}, {"contestId": 1368, "index": "H2", "name": "Breadboard Capacity (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3500, "tags": [], "solvedCount": 253}, {"contestId": 1368, "index": "H1", "name": "Breadboard Capacity (easy version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["dp", "flows", "greedy"], "solvedCount": 410}, {"contestId": 1368, "index": "G", "name": "Shifting Dominoes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["data structures", "geometry", "graphs", "trees"], "solvedCount": 656}, {"contestId": 1368, "index": "F", "name": "Lamps on a Circle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["games", "implementation", "interactive", "math"], "solvedCount": 1085}, {"contestId": 1368, "index": "E", "name": "Ski Accidents", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 2306}, {"contestId": 1368, "index": "D", "name": "AND, OR and square sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 12578}, {"contestId": 1368, "index": "C", "name": "Even Picture", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms"], "solvedCount": 13774}, {"contestId": 1368, "index": "B", "name": "Codeforces Subsequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"], "solvedCount": 20695}, {"contestId": 1368, "index": "A", "name": "C+=", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 43283}, {"contestId": 1367, "index": "F2", "name": "Flying Sort (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 1785}, {"contestId": 1367, "index": "F1", "name": "Flying Sort (Easy Version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy", "two pointers"], "solvedCount": 3439}, {"contestId": 1367, "index": "E", "name": "Necklace Assembly", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "number theory"], "solvedCount": 5670}, {"contestId": 1367, "index": "D", "name": "Task On The Board", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 8594}, {"contestId": 1367, "index": "C", "name": "Social Distance", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 24466}, {"contestId": 1367, "index": "B", "name": "Even Array", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 59089}, {"contestId": 1367, "index": "A", "name": "Short Substrings", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 62681}, {"contestId": 1366, "index": "G", "name": "Construct the String", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "strings"], "solvedCount": 596}, {"contestId": 1366, "index": "F", "name": "Jog Around The Graph", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "dp", "geometry", "graphs"], "solvedCount": 861}, {"contestId": 1366, "index": "E", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "brute force", "combinatorics", "constructive algorithms", "dp", "two pointers"], "solvedCount": 4473}, {"contestId": 1366, "index": "D", "name": "Two Divisors", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 11489}, {"contestId": 1366, "index": "C", "name": "Palindromic Paths", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 13931}, {"contestId": 1366, "index": "B", "name": "Shuffle", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "two pointers"], "solvedCount": 24211}, {"contestId": 1366, "index": "A", "name": "Shovels and Swords", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "greedy", "math"], "solvedCount": 31872}, {"contestId": 1365, "index": "G", "name": "Secure Password", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "interactive", "math"], "solvedCount": 1310}, {"contestId": 1365, "index": "F", "name": "Swaps Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 4605}, {"contestId": 1365, "index": "E", "name": "Maximum Subsequence Value", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms"], "solvedCount": 8103}, {"contestId": 1365, "index": "D", "name": "Solve The Maze", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 19358}, {"contestId": 1365, "index": "C", "name": "Rotation Matching", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 24140}, {"contestId": 1365, "index": "B", "name": "Trouble Sort", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 28124}, {"contestId": 1365, "index": "A", "name": "Matrix Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["games", "greedy", "implementation"], "solvedCount": 24631}, {"contestId": 1364, "index": "E", "name": "X-OR", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "interactive", "probabilities"], "solvedCount": 1493}, {"contestId": 1364, "index": "D", "name": "Ehab's Last Corollary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "solvedCount": 4643}, {"contestId": 1364, "index": "C", "name": "Ehab and Prefix MEXs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 13761}, {"contestId": 1364, "index": "B", "name": "Most socially-distanced subsequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "two pointers"], "solvedCount": 22814}, {"contestId": 1364, "index": "A", "name": "XXXXX", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "data structures", "number theory", "two pointers"], "solvedCount": 30044}, {"contestId": 1363, "index": "F", "name": "Rotating Substrings", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dp", "strings"], "solvedCount": 1673}, {"contestId": 1363, "index": "E", "name": "Tree Shuffling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 7151}, {"contestId": 1363, "index": "D", "name": "Guess The Maximums", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "implementation", "interactive", "math"], "solvedCount": 4221}, {"contestId": 1363, "index": "C", "name": "Game On Leaves", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["games", "trees"], "solvedCount": 20111}, {"contestId": 1363, "index": "B", "name": "Subsequence Hate", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "strings"], "solvedCount": 24853}, {"contestId": 1363, "index": "A", "name": "Odd Selection", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation", "math"], "solvedCount": 38535}, {"contestId": 1362, "index": "C", "name": "Johnny and Another Rating Drop", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 21045}, {"contestId": 1362, "index": "B", "name": "Johnny and His Hobbies", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force"], "solvedCount": 20341}, {"contestId": 1362, "index": "A", "name": "Johnny and Ancient Computer", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 28792}, {"contestId": 1361, "index": "F", "name": "Johnny and New Toy", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "implementation", "math"], "solvedCount": 167}, {"contestId": 1361, "index": "E", "name": "James and the Chase", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "graphs", "probabilities", "trees"], "solvedCount": 841}, {"contestId": 1361, "index": "D", "name": "Johnny and James", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["greedy", "implementation", "math", "trees"], "solvedCount": 333}, {"contestId": 1361, "index": "C", "name": "Johnny and Megan's Necklace", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 1739}, {"contestId": 1361, "index": "B", "name": "Johnny and Grandmaster", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["greedy", "implementation", "math", "sortings"], "solvedCount": 3782}, {"contestId": 1361, "index": "A", "name": "Johnny and Contribution", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "greedy", "sortings"], "solvedCount": 8626}, {"contestId": 1360, "index": "H", "name": "Binary Median", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms"], "solvedCount": 4714}, {"contestId": 1360, "index": "G", "name": "A/B Matrix", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 8074}, {"contestId": 1360, "index": "F", "name": "Spy-string", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "hashing", "strings"], "solvedCount": 13016}, {"contestId": 1360, "index": "E", "name": "Polygon", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "graphs", "implementation", "shortest paths"], "solvedCount": 26914}, {"contestId": 1360, "index": "D", "name": "Buying Shovels", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "number theory"], "solvedCount": 37974}, {"contestId": 1360, "index": "C", "name": "Similar Pairs", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "graph matchings", "greedy", "sortings"], "solvedCount": 34842}, {"contestId": 1360, "index": "B", "name": "Honest Coach", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 51098}, {"contestId": 1360, "index": "A", "name": "Minimal Square", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 54623}, {"contestId": 1359, "index": "F", "name": "RC Kaboom Show", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "brute force", "data structures", "geometry", "math"], "solvedCount": 564}, {"contestId": 1359, "index": "E", "name": "Modular Stability", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 6379}, {"contestId": 1359, "index": "D", "name": "Yet Another Yet Another Task", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "implementation", "two pointers"], "solvedCount": 10140}, {"contestId": 1359, "index": "C", "name": "Mixing Water", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "math"], "solvedCount": 14610}, {"contestId": 1359, "index": "B", "name": "New Theatre Square", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "dp", "greedy", "implementation", "two pointers"], "solvedCount": 28805}, {"contestId": 1359, "index": "A", "name": "Berland Poker", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy", "math"], "solvedCount": 30860}, {"contestId": 1358, "index": "F", "name": "Tasty Cookie", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "solvedCount": 486}, {"contestId": 1358, "index": "E", "name": "Are You Fired?", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 2405}, {"contestId": 1358, "index": "D", "name": "The Best Vacation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "brute force", "greedy", "implementation", "two pointers"], "solvedCount": 8462}, {"contestId": 1358, "index": "C", "name": "Celex Update", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"], "solvedCount": 17973}, {"contestId": 1358, "index": "B", "name": "Maria Breaks the Self-isolation", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["greedy", "sortings"], "solvedCount": 25435}, {"contestId": 1358, "index": "A", "name": "Park Lighting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 41819}, {"contestId": 1357, "index": "E2", "name": "Root of quantum Fourier transform", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 52}, {"contestId": 1357, "index": "E1", "name": "Power of quantum Fourier transform", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 194}, {"contestId": 1357, "index": "D5", "name": "Quantum Classification - Dataset 7", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 82}, {"contestId": 1357, "index": "D4", "name": "Quantum Classification - Dataset 6", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 85}, {"contestId": 1357, "index": "D3", "name": "Quantum Classification - Dataset 5", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 105}, {"contestId": 1357, "index": "D2", "name": "Quantum Classification - Dataset 4", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 112}, {"contestId": 1357, "index": "D1", "name": "Quantum Classification - Dataset 3", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 125}, {"contestId": 1357, "index": "C2", "name": "Prepare superposition of basis states with the same parity", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 305}, {"contestId": 1357, "index": "C1", "name": "Prepare superposition of basis states with 0s", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 349}, {"contestId": 1357, "index": "B2", "name": "\"Is the number divisible by 3?\" oracle", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 215}, {"contestId": 1357, "index": "B1", "name": "\"Is the bit string balanced?\" oracle", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 215}, {"contestId": 1357, "index": "A7", "name": "Distinguish Y, XZ, -Y and -XZ", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 184}, {"contestId": 1357, "index": "A6", "name": "Distinguish four Pauli gates", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 170}, {"contestId": 1357, "index": "A5", "name": "Distinguish Rz(\u03b8) from Ry(\u03b8)", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 243}, {"contestId": 1357, "index": "A4", "name": "Distinguish Rz from R1", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 354}, {"contestId": 1357, "index": "A3", "name": "Distinguish H from X", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 481}, {"contestId": 1357, "index": "A2", "name": "Distinguish I, CNOTs and SWAP", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 513}, {"contestId": 1357, "index": "A1", "name": "Figure out direction of CNOT", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 634}, {"contestId": 1356, "index": "D2", "name": "Quantum Classification - 2", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 129}, {"contestId": 1356, "index": "D1", "name": "Quantum Classification - 1", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 138}, {"contestId": 1356, "index": "C", "name": "Prepare state |01\u27e9 + |10\u27e9 + |11\u27e9", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 305}, {"contestId": 1356, "index": "B2", "name": "Decrement", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 286}, {"contestId": 1356, "index": "B1", "name": "Increment", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 285}, {"contestId": 1356, "index": "A5", "name": "Distinguish Z from -Z", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 334}, {"contestId": 1356, "index": "A4", "name": "Distinguish I \u2297 X from CNOT", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 461}, {"contestId": 1356, "index": "A3", "name": "Distinguish Z from S", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 463}, {"contestId": 1356, "index": "A2", "name": "Distinguish I from Z", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 490}, {"contestId": 1356, "index": "A1", "name": "Distinguish I from X", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 605}, {"contestId": 1355, "index": "F", "name": "Guess Divisors Count", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "interactive", "number theory"], "solvedCount": 916}, {"contestId": 1355, "index": "E", "name": "Restorer Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "greedy", "math", "sortings", "ternary search"], "solvedCount": 5494}, {"contestId": 1355, "index": "D", "name": "Game With Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 18666}, {"contestId": 1355, "index": "C", "name": "Count Triangles", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["binary search", "implementation", "math", "two pointers"], "solvedCount": 11332}, {"contestId": 1355, "index": "B", "name": "Young Explorers", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["dp", "greedy", "sortings"], "solvedCount": 26705}, {"contestId": 1355, "index": "A", "name": "Sequence with Digits", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "implementation", "math"], "solvedCount": 27914}, {"contestId": 1354, "index": "G", "name": "Find a Gift", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "interactive", "probabilities"], "solvedCount": 913}, {"contestId": 1354, "index": "F", "name": "Summoning Minions", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "dp", "flows", "graph matchings", "greedy", "sortings"], "solvedCount": 1356}, {"contestId": 1354, "index": "E", "name": "Graph Coloring", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs"], "solvedCount": 3564}, {"contestId": 1354, "index": "D", "name": "Multiset", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures"], "solvedCount": 9511}, {"contestId": 1354, "index": "C2", "name": "Not So Simple Polygon Embedding", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "geometry", "math"], "solvedCount": 6239}, {"contestId": 1354, "index": "C1", "name": "Simple Polygon Embedding", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "geometry", "math", "ternary search"], "solvedCount": 16127}, {"contestId": 1354, "index": "B", "name": "Ternary String", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "dp", "implementation", "two pointers"], "solvedCount": 33393}, {"contestId": 1354, "index": "A", "name": "Alarm Clock", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 24471}, {"contestId": 1353, "index": "F", "name": "Decreasing Heights", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dp"], "solvedCount": 3504}, {"contestId": 1353, "index": "E", "name": "K-periodic Garland", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "dp", "greedy"], "solvedCount": 7506}, {"contestId": 1353, "index": "D", "name": "Constructing the Array", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "data structures", "sortings"], "solvedCount": 19233}, {"contestId": 1353, "index": "C", "name": "Board Moves", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"], "solvedCount": 37444}, {"contestId": 1353, "index": "B", "name": "Two Arrays And Swaps", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "sortings"], "solvedCount": 53913}, {"contestId": 1353, "index": "A", "name": "Most Unstable Array", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 42980}, {"contestId": 1352, "index": "G", "name": "Special Permutation", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 23384}, {"contestId": 1352, "index": "F", "name": "Binary String Reconstruction", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "math"], "solvedCount": 18563}, {"contestId": 1352, "index": "E", "name": "Special Elements", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation", "two pointers"], "solvedCount": 22497}, {"contestId": 1352, "index": "D", "name": "Alice, Bob and Candies", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 28229}, {"contestId": 1352, "index": "C", "name": "K-th Not Divisible by n", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "math"], "solvedCount": 63071}, {"contestId": 1352, "index": "B", "name": "Same Parity Summands", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 41682}, {"contestId": 1352, "index": "A", "name": "Sum of Round Numbers", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 92932}, {"contestId": 1351, "index": "C", "name": "Skier", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 8939}, {"contestId": 1351, "index": "B", "name": "Square?", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "implementation", "math"], "solvedCount": 17804}, {"contestId": 1351, "index": "A", "name": "A+B (Trial Problem)", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 25368}, {"contestId": 1350, "index": "B", "name": "Orac and Models", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "math", "number theory"], "solvedCount": 25920}, {"contestId": 1350, "index": "A", "name": "Orac and Factors", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"], "solvedCount": 26747}, {"contestId": 1349, "index": "F2", "name": "Slime and Sequences (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3500, "tags": ["dp", "fft", "math"], "solvedCount": 124}, {"contestId": 1349, "index": "F1", "name": "Slime and Sequences (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["dp", "fft", "math"], "solvedCount": 482}, {"contestId": 1349, "index": "E", "name": "Slime and Hats", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 109}, {"contestId": 1349, "index": "D", "name": "Slime and Biscuits", "type": "PROGRAMMING", "points": 2000.0, "rating": 3200, "tags": ["math", "probabilities"], "solvedCount": 983}, {"contestId": 1349, "index": "C", "name": "Orac and Game of Life", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "solvedCount": 4668}, {"contestId": 1349, "index": "B", "name": "Orac and Medians", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 8532}, {"contestId": 1349, "index": "A", "name": "Orac and LCM", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "math", "number theory"], "solvedCount": 19463}, {"contestId": 1348, "index": "F", "name": "Phoenix and Memory", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["data structures", "dfs and similar", "graphs", "greedy"], "solvedCount": 873}, {"contestId": 1348, "index": "E", "name": "Phoenix and Berries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "dp", "greedy", "math"], "solvedCount": 2342}, {"contestId": 1348, "index": "D", "name": "Phoenix and Science", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 9161}, {"contestId": 1348, "index": "C", "name": "Phoenix and Distribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 15183}, {"contestId": 1348, "index": "B", "name": "Phoenix and Beauty", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 26677}, {"contestId": 1348, "index": "A", "name": "Phoenix and Balance", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 41471}, {"contestId": 1346, "index": "I", "name": "Pac-Man 2.0", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "dp"], "solvedCount": 52}, {"contestId": 1346, "index": "H", "name": "Game with Segments", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "data structures", "games"], "solvedCount": 57}, {"contestId": 1346, "index": "G", "name": "Two IP Cameras", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "math", "number theory"], "solvedCount": 145}, {"contestId": 1346, "index": "F", "name": "Dune II: Battle For Arrakis", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "data structures", "greedy", "math"], "solvedCount": 243}, {"contestId": 1346, "index": "E", "name": "Magic Tricks", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "dp", "graphs"], "solvedCount": 396}, {"contestId": 1346, "index": "D", "name": "Constructing the Dungeon", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "graphs", "greedy"], "solvedCount": 532}, {"contestId": 1346, "index": "C", "name": "Spring Cleaning", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "greedy", "sortings"], "solvedCount": 629}, {"contestId": 1346, "index": "B", "name": "Boot Camp", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "greedy"], "solvedCount": 1232}, {"contestId": 1346, "index": "A", "name": "Color Revolution", "type": "PROGRAMMING", "rating": 1000, "tags": ["*special", "math"], "solvedCount": 2108}, {"contestId": 1345, "index": "B", "name": "Card Constructions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "brute force", "dp", "math"], "solvedCount": 27656}, {"contestId": 1345, "index": "A", "name": "Puzzle Pieces", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 24557}, {"contestId": 1344, "index": "F", "name": "Piet's Palette", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["matrices"], "solvedCount": 475}, {"contestId": 1344, "index": "E", "name": "Train Tracks", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 497}, {"contestId": 1344, "index": "D", "name": "R\u00e9sum\u00e9 Review", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["binary search", "greedy", "math"], "solvedCount": 1231}, {"contestId": 1344, "index": "C", "name": "Quantifier Question", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "math"], "solvedCount": 1917}, {"contestId": 1344, "index": "B", "name": "Monopole Magnets", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 6238}, {"contestId": 1344, "index": "A", "name": "Hilbert's Hotel", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math", "number theory", "sortings"], "solvedCount": 16118}, {"contestId": 1343, "index": "F", "name": "Restore the Permutation by Sorted Segments", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 1348}, {"contestId": 1343, "index": "E", "name": "Weights Distributing", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "graphs", "greedy", "shortest paths", "sortings"], "solvedCount": 5439}, {"contestId": 1343, "index": "D", "name": "Constant Palindrome Sum", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "data structures", "greedy", "two pointers"], "solvedCount": 13138}, {"contestId": 1343, "index": "C", "name": "Alternating Subsequence", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "two pointers"], "solvedCount": 41446}, {"contestId": 1343, "index": "B", "name": "Balanced Array", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 61226}, {"contestId": 1343, "index": "A", "name": "Candies", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "math"], "solvedCount": 51056}, {"contestId": 1342, "index": "F", "name": "Make It Ascending", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "brute force", "dp"], "solvedCount": 861}, {"contestId": 1342, "index": "E", "name": "Placing Rooks", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "fft", "math"], "solvedCount": 3319}, {"contestId": 1342, "index": "D", "name": "Multiple Testcases", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 6268}, {"contestId": 1342, "index": "C", "name": "Yet Another Counting Problem", "type": "PROGRAMMING", "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 14573}, {"contestId": 1342, "index": "B", "name": "Binary Period", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "strings"], "solvedCount": 24169}, {"contestId": 1342, "index": "A", "name": "Road To Zero", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 43954}, {"contestId": 1341, "index": "B", "name": "Nastya and Door", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "implementation"], "solvedCount": 20501}, {"contestId": 1341, "index": "A", "name": "Nastya and Rice", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"], "solvedCount": 29790}, {"contestId": 1340, "index": "F", "name": "Nastya and CBS", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["brute force", "data structures", "hashing"], "solvedCount": 638}, {"contestId": 1340, "index": "E", "name": "Nastya and Bees", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["graphs", "interactive", "probabilities"], "solvedCount": 56}, {"contestId": 1340, "index": "D", "name": "Nastya and Time Machine", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 1034}, {"contestId": 1340, "index": "C", "name": "Nastya and Unexpected Guest", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 2357}, {"contestId": 1340, "index": "B", "name": "Nastya and Scoreboard", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["bitmasks", "dp", "graphs", "greedy"], "solvedCount": 8071}, {"contestId": 1340, "index": "A", "name": "Nastya and Strange Generator", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 13573}, {"contestId": 1339, "index": "B", "name": "Sorted Adjacent Differences", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "sortings"], "solvedCount": 27469}, {"contestId": 1339, "index": "A", "name": "Filling Diamonds", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "dp", "implementation", "math"], "solvedCount": 33388}, {"contestId": 1338, "index": "E", "name": "JYPnation", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["graphs"], "solvedCount": 338}, {"contestId": 1338, "index": "D", "name": "Nested Rubber Bands", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "dp", "math", "trees"], "solvedCount": 1069}, {"contestId": 1338, "index": "C", "name": "Perfect Triples", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "math"], "solvedCount": 3348}, {"contestId": 1338, "index": "B", "name": "Edge Weight Assignment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "greedy", "math", "trees"], "solvedCount": 8964}, {"contestId": 1338, "index": "A", "name": "Powered Addition", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 27238}, {"contestId": 1337, "index": "B", "name": "Kana and Dragon Quest game", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "implementation", "math"], "solvedCount": 35945}, {"contestId": 1337, "index": "A", "name": "Ichihime and Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 41215}, {"contestId": 1336, "index": "F", "name": "Journey", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "graphs", "trees"], "solvedCount": 240}, {"contestId": 1336, "index": "E2", "name": "Chiori and Doll Picking (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3500, "tags": ["bitmasks", "brute force", "combinatorics", "math"], "solvedCount": 404}, {"contestId": 1336, "index": "E1", "name": "Chiori and Doll Picking (easy version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["bitmasks", "brute force", "combinatorics", "math"], "solvedCount": 764}, {"contestId": 1336, "index": "D", "name": "Yui and Mahjong Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["constructive algorithms", "interactive"], "solvedCount": 507}, {"contestId": 1336, "index": "C", "name": "Kaavi and Magic Spell", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dp", "strings"], "solvedCount": 3882}, {"contestId": 1336, "index": "B", "name": "Xenia and Colorful Gems", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["binary search", "greedy", "math", "sortings", "two pointers"], "solvedCount": 11822}, {"contestId": 1336, "index": "A", "name": "Linova and Kingdom", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"], "solvedCount": 22659}, {"contestId": 1335, "index": "F", "name": "Robots on a Grid", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "matrices"], "solvedCount": 2286}, {"contestId": 1335, "index": "E2", "name": "Three Blocks Palindrome (hard version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp", "two pointers"], "solvedCount": 8867}, {"contestId": 1335, "index": "E1", "name": "Three Blocks Palindrome (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "solvedCount": 11342}, {"contestId": 1335, "index": "D", "name": "Anti-Sudoku", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 28658}, {"contestId": 1335, "index": "C", "name": "Two Teams Composing", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "greedy", "implementation", "sortings"], "solvedCount": 37178}, {"contestId": 1335, "index": "B", "name": "Construct the String", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 40812}, {"contestId": 1335, "index": "A", "name": "Candies and Two Sisters", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 95495}, {"contestId": 1334, "index": "G", "name": "Substring Search", "type": "PROGRAMMING", "rating": 2900, "tags": ["bitmasks", "brute force", "fft"], "solvedCount": 397}, {"contestId": 1334, "index": "F", "name": "Strange Function", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "greedy"], "solvedCount": 1423}, {"contestId": 1334, "index": "E", "name": "Divisor Paths", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "graphs", "greedy", "math", "number theory"], "solvedCount": 2970}, {"contestId": 1334, "index": "D", "name": "Minimum Euler Cycle", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 7577}, {"contestId": 1334, "index": "C", "name": "Circle of Monsters", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 17363}, {"contestId": 1334, "index": "B", "name": "Middle Class", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 26952}, {"contestId": 1334, "index": "A", "name": "Level Statistics", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 23997}, {"contestId": 1333, "index": "F", "name": "Kate and imperfection", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["greedy", "implementation", "math", "number theory", "sortings", "two pointers"], "solvedCount": 4444}, {"contestId": 1333, "index": "E", "name": "Road to 1600", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "constructive algorithms"], "solvedCount": 1747}, {"contestId": 1333, "index": "D", "name": "Challenges in school \u211641", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "games", "graphs", "greedy", "implementation", "sortings"], "solvedCount": 4066}, {"contestId": 1333, "index": "C", "name": "Eugene and an array", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["binary search", "data structures", "implementation", "two pointers"], "solvedCount": 12985}, {"contestId": 1333, "index": "B", "name": "Kind Anton", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 21966}, {"contestId": 1333, "index": "A", "name": "Little Artem", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 25343}, {"contestId": 1332, "index": "G", "name": "No Monotone Triples", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 328}, {"contestId": 1332, "index": "F", "name": "Independent Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 1084}, {"contestId": 1332, "index": "E", "name": "Height All the Same", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "math", "matrices"], "solvedCount": 4079}, {"contestId": 1332, "index": "D", "name": "Walk on Matrix", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 8332}, {"contestId": 1332, "index": "C", "name": "K-Complete Word", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "greedy", "implementation", "strings"], "solvedCount": 18752}, {"contestId": 1332, "index": "B", "name": "Composite Coloring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 18481}, {"contestId": 1332, "index": "A", "name": "Exercising Walk", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation", "math"], "solvedCount": 19696}, {"contestId": 1331, "index": "H", "name": "It's showtime", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 642}, {"contestId": 1331, "index": "G", "name": "Lingua Romana", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 518}, {"contestId": 1331, "index": "F", "name": "Elementary!", "type": "PROGRAMMING", "tags": ["*special", "brute force", "dp", "strings"], "solvedCount": 586}, {"contestId": 1331, "index": "E", "name": "Jordan Smiley", "type": "PROGRAMMING", "tags": ["*special", "dfs and similar", "geometry", "implementation"], "solvedCount": 1228}, {"contestId": 1331, "index": "D", "name": "Again?", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 12040}, {"contestId": 1331, "index": "C", "name": "...And after happily lived ever they", "type": "PROGRAMMING", "tags": ["*special", "bitmasks"], "solvedCount": 3194}, {"contestId": 1331, "index": "B", "name": "Limericks", "type": "PROGRAMMING", "tags": ["*special", "math", "number theory"], "solvedCount": 7090}, {"contestId": 1331, "index": "A", "name": "Is it rated?", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 17336}, {"contestId": 1330, "index": "B", "name": "Dreamoon Likes Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 14326}, {"contestId": 1330, "index": "A", "name": "Dreamoon and Ranking Collection", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 19149}, {"contestId": 1329, "index": "E", "name": "Dreamoon Loves AA", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["binary search", "greedy"], "solvedCount": 258}, {"contestId": 1329, "index": "D", "name": "Dreamoon Likes Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["constructive algorithms", "data structures"], "solvedCount": 503}, {"contestId": 1329, "index": "C", "name": "Drazil Likes Heap", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 1775}, {"contestId": 1329, "index": "B", "name": "Dreamoon Likes Sequences", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["bitmasks", "combinatorics", "math"], "solvedCount": 6871}, {"contestId": 1329, "index": "A", "name": "Dreamoon Likes Coloring", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 9489}, {"contestId": 1328, "index": "F", "name": "Make k Equal", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy"], "solvedCount": 3384}, {"contestId": 1328, "index": "E", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 10651}, {"contestId": 1328, "index": "D", "name": "Carousel", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "solvedCount": 13978}, {"contestId": 1328, "index": "C", "name": "Ternary XOR", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 32025}, {"contestId": 1328, "index": "B", "name": "K-th Beautiful String", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "combinatorics", "implementation", "math"], "solvedCount": 30645}, {"contestId": 1328, "index": "A", "name": "Divisibility Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 118149}, {"contestId": 1327, "index": "G", "name": "Letters and Question Marks", "type": "PROGRAMMING", "rating": 2800, "tags": ["bitmasks", "dp", "string suffix structures"], "solvedCount": 476}, {"contestId": 1327, "index": "F", "name": "AND Segments", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "combinatorics", "data structures", "dp", "two pointers"], "solvedCount": 1890}, {"contestId": 1327, "index": "E", "name": "Count The Blocks", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "dp", "math"], "solvedCount": 9331}, {"contestId": 1327, "index": "D", "name": "Infinite Path", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dfs and similar", "graphs", "math", "number theory"], "solvedCount": 3430}, {"contestId": 1327, "index": "C", "name": "Game with Chips", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13837}, {"contestId": 1327, "index": "B", "name": "Princesses and Princes", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "graphs", "greedy"], "solvedCount": 19200}, {"contestId": 1327, "index": "A", "name": "Sum of Odd Integers", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"], "solvedCount": 42783}, {"contestId": 1326, "index": "G", "name": "Spiderweb Trees", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "geometry", "trees"], "solvedCount": 100}, {"contestId": 1326, "index": "F2", "name": "Wise Men (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3200, "tags": ["bitmasks", "dp", "math"], "solvedCount": 564}, {"contestId": 1326, "index": "F1", "name": "Wise Men (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "solvedCount": 914}, {"contestId": 1326, "index": "E", "name": "Bombs", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "two pointers"], "solvedCount": 2314}, {"contestId": 1326, "index": "D2", "name": "Prefix-Suffix Palindrome (Hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "greedy", "hashing", "string suffix structures", "strings"], "solvedCount": 10897}, {"contestId": 1326, "index": "D1", "name": "Prefix-Suffix Palindrome (Easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["hashing", "string suffix structures", "strings"], "solvedCount": 12608}, {"contestId": 1326, "index": "C", "name": "Permutation Partitions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "greedy", "math"], "solvedCount": 16008}, {"contestId": 1326, "index": "B", "name": "Maximums", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 24840}, {"contestId": 1326, "index": "A", "name": "Bad Ugly Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "number theory"], "solvedCount": 31844}, {"contestId": 1325, "index": "F", "name": "Ehab's Last Theorem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 2171}, {"contestId": 1325, "index": "E", "name": "Ehab's REAL Number Theory Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "dfs and similar", "graphs", "number theory", "shortest paths"], "solvedCount": 2219}, {"contestId": 1325, "index": "D", "name": "Ehab the Xorcist", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"], "solvedCount": 12864}, {"contestId": 1325, "index": "C", "name": "Ehab and Path-etic MEXs", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 15387}, {"contestId": 1325, "index": "B", "name": "CopyCopyCopyCopyCopy", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 37773}, {"contestId": 1325, "index": "A", "name": "EhAb AnD gCd", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 43793}, {"contestId": 1324, "index": "F", "name": "Maximum White Subtree", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 11533}, {"contestId": 1324, "index": "E", "name": "Sleeping Schedule", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "implementation"], "solvedCount": 15625}, {"contestId": 1324, "index": "D", "name": "Pair of Topics", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "data structures", "sortings", "two pointers"], "solvedCount": 31474}, {"contestId": 1324, "index": "C", "name": "Frog Jumps", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "implementation"], "solvedCount": 29570}, {"contestId": 1324, "index": "B", "name": "Yet Another Palindrome Problem", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "strings"], "solvedCount": 29725}, {"contestId": 1324, "index": "A", "name": "Yet Another Tetris Problem", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "number theory"], "solvedCount": 26724}, {"contestId": 1323, "index": "B", "name": "Count Subrectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "greedy", "implementation"], "solvedCount": 10254}, {"contestId": 1323, "index": "A", "name": "Even Subset Sum Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 20365}, {"contestId": 1322, "index": "F", "name": "Assigning Fares", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp", "trees"], "solvedCount": 132}, {"contestId": 1322, "index": "E", "name": "Median Mountain Range", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 333}, {"contestId": 1322, "index": "D", "name": "Reality Show", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "dp"], "solvedCount": 826}, {"contestId": 1322, "index": "C", "name": "Instant Noodles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["graphs", "hashing", "math", "number theory"], "solvedCount": 2586}, {"contestId": 1322, "index": "B", "name": "Present", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures", "math", "sortings"], "solvedCount": 4426}, {"contestId": 1322, "index": "A", "name": "Unusual Competitions", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 12697}, {"contestId": 1321, "index": "C", "name": "Remove Adjacent", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "solvedCount": 10132}, {"contestId": 1321, "index": "A", "name": "Contest for Robots", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy"], "solvedCount": 14699}, {"contestId": 1320, "index": "F", "name": "Blocks and Sensors", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["brute force"], "solvedCount": 173}, {"contestId": 1320, "index": "E", "name": "Treeland and Viruses", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "shortest paths", "trees"], "solvedCount": 930}, {"contestId": 1320, "index": "D", "name": "Reachable Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "hashing", "strings"], "solvedCount": 1594}, {"contestId": 1320, "index": "C", "name": "World of Darkraft: Battle for Azathoth", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "data structures", "sortings"], "solvedCount": 3330}, {"contestId": 1320, "index": "B", "name": "Navigation System", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 6214}, {"contestId": 1320, "index": "A", "name": "Journey Planning", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "dp", "greedy", "math", "sortings"], "solvedCount": 18905}, {"contestId": 1316, "index": "F", "name": "Battalion Strength", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "probabilities"], "solvedCount": 841}, {"contestId": 1316, "index": "E", "name": "Team Building", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["bitmasks", "dp", "greedy", "sortings"], "solvedCount": 4761}, {"contestId": 1316, "index": "D", "name": "Nash Matrix", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation"], "solvedCount": 3457}, {"contestId": 1316, "index": "C", "name": "Primitive Primes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "math", "ternary search"], "solvedCount": 7456}, {"contestId": 1316, "index": "B", "name": "String Modification", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "implementation", "sortings", "strings"], "solvedCount": 11537}, {"contestId": 1316, "index": "A", "name": "Grade Allocation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 19396}, {"contestId": 1315, "index": "C", "name": "Restoring Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["greedy"], "solvedCount": 10361}, {"contestId": 1315, "index": "B", "name": "Homecoming", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "dp", "greedy", "strings"], "solvedCount": 9431}, {"contestId": 1315, "index": "A", "name": "Dead Pixel", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 12458}, {"contestId": 1313, "index": "E", "name": "Concatenation with intersection", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "hashing", "strings", "two pointers"], "solvedCount": 621}, {"contestId": 1313, "index": "D", "name": "Happy New Year", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["bitmasks", "dp", "implementation"], "solvedCount": 1419}, {"contestId": 1313, "index": "C2", "name": "Skyscrapers (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dp", "greedy"], "solvedCount": 6869}, {"contestId": 1313, "index": "C1", "name": "Skyscrapers (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy"], "solvedCount": 10757}, {"contestId": 1313, "index": "B", "name": "Different Rules", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 6866}, {"contestId": 1313, "index": "A", "name": "Fast Food Restaurant", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 15893}, {"contestId": 1312, "index": "G", "name": "Autocompletion", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dfs and similar", "dp"], "solvedCount": 1030}, {"contestId": 1312, "index": "F", "name": "Attack on Red Kingdom", "type": "PROGRAMMING", "rating": 2500, "tags": ["games", "two pointers"], "solvedCount": 965}, {"contestId": 1312, "index": "E", "name": "Array Shrinking", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy"], "solvedCount": 6763}, {"contestId": 1312, "index": "D", "name": "Count the Arrays", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "math"], "solvedCount": 10006}, {"contestId": 1312, "index": "C", "name": "Adding Powers", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "greedy", "implementation", "math", "number theory", "ternary search"], "solvedCount": 17620}, {"contestId": 1312, "index": "B", "name": "Bogosort", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 32839}, {"contestId": 1312, "index": "A", "name": "Two Regular Polygons", "type": "PROGRAMMING", "rating": 800, "tags": ["geometry", "greedy", "math", "number theory"], "solvedCount": 26892}, {"contestId": 1311, "index": "F", "name": "Moving Points", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "implementation", "sortings"], "solvedCount": 4565}, {"contestId": 1311, "index": "E", "name": "Construct the Binary Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "trees"], "solvedCount": 2545}, {"contestId": 1311, "index": "D", "name": "Three Integers", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "math"], "solvedCount": 9543}, {"contestId": 1311, "index": "C", "name": "Perform the Combo", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force"], "solvedCount": 16475}, {"contestId": 1311, "index": "B", "name": "WeirdSort", "type": "PROGRAMMING", "rating": 1200, "tags": ["dfs and similar", "sortings"], "solvedCount": 19565}, {"contestId": 1311, "index": "A", "name": "Add Odd or Subtract Even", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "math"], "solvedCount": 44672}, {"contestId": 1310, "index": "F", "name": "Bad Cryptography", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["math", "number theory"], "solvedCount": 85}, {"contestId": 1310, "index": "E", "name": "Strange Function", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp"], "solvedCount": 377}, {"contestId": 1310, "index": "D", "name": "Tourism", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "graphs", "probabilities"], "solvedCount": 1826}, {"contestId": 1310, "index": "C", "name": "Au Pont Rouge", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["binary search", "dp", "strings"], "solvedCount": 668}, {"contestId": 1310, "index": "B", "name": "Double Elimination", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["dp", "implementation"], "solvedCount": 557}, {"contestId": 1310, "index": "A", "name": "Recommendations", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 5350}, {"contestId": 1307, "index": "G", "name": "Cow and Exercise", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["flows", "graphs", "shortest paths"], "solvedCount": 559}, {"contestId": 1307, "index": "F", "name": "Cow and Vacation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["dfs and similar", "dsu", "trees"], "solvedCount": 629}, {"contestId": 1307, "index": "E", "name": "Cow and Treats", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "combinatorics", "dp", "greedy", "implementation", "math"], "solvedCount": 1332}, {"contestId": 1307, "index": "D", "name": "Cow and Fields", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "sortings"], "solvedCount": 6854}, {"contestId": 1307, "index": "C", "name": "Cow and Message", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp", "math", "strings"], "solvedCount": 12337}, {"contestId": 1307, "index": "B", "name": "Cow and Friend", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["geometry", "greedy", "math"], "solvedCount": 13638}, {"contestId": 1307, "index": "A", "name": "Cow and Haybales", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 15355}, {"contestId": 1305, "index": "H", "name": "Kuroni the Private Tutor", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["binary search", "greedy"], "solvedCount": 145}, {"contestId": 1305, "index": "G", "name": "Kuroni and Antihype", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["bitmasks", "brute force", "dp", "dsu", "graphs"], "solvedCount": 1179}, {"contestId": 1305, "index": "F", "name": "Kuroni and the Punishment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["math", "number theory", "probabilities"], "solvedCount": 2995}, {"contestId": 1305, "index": "E", "name": "Kuroni and the Score Distribution", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 3215}, {"contestId": 1305, "index": "D", "name": "Kuroni and the Celebration", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "solvedCount": 5235}, {"contestId": 1305, "index": "C", "name": "Kuroni and Impossible Calculation", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "combinatorics", "math", "number theory"], "solvedCount": 16756}, {"contestId": 1305, "index": "B", "name": "Kuroni and Simple Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "strings", "two pointers"], "solvedCount": 12107}, {"contestId": 1305, "index": "A", "name": "Kuroni and the Gifts", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "sortings"], "solvedCount": 14413}, {"contestId": 1304, "index": "F2", "name": "Animal Observation (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["data structures", "dp", "greedy"], "solvedCount": 1688}, {"contestId": 1304, "index": "F1", "name": "Animal Observation (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dp"], "solvedCount": 1892}, {"contestId": 1304, "index": "E", "name": "1-Trees and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "shortest paths", "trees"], "solvedCount": 5575}, {"contestId": 1304, "index": "D", "name": "Shortest and Longest LIS", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "graphs", "greedy", "two pointers"], "solvedCount": 6500}, {"contestId": 1304, "index": "C", "name": "Air Conditioner", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 17108}, {"contestId": 1304, "index": "B", "name": "Longest Palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 18503}, {"contestId": 1304, "index": "A", "name": "Two Rabbits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 26305}, {"contestId": 1303, "index": "G", "name": "Sum of Prefix Sums", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "geometry", "trees"], "solvedCount": 946}, {"contestId": 1303, "index": "F", "name": "Number of Components", "type": "PROGRAMMING", "rating": 2800, "tags": ["dsu", "implementation"], "solvedCount": 571}, {"contestId": 1303, "index": "E", "name": "Erase Subsequences", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "strings"], "solvedCount": 3035}, {"contestId": 1303, "index": "D", "name": "Fill The Bag", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "greedy"], "solvedCount": 7455}, {"contestId": 1303, "index": "C", "name": "Perfect Keyboard", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "greedy", "implementation"], "solvedCount": 12592}, {"contestId": 1303, "index": "B", "name": "National Project", "type": "PROGRAMMING", "rating": 1400, "tags": ["math"], "solvedCount": 16447}, {"contestId": 1303, "index": "A", "name": "Erasing Zeroes", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 34982}, {"contestId": 1302, "index": "J", "name": "Keep talking and nobody explodes -- hard", "type": "PROGRAMMING", "tags": [], "solvedCount": 10}, {"contestId": 1302, "index": "I", "name": "Deja vu", "type": "PROGRAMMING", "tags": [], "solvedCount": 6}, {"contestId": 1302, "index": "H", "name": "Who needs suffix structures?", "type": "PROGRAMMING", "tags": [], "solvedCount": 10}, {"contestId": 1302, "index": "G", "name": "Keep talking and nobody explodes -- medium", "type": "PROGRAMMING", "tags": [], "solvedCount": 23}, {"contestId": 1302, "index": "F", "name": "Keep talking and nobody explodes -- easy", "type": "PROGRAMMING", "tags": ["bitmasks", "brute force", "expression parsing"], "solvedCount": 74}, {"contestId": 1302, "index": "E", "name": "Amazing bitset", "type": "PROGRAMMING", "tags": [], "solvedCount": 51}, {"contestId": 1302, "index": "D", "name": "Dijkstra", "type": "PROGRAMMING", "tags": [], "solvedCount": 96}, {"contestId": 1302, "index": "C", "name": "Segment tree or Fenwick?", "type": "PROGRAMMING", "tags": ["data structures"], "solvedCount": 382}, {"contestId": 1302, "index": "B", "name": "DAG", "type": "PROGRAMMING", "tags": ["constructive algorithms"], "solvedCount": 146}, {"contestId": 1302, "index": "A", "name": "Nash equilibrium", "type": "PROGRAMMING", "tags": [], "solvedCount": 298}, {"contestId": 1301, "index": "F", "name": "Super Jaber", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "solvedCount": 1367}, {"contestId": 1301, "index": "E", "name": "Nanosoft", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "dp", "implementation"], "solvedCount": 1570}, {"contestId": 1301, "index": "D", "name": "Time to Run", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 4156}, {"contestId": 1301, "index": "C", "name": "Ayoub's function", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["binary search", "combinatorics", "greedy", "math", "strings"], "solvedCount": 9601}, {"contestId": 1301, "index": "B", "name": "Motarack's Birthday", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "greedy", "ternary search"], "solvedCount": 14666}, {"contestId": 1301, "index": "A", "name": "Three Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 19801}, {"contestId": 1300, "index": "B", "name": "Assigning to Classes", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 24994}, {"contestId": 1300, "index": "A", "name": "Non-zero", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 21420}, {"contestId": 1299, "index": "E", "name": "So Mean", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["interactive", "math"], "solvedCount": 186}, {"contestId": 1299, "index": "D", "name": "Around the World", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "graphs", "graphs", "math", "trees"], "solvedCount": 496}, {"contestId": 1299, "index": "C", "name": "Water Balance", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "geometry", "greedy"], "solvedCount": 4150}, {"contestId": 1299, "index": "B", "name": "Aerodynamic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["geometry"], "solvedCount": 5389}, {"contestId": 1299, "index": "A", "name": "Anu Has a Function", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "greedy", "math"], "solvedCount": 12325}, {"contestId": 1297, "index": "I", "name": "Falling Blocks", "type": "PROGRAMMING", "tags": ["*special", "data structures"], "solvedCount": 34}, {"contestId": 1297, "index": "H", "name": "Paint the String", "type": "PROGRAMMING", "tags": ["*special", "dp", "strings"], "solvedCount": 50}, {"contestId": 1297, "index": "G", "name": "M-numbers", "type": "PROGRAMMING", "tags": ["*special", "dp", "math"], "solvedCount": 75}, {"contestId": 1297, "index": "F", "name": "Movie Fan", "type": "PROGRAMMING", "tags": ["*special", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 123}, {"contestId": 1297, "index": "E", "name": "Modernization of Treeland", "type": "PROGRAMMING", "tags": ["*special", "dfs and similar", "trees"], "solvedCount": 212}, {"contestId": 1297, "index": "D", "name": "Bonus Distribution ", "type": "PROGRAMMING", "tags": ["*special", "binary search", "greedy", "sortings"], "solvedCount": 269}, {"contestId": 1297, "index": "C", "name": "Dream Team", "type": "PROGRAMMING", "tags": ["*special", "greedy"], "solvedCount": 408}, {"contestId": 1297, "index": "B", "name": "Cartoons", "type": "PROGRAMMING", "tags": ["*special", "implementation", "sortings"], "solvedCount": 422}, {"contestId": 1297, "index": "A", "name": "Likes Display", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 951}, {"contestId": 1296, "index": "F", "name": "Berland Beauty", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "greedy", "sortings", "trees"], "solvedCount": 3004}, {"contestId": 1296, "index": "E2", "name": "String Coloring (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp"], "solvedCount": 5308}, {"contestId": 1296, "index": "E1", "name": "String Coloring (easy version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "sortings"], "solvedCount": 7920}, {"contestId": 1296, "index": "D", "name": "Fight with Monsters", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "sortings"], "solvedCount": 14775}, {"contestId": 1296, "index": "C", "name": "Yet Another Walking Robot", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 15346}, {"contestId": 1296, "index": "B", "name": "Food Buying", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 31682}, {"contestId": 1296, "index": "A", "name": "Array with Odd Sum", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 45784}, {"contestId": 1295, "index": "F", "name": "Good Contest", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp", "probabilities"], "solvedCount": 1411}, {"contestId": 1295, "index": "E", "name": "Permutation Separation", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer"], "solvedCount": 2670}, {"contestId": 1295, "index": "D", "name": "Same GCDs", "type": "PROGRAMMING", "rating": 1800, "tags": ["math", "number theory"], "solvedCount": 9599}, {"contestId": 1295, "index": "C", "name": "Obtain The String", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "strings"], "solvedCount": 13537}, {"contestId": 1295, "index": "B", "name": "Infinite Prefixes", "type": "PROGRAMMING", "rating": 1700, "tags": ["math", "strings"], "solvedCount": 9702}, {"contestId": 1295, "index": "A", "name": "Display The Number", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy"], "solvedCount": 23573}, {"contestId": 1294, "index": "F", "name": "Three Paths on a Tree", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 6286}, {"contestId": 1294, "index": "E", "name": "Obtain a Permutation", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "implementation", "math"], "solvedCount": 5069}, {"contestId": 1294, "index": "D", "name": "MEX maximizing", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "greedy", "implementation", "math"], "solvedCount": 12270}, {"contestId": 1294, "index": "C", "name": "Product of Three Numbers", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "math", "number theory"], "solvedCount": 40437}, {"contestId": 1294, "index": "B", "name": "Collecting Packages", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 22464}, {"contestId": 1294, "index": "A", "name": "Collecting Coins", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 50628}, {"contestId": 1293, "index": "B", "name": "JOE is on TV!", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["combinatorics", "greedy", "math"], "solvedCount": 21825}, {"contestId": 1293, "index": "A", "name": "ConneR and the A.R.C. Markland-N", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 15863}, {"contestId": 1292, "index": "F", "name": "Nora's Toy Boxes", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["bitmasks", "combinatorics", "dp"], "solvedCount": 353}, {"contestId": 1292, "index": "E", "name": "Rin and The Unknown Flower", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms", "greedy", "interactive", "math"], "solvedCount": 404}, {"contestId": 1292, "index": "D", "name": "Chaotic V.", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["dp", "graphs", "greedy", "math", "number theory", "trees"], "solvedCount": 915}, {"contestId": 1292, "index": "C", "name": "Xenon's Attack on the Gangs", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2165}, {"contestId": 1292, "index": "B", "name": "Aroma's Search", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "geometry", "greedy", "implementation"], "solvedCount": 6567}, {"contestId": 1292, "index": "A", "name": "NEKO's Maze Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "dsu", "implementation"], "solvedCount": 13638}, {"contestId": 1291, "index": "F", "name": "Coffee Varieties (easy version)", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["graphs", "interactive"], "solvedCount": 704}, {"contestId": 1291, "index": "B", "name": "Array Sharpening", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "implementation"], "solvedCount": 14706}, {"contestId": 1291, "index": "A", "name": "Even But Not Even", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "math", "strings"], "solvedCount": 20173}, {"contestId": 1290, "index": "F", "name": "Making Shapes", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["dp"], "solvedCount": 531}, {"contestId": 1290, "index": "E", "name": "Cartesian Tree ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 639}, {"contestId": 1290, "index": "D", "name": "Coffee Varieties (hard version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "graphs", "interactive"], "solvedCount": 904}, {"contestId": 1290, "index": "C", "name": "Prefix Enlightenment", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 1911}, {"contestId": 1290, "index": "B", "name": "Irreducible Anagrams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "strings", "two pointers"], "solvedCount": 6410}, {"contestId": 1290, "index": "A", "name": "Mind Control", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 8749}, {"contestId": 1288, "index": "F", "name": "Red-Blue Graph", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "flows"], "solvedCount": 588}, {"contestId": 1288, "index": "E", "name": "Messenger Simulator", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures"], "solvedCount": 3816}, {"contestId": 1288, "index": "D", "name": "Minimax Problem", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "bitmasks", "dp"], "solvedCount": 7833}, {"contestId": 1288, "index": "C", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "dp"], "solvedCount": 14145}, {"contestId": 1288, "index": "B", "name": "Yet Another Meme Problem", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"], "solvedCount": 17422}, {"contestId": 1288, "index": "A", "name": "Deadline", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "brute force", "math", "ternary search"], "solvedCount": 18940}, {"contestId": 1287, "index": "B", "name": "Hyperset", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 9648}, {"contestId": 1287, "index": "A", "name": "Angry Students", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 21414}, {"contestId": 1286, "index": "F", "name": "Harry The Potter", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["brute force", "constructive algorithms", "dp", "fft", "implementation", "math"], "solvedCount": 271}, {"contestId": 1286, "index": "E", "name": "Fedya the Potter Strikes Back", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "strings"], "solvedCount": 612}, {"contestId": 1286, "index": "D", "name": "LCC", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["data structures", "math", "matrices", "probabilities"], "solvedCount": 678}, {"contestId": 1286, "index": "C2", "name": "Madhouse (Hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "hashing", "interactive", "math"], "solvedCount": 729}, {"contestId": 1286, "index": "C1", "name": "Madhouse (Easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "interactive", "math"], "solvedCount": 1519}, {"contestId": 1286, "index": "B", "name": "Numbers on Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 5085}, {"contestId": 1286, "index": "A", "name": "Garland", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy", "sortings"], "solvedCount": 9296}, {"contestId": 1285, "index": "F", "name": "Classical?", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["binary search", "combinatorics", "number theory"], "solvedCount": 1258}, {"contestId": 1285, "index": "E", "name": "Delete a Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "sortings", "trees", "two pointers"], "solvedCount": 1930}, {"contestId": 1285, "index": "D", "name": "Dr. Evil Underscores", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dfs and similar", "divide and conquer", "dp", "greedy", "strings", "trees"], "solvedCount": 8266}, {"contestId": 1285, "index": "C", "name": "Fadi and LCM", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "math", "number theory"], "solvedCount": 25984}, {"contestId": 1285, "index": "B", "name": "Just Eat It!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "implementation"], "solvedCount": 26557}, {"contestId": 1285, "index": "A", "name": "Mezo Playing Zoma", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 29139}, {"contestId": 1284, "index": "G", "name": "Seollal", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["graphs"], "solvedCount": 210}, {"contestId": 1284, "index": "F", "name": "New Year and Social Network", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "graph matchings", "graphs", "math", "trees"], "solvedCount": 394}, {"contestId": 1284, "index": "E", "name": "New Year and Castle Construction", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "geometry", "math", "sortings"], "solvedCount": 1341}, {"contestId": 1284, "index": "D", "name": "New Year and Conference", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "hashing", "sortings"], "solvedCount": 3265}, {"contestId": 1284, "index": "C", "name": "New Year and Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["combinatorics", "math"], "solvedCount": 8473}, {"contestId": 1284, "index": "B", "name": "New Year and Ascent Sequence", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "combinatorics", "data structures", "dp", "implementation", "sortings"], "solvedCount": 11148}, {"contestId": 1284, "index": "A", "name": "New Year and Naming", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 18333}, {"contestId": 1283, "index": "F", "name": "DIY Garland", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy", "trees"], "solvedCount": 1950}, {"contestId": 1283, "index": "E", "name": "New Year Parties", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "greedy"], "solvedCount": 6999}, {"contestId": 1283, "index": "D", "name": "Christmas Trees", "type": "PROGRAMMING", "rating": 1800, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 8571}, {"contestId": 1283, "index": "C", "name": "Friends and Gifts", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "math"], "solvedCount": 13704}, {"contestId": 1283, "index": "B", "name": "Candies Division", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 22451}, {"contestId": 1283, "index": "A", "name": "Minutes Before the New Year", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 57037}, {"contestId": 1282, "index": "E", "name": "The Cake Is a Lie", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs"], "solvedCount": 1191}, {"contestId": 1282, "index": "D", "name": "Enchanted Artifact", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "interactive", "strings"], "solvedCount": 2314}, {"contestId": 1282, "index": "C", "name": "Petya and Exam", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 4439}, {"contestId": 1282, "index": "B2", "name": "K for the Price of One (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "greedy", "sortings"], "solvedCount": 10681}, {"contestId": 1282, "index": "B1", "name": "K for the Price of One (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp", "greedy", "sortings"], "solvedCount": 11830}, {"contestId": 1282, "index": "A", "name": "Temporarily unavailable", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 15155}, {"contestId": 1281, "index": "B", "name": "Azamon Web Services", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 8551}, {"contestId": 1281, "index": "A", "name": "Suffix Three", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 18595}, {"contestId": 1280, "index": "F", "name": "Intergalactic Sliding Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 70}, {"contestId": 1280, "index": "E", "name": "Kirchhoff's Current Loss", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["math"], "solvedCount": 221}, {"contestId": 1280, "index": "D", "name": "Miss Punyverse", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["dp", "greedy", "trees"], "solvedCount": 1127}, {"contestId": 1280, "index": "C", "name": "Jeremy Bearimy", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 2929}, {"contestId": 1280, "index": "B", "name": "Beingawesomeism", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["implementation", "math"], "solvedCount": 4123}, {"contestId": 1280, "index": "A", "name": "Cut and Paste", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 5698}, {"contestId": 1279, "index": "F", "name": "New Year and Handle Change", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "dp"], "solvedCount": 1075}, {"contestId": 1279, "index": "E", "name": "New Year Permutations", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dp"], "solvedCount": 409}, {"contestId": 1279, "index": "D", "name": "Santa's Bot", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "math", "probabilities"], "solvedCount": 6845}, {"contestId": 1279, "index": "C", "name": "Stack of Presents", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 12131}, {"contestId": 1279, "index": "B", "name": "Verse For Santa", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 14039}, {"contestId": 1279, "index": "A", "name": "New Year Garland", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 17336}, {"contestId": 1278, "index": "F", "name": "Cards", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"], "solvedCount": 2172}, {"contestId": 1278, "index": "E", "name": "Tests for problem D", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "trees"], "solvedCount": 1991}, {"contestId": 1278, "index": "D", "name": "Segment Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 4177}, {"contestId": 1278, "index": "C", "name": "Berry Jam", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "greedy", "implementation"], "solvedCount": 8377}, {"contestId": 1278, "index": "B", "name": "A and B", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 13852}, {"contestId": 1278, "index": "A", "name": "Shuffle Hashing", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation", "strings"], "solvedCount": 17747}, {"contestId": 1277, "index": "D", "name": "Let's Play the Words?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "hashing", "implementation", "math"], "solvedCount": 3213}, {"contestId": 1277, "index": "B", "name": "Make Them Odd", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "number theory"], "solvedCount": 16147}, {"contestId": 1277, "index": "A", "name": "Happy Birthday, Polycarp!", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 13879}, {"contestId": 1276, "index": "F", "name": "Asterisk Substrings", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["string suffix structures"], "solvedCount": 385}, {"contestId": 1276, "index": "E", "name": "Four Stones", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 111}, {"contestId": 1276, "index": "D", "name": "Tree Elimination", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "trees"], "solvedCount": 645}, {"contestId": 1276, "index": "C", "name": "Beautiful Rectangle", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 1724}, {"contestId": 1276, "index": "B", "name": "Two Fairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs"], "solvedCount": 5346}, {"contestId": 1276, "index": "A", "name": "As Simple as One and Two", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp", "greedy"], "solvedCount": 12629}, {"contestId": 1275, "index": "F", "name": "\u0428\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0441\u0442\u043e\u0432", "type": "PROGRAMMING", "points": 3000.0, "tags": ["*special", "binary search", "interactive"], "solvedCount": 92}, {"contestId": 1275, "index": "E3", "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430", "type": "PROGRAMMING", "points": 1000.0, "tags": ["*special"], "solvedCount": 57}, {"contestId": 1275, "index": "E2", "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430", "type": "PROGRAMMING", "points": 1000.0, "tags": ["*special"], "solvedCount": 131}, {"contestId": 1275, "index": "E1", "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430", "type": "PROGRAMMING", "points": 1000.0, "tags": ["*special"], "solvedCount": 255}, {"contestId": 1275, "index": "D", "name": "Storage2", "type": "PROGRAMMING", "points": 2000.0, "tags": ["*special"], "solvedCount": 422}, {"contestId": 1275, "index": "C", "name": "#define \u0417\u0430\u0434\u0430\u0447\u0430 B ...", "type": "PROGRAMMING", "points": 1000.0, "tags": ["*special"], "solvedCount": 679}, {"contestId": 1275, "index": "B", "name": "Code Review", "type": "PROGRAMMING", "points": 250.0, "tags": ["*special"], "solvedCount": 825}, {"contestId": 1275, "index": "A", "name": "\u0421\u043a\u0440\u044b\u0442\u044b\u0439 \u0434\u0440\u0443\u0433", "type": "PROGRAMMING", "points": 250.0, "tags": ["*special"], "solvedCount": 889}, {"contestId": 1272, "index": "F", "name": "Two Bracket Sequences", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "strings", "two pointers"], "solvedCount": 2159}, {"contestId": 1272, "index": "E", "name": "Nearest Opposite Parity", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 7099}, {"contestId": 1272, "index": "D", "name": "Remove One Element", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp"], "solvedCount": 18203}, {"contestId": 1272, "index": "C", "name": "Yet Another Broken Keyboard", "type": "PROGRAMMING", "rating": 1200, "tags": ["combinatorics", "dp", "implementation"], "solvedCount": 28979}, {"contestId": 1272, "index": "B", "name": "Snow Walking Robot", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 14421}, {"contestId": 1272, "index": "A", "name": "Three Friends", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "greedy", "math", "sortings"], "solvedCount": 21575}, {"contestId": 1271, "index": "F", "name": "Divide The Students", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force"], "solvedCount": 217}, {"contestId": 1271, "index": "E", "name": "Common Number", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["binary search", "combinatorics", "dp", "math"], "solvedCount": 3589}, {"contestId": 1271, "index": "D", "name": "Portals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 3252}, {"contestId": 1271, "index": "C", "name": "Shawarma Tent", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["brute force", "geometry", "greedy", "implementation"], "solvedCount": 10808}, {"contestId": 1271, "index": "B", "name": "Blocks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "math"], "solvedCount": 11583}, {"contestId": 1271, "index": "A", "name": "Suits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 15415}, {"contestId": 1270, "index": "I", "name": "Xor on Figures", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["constructive algorithms", "fft", "math"], "solvedCount": 277}, {"contestId": 1270, "index": "H", "name": "Number of Components", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 882}, {"contestId": 1270, "index": "G", "name": "Subset with Zero Sum", "type": "PROGRAMMING", "points": 3750.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"], "solvedCount": 2670}, {"contestId": 1270, "index": "F", "name": "Awesome Substrings", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["math", "strings"], "solvedCount": 1245}, {"contestId": 1270, "index": "E", "name": "Divide Points", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["constructive algorithms", "geometry", "math"], "solvedCount": 2599}, {"contestId": 1270, "index": "D", "name": "Strange Device", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "interactive", "math", "sortings"], "solvedCount": 4779}, {"contestId": 1270, "index": "C", "name": "Make Good", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 14651}, {"contestId": 1270, "index": "B", "name": "Interesting Subarray", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 16976}, {"contestId": 1270, "index": "A", "name": "Card Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "greedy", "math"], "solvedCount": 17528}, {"contestId": 1269, "index": "B", "name": "Modulo Equality", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "sortings"], "solvedCount": 9432}, {"contestId": 1269, "index": "A", "name": "Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math"], "solvedCount": 23030}, {"contestId": 1268, "index": "E", "name": "Happy Cactus", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["dp"], "solvedCount": 279}, {"contestId": 1268, "index": "D", "name": "Invertation in Tournament", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["brute force", "divide and conquer", "graphs", "math"], "solvedCount": 599}, {"contestId": 1268, "index": "C", "name": "K Integers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "data structures"], "solvedCount": 1861}, {"contestId": 1268, "index": "B", "name": "Domino for Young", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "greedy", "math"], "solvedCount": 6197}, {"contestId": 1268, "index": "A", "name": "Long Beautiful Integer", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 8862}, {"contestId": 1267, "index": "L", "name": "Lexicography", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "strings"], "solvedCount": 3275}, {"contestId": 1267, "index": "K", "name": "Key Storage", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "math"], "solvedCount": 2089}, {"contestId": 1267, "index": "J", "name": "Just Arrange the Icons", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "implementation", "math"], "solvedCount": 2982}, {"contestId": 1267, "index": "I", "name": "Intriguing Selection", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "constructive algorithms", "implementation", "interactive", "sortings"], "solvedCount": 956}, {"contestId": 1267, "index": "H", "name": "Help BerLine", "type": "PROGRAMMING", "rating": 3200, "tags": ["constructive algorithms"], "solvedCount": 193}, {"contestId": 1267, "index": "G", "name": "Game Relics", "type": "PROGRAMMING", "rating": 3000, "tags": ["math", "probabilities"], "solvedCount": 783}, {"contestId": 1267, "index": "F", "name": "Foolpr\u00fcf Security", "type": "PROGRAMMING", "rating": 2600, "tags": ["graphs"], "solvedCount": 709}, {"contestId": 1267, "index": "E", "name": "Elections", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy"], "solvedCount": 3436}, {"contestId": 1267, "index": "D", "name": "DevOps Best Practices", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms"], "solvedCount": 247}, {"contestId": 1267, "index": "C", "name": "Cactus Revenge", "type": "PROGRAMMING", "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 387}, {"contestId": 1267, "index": "B", "name": "Balls of Buma", "type": "PROGRAMMING", "rating": 900, "tags": [], "solvedCount": 4401}, {"contestId": 1267, "index": "A", "name": "Apprentice Learning Trajectory", "type": "PROGRAMMING", "rating": 2400, "tags": [], "solvedCount": 1045}, {"contestId": 1266, "index": "H", "name": "Red-Blue Graph", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["dp", "graphs", "math", "matrices", "meet-in-the-middle"], "solvedCount": 129}, {"contestId": 1266, "index": "G", "name": "Permutation Concatenation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["string suffix structures"], "solvedCount": 138}, {"contestId": 1266, "index": "F", "name": "Almost Same Distance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dfs and similar", "graphs"], "solvedCount": 365}, {"contestId": 1266, "index": "E", "name": "Spaceship Solitaire", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 2293}, {"contestId": 1266, "index": "D", "name": "Decreasing Debts", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "math", "two pointers"], "solvedCount": 3722}, {"contestId": 1266, "index": "C", "name": "Diverse Matrix", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 9913}, {"contestId": 1266, "index": "B", "name": "Dice Tower", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 16053}, {"contestId": 1266, "index": "A", "name": "Competitive Programmer", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["chinese remainder theorem", "math"], "solvedCount": 16862}, {"contestId": 1265, "index": "E", "name": "Beautiful Mirrors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dp", "math", "probabilities"], "solvedCount": 4137}, {"contestId": 1265, "index": "B", "name": "Beautiful Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation", "math", "two pointers"], "solvedCount": 13203}, {"contestId": 1265, "index": "A", "name": "Beautiful String", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 15647}, {"contestId": 1264, "index": "F", "name": "Beautiful Fibonacci Problem", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "number theory"], "solvedCount": 1026}, {"contestId": 1264, "index": "E", "name": "Beautiful League", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms", "flows", "graph matchings"], "solvedCount": 884}, {"contestId": 1264, "index": "D2", "name": "Beautiful Bracket Sequence (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2900, "tags": ["combinatorics", "probabilities"], "solvedCount": 1174}, {"contestId": 1264, "index": "D1", "name": "Beautiful Bracket Sequence (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["combinatorics", "dp", "probabilities"], "solvedCount": 1411}, {"contestId": 1264, "index": "C", "name": "Beautiful Mirrors with queries", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "probabilities"], "solvedCount": 1259}, {"contestId": 1264, "index": "B", "name": "Beautiful Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 5956}, {"contestId": 1264, "index": "A", "name": "Beautiful Regional Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy", "implementation"], "solvedCount": 10328}, {"contestId": 1263, "index": "F", "name": "Economic Difficulties", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dp", "flows", "graphs", "trees"], "solvedCount": 923}, {"contestId": 1263, "index": "E", "name": "Editor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "implementation"], "solvedCount": 2894}, {"contestId": 1263, "index": "D", "name": "Secret Passwords", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 15264}, {"contestId": 1263, "index": "C", "name": "Everyone is a Winner!", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "math", "meet-in-the-middle", "number theory"], "solvedCount": 14255}, {"contestId": 1263, "index": "B", "name": "PIN Codes", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 11661}, {"contestId": 1263, "index": "A", "name": "Sweet Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["math"], "solvedCount": 16855}, {"contestId": 1261, "index": "F", "name": "Xor-Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["bitmasks", "divide and conquer", "math"], "solvedCount": 422}, {"contestId": 1260, "index": "F", "name": "Colored Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "trees"], "solvedCount": 598}, {"contestId": 1260, "index": "E", "name": "Tournament", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "dp", "greedy"], "solvedCount": 1829}, {"contestId": 1260, "index": "D", "name": "A Game with Traps", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp", "greedy", "sortings"], "solvedCount": 4063}, {"contestId": 1260, "index": "C", "name": "Infinite Fence", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy", "math", "number theory"], "solvedCount": 8603}, {"contestId": 1260, "index": "B", "name": "Obtain Two Zeroes", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "math"], "solvedCount": 16365}, {"contestId": 1260, "index": "A", "name": "Heating", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"], "solvedCount": 15425}, {"contestId": 1257, "index": "G", "name": "Divisor Set", "type": "PROGRAMMING", "rating": 2600, "tags": ["divide and conquer", "fft", "greedy", "math", "number theory"], "solvedCount": 673}, {"contestId": 1257, "index": "F", "name": "Make Them Similar", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "brute force", "hashing", "meet-in-the-middle"], "solvedCount": 2218}, {"contestId": 1257, "index": "E", "name": "The Contest", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy"], "solvedCount": 4408}, {"contestId": 1257, "index": "D", "name": "Yet Another Monster Killing Problem", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 7943}, {"contestId": 1257, "index": "C", "name": "Dominated Subarray", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "sortings", "strings", "two pointers"], "solvedCount": 16507}, {"contestId": 1257, "index": "B", "name": "Magic Stick", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"], "solvedCount": 21917}, {"contestId": 1257, "index": "A", "name": "Two Rival Students", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "math"], "solvedCount": 21216}, {"contestId": 1256, "index": "F", "name": "Equalizing Two Strings", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "sortings", "strings"], "solvedCount": 3495}, {"contestId": 1256, "index": "E", "name": "Yet Another Division Into Teams", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "sortings"], "solvedCount": 4430}, {"contestId": 1256, "index": "D", "name": "Binary String Minimizing", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"], "solvedCount": 12486}, {"contestId": 1256, "index": "C", "name": "Platforms Jumping", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy"], "solvedCount": 7149}, {"contestId": 1256, "index": "B", "name": "Minimize the Permutation", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy"], "solvedCount": 13459}, {"contestId": 1256, "index": "A", "name": "Payment Without Change", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"], "solvedCount": 31414}, {"contestId": 1255, "index": "C", "name": "League of Leesins", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7069}, {"contestId": 1255, "index": "B", "name": "Fridge Lockers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["graphs", "implementation"], "solvedCount": 12324}, {"contestId": 1255, "index": "A", "name": "Changing Volume", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 17688}, {"contestId": 1254, "index": "E", "name": "Send Tree to Charlie", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["combinatorics", "dfs and similar", "dsu", "trees"], "solvedCount": 300}, {"contestId": 1254, "index": "D", "name": "Tree Queries", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "probabilities", "trees"], "solvedCount": 1397}, {"contestId": 1254, "index": "C", "name": "Point Ordering", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "geometry", "interactive", "math"], "solvedCount": 1545}, {"contestId": 1254, "index": "B2", "name": "Send Boxes to Alice (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "solvedCount": 3323}, {"contestId": 1254, "index": "B1", "name": "Send Boxes to Alice (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "solvedCount": 4857}, {"contestId": 1254, "index": "A", "name": "Feeding Chicken", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 5425}, {"contestId": 1253, "index": "F", "name": "Cheap Robot", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["binary search", "dsu", "graphs", "shortest paths", "trees"], "solvedCount": 2094}, {"contestId": 1253, "index": "E", "name": "Antenna Coverage", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "sortings"], "solvedCount": 2975}, {"contestId": 1253, "index": "D", "name": "Harmonious Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "solvedCount": 9847}, {"contestId": 1253, "index": "C", "name": "Sweets Eating", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "math", "sortings"], "solvedCount": 14911}, {"contestId": 1253, "index": "B", "name": "Silly Mistake", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 11504}, {"contestId": 1253, "index": "A", "name": "Single Push", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 18760}, {"contestId": 1252, "index": "L", "name": "Road Construction", "type": "PROGRAMMING", "rating": 2300, "tags": ["flows", "graphs"], "solvedCount": 615}, {"contestId": 1252, "index": "K", "name": "Addition Robot", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "math", "matrices"], "solvedCount": 1952}, {"contestId": 1252, "index": "J", "name": "Tiling Terrace", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dp"], "solvedCount": 754}, {"contestId": 1252, "index": "I", "name": "Mission Possible", "type": "PROGRAMMING", "rating": 3000, "tags": [], "solvedCount": 32}, {"contestId": 1252, "index": "H", "name": "Twin Buildings", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "implementation"], "solvedCount": 2765}, {"contestId": 1252, "index": "G", "name": "Performance Review", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"], "solvedCount": 1481}, {"contestId": 1252, "index": "F", "name": "Regular Forestation", "type": "PROGRAMMING", "rating": 2400, "tags": ["hashing", "trees"], "solvedCount": 1016}, {"contestId": 1252, "index": "E", "name": "Songwriter", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "two pointers"], "solvedCount": 1288}, {"contestId": 1252, "index": "D", "name": "Find String in a Grid", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "dp", "strings", "trees"], "solvedCount": 383}, {"contestId": 1252, "index": "C", "name": "Even Path", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "implementation"], "solvedCount": 3862}, {"contestId": 1252, "index": "B", "name": "Cleaning Robots", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "trees"], "solvedCount": 560}, {"contestId": 1252, "index": "A", "name": "Copying Homework", "type": "PROGRAMMING", "rating": 1000, "tags": [], "solvedCount": 5822}, {"contestId": 1251, "index": "F", "name": "Red-White Fence", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "fft"], "solvedCount": 928}, {"contestId": 1251, "index": "E2", "name": "Voting (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 2819}, {"contestId": 1251, "index": "E1", "name": "Voting (Easy Version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2478}, {"contestId": 1251, "index": "D", "name": "Salary Changing", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 6289}, {"contestId": 1251, "index": "C", "name": "Minimize The Integer", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "two pointers"], "solvedCount": 13535}, {"contestId": 1251, "index": "B", "name": "Binary Palindromes", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "strings"], "solvedCount": 11266}, {"contestId": 1251, "index": "A", "name": "Broken Keyboard", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "strings", "two pointers"], "solvedCount": 20560}, {"contestId": 1250, "index": "N", "name": "Wires", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy"], "solvedCount": 1679}, {"contestId": 1250, "index": "M", "name": "SmartGarden", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 380}, {"contestId": 1250, "index": "L", "name": "Divide The Students", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy", "math"], "solvedCount": 4327}, {"contestId": 1250, "index": "K", "name": "Projectors", "type": "PROGRAMMING", "rating": 3100, "tags": ["flows", "graphs"], "solvedCount": 253}, {"contestId": 1250, "index": "J", "name": "The Parade", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "greedy"], "solvedCount": 3154}, {"contestId": 1250, "index": "I", "name": "Show Must Go On", "type": "PROGRAMMING", "rating": 3100, "tags": ["binary search", "brute force", "greedy", "shortest paths"], "solvedCount": 158}, {"contestId": 1250, "index": "H", "name": "Happy Birthday", "type": "PROGRAMMING", "rating": 1500, "tags": ["math"], "solvedCount": 4170}, {"contestId": 1250, "index": "G", "name": "Discarding Game", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy", "two pointers"], "solvedCount": 755}, {"contestId": 1250, "index": "F", "name": "Data Center", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 7853}, {"contestId": 1250, "index": "E", "name": "The Coronation", "type": "PROGRAMMING", "rating": 2300, "tags": ["graphs", "implementation"], "solvedCount": 857}, {"contestId": 1250, "index": "D", "name": "Conference Problem", "type": "PROGRAMMING", "rating": 3000, "tags": ["dp"], "solvedCount": 199}, {"contestId": 1250, "index": "C", "name": "Trip to Saint Petersburg", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"], "solvedCount": 1382}, {"contestId": 1250, "index": "B", "name": "The Feast and the Bus", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 2718}, {"contestId": 1250, "index": "A", "name": "Berstagram", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"], "solvedCount": 4288}, {"contestId": 1249, "index": "F", "name": "Maximum Weight Subset", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "trees"], "solvedCount": 2565}, {"contestId": 1249, "index": "E", "name": "By Elevator or Stairs?", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "shortest paths"], "solvedCount": 10375}, {"contestId": 1249, "index": "D2", "name": "Too Many Segments (hard version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 5580}, {"contestId": 1249, "index": "D1", "name": "Too Many Segments (easy version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy"], "solvedCount": 5341}, {"contestId": 1249, "index": "C2", "name": "Good Numbers (hard version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy", "math", "meet-in-the-middle"], "solvedCount": 13190}, {"contestId": 1249, "index": "C1", "name": "Good Numbers (easy version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 16160}, {"contestId": 1249, "index": "B2", "name": "Books Exchange (hard version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "dsu", "math"], "solvedCount": 17632}, {"contestId": 1249, "index": "B1", "name": "Books Exchange (easy version)", "type": "PROGRAMMING", "rating": 1000, "tags": ["dsu", "math"], "solvedCount": 21752}, {"contestId": 1249, "index": "A", "name": "Yet Another Dividing into Teams", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 23159}, {"contestId": 1248, "index": "D1", "name": "The World Is Just a Programming Task (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 2457}, {"contestId": 1248, "index": "B", "name": "Grow The Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "math", "sortings"], "solvedCount": 17471}, {"contestId": 1248, "index": "A", "name": "Integer Points", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["geometry", "math"], "solvedCount": 14607}, {"contestId": 1246, "index": "F", "name": "Cursor Distance", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": [], "solvedCount": 201}, {"contestId": 1245, "index": "F", "name": "Daniel and Spring Cleaning", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "dp"], "solvedCount": 2105}, {"contestId": 1245, "index": "E", "name": "Hyakugoku and Ladders", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "probabilities", "shortest paths"], "solvedCount": 1318}, {"contestId": 1245, "index": "D", "name": "Shichikuji and Power Grid", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["dsu", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 8642}, {"contestId": 1245, "index": "C", "name": "Constanze's Machine", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp"], "solvedCount": 18922}, {"contestId": 1245, "index": "B", "name": "Restricted RPS", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 14208}, {"contestId": 1245, "index": "A", "name": "Good ol' Numbers Coloring", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["math", "number theory"], "solvedCount": 14587}, {"contestId": 1244, "index": "G", "name": "Running in Pairs", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1434}, {"contestId": 1244, "index": "F", "name": "Chips", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1592}, {"contestId": 1244, "index": "E", "name": "Minimizing Difference", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "ternary search", "two pointers"], "solvedCount": 5801}, {"contestId": 1244, "index": "D", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "trees"], "solvedCount": 8018}, {"contestId": 1244, "index": "C", "name": "The Football Season", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "math", "number theory"], "solvedCount": 7998}, {"contestId": 1244, "index": "B", "name": "Rooms and Staircases", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 16834}, {"contestId": 1244, "index": "A", "name": "Pens and Pencils", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 19809}, {"contestId": 1243, "index": "B2", "name": "Character Swap (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["strings"], "solvedCount": 7221}, {"contestId": 1243, "index": "B1", "name": "Character Swap (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["strings"], "solvedCount": 15127}, {"contestId": 1243, "index": "A", "name": "Maximum Square", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 16176}, {"contestId": 1242, "index": "E", "name": "Planar Perimeter", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "graphs"], "solvedCount": 146}, {"contestId": 1242, "index": "D", "name": "Number Discovery", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["math"], "solvedCount": 217}, {"contestId": 1242, "index": "C", "name": "Sum Balance", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dfs and similar", "dp", "graphs"], "solvedCount": 1847}, {"contestId": 1242, "index": "B", "name": "0-1 MST", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dsu", "graphs", "sortings"], "solvedCount": 8477}, {"contestId": 1242, "index": "A", "name": "Tile Painting", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 12992}, {"contestId": 1240, "index": "F", "name": "Football", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["graphs"], "solvedCount": 308}, {"contestId": 1239, "index": "F", "name": "Swiper, no swiping!", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["graphs", "implementation"], "solvedCount": 302}, {"contestId": 1239, "index": "E", "name": "Turtle", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "implementation"], "solvedCount": 1089}, {"contestId": 1239, "index": "D", "name": "Catowice City", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["2-sat", "dfs and similar", "graph matchings", "graphs"], "solvedCount": 2410}, {"contestId": 1239, "index": "C", "name": "Queue in the Train", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 1615}, {"contestId": 1239, "index": "B", "name": "The World Is Just a Programming Task (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["implementation"], "solvedCount": 1089}, {"contestId": 1239, "index": "A", "name": "Ivan the Fool and the Probability Theory", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"], "solvedCount": 7618}, {"contestId": 1238, "index": "G", "name": "Adilbek and the Watering System", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 435}, {"contestId": 1238, "index": "F", "name": "The Maximum Subtree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 1990}, {"contestId": 1238, "index": "E", "name": "Keyboard Purchase", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 3312}, {"contestId": 1238, "index": "D", "name": "AB-string", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "combinatorics", "dp", "strings"], "solvedCount": 6237}, {"contestId": 1238, "index": "C", "name": "Standard Free2play", "type": "PROGRAMMING", "rating": 1600, "tags": ["dp", "greedy", "math"], "solvedCount": 7678}, {"contestId": 1238, "index": "B", "name": "Kill `Em All", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "sortings"], "solvedCount": 14237}, {"contestId": 1238, "index": "A", "name": "Prime Subtraction", "type": "PROGRAMMING", "rating": 900, "tags": ["math", "number theory"], "solvedCount": 26357}, {"contestId": 1237, "index": "H", "name": "Balanced Reversals", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["constructive algorithms"], "solvedCount": 406}, {"contestId": 1237, "index": "G", "name": "Balanced Distribution", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "dp", "greedy"], "solvedCount": 157}, {"contestId": 1237, "index": "F", "name": "Balanced Domino Placements", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp"], "solvedCount": 1046}, {"contestId": 1237, "index": "E", "name": "Balanced Binary Search Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp", "math"], "solvedCount": 1436}, {"contestId": 1237, "index": "D", "name": "Balanced Playlist", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 4572}, {"contestId": 1237, "index": "C2", "name": "Balanced Removals (Harder)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "divide and conquer", "greedy", "implementation", "sortings"], "solvedCount": 4476}, {"contestId": 1237, "index": "C1", "name": "Balanced Removals (Easier)", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "geometry", "greedy"], "solvedCount": 6234}, {"contestId": 1237, "index": "B", "name": "Balanced Tunnel", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["data structures", "sortings", "two pointers"], "solvedCount": 19188}, {"contestId": 1237, "index": "A", "name": "Balanced Rating Changes", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 21329}, {"contestId": 1236, "index": "F", "name": "Alice and the Cactus", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "graphs", "math", "probabilities"], "solvedCount": 190}, {"contestId": 1236, "index": "E", "name": "Alice and the Unfair Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "data structures", "dp", "dsu"], "solvedCount": 716}, {"contestId": 1236, "index": "D", "name": "Alice and the Doll", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 1712}, {"contestId": 1236, "index": "C", "name": "Labs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 10402}, {"contestId": 1236, "index": "B", "name": "Alice and the List of Presents", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "math"], "solvedCount": 11668}, {"contestId": 1236, "index": "A", "name": "Stones", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "math"], "solvedCount": 16978}, {"contestId": 1234, "index": "F", "name": "Yet Another Substring Reverse", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 2870}, {"contestId": 1234, "index": "E", "name": "Special Permutations", "type": "PROGRAMMING", "rating": 2000, "tags": ["math"], "solvedCount": 2882}, {"contestId": 1234, "index": "D", "name": "Distinct Characters Queries", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures"], "solvedCount": 16926}, {"contestId": 1234, "index": "C", "name": "Pipes", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"], "solvedCount": 13126}, {"contestId": 1234, "index": "B2", "name": "Social Network (hard version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "implementation"], "solvedCount": 17857}, {"contestId": 1234, "index": "B1", "name": "Social Network (easy version)", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 19368}, {"contestId": 1234, "index": "A", "name": "Equalize Prices Again", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 28840}, {"contestId": 1231, "index": "E", "name": "Middle-Out", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 876}, {"contestId": 1231, "index": "C", "name": "Increasing Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 4130}, {"contestId": 1230, "index": "B", "name": "Ania and Minimizing", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["greedy", "implementation"], "solvedCount": 19258}, {"contestId": 1230, "index": "A", "name": "Dawid and Bags of Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 22342}, {"contestId": 1228, "index": "F", "name": "One Node is Gone", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 471}, {"contestId": 1228, "index": "E", "name": "Another Filling the Grid", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dp", "math"], "solvedCount": 3122}, {"contestId": 1228, "index": "D", "name": "Complete Tripartite", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "graphs", "hashing", "implementation"], "solvedCount": 5348}, {"contestId": 1228, "index": "C", "name": "Primes and Multiplication", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["math", "number theory"], "solvedCount": 9391}, {"contestId": 1228, "index": "B", "name": "Filling the Grid", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 11774}, {"contestId": 1228, "index": "A", "name": "Distinct Digits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 22603}, {"contestId": 1227, "index": "G", "name": "Not Same", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 1144}, {"contestId": 1227, "index": "F2", "name": "Wrong Answer on test 233 (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "math"], "solvedCount": 1755}, {"contestId": 1227, "index": "F1", "name": "Wrong Answer on test 233 (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dp"], "solvedCount": 1934}, {"contestId": 1227, "index": "E", "name": "Arson In Berland Forest", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "graphs", "graphs", "shortest paths"], "solvedCount": 1561}, {"contestId": 1227, "index": "D2", "name": "Optimal Subsequences (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 4553}, {"contestId": 1227, "index": "D1", "name": "Optimal Subsequences (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 6648}, {"contestId": 1227, "index": "C", "name": "Messy", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["constructive algorithms"], "solvedCount": 5700}, {"contestId": 1227, "index": "B", "name": "Box", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 10097}, {"contestId": 1227, "index": "A", "name": "Math Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["math"], "solvedCount": 10087}, {"contestId": 1225, "index": "G", "name": "To Make 1", "type": "PROGRAMMING", "points": 3750.0, "rating": 3100, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "number theory"], "solvedCount": 623}, {"contestId": 1225, "index": "F", "name": "Tree Factory", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["constructive algorithms", "greedy", "trees"], "solvedCount": 957}, {"contestId": 1225, "index": "E", "name": "Rock Is Push", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["binary search", "dp"], "solvedCount": 1991}, {"contestId": 1225, "index": "D", "name": "Power Products", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["hashing", "math", "number theory"], "solvedCount": 9120}, {"contestId": 1225, "index": "C", "name": "p-binary", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["bitmasks", "brute force", "math"], "solvedCount": 9383}, {"contestId": 1225, "index": "B2", "name": "TV Subscriptions (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation", "two pointers"], "solvedCount": 11686}, {"contestId": 1225, "index": "B1", "name": "TV Subscriptions (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 12289}, {"contestId": 1225, "index": "A", "name": "Forgetting Things", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"], "solvedCount": 16285}, {"contestId": 1223, "index": "G", "name": "Wooden Raft", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["binary search", "math", "number theory"], "solvedCount": 260}, {"contestId": 1223, "index": "F", "name": "Stack Exterminable Arrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "hashing"], "solvedCount": 2155}, {"contestId": 1223, "index": "E", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dp", "sortings", "trees"], "solvedCount": 2771}, {"contestId": 1223, "index": "D", "name": "Sequence Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "greedy", "two pointers"], "solvedCount": 4242}, {"contestId": 1223, "index": "C", "name": "Save the Nature", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "greedy"], "solvedCount": 9197}, {"contestId": 1223, "index": "B", "name": "Strings Equalization", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["strings"], "solvedCount": 15314}, {"contestId": 1223, "index": "A", "name": "CME", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 22022}, {"contestId": 1221, "index": "G", "name": "Graph And Numbers", "type": "PROGRAMMING", "rating": 2900, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "meet-in-the-middle"], "solvedCount": 802}, {"contestId": 1221, "index": "F", "name": "Choose a Square", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 1170}, {"contestId": 1221, "index": "E", "name": "Game With String", "type": "PROGRAMMING", "rating": 2500, "tags": ["games"], "solvedCount": 1134}, {"contestId": 1221, "index": "D", "name": "Make The Fence Great Again", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"], "solvedCount": 9773}, {"contestId": 1221, "index": "C", "name": "Perfect Team", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "math"], "solvedCount": 23257}, {"contestId": 1221, "index": "B", "name": "Knights", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 12357}, {"contestId": 1221, "index": "A", "name": "2048 Game", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "greedy", "math"], "solvedCount": 17545}, {"contestId": 1220, "index": "G", "name": "Geolocation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["geometry"], "solvedCount": 69}, {"contestId": 1220, "index": "F", "name": "Gardener Alex", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["binary search", "data structures"], "solvedCount": 809}, {"contestId": 1220, "index": "E", "name": "Tourism", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "solvedCount": 2892}, {"contestId": 1220, "index": "D", "name": "Alex and Julian", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["bitmasks", "math", "number theory"], "solvedCount": 4030}, {"contestId": 1220, "index": "C", "name": "Substring Game in the Lesson", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["games", "greedy", "strings"], "solvedCount": 10565}, {"contestId": 1220, "index": "B", "name": "Multiplication Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math", "number theory"], "solvedCount": 11935}, {"contestId": 1220, "index": "A", "name": "Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings", "strings"], "solvedCount": 31548}, {"contestId": 1219, "index": "G", "name": "Harvester", "type": "PROGRAMMING", "rating": 2000, "tags": ["implementation"], "solvedCount": 757}, {"contestId": 1219, "index": "C", "name": "Periodic integer number", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation", "strings"], "solvedCount": 1995}, {"contestId": 1218, "index": "I", "name": "The Light Square", "type": "PROGRAMMING", "rating": 2100, "tags": ["2-sat", "dfs and similar", "greedy"], "solvedCount": 656}, {"contestId": 1218, "index": "H", "name": "Function Composition", "type": "PROGRAMMING", "rating": 2900, "tags": ["dfs and similar"], "solvedCount": 137}, {"contestId": 1218, "index": "G", "name": "Alpha planetary system", "type": "PROGRAMMING", "rating": 3000, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 147}, {"contestId": 1218, "index": "F", "name": "Workout plan", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "greedy"], "solvedCount": 3060}, {"contestId": 1218, "index": "E", "name": "Product Tuples", "type": "PROGRAMMING", "rating": 2500, "tags": ["divide and conquer", "fft"], "solvedCount": 423}, {"contestId": 1218, "index": "D", "name": "Xor Spanning Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "fft", "graphs"], "solvedCount": 553}, {"contestId": 1218, "index": "C", "name": "Jumping Transformers", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp"], "solvedCount": 201}, {"contestId": 1218, "index": "B", "name": "Guarding warehouses", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "geometry"], "solvedCount": 83}, {"contestId": 1218, "index": "A", "name": "BubbleReactor", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "graphs"], "solvedCount": 167}, {"contestId": 1217, "index": "F", "name": "Forced Online Queries Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu", "graphs", "trees"], "solvedCount": 664}, {"contestId": 1217, "index": "E", "name": "Sum Queries?", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy", "implementation", "math"], "solvedCount": 2014}, {"contestId": 1217, "index": "D", "name": "Coloring Edges", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 5692}, {"contestId": 1217, "index": "C", "name": "The Number Of Good Substrings", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "bitmasks", "brute force"], "solvedCount": 7693}, {"contestId": 1217, "index": "B", "name": "Zmei Gorynich", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "math"], "solvedCount": 11664}, {"contestId": 1217, "index": "A", "name": "Creating a Character", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "math"], "solvedCount": 15394}, {"contestId": 1216, "index": "F", "name": "Wi-Fi", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2896}, {"contestId": 1216, "index": "E2", "name": "Numerical Sequence (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "math"], "solvedCount": 1569}, {"contestId": 1216, "index": "E1", "name": "Numerical Sequence (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "math"], "solvedCount": 3599}, {"contestId": 1216, "index": "D", "name": "Swords", "type": "PROGRAMMING", "rating": 1300, "tags": ["math"], "solvedCount": 11691}, {"contestId": 1216, "index": "C", "name": "White Sheet", "type": "PROGRAMMING", "rating": 1700, "tags": ["geometry", "math"], "solvedCount": 9908}, {"contestId": 1216, "index": "B", "name": "Shooting", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 19165}, {"contestId": 1216, "index": "A", "name": "Prefixes", "type": "PROGRAMMING", "rating": 800, "tags": ["strings"], "solvedCount": 19208}, {"contestId": 1215, "index": "F", "name": "Radio Stations", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["2-sat"], "solvedCount": 1097}, {"contestId": 1215, "index": "E", "name": "Marbles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 3256}, {"contestId": 1215, "index": "D", "name": "Ticket Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["games", "greedy", "math"], "solvedCount": 6400}, {"contestId": 1215, "index": "C", "name": "Swap Letters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 11613}, {"contestId": 1215, "index": "B", "name": "The Number of Products", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["combinatorics", "dp", "implementation"], "solvedCount": 15497}, {"contestId": 1215, "index": "A", "name": "Yellow Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation", "math"], "solvedCount": 11784}, {"contestId": 1214, "index": "H", "name": "Tiles Placement", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 432}, {"contestId": 1214, "index": "G", "name": "Feeling Good", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["bitmasks", "data structures"], "solvedCount": 321}, {"contestId": 1214, "index": "F", "name": "Employment", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["greedy", "sortings"], "solvedCount": 480}, {"contestId": 1214, "index": "E", "name": "Petya and Construction Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "math", "sortings", "trees"], "solvedCount": 2789}, {"contestId": 1214, "index": "D", "name": "Treasure Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "flows", "hashing"], "solvedCount": 6032}, {"contestId": 1214, "index": "C", "name": "Bad Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["data structures", "greedy"], "solvedCount": 13787}, {"contestId": 1214, "index": "B", "name": "Badges", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "math"], "solvedCount": 11180}, {"contestId": 1214, "index": "A", "name": "Optimal Currency Exchange", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "math"], "solvedCount": 9302}, {"contestId": 1213, "index": "G", "name": "Path Queries", "type": "PROGRAMMING", "rating": 1800, "tags": ["divide and conquer", "dsu", "graphs", "sortings", "trees"], "solvedCount": 8403}, {"contestId": 1213, "index": "F", "name": "Unstable String Sort", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"], "solvedCount": 2840}, {"contestId": 1213, "index": "E", "name": "Two Small Strings", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "constructive algorithms"], "solvedCount": 5362}, {"contestId": 1213, "index": "D2", "name": "Equalizing by Division (hard version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "math", "sortings"], "solvedCount": 11894}, {"contestId": 1213, "index": "D1", "name": "Equalizing by Division (easy version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 11815}, {"contestId": 1213, "index": "C", "name": "Book Reading", "type": "PROGRAMMING", "rating": 1200, "tags": ["math"], "solvedCount": 19120}, {"contestId": 1213, "index": "B", "name": "Bad Prices", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "implementation"], "solvedCount": 29011}, {"contestId": 1213, "index": "A", "name": "Chips Moving", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 25027}, {"contestId": 1211, "index": "I", "name": "Unusual Graph", "type": "PROGRAMMING", "rating": 3000, "tags": ["*special", "graphs"], "solvedCount": 47}, {"contestId": 1211, "index": "H", "name": "Road Repair in Treeland", "type": "PROGRAMMING", "rating": 3100, "tags": ["*special", "binary search", "dp", "trees"], "solvedCount": 51}, {"contestId": 1211, "index": "G", "name": "King's Path", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "math", "trees"], "solvedCount": 79}, {"contestId": 1211, "index": "F", "name": "kotlinkotlinkotlinkotlin...", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "graphs", "implementation", "strings"], "solvedCount": 134}, {"contestId": 1211, "index": "E", "name": "Double Permutation Inc.", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "binary search", "greedy"], "solvedCount": 205}, {"contestId": 1211, "index": "D", "name": "Teams", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "binary search", "greedy", "math"], "solvedCount": 241}, {"contestId": 1211, "index": "C", "name": "Ice Cream", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "greedy", "sortings"], "solvedCount": 545}, {"contestId": 1211, "index": "B", "name": "Traveling Around the Golden Ring of Berland", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "implementation"], "solvedCount": 782}, {"contestId": 1211, "index": "A", "name": "Three Problems", "type": "PROGRAMMING", "rating": 1000, "tags": ["*special", "implementation"], "solvedCount": 1526}, {"contestId": 1210, "index": "G", "name": "Mateusz and Escape Room", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp"], "solvedCount": 252}, {"contestId": 1210, "index": "F2", "name": "Marek and Matching (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 3200, "tags": ["brute force", "probabilities"], "solvedCount": 281}, {"contestId": 1210, "index": "F1", "name": "Marek and Matching (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3100, "tags": ["brute force", "probabilities"], "solvedCount": 254}, {"contestId": 1210, "index": "E", "name": "Wojtek and Card Tricks", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["math"], "solvedCount": 422}, {"contestId": 1210, "index": "D", "name": "Konrad and Company Evaluation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["graphs"], "solvedCount": 1553}, {"contestId": 1210, "index": "C", "name": "Kamil and Making a Stream", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["math", "number theory", "trees"], "solvedCount": 3468}, {"contestId": 1210, "index": "B", "name": "Marcin and Training Camp", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "greedy"], "solvedCount": 5915}, {"contestId": 1210, "index": "A", "name": "Anadi and Domino", "type": "PROGRAMMING", "points": 250.0, "rating": 1700, "tags": ["brute force", "graphs"], "solvedCount": 5392}, {"contestId": 1209, "index": "H", "name": "Moving Walkways", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["data structures", "greedy", "math"], "solvedCount": 163}, {"contestId": 1209, "index": "G2", "name": "Into Blocks (hard version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures"], "solvedCount": 492}, {"contestId": 1209, "index": "G1", "name": "Into Blocks (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dsu", "greedy", "implementation", "two pointers"], "solvedCount": 3627}, {"contestId": 1209, "index": "F", "name": "Koala and Notebook", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths", "strings", "trees"], "solvedCount": 1328}, {"contestId": 1209, "index": "E2", "name": "Rotate Columns (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "dp", "greedy", "sortings"], "solvedCount": 2159}, {"contestId": 1209, "index": "E1", "name": "Rotate Columns (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp", "greedy", "sortings"], "solvedCount": 3093}, {"contestId": 1209, "index": "D", "name": "Cow and Snacks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 10169}, {"contestId": 1209, "index": "C", "name": "Paint the Digits", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 7731}, {"contestId": 1209, "index": "B", "name": "Koala and Lights", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "math", "number theory"], "solvedCount": 8366}, {"contestId": 1209, "index": "A", "name": "Paint the Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math"], "solvedCount": 12523}, {"contestId": 1208, "index": "H", "name": "Red Blue Tree", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "implementation", "trees"], "solvedCount": 177}, {"contestId": 1208, "index": "G", "name": "Polygons", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["greedy", "math", "number theory"], "solvedCount": 859}, {"contestId": 1208, "index": "F", "name": "Bits And Pieces", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "dfs and similar", "dp", "greedy"], "solvedCount": 2924}, {"contestId": 1208, "index": "E", "name": "Let Them Slide", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "implementation"], "solvedCount": 2108}, {"contestId": 1208, "index": "D", "name": "Restore Permutation", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "greedy", "implementation"], "solvedCount": 5268}, {"contestId": 1208, "index": "C", "name": "Magic Grid", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 6229}, {"contestId": 1208, "index": "B", "name": "Uniqueness", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "brute force", "implementation", "two pointers"], "solvedCount": 10935}, {"contestId": 1208, "index": "A", "name": "XORinacci", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"], "solvedCount": 17354}, {"contestId": 1207, "index": "G", "name": "Indie Album", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "solvedCount": 1149}, {"contestId": 1207, "index": "F", "name": "Remainder Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 6164}, {"contestId": 1207, "index": "E", "name": "XOR Guessing", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "interactive", "math"], "solvedCount": 6380}, {"contestId": 1207, "index": "D", "name": "Number Of Permutations", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics"], "solvedCount": 6508}, {"contestId": 1207, "index": "C", "name": "Gas Pipeline", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "greedy"], "solvedCount": 10148}, {"contestId": 1207, "index": "B", "name": "Square Filling", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 13533}, {"contestId": 1207, "index": "A", "name": "There Are Two Types Of Burgers", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 22702}, {"contestId": 1206, "index": "B", "name": "Make Product Equal One", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["dp", "implementation"], "solvedCount": 28370}, {"contestId": 1206, "index": "A", "name": "Choose Two Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "sortings"], "solvedCount": 25538}, {"contestId": 1205, "index": "F", "name": "Beauty of a Permutation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["constructive algorithms", "math"], "solvedCount": 135}, {"contestId": 1205, "index": "E", "name": "Expected Value Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["combinatorics", "strings"], "solvedCount": 340}, {"contestId": 1205, "index": "D", "name": "Almost All", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "trees"], "solvedCount": 720}, {"contestId": 1205, "index": "C", "name": "Palindromic Paths", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["implementation", "interactive"], "solvedCount": 1228}, {"contestId": 1205, "index": "B", "name": "Shortest Cycle", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "graphs", "shortest paths"], "solvedCount": 7060}, {"contestId": 1205, "index": "A", "name": "Almost Equal", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 14500}, {"contestId": 1204, "index": "E", "name": "Natasha, Sasha and the Prefix Sums", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 1856}, {"contestId": 1204, "index": "D2", "name": "Kirk and a Binary String (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["data structures", "greedy", "math", "strings"], "solvedCount": 3331}, {"contestId": 1204, "index": "D1", "name": "Kirk and a Binary String (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "greedy", "strings"], "solvedCount": 3142}, {"contestId": 1204, "index": "C", "name": "Anna, Svyatoslav and Maps", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["dp", "graphs", "greedy", "shortest paths"], "solvedCount": 7009}, {"contestId": 1204, "index": "B", "name": "Mislove Has Lost an Array", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["greedy", "math"], "solvedCount": 17891}, {"contestId": 1204, "index": "A", "name": "BowWow and the Timetable", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"], "solvedCount": 21807}, {"contestId": 1203, "index": "F2", "name": "Complete the Projects (hard version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy"], "solvedCount": 3113}, {"contestId": 1203, "index": "F1", "name": "Complete the Projects (easy version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy"], "solvedCount": 3813}, {"contestId": 1203, "index": "E", "name": "Boxers", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "sortings"], "solvedCount": 14447}, {"contestId": 1203, "index": "D2", "name": "Remove the Substring (hard version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "greedy", "implementation", "two pointers"], "solvedCount": 7809}, {"contestId": 1203, "index": "D1", "name": "Remove the Substring (easy version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "implementation"], "solvedCount": 9210}, {"contestId": 1203, "index": "C", "name": "Common Divisors", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 22461}, {"contestId": 1203, "index": "B", "name": "Equal Rectangles", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "math"], "solvedCount": 16530}, {"contestId": 1203, "index": "A", "name": "Circle of Students", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 17185}, {"contestId": 1202, "index": "F", "name": "You Are Given Some Letters...", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "implementation", "math"], "solvedCount": 448}, {"contestId": 1202, "index": "E", "name": "You Are Given Some Strings...", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "string suffix structures", "strings"], "solvedCount": 2462}, {"contestId": 1202, "index": "D", "name": "Print a 1337-string...", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "solvedCount": 5283}, {"contestId": 1202, "index": "C", "name": "You Are Given a WASD-string...", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "math", "strings"], "solvedCount": 2656}, {"contestId": 1202, "index": "B", "name": "You Are Given a Decimal String...", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "shortest paths"], "solvedCount": 4730}, {"contestId": 1202, "index": "A", "name": "You Are Given Two Binary Strings...", "type": "PROGRAMMING", "rating": 1100, "tags": ["bitmasks", "greedy"], "solvedCount": 10208}, {"contestId": 1201, "index": "E2", "name": "Knightmare (hard)", "type": "PROGRAMMING", "points": 1000.0, "rating": 3000, "tags": ["graphs", "interactive", "shortest paths"], "solvedCount": 158}, {"contestId": 1201, "index": "E1", "name": "Knightmare (easy)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["graphs", "interactive", "shortest paths"], "solvedCount": 140}, {"contestId": 1201, "index": "D", "name": "Treasure Hunting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "dp", "greedy", "implementation"], "solvedCount": 2462}, {"contestId": 1201, "index": "C", "name": "Maximum Median", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "greedy", "math", "sortings"], "solvedCount": 28529}, {"contestId": 1201, "index": "B", "name": "Zero Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 22214}, {"contestId": 1201, "index": "A", "name": "Important Exam", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 16442}, {"contestId": 1200, "index": "F", "name": "Graph Traveler", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "implementation", "math", "number theory"], "solvedCount": 1129}, {"contestId": 1200, "index": "E", "name": "Compress Words", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "hashing", "implementation", "string suffix structures", "strings"], "solvedCount": 8533}, {"contestId": 1200, "index": "D", "name": "White Lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "implementation", "two pointers"], "solvedCount": 4311}, {"contestId": 1200, "index": "C", "name": "Round Corridor", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["math", "number theory"], "solvedCount": 10173}, {"contestId": 1200, "index": "B", "name": "Block Adventure", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "greedy"], "solvedCount": 14283}, {"contestId": 1200, "index": "A", "name": "Hotelier", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 21022}, {"contestId": 1199, "index": "B", "name": "Water Lily", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["geometry", "math"], "solvedCount": 21613}, {"contestId": 1199, "index": "A", "name": "City Day", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 15755}, {"contestId": 1198, "index": "F", "name": "GCD Groups 2", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["greedy", "number theory", "probabilities"], "solvedCount": 1033}, {"contestId": 1198, "index": "E", "name": "Rectangle Painting 2", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["flows", "graph matchings", "graphs"], "solvedCount": 1232}, {"contestId": 1198, "index": "D", "name": "Rectangle Painting 1", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dp"], "solvedCount": 3515}, {"contestId": 1198, "index": "C", "name": "Matching vs  Independent Set", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "greedy", "sortings"], "solvedCount": 3854}, {"contestId": 1198, "index": "B", "name": "Welfare State", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "sortings"], "solvedCount": 9744}, {"contestId": 1198, "index": "A", "name": "MP3", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["sortings", "two pointers"], "solvedCount": 9714}, {"contestId": 1197, "index": "F", "name": "Coloring Game", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "games", "matrices"], "solvedCount": 315}, {"contestId": 1197, "index": "E", "name": "Culture Code", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "combinatorics", "data structures", "dp", "shortest paths", "sortings"], "solvedCount": 1769}, {"contestId": 1197, "index": "D", "name": "Yet Another Subarray Problem", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "greedy", "math"], "solvedCount": 5620}, {"contestId": 1197, "index": "C", "name": "Array Splitting", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 14608}, {"contestId": 1197, "index": "B", "name": "Pillars", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "implementation"], "solvedCount": 14206}, {"contestId": 1197, "index": "A", "name": "DIY Wooden Ladder", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "math", "sortings"], "solvedCount": 13788}, {"contestId": 1196, "index": "F", "name": "K-th Path", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "shortest paths", "sortings"], "solvedCount": 2931}, {"contestId": 1196, "index": "E", "name": "Connected Component on a Chessboard", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3844}, {"contestId": 1196, "index": "D2", "name": "RGB Substring (hard version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "implementation", "two pointers"], "solvedCount": 10196}, {"contestId": 1196, "index": "D1", "name": "RGB Substring (easy version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"], "solvedCount": 10932}, {"contestId": 1196, "index": "C", "name": "Robot Breakout", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"], "solvedCount": 9635}, {"contestId": 1196, "index": "B", "name": "Odd Sum Segments", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 17220}, {"contestId": 1196, "index": "A", "name": "Three Piles of Candies", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 28623}, {"contestId": 1195, "index": "F", "name": "Geometers Anonymous Club", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["data structures", "geometry", "math", "sortings"], "solvedCount": 968}, {"contestId": 1195, "index": "E", "name": "OpenStreetMap", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "two pointers"], "solvedCount": 3323}, {"contestId": 1195, "index": "D2", "name": "Submarine in the Rybinsk Sea (hard edition)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 4795}, {"contestId": 1195, "index": "D1", "name": "Submarine in the Rybinsk Sea (easy edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 8055}, {"contestId": 1195, "index": "C", "name": "Basketball Exercise", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["dp"], "solvedCount": 30536}, {"contestId": 1195, "index": "B", "name": "Sport Mafia", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["binary search", "brute force", "math"], "solvedCount": 21027}, {"contestId": 1195, "index": "A", "name": "Drinks Choosing", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 13752}, {"contestId": 1194, "index": "G", "name": "Another Meme Problem", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp"], "solvedCount": 303}, {"contestId": 1194, "index": "F", "name": "Crossword Expert", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "number theory", "probabilities", "two pointers"], "solvedCount": 1097}, {"contestId": 1194, "index": "E", "name": "Count The Rectangles", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "brute force", "data structures", "geometry", "sortings"], "solvedCount": 1978}, {"contestId": 1194, "index": "D", "name": "1-2-K Game", "type": "PROGRAMMING", "rating": 1700, "tags": ["games", "math"], "solvedCount": 6865}, {"contestId": 1194, "index": "C", "name": "From S To T", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "strings"], "solvedCount": 13949}, {"contestId": 1194, "index": "B", "name": "Yet Another Crosses Problem", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 10504}, {"contestId": 1194, "index": "A", "name": "Remove a Progression", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 16958}, {"contestId": 1193, "index": "C", "name": "Scissors and Tape", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "geometry"], "solvedCount": 47}, {"contestId": 1193, "index": "B", "name": "Magic Tree", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dp", "trees"], "solvedCount": 479}, {"contestId": 1193, "index": "A", "name": "Amusement Park", "type": "PROGRAMMING", "tags": ["*special", "dp", "math"], "solvedCount": 355}, {"contestId": 1192, "index": "C", "name": "Cubeword", "type": "PROGRAMMING", "tags": ["*special", "brute force", "dp", "meet-in-the-middle"], "solvedCount": 340}, {"contestId": 1192, "index": "B", "name": "Dynamic Diameter", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "trees"], "solvedCount": 1425}, {"contestId": 1192, "index": "A", "name": "Building Skyscrapers", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 74}, {"contestId": 1191, "index": "B", "name": "Tokitsukaze and Mahjong", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 9724}, {"contestId": 1191, "index": "A", "name": "Tokitsukaze and Enhancement", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 18645}, {"contestId": 1190, "index": "F", "name": "Tokitsukaze and Powers", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["number theory", "probabilities"], "solvedCount": 104}, {"contestId": 1190, "index": "E", "name": "Tokitsukaze and Explosion", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["binary search", "greedy"], "solvedCount": 248}, {"contestId": 1190, "index": "D", "name": "Tokitsukaze and Strange Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "divide and conquer", "sortings", "two pointers"], "solvedCount": 2439}, {"contestId": 1190, "index": "C", "name": "Tokitsukaze and Duel", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "games", "greedy"], "solvedCount": 2129}, {"contestId": 1190, "index": "B", "name": "Tokitsukaze, CSL and Stone Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["games"], "solvedCount": 6658}, {"contestId": 1190, "index": "A", "name": "Tokitsukaze and Discard Items", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation", "two pointers"], "solvedCount": 9636}, {"contestId": 1189, "index": "C", "name": "Candies!", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["data structures", "dp", "implementation", "math"], "solvedCount": 10877}, {"contestId": 1189, "index": "B", "name": "Number Circle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "math", "sortings"], "solvedCount": 14863}, {"contestId": 1189, "index": "A", "name": "Keanu Reeves", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["strings"], "solvedCount": 15665}, {"contestId": 1188, "index": "E", "name": "Problem from Red Panda", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["combinatorics"], "solvedCount": 275}, {"contestId": 1188, "index": "D", "name": "Make Equal", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["dp"], "solvedCount": 853}, {"contestId": 1188, "index": "C", "name": "Array Beauty", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["dp"], "solvedCount": 1983}, {"contestId": 1188, "index": "B", "name": "Count Pairs", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["math", "matrices", "number theory", "two pointers"], "solvedCount": 4879}, {"contestId": 1188, "index": "A2", "name": "Add on a Tree: Revolution", "type": "PROGRAMMING", "points": 750.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "implementation", "trees"], "solvedCount": 1277}, {"contestId": 1188, "index": "A1", "name": "Add on a Tree", "type": "PROGRAMMING", "points": 250.0, "rating": 1600, "tags": ["trees"], "solvedCount": 8740}, {"contestId": 1187, "index": "G", "name": "Gang Up", "type": "PROGRAMMING", "rating": 2500, "tags": ["flows", "graphs"], "solvedCount": 641}, {"contestId": 1187, "index": "F", "name": "Expected Square Beauty", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "math", "probabilities"], "solvedCount": 1007}, {"contestId": 1187, "index": "E", "name": "Tree Painting", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 9701}, {"contestId": 1187, "index": "D", "name": "Subarray Sorting", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "sortings"], "solvedCount": 2856}, {"contestId": 1187, "index": "C", "name": "Vasya And Array", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 6609}, {"contestId": 1187, "index": "B", "name": "Letters Shop", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "implementation", "strings"], "solvedCount": 12652}, {"contestId": 1187, "index": "A", "name": "Stickers and Toys", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 15234}, {"contestId": 1186, "index": "F", "name": "Vus the Cossack and a Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dfs and similar", "graphs", "greedy", "implementation"], "solvedCount": 840}, {"contestId": 1186, "index": "E", "name": "Vus the Cossack and a Field", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "implementation", "math"], "solvedCount": 654}, {"contestId": 1186, "index": "D", "name": "Vus the Cossack and Numbers", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 9199}, {"contestId": 1186, "index": "C", "name": "Vus the Cossack and Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["implementation", "math"], "solvedCount": 6322}, {"contestId": 1186, "index": "A", "name": "Vus the Cossack and a Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 40257}, {"contestId": 1185, "index": "G2", "name": "Playlist for Polycarp (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2600, "tags": ["combinatorics", "dp"], "solvedCount": 837}, {"contestId": 1185, "index": "G1", "name": "Playlist for Polycarp (easy version)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2100, "tags": ["bitmasks", "combinatorics", "dp"], "solvedCount": 3056}, {"contestId": 1185, "index": "F", "name": "Two Pizzas", "type": "PROGRAMMING", "points": 2750.0, "rating": 2100, "tags": ["bitmasks", "brute force"], "solvedCount": 2112}, {"contestId": 1185, "index": "E", "name": "Polycarp and Snakes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["brute force", "implementation"], "solvedCount": 2738}, {"contestId": 1185, "index": "D", "name": "Extra Element", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 6930}, {"contestId": 1185, "index": "C2", "name": "Exam in BerSU (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["brute force", "data structures", "greedy", "math"], "solvedCount": 7647}, {"contestId": 1185, "index": "C1", "name": "Exam in BerSU (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 11630}, {"contestId": 1185, "index": "B", "name": "Email from Polycarp", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "strings"], "solvedCount": 13923}, {"contestId": 1185, "index": "A", "name": "Ropewalkers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 15173}, {"contestId": 1184, "index": "E3", "name": "Daleks' Invasion (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 629}, {"contestId": 1184, "index": "E2", "name": "Daleks' Invasion (medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 1006}, {"contestId": 1184, "index": "E1", "name": "Daleks' Invasion (easy)", "type": "PROGRAMMING", "rating": 1900, "tags": ["graphs", "trees"], "solvedCount": 1744}, {"contestId": 1184, "index": "D2", "name": "Parallel Universes (Hard)", "type": "PROGRAMMING", "rating": 3100, "tags": ["math", "matrices"], "solvedCount": 119}, {"contestId": 1184, "index": "D1", "name": "Parallel Universes (Easy)", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 2658}, {"contestId": 1184, "index": "C3", "name": "Heidi and the Turing Test (Hard)", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 44}, {"contestId": 1184, "index": "C2", "name": "Heidi and the Turing Test (Medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures"], "solvedCount": 650}, {"contestId": 1184, "index": "C1", "name": "Heidi and the Turing Test (Easy)", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 2497}, {"contestId": 1184, "index": "B3", "name": "The Doctor Meets Vader (Hard)", "type": "PROGRAMMING", "rating": 2700, "tags": ["flows", "shortest paths"], "solvedCount": 229}, {"contestId": 1184, "index": "B2", "name": "The Doctor Meets Vader (Medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["flows", "graph matchings", "graphs", "shortest paths", "sortings"], "solvedCount": 629}, {"contestId": 1184, "index": "B1", "name": "The Doctor Meets Vader (Easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "sortings"], "solvedCount": 5943}, {"contestId": 1184, "index": "A3", "name": "Heidi Learns Hashing (Hard)", "type": "PROGRAMMING", "rating": 3100, "tags": ["fft", "math", "number theory"], "solvedCount": 153}, {"contestId": 1184, "index": "A2", "name": "Heidi Learns Hashing (Medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "number theory"], "solvedCount": 1033}, {"contestId": 1184, "index": "A1", "name": "Heidi Learns Hashing (Easy)", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "math", "number theory"], "solvedCount": 6261}, {"contestId": 1183, "index": "H", "name": "Subsequences (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp", "strings"], "solvedCount": 3404}, {"contestId": 1183, "index": "G", "name": "Candy Box (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 2519}, {"contestId": 1183, "index": "F", "name": "Topforces Strikes Back", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "math", "sortings"], "solvedCount": 2161}, {"contestId": 1183, "index": "E", "name": "Subsequences (easy version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "graphs", "implementation", "shortest paths"], "solvedCount": 5183}, {"contestId": 1183, "index": "D", "name": "Candy Box (easy version)", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 17371}, {"contestId": 1183, "index": "C", "name": "Computer Game", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "math"], "solvedCount": 14639}, {"contestId": 1183, "index": "B", "name": "Equalize Prices", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 19288}, {"contestId": 1183, "index": "A", "name": "Nearest Interesting Number", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 25951}, {"contestId": 1182, "index": "F", "name": "Maximum Sine", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "data structures", "number theory"], "solvedCount": 374}, {"contestId": 1182, "index": "E", "name": "Product Oriented Recurrence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "matrices", "number theory"], "solvedCount": 3068}, {"contestId": 1182, "index": "D", "name": "Complete Mirror", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dp", "hashing", "implementation", "trees"], "solvedCount": 948}, {"contestId": 1182, "index": "C", "name": "Beautiful Lyrics", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "greedy", "strings"], "solvedCount": 4497}, {"contestId": 1182, "index": "B", "name": "Plus from Picture", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["dfs and similar", "implementation", "strings"], "solvedCount": 11564}, {"contestId": 1182, "index": "A", "name": "Filling Shapes", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dp", "math"], "solvedCount": 33786}, {"contestId": 1181, "index": "E2", "name": "A Story of One Country (Hard)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 327}, {"contestId": 1181, "index": "E1", "name": "A Story of One Country (Easy)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "divide and conquer", "sortings"], "solvedCount": 549}, {"contestId": 1181, "index": "D", "name": "Irrigation", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "data structures", "implementation", "sortings", "trees", "two pointers"], "solvedCount": 2592}, {"contestId": 1181, "index": "C", "name": "Flag", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "combinatorics", "dp", "implementation"], "solvedCount": 3263}, {"contestId": 1181, "index": "B", "name": "Split a Number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation", "strings"], "solvedCount": 6461}, {"contestId": 1181, "index": "A", "name": "Chunga-Changa", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 14327}, {"contestId": 1180, "index": "B", "name": "Nick and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation"], "solvedCount": 9861}, {"contestId": 1180, "index": "A", "name": "Alex and a Rhombus", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dp", "implementation", "math"], "solvedCount": 26606}, {"contestId": 1179, "index": "E", "name": "Alesya and Discrete Math", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["divide and conquer", "interactive"], "solvedCount": 189}, {"contestId": 1179, "index": "D", "name": "Fedor Runs for President", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dp", "trees"], "solvedCount": 987}, {"contestId": 1179, "index": "C", "name": "Serge and Dining Room", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "graph matchings", "greedy", "implementation", "math", "trees"], "solvedCount": 2246}, {"contestId": 1179, "index": "B", "name": "Tolik and His Uncle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 4481}, {"contestId": 1179, "index": "A", "name": "Valeriy and Deque", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 11319}, {"contestId": 1178, "index": "H", "name": "Stock Exchange", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["binary search", "flows", "graphs"], "solvedCount": 283}, {"contestId": 1178, "index": "G", "name": "The Awesomest Vertex", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["data structures", "dfs and similar"], "solvedCount": 557}, {"contestId": 1178, "index": "F2", "name": "Long Colorful Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp"], "solvedCount": 994}, {"contestId": 1178, "index": "F1", "name": "Short Colorful Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dfs and similar", "dp"], "solvedCount": 2213}, {"contestId": 1178, "index": "E", "name": "Archaeology", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "solvedCount": 4427}, {"contestId": 1178, "index": "D", "name": "Prime Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 7702}, {"contestId": 1178, "index": "C", "name": "Tiles", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["combinatorics", "greedy", "math"], "solvedCount": 12664}, {"contestId": 1178, "index": "B", "name": "WOW Factor", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["dp", "strings"], "solvedCount": 18303}, {"contestId": 1178, "index": "A", "name": "Prime Minister", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 10832}, {"contestId": 1177, "index": "B", "name": "Digits Sequence (Hard Edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "divide and conquer", "implementation"], "solvedCount": 2729}, {"contestId": 1177, "index": "A", "name": "Digits Sequence (Easy Edition)", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 6147}, {"contestId": 1176, "index": "F", "name": "Destroy it!", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "implementation", "sortings"], "solvedCount": 2200}, {"contestId": 1176, "index": "E", "name": "Cover it!", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dsu", "graphs", "shortest paths", "trees"], "solvedCount": 12446}, {"contestId": 1176, "index": "D", "name": "Recover it!", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "graphs", "greedy", "number theory", "sortings"], "solvedCount": 5508}, {"contestId": 1176, "index": "C", "name": "Lose it!", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "implementation"], "solvedCount": 14709}, {"contestId": 1176, "index": "B", "name": "Merge it!", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"], "solvedCount": 17785}, {"contestId": 1176, "index": "A", "name": "Divide it!", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 24054}, {"contestId": 1175, "index": "G", "name": "Yet Another Partiton Problem", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "divide and conquer", "dp", "geometry", "two pointers"], "solvedCount": 586}, {"contestId": 1175, "index": "F", "name": "The Number of Subpermutations", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "divide and conquer", "hashing", "math"], "solvedCount": 2330}, {"contestId": 1175, "index": "E", "name": "Minimal Segment Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"], "solvedCount": 4065}, {"contestId": 1175, "index": "D", "name": "Array Splitting", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "sortings"], "solvedCount": 6743}, {"contestId": 1175, "index": "C", "name": "Electrification", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "greedy"], "solvedCount": 7035}, {"contestId": 1175, "index": "B", "name": "Catch Overflow!", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "expression parsing", "implementation"], "solvedCount": 11510}, {"contestId": 1175, "index": "A", "name": "From Hero to Zero", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "math"], "solvedCount": 19031}, {"contestId": 1174, "index": "F", "name": "Ehab and the Big Finale", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "divide and conquer", "graphs", "implementation", "interactive", "trees"], "solvedCount": 1864}, {"contestId": 1174, "index": "E", "name": "Ehab and the Expected GCD Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 1671}, {"contestId": 1174, "index": "D", "name": "Ehab and the Expected XOR Problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 4889}, {"contestId": 1174, "index": "C", "name": "Ehab and a Special Coloring Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "number theory"], "solvedCount": 12447}, {"contestId": 1174, "index": "B", "name": "Ehab Is an Odd Person", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["sortings"], "solvedCount": 16286}, {"contestId": 1174, "index": "A", "name": "Ehab Fails to Be Thanos", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 18416}, {"contestId": 1173, "index": "B", "name": "Nauuo and Chess", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 9342}, {"contestId": 1173, "index": "A", "name": "Nauuo and Votes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 16725}, {"contestId": 1172, "index": "F", "name": "Nauuo and Bug", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 566}, {"contestId": 1172, "index": "E", "name": "Nauuo and ODT", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 346}, {"contestId": 1172, "index": "D", "name": "Nauuo and Portals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["constructive algorithms"], "solvedCount": 530}, {"contestId": 1172, "index": "C2", "name": "Nauuo and Pictures (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2600, "tags": ["dp", "probabilities"], "solvedCount": 933}, {"contestId": 1172, "index": "C1", "name": "Nauuo and Pictures (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["dp", "probabilities"], "solvedCount": 1162}, {"contestId": 1172, "index": "B", "name": "Nauuo and Circle", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "solvedCount": 4263}, {"contestId": 1172, "index": "A", "name": "Nauuo and Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["greedy", "implementation"], "solvedCount": 5086}, {"contestId": 1170, "index": "I", "name": "Good Subsets", "type": "PROGRAMMING", "tags": ["*special", "dp"], "solvedCount": 45}, {"contestId": 1170, "index": "H", "name": "Longest Saw", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms"], "solvedCount": 54}, {"contestId": 1170, "index": "G", "name": "Graph Decomposition", "type": "PROGRAMMING", "tags": ["*special", "graphs"], "solvedCount": 80}, {"contestId": 1170, "index": "F", "name": "Wheels", "type": "PROGRAMMING", "tags": ["*special", "binary search", "greedy"], "solvedCount": 129}, {"contestId": 1170, "index": "E", "name": "Sliding Doors", "type": "PROGRAMMING", "tags": ["*special", "binary search"], "solvedCount": 268}, {"contestId": 1170, "index": "D", "name": "Decoding of Integer Sequences", "type": "PROGRAMMING", "tags": ["*special", "data structures", "implementation"], "solvedCount": 485}, {"contestId": 1170, "index": "C", "name": "Minus and Minus Give Plus", "type": "PROGRAMMING", "tags": ["*special", "implementation", "strings"], "solvedCount": 812}, {"contestId": 1170, "index": "B", "name": "Bad Days", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 1112}, {"contestId": 1170, "index": "A", "name": "Three Integers Again", "type": "PROGRAMMING", "tags": ["*special", "math"], "solvedCount": 1516}, {"contestId": 1169, "index": "B", "name": "Pairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["graphs", "implementation"], "solvedCount": 10256}, {"contestId": 1169, "index": "A", "name": "Circle Metro", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 12453}, {"contestId": 1168, "index": "E", "name": "Xor Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms", "math"], "solvedCount": 414}, {"contestId": 1168, "index": "D", "name": "Anagram Paths", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["dp", "implementation", "trees"], "solvedCount": 412}, {"contestId": 1168, "index": "C", "name": "And Reachability", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 2607}, {"contestId": 1168, "index": "B", "name": "Good Triple", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "two pointers"], "solvedCount": 3706}, {"contestId": 1168, "index": "A", "name": "Increasing by Modulo", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "greedy"], "solvedCount": 7269}, {"contestId": 1167, "index": "G", "name": "Low Budget Inception", "type": "PROGRAMMING", "rating": 3100, "tags": ["brute force", "geometry"], "solvedCount": 163}, {"contestId": 1167, "index": "F", "name": "Scalar Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "data structures", "math", "sortings"], "solvedCount": 1747}, {"contestId": 1167, "index": "E", "name": "Range Deleting", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "combinatorics", "data structures", "two pointers"], "solvedCount": 2798}, {"contestId": 1167, "index": "D", "name": "Bicolored RBS", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 7231}, {"contestId": 1167, "index": "C", "name": "News Distribution", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 22148}, {"contestId": 1167, "index": "B", "name": "Lost Numbers", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "divide and conquer", "interactive", "math"], "solvedCount": 14073}, {"contestId": 1167, "index": "A", "name": "Telephone Number", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "greedy", "strings"], "solvedCount": 19906}, {"contestId": 1166, "index": "F", "name": "Vicky's Delivery Service", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dsu", "graphs", "hashing"], "solvedCount": 767}, {"contestId": 1166, "index": "E", "name": "The LCMs Must be Large", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 2911}, {"contestId": 1166, "index": "D", "name": "Cute Sequences", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "brute force", "greedy", "math"], "solvedCount": 2230}, {"contestId": 1166, "index": "C", "name": "A Tale of Two Lands", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "sortings", "two pointers"], "solvedCount": 10546}, {"contestId": 1166, "index": "B", "name": "All the Vowels Please", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 11767}, {"contestId": 1166, "index": "A", "name": "Silent Classroom", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["combinatorics", "greedy"], "solvedCount": 14717}, {"contestId": 1165, "index": "F2", "name": "Microtransactions (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "implementation"], "solvedCount": 2333}, {"contestId": 1165, "index": "F1", "name": "Microtransactions (easy version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy"], "solvedCount": 2048}, {"contestId": 1165, "index": "E", "name": "Two Arrays and Sum of Functions", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "math", "sortings"], "solvedCount": 9268}, {"contestId": 1165, "index": "D", "name": "Almost All Divisors", "type": "PROGRAMMING", "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 18006}, {"contestId": 1165, "index": "C", "name": "Good String", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"], "solvedCount": 13786}, {"contestId": 1165, "index": "B", "name": "Polycarp Training", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 22702}, {"contestId": 1165, "index": "A", "name": "Remainder", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 14372}, {"contestId": 1163, "index": "F", "name": "Indecisive Taxi Fee", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 1143}, {"contestId": 1163, "index": "E", "name": "Magical Permutation", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "brute force", "constructive algorithms", "data structures", "graphs", "math"], "solvedCount": 870}, {"contestId": 1163, "index": "D", "name": "Mysterious Code", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dp", "strings"], "solvedCount": 1432}, {"contestId": 1163, "index": "C2", "name": "Power Transmission (Hard Edition)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["data structures", "geometry", "implementation", "math"], "solvedCount": 3860}, {"contestId": 1163, "index": "C1", "name": "Power Transmission (Easy Edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "geometry"], "solvedCount": 3468}, {"contestId": 1163, "index": "B2", "name": "Cat Party (Hard Edition)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "implementation"], "solvedCount": 7489}, {"contestId": 1163, "index": "B1", "name": "Cat Party (Easy Edition)", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 7184}, {"contestId": 1163, "index": "A", "name": "Eating Soup", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "math"], "solvedCount": 13545}, {"contestId": 1162, "index": "B", "name": "Double Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "greedy"], "solvedCount": 5945}, {"contestId": 1162, "index": "A", "name": "Zoning Restrictions Again", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 8515}, {"contestId": 1160, "index": "A2", "name": "Collaboration", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 0}, {"contestId": 1159, "index": "B", "name": "Expansion coefficient of the array", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 7337}, {"contestId": 1159, "index": "A", "name": "A pile of stones", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 13138}, {"contestId": 1158, "index": "F", "name": "Density of subarrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["dp", "math"], "solvedCount": 472}, {"contestId": 1158, "index": "E", "name": "Strange device", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["binary search", "interactive", "math", "trees"], "solvedCount": 167}, {"contestId": 1158, "index": "D", "name": "Winding polygonal line", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["constructive algorithms", "geometry", "greedy", "math"], "solvedCount": 896}, {"contestId": 1158, "index": "C", "name": "Permutation recovery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "math", "sortings"], "solvedCount": 2056}, {"contestId": 1158, "index": "B", "name": "The minimal unique substring", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "math", "strings"], "solvedCount": 2316}, {"contestId": 1158, "index": "A", "name": "The Party and Sweets", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "sortings", "two pointers"], "solvedCount": 7801}, {"contestId": 1157, "index": "G", "name": "Inverse of Rows and Columns", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms"], "solvedCount": 972}, {"contestId": 1157, "index": "F", "name": "Maximum Balanced Circle", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dp", "greedy", "two pointers"], "solvedCount": 2789}, {"contestId": 1157, "index": "E", "name": "Minimum Array", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 8933}, {"contestId": 1157, "index": "D", "name": "N Problems During K Days", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 3897}, {"contestId": 1157, "index": "C2", "name": "Increasing Subsequence (hard version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy"], "solvedCount": 8552}, {"contestId": 1157, "index": "C1", "name": "Increasing Subsequence (easy version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"], "solvedCount": 13151}, {"contestId": 1157, "index": "B", "name": "Long Number", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"], "solvedCount": 15260}, {"contestId": 1157, "index": "A", "name": "Reachable Numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 16228}, {"contestId": 1156, "index": "G", "name": "Optimizer", "type": "PROGRAMMING", "rating": 2700, "tags": ["graphs", "greedy", "hashing", "implementation"], "solvedCount": 148}, {"contestId": 1156, "index": "F", "name": "Card Bag", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "math", "probabilities"], "solvedCount": 1604}, {"contestId": 1156, "index": "E", "name": "Special Segments of Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer", "dsu", "two pointers"], "solvedCount": 3546}, {"contestId": 1156, "index": "D", "name": "0-1-Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "solvedCount": 4311}, {"contestId": 1156, "index": "C", "name": "Match Points", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "sortings", "ternary search", "two pointers"], "solvedCount": 6402}, {"contestId": 1156, "index": "B", "name": "Ugly Pairs", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "greedy", "implementation", "sortings", "strings"], "solvedCount": 6376}, {"contestId": 1156, "index": "A", "name": "Inscribed Figures", "type": "PROGRAMMING", "rating": 1400, "tags": ["geometry"], "solvedCount": 8464}, {"contestId": 1155, "index": "F", "name": "Delivery Oligopoly", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "graphs"], "solvedCount": 502}, {"contestId": 1155, "index": "E", "name": "Guess the Root", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "interactive", "math"], "solvedCount": 1524}, {"contestId": 1155, "index": "D", "name": "Beautiful Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 7354}, {"contestId": 1155, "index": "C", "name": "Alarm Clocks Everywhere", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "number theory"], "solvedCount": 9491}, {"contestId": 1155, "index": "B", "name": "Game with Telephone Numbers", "type": "PROGRAMMING", "rating": 1200, "tags": ["games", "greedy", "implementation"], "solvedCount": 12292}, {"contestId": 1155, "index": "A", "name": "Reverse a Substring", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "sortings", "strings"], "solvedCount": 20059}, {"contestId": 1154, "index": "G", "name": "Minimum Possible LCM", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 3030}, {"contestId": 1154, "index": "F", "name": "Shovels Shop", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy", "sortings"], "solvedCount": 3069}, {"contestId": 1154, "index": "E", "name": "Two Teams", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 6677}, {"contestId": 1154, "index": "D", "name": "Walking Robot", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"], "solvedCount": 10316}, {"contestId": 1154, "index": "C", "name": "Gourmet Cat", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 10873}, {"contestId": 1154, "index": "B", "name": "Make Them Equal", "type": "PROGRAMMING", "rating": 1200, "tags": ["math"], "solvedCount": 17195}, {"contestId": 1154, "index": "A", "name": "Restoring Three Numbers", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 79627}, {"contestId": 1153, "index": "F", "name": "Serval and Bonus Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 879}, {"contestId": 1153, "index": "E", "name": "Serval and Snake", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "brute force", "interactive"], "solvedCount": 1680}, {"contestId": 1153, "index": "D", "name": "Serval and Rooted Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 5258}, {"contestId": 1153, "index": "C", "name": "Serval and Parenthesis Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "strings"], "solvedCount": 7640}, {"contestId": 1153, "index": "B", "name": "Serval and Toy Bricks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 9301}, {"contestId": 1153, "index": "A", "name": "Serval and Bus", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "math"], "solvedCount": 11778}, {"contestId": 1152, "index": "F2", "name": "Neko Rules the Catniverse (Large Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["bitmasks", "dp", "matrices"], "solvedCount": 758}, {"contestId": 1152, "index": "F1", "name": "Neko Rules the Catniverse (Small Version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["bitmasks", "dp", "matrices"], "solvedCount": 632}, {"contestId": 1152, "index": "E", "name": "Neko and Flashback", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 1062}, {"contestId": 1152, "index": "D", "name": "Neko and Aki's Prank", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "greedy", "trees"], "solvedCount": 2496}, {"contestId": 1152, "index": "C", "name": "Neko does Maths", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "math", "number theory"], "solvedCount": 6908}, {"contestId": 1152, "index": "B", "name": "Neko Performs Cat Furrier Transform", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "math"], "solvedCount": 9187}, {"contestId": 1152, "index": "A", "name": "Neko Finds Grapes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math"], "solvedCount": 15909}, {"contestId": 1151, "index": "F", "name": "Sonya and Informatics", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["combinatorics", "dp", "matrices", "probabilities"], "solvedCount": 1309}, {"contestId": 1151, "index": "E", "name": "Number of Components", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "data structures", "dp", "math"], "solvedCount": 3532}, {"contestId": 1151, "index": "D", "name": "Stas and the Queue at the Buffet", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["greedy", "math", "sortings"], "solvedCount": 8751}, {"contestId": 1151, "index": "C", "name": "Problem for Nazar", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["constructive algorithms", "math"], "solvedCount": 5490}, {"contestId": 1151, "index": "B", "name": "Dima and a Bad XOR", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"], "solvedCount": 12171}, {"contestId": 1151, "index": "A", "name": "Maxim and Biology", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "strings"], "solvedCount": 11512}, {"contestId": 1150, "index": "B", "name": "Tiling Challenge", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 11630}, {"contestId": 1150, "index": "A", "name": "Stock Arbitraging", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 12217}, {"contestId": 1149, "index": "E", "name": "Election Promises", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["games", "graphs"], "solvedCount": 608}, {"contestId": 1149, "index": "D", "name": "Abandoning Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "dp", "graphs", "greedy"], "solvedCount": 858}, {"contestId": 1149, "index": "C", "name": "Tree Generator\u2122", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "implementation", "trees"], "solvedCount": 1536}, {"contestId": 1149, "index": "B", "name": "Three Religions", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["dp", "implementation", "strings"], "solvedCount": 1972}, {"contestId": 1149, "index": "A", "name": "Prefix Sum Primes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 16754}, {"contestId": 1148, "index": "H", "name": "Holy Diver ", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures"], "solvedCount": 297}, {"contestId": 1148, "index": "G", "name": "Gold Experience", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["constructive algorithms", "graphs", "math", "number theory", "probabilities"], "solvedCount": 364}, {"contestId": 1148, "index": "F", "name": "Foo Fighters", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 1093}, {"contestId": 1148, "index": "E", "name": "Earth Wind and Fire", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "math", "sortings", "two pointers"], "solvedCount": 1739}, {"contestId": 1148, "index": "D", "name": "Dirty Deeds Done Dirt Cheap", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["greedy", "sortings"], "solvedCount": 5145}, {"contestId": 1148, "index": "C", "name": "Crazy Diamond", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "sortings"], "solvedCount": 5431}, {"contestId": 1148, "index": "B", "name": "Born This Way", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "brute force", "two pointers"], "solvedCount": 7732}, {"contestId": 1148, "index": "A", "name": "Another One Bites The Dust", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy"], "solvedCount": 15239}, {"contestId": 1147, "index": "F", "name": "Zigzag Game", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["games", "interactive"], "solvedCount": 299}, {"contestId": 1147, "index": "E", "name": "Rainbow Coins", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["interactive"], "solvedCount": 381}, {"contestId": 1147, "index": "D", "name": "Palindrome XOR", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dfs and similar", "graphs"], "solvedCount": 807}, {"contestId": 1147, "index": "C", "name": "Thanos Nim", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["games"], "solvedCount": 3483}, {"contestId": 1147, "index": "B", "name": "Chladni Figure", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "strings"], "solvedCount": 3007}, {"contestId": 1147, "index": "A", "name": "Hide and Seek", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["graphs"], "solvedCount": 5443}, {"contestId": 1146, "index": "H", "name": "Satanic Panic", "type": "PROGRAMMING", "points": 3750.0, "rating": 2900, "tags": ["dp", "geometry"], "solvedCount": 658}, {"contestId": 1146, "index": "G", "name": "Zoning Restrictions", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["dp", "flows", "graphs"], "solvedCount": 968}, {"contestId": 1146, "index": "F", "name": "Leaf Partition", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["dp", "trees"], "solvedCount": 1275}, {"contestId": 1146, "index": "E", "name": "Hot is Cold", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "implementation"], "solvedCount": 973}, {"contestId": 1146, "index": "D", "name": "Frog Jumping", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dfs and similar", "math", "number theory"], "solvedCount": 1151}, {"contestId": 1146, "index": "C", "name": "Tree Diameter", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "graphs", "interactive"], "solvedCount": 3945}, {"contestId": 1146, "index": "B", "name": "Hate \"A\"", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 9036}, {"contestId": 1146, "index": "A", "name": "Love \"A\"", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 22825}, {"contestId": 1145, "index": "G", "name": "AI Takeover", "type": "PROGRAMMING", "tags": ["*special", "interactive"], "solvedCount": 181}, {"contestId": 1145, "index": "F", "name": "Neat Words", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 527}, {"contestId": 1145, "index": "E", "name": "Fourier Doodles", "type": "PROGRAMMING", "tags": [], "solvedCount": 437}, {"contestId": 1145, "index": "D", "name": "Pigeon d'Or", "type": "PROGRAMMING", "tags": ["*special", "implementation"], "solvedCount": 1179}, {"contestId": 1145, "index": "C", "name": "Mystery Circuit", "type": "PROGRAMMING", "tags": ["bitmasks", "brute force"], "solvedCount": 818}, {"contestId": 1145, "index": "B", "name": "Kanban Numbers", "type": "PROGRAMMING", "tags": ["*special", "brute force"], "solvedCount": 1484}, {"contestId": 1145, "index": "A", "name": "Thanos Sort", "type": "PROGRAMMING", "tags": ["implementation"], "solvedCount": 8917}, {"contestId": 1144, "index": "G", "name": "Two Merged Sequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "greedy"], "solvedCount": 2166}, {"contestId": 1144, "index": "F", "name": "Graph Without Long Directed Paths", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs"], "solvedCount": 12872}, {"contestId": 1144, "index": "E", "name": "Median String", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "math", "number theory", "strings"], "solvedCount": 4312}, {"contestId": 1144, "index": "D", "name": "Equalize Them All", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 10635}, {"contestId": 1144, "index": "C", "name": "Two Shuffled Sequences", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 15960}, {"contestId": 1144, "index": "B", "name": "Parity Alternated Deletions", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 17913}, {"contestId": 1144, "index": "A", "name": "Diverse Strings", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 20471}, {"contestId": 1143, "index": "C", "name": "Queen", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "trees"], "solvedCount": 15087}, {"contestId": 1143, "index": "B", "name": "Nirvana", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "math", "number theory"], "solvedCount": 11115}, {"contestId": 1143, "index": "A", "name": "The Doors", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 13506}, {"contestId": 1142, "index": "E", "name": "Pink Floyd", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["graphs", "interactive"], "solvedCount": 606}, {"contestId": 1142, "index": "D", "name": "Foreigner", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dp"], "solvedCount": 571}, {"contestId": 1142, "index": "C", "name": "U2", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["geometry"], "solvedCount": 1460}, {"contestId": 1142, "index": "B", "name": "Lynyrd Skynyrd", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "math", "trees"], "solvedCount": 3414}, {"contestId": 1142, "index": "A", "name": "The Beatles", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "math"], "solvedCount": 3514}, {"contestId": 1141, "index": "G", "name": "Privatization of Roads in Treeland", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 2429}, {"contestId": 1141, "index": "F2", "name": "Same Sum Blocks (Hard)", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy"], "solvedCount": 4442}, {"contestId": 1141, "index": "F1", "name": "Same Sum Blocks (Easy)", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy"], "solvedCount": 4064}, {"contestId": 1141, "index": "E", "name": "Superhero Battle", "type": "PROGRAMMING", "rating": 1700, "tags": ["math"], "solvedCount": 6977}, {"contestId": 1141, "index": "D", "name": "Colored Boots", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "implementation"], "solvedCount": 8818}, {"contestId": 1141, "index": "C", "name": "Polycarp Restores Permutation", "type": "PROGRAMMING", "rating": 1500, "tags": ["math"], "solvedCount": 11972}, {"contestId": 1141, "index": "B", "name": "Maximal Continuous Rest", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 22295}, {"contestId": 1141, "index": "A", "name": "Game 23", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 35378}, {"contestId": 1140, "index": "G", "name": "Double Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "shortest paths", "trees"], "solvedCount": 570}, {"contestId": 1140, "index": "F", "name": "Extending Set of Points", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu"], "solvedCount": 1389}, {"contestId": 1140, "index": "E", "name": "Palindrome-less Arrays", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 2039}, {"contestId": 1140, "index": "D", "name": "Minimum Triangulation", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "math"], "solvedCount": 12927}, {"contestId": 1140, "index": "C", "name": "Playlist", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "sortings"], "solvedCount": 10056}, {"contestId": 1140, "index": "B", "name": "Good String", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "strings"], "solvedCount": 11547}, {"contestId": 1140, "index": "A", "name": "Detective Book", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 12537}, {"contestId": 1139, "index": "F", "name": "Dish Shopping", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer"], "solvedCount": 476}, {"contestId": 1139, "index": "E", "name": "Maximize Mex", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["flows", "graph matchings", "graphs"], "solvedCount": 2081}, {"contestId": 1139, "index": "D", "name": "Steps to One", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "number theory", "probabilities"], "solvedCount": 2540}, {"contestId": 1139, "index": "C", "name": "Edgy Trees", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs", "math", "trees"], "solvedCount": 14573}, {"contestId": 1139, "index": "B", "name": "Chocolates", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "implementation"], "solvedCount": 18171}, {"contestId": 1139, "index": "A", "name": "Even Substrings", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 17322}, {"contestId": 1138, "index": "B", "name": "Circus", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "greedy", "math", "strings"], "solvedCount": 4116}, {"contestId": 1138, "index": "A", "name": "Sushi for Two", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["binary search", "greedy", "implementation"], "solvedCount": 20224}, {"contestId": 1137, "index": "F", "name": "Matches Are Not a Child's Play ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["data structures", "trees"], "solvedCount": 494}, {"contestId": 1137, "index": "E", "name": "Train Car Selection", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "greedy"], "solvedCount": 570}, {"contestId": 1137, "index": "D", "name": "Cooperative Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "interactive", "number theory"], "solvedCount": 1924}, {"contestId": 1137, "index": "C", "name": "Museums Tour", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp", "graphs", "implementation"], "solvedCount": 1267}, {"contestId": 1137, "index": "B", "name": "Camp Schedule", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["greedy", "hashing", "strings"], "solvedCount": 6609}, {"contestId": 1137, "index": "A", "name": "Skyscrapers", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "sortings"], "solvedCount": 4599}, {"contestId": 1136, "index": "E", "name": "Nastya Hasn't Written a Legend", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 1117}, {"contestId": 1136, "index": "D", "name": "Nastya Is Buying Lunch", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 3930}, {"contestId": 1136, "index": "C", "name": "Nastya Is Transposing Matrices", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "sortings"], "solvedCount": 7913}, {"contestId": 1136, "index": "B", "name": "Nastya Is Playing Computer Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 11921}, {"contestId": 1136, "index": "A", "name": "Nastya Is Reading a Book", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 16967}, {"contestId": 1133, "index": "F2", "name": "Spanning Tree with One Fixed Degree", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 3616}, {"contestId": 1133, "index": "F1", "name": "Spanning Tree with Maximum Degree", "type": "PROGRAMMING", "rating": 1600, "tags": ["graphs"], "solvedCount": 8413}, {"contestId": 1133, "index": "E", "name": "K Balanced Teams", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "sortings", "two pointers"], "solvedCount": 5990}, {"contestId": 1133, "index": "D", "name": "Zero Quantity Maximization", "type": "PROGRAMMING", "rating": 1500, "tags": ["hashing", "math", "number theory"], "solvedCount": 14144}, {"contestId": 1133, "index": "C", "name": "Balanced Team", "type": "PROGRAMMING", "rating": 1200, "tags": ["sortings", "two pointers"], "solvedCount": 25798}, {"contestId": 1133, "index": "B", "name": "Preparation for International Women's Day", "type": "PROGRAMMING", "rating": 1200, "tags": ["math", "number theory"], "solvedCount": 13767}, {"contestId": 1133, "index": "A", "name": "Middle of the Contest", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 18848}, {"contestId": 1132, "index": "G", "name": "Greedy Subsequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "trees"], "solvedCount": 1138}, {"contestId": 1132, "index": "F", "name": "Clear the String", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"], "solvedCount": 9299}, {"contestId": 1132, "index": "E", "name": "Knapsack", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "dp", "greedy"], "solvedCount": 1771}, {"contestId": 1132, "index": "D", "name": "Stressful Training", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "greedy"], "solvedCount": 2109}, {"contestId": 1132, "index": "C", "name": "Painting the Fence", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force"], "solvedCount": 5597}, {"contestId": 1132, "index": "B", "name": "Discounts", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "sortings"], "solvedCount": 13509}, {"contestId": 1132, "index": "A", "name": "Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 9937}, {"contestId": 1131, "index": "G", "name": "Most Dangerous Shark", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["data structures", "dp", "two pointers"], "solvedCount": 479}, {"contestId": 1131, "index": "F", "name": "Asya And Kittens", "type": "PROGRAMMING", "points": 3000.0, "rating": 1700, "tags": ["constructive algorithms", "dsu"], "solvedCount": 7148}, {"contestId": 1131, "index": "E", "name": "String Multiplication", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp", "greedy", "strings"], "solvedCount": 1198}, {"contestId": 1131, "index": "D", "name": "Gourmet choice", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"], "solvedCount": 3462}, {"contestId": 1131, "index": "C", "name": "Birthday", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 15309}, {"contestId": 1131, "index": "B", "name": "Draw!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 10000}, {"contestId": 1131, "index": "A", "name": "Sea Battle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 12654}, {"contestId": 1130, "index": "C", "name": "Connect", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["brute force", "dfs and similar", "dsu"], "solvedCount": 9051}, {"contestId": 1130, "index": "B", "name": "Two Cakes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy"], "solvedCount": 8145}, {"contestId": 1130, "index": "A", "name": "Be Positive", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 11942}, {"contestId": 1129, "index": "E", "name": "Legendary Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["binary search", "interactive", "trees"], "solvedCount": 496}, {"contestId": 1129, "index": "D", "name": "Isolation", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures", "dp"], "solvedCount": 1217}, {"contestId": 1129, "index": "C", "name": "Morse Code", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "hashing", "sortings", "string suffix structures", "strings"], "solvedCount": 972}, {"contestId": 1129, "index": "B", "name": "Wrong Answer", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms"], "solvedCount": 2282}, {"contestId": 1129, "index": "A2", "name": "Toy Train", "type": "PROGRAMMING", "points": 250.0, "rating": 1800, "tags": ["brute force", "greedy"], "solvedCount": 4182}, {"contestId": 1129, "index": "A1", "name": "Toy Train (Simplified)", "type": "PROGRAMMING", "points": 250.0, "rating": 1700, "tags": ["brute force", "greedy"], "solvedCount": 3886}, {"contestId": 1121, "index": "C", "name": "System Testing", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 2056}, {"contestId": 1121, "index": "B", "name": "Mike and Children", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 9629}, {"contestId": 1121, "index": "A", "name": "Technogoblet of Fire", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "sortings"], "solvedCount": 7349}, {"contestId": 1120, "index": "F", "name": "Secret Letters", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dp", "greedy"], "solvedCount": 274}, {"contestId": 1120, "index": "E", "name": "The very same Munchhausen", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force"], "solvedCount": 136}, {"contestId": 1120, "index": "D", "name": "Power Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1611}, {"contestId": 1120, "index": "C", "name": "Compress String", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "strings"], "solvedCount": 2212}, {"contestId": 1120, "index": "B", "name": "Once in a casino", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 452}, {"contestId": 1120, "index": "A", "name": "Diana and Liana", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["greedy", "implementation", "two pointers"], "solvedCount": 1694}, {"contestId": 1119, "index": "H", "name": "Triple", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["fft", "math"], "solvedCount": 636}, {"contestId": 1119, "index": "G", "name": "Get Ready for the Battle", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 539}, {"contestId": 1119, "index": "F", "name": "Niyaz and Small Degrees", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["data structures", "dp", "trees"], "solvedCount": 803}, {"contestId": 1119, "index": "E", "name": "Pavel and Triangles", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["brute force", "dp", "fft", "greedy", "ternary search"], "solvedCount": 5309}, {"contestId": 1119, "index": "D", "name": "Frets On Fire", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "sortings"], "solvedCount": 4988}, {"contestId": 1119, "index": "C", "name": "Ramesses and Corner Inversion", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 7034}, {"contestId": 1119, "index": "B", "name": "Alyona and a Narrow Fridge", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "flows", "greedy", "sortings"], "solvedCount": 13562}, {"contestId": 1119, "index": "A", "name": "Ilya and a Colorful Walk", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 11095}, {"contestId": 1118, "index": "F2", "name": "Tree Cutting (Hard Version)", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "solvedCount": 590}, {"contestId": 1118, "index": "F1", "name": "Tree Cutting (Easy Version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "trees"], "solvedCount": 6365}, {"contestId": 1118, "index": "E", "name": "Yet Another Ball Problem", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 4344}, {"contestId": 1118, "index": "D2", "name": "Coffee and Coursework (Hard Version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "greedy"], "solvedCount": 6599}, {"contestId": 1118, "index": "D1", "name": "Coffee and Coursework (Easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "greedy"], "solvedCount": 5911}, {"contestId": 1118, "index": "C", "name": "Palindromic Matrix", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 5946}, {"contestId": 1118, "index": "B", "name": "Tanya and Candies", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"], "solvedCount": 12825}, {"contestId": 1118, "index": "A", "name": "Water Buying", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 20919}, {"contestId": 1117, "index": "G", "name": "Recursive Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"], "solvedCount": 790}, {"contestId": 1117, "index": "F", "name": "Crisp String", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dp"], "solvedCount": 641}, {"contestId": 1117, "index": "E", "name": "Decypher the String", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "interactive", "math"], "solvedCount": 1586}, {"contestId": 1117, "index": "D", "name": "Magic Gems", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math", "matrices"], "solvedCount": 4751}, {"contestId": 1117, "index": "C", "name": "Magic Ship", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search"], "solvedCount": 8198}, {"contestId": 1117, "index": "B", "name": "Emotes", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math", "sortings"], "solvedCount": 15201}, {"contestId": 1117, "index": "A", "name": "Best Subsegment", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 11214}, {"contestId": 1116, "index": "D6", "name": "Hessenberg matrix", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 81}, {"contestId": 1116, "index": "D5", "name": "Creeper", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 151}, {"contestId": 1116, "index": "D4", "name": "TIE fighter", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 171}, {"contestId": 1116, "index": "D3", "name": "X-wing fighter", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 206}, {"contestId": 1116, "index": "D2", "name": "Pattern of increasing blocks", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 235}, {"contestId": 1116, "index": "D1", "name": "Block diagonal matrix", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 277}, {"contestId": 1116, "index": "C3", "name": "``Is the number of ones divisible by 3?'' oracle", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 186}, {"contestId": 1116, "index": "C2", "name": "``Is the bit string periodic?'' oracle", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 188}, {"contestId": 1116, "index": "C1", "name": "Alternating bits oracle", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 266}, {"contestId": 1116, "index": "B2", "name": "Not A, not B or not C?", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 61}, {"contestId": 1116, "index": "B1", "name": "Distinguish three-qubit states", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 135}, {"contestId": 1116, "index": "A2", "name": "Generate equal superposition of four basis states", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 183}, {"contestId": 1116, "index": "A1", "name": "Generate state |00\u27e9 + |01\u27e9 + |10\u27e9", "type": "PROGRAMMING", "tags": ["*special"], "solvedCount": 326}, {"contestId": 1115, "index": "U3", "name": "Block unitary", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 199}, {"contestId": 1115, "index": "U2", "name": "Chessboard unitary", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 239}, {"contestId": 1115, "index": "U1", "name": "Anti-diagonal unitary", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"], "solvedCount": 263}, {"contestId": 1115, "index": "G3", "name": "Palindrome checker oracle", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 236}, {"contestId": 1115, "index": "G2", "name": "OR oracle", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 316}, {"contestId": 1115, "index": "G1", "name": "AND oracle", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special"], "solvedCount": 398}, {"contestId": 1114, "index": "F", "name": "Please, another Queries on Array?", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "math", "number theory"], "solvedCount": 2233}, {"contestId": 1114, "index": "E", "name": "Arithmetic Progression", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "interactive", "number theory", "probabilities"], "solvedCount": 3040}, {"contestId": 1114, "index": "D", "name": "Flood Fill", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp"], "solvedCount": 7464}, {"contestId": 1114, "index": "C", "name": "Trailing Loves (or L'oeufs?)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 7615}, {"contestId": 1114, "index": "B", "name": "Yet Another Array Partitioning Task", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 9233}, {"contestId": 1114, "index": "A", "name": "Got Any Grapes?", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 19218}, {"contestId": 1113, "index": "B", "name": "Sasha and Magnetic Machines", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "number theory"], "solvedCount": 7963}, {"contestId": 1113, "index": "A", "name": "Sasha and His Trip", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["dp", "greedy", "math"], "solvedCount": 17823}, {"contestId": 1111, "index": "E", "name": "Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 1009}, {"contestId": 1111, "index": "D", "name": "Destroy the Colony", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1041}, {"contestId": 1111, "index": "C", "name": "Creative Snap", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "divide and conquer", "math"], "solvedCount": 6557}, {"contestId": 1111, "index": "B", "name": "Average Superhero Gang Power ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation", "math"], "solvedCount": 6387}, {"contestId": 1111, "index": "A", "name": "Superhero Transformation", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 17527}, {"contestId": 1110, "index": "H", "name": "Modest Substrings", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "strings"], "solvedCount": 355}, {"contestId": 1110, "index": "G", "name": "Tree-Tac-Toe ", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "games", "trees"], "solvedCount": 676}, {"contestId": 1110, "index": "F", "name": "Nearest Leaf", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 1903}, {"contestId": 1110, "index": "E", "name": "Magic Stones", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "math", "sortings"], "solvedCount": 4421}, {"contestId": 1110, "index": "D", "name": "Jongmah", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp"], "solvedCount": 3817}, {"contestId": 1110, "index": "C", "name": "Meaningless Operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 9763}, {"contestId": 1110, "index": "B", "name": "Tape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 13926}, {"contestId": 1110, "index": "A", "name": "Parity", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"], "solvedCount": 15519}, {"contestId": 1109, "index": "F", "name": "Sasha and Algorithm of Silence's Sounds", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "trees"], "solvedCount": 326}, {"contestId": 1109, "index": "E", "name": "Sasha and a Very Easy Test", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "number theory"], "solvedCount": 577}, {"contestId": 1109, "index": "D", "name": "Sasha and Interesting Fact from Graph Theory", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math", "trees"], "solvedCount": 1437}, {"contestId": 1109, "index": "C", "name": "Sasha and a Patient Friend", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 271}, {"contestId": 1109, "index": "B", "name": "Sasha and One More Name", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["constructive algorithms", "hashing", "strings"], "solvedCount": 4457}, {"contestId": 1109, "index": "A", "name": "Sasha and a Bit of Relax", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "implementation"], "solvedCount": 8755}, {"contestId": 1108, "index": "F", "name": "MST Unification", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "dsu", "graphs", "greedy"], "solvedCount": 3252}, {"contestId": 1108, "index": "E2", "name": "Array and Segments (Hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "implementation"], "solvedCount": 2375}, {"contestId": 1108, "index": "E1", "name": "Array and Segments (Easy version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 4742}, {"contestId": 1108, "index": "D", "name": "Diverse Garland", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 16030}, {"contestId": 1108, "index": "C", "name": "Nice Garland", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "greedy", "math"], "solvedCount": 12349}, {"contestId": 1108, "index": "B", "name": "Divisors of Two Integers", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 24380}, {"contestId": 1108, "index": "A", "name": "Two distinct points", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 22735}, {"contestId": 1107, "index": "G", "name": "Vasya and Maximum Profit", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "dsu"], "solvedCount": 1126}, {"contestId": 1107, "index": "F", "name": "Vasya and Endless Credits", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "flows", "graph matchings", "graphs", "sortings"], "solvedCount": 866}, {"contestId": 1107, "index": "E", "name": "Vasya and Binary String", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"], "solvedCount": 2553}, {"contestId": 1107, "index": "D", "name": "Compression", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "implementation", "math", "number theory"], "solvedCount": 3812}, {"contestId": 1107, "index": "C", "name": "Brutality", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 10578}, {"contestId": 1107, "index": "B", "name": "Digital root", "type": "PROGRAMMING", "rating": 1000, "tags": ["math", "number theory"], "solvedCount": 16885}, {"contestId": 1107, "index": "A", "name": "Digits Sequence Dividing", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "strings"], "solvedCount": 12298}, {"contestId": 1106, "index": "F", "name": "Lunar New Year and a Recursive Sequence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["math", "matrices", "number theory"], "solvedCount": 1091}, {"contestId": 1106, "index": "E", "name": "Lunar New Year and Red Envelopes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 2696}, {"contestId": 1106, "index": "D", "name": "Lunar New Year and a Wander", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths"], "solvedCount": 17100}, {"contestId": 1106, "index": "C", "name": "Lunar New Year and Number Division", "type": "PROGRAMMING", "points": 1250.0, "rating": 900, "tags": ["greedy", "implementation", "math", "sortings"], "solvedCount": 15201}, {"contestId": 1106, "index": "B", "name": "Lunar New Year and Food Ordering", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 6889}, {"contestId": 1106, "index": "A", "name": "Lunar New Year and Cross Counting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 12587}, {"contestId": 1105, "index": "E", "name": "Helping Hiasat ", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "solvedCount": 1755}, {"contestId": 1105, "index": "D", "name": "Kilani and the Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "solvedCount": 4319}, {"contestId": 1105, "index": "C", "name": "Ayoub and Lost Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"], "solvedCount": 10836}, {"contestId": 1105, "index": "B", "name": "Zuhair and Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "strings"], "solvedCount": 10073}, {"contestId": 1105, "index": "A", "name": "Salem and Sticks ", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 11280}, {"contestId": 1104, "index": "B", "name": "Game with string", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["data structures", "implementation", "math"], "solvedCount": 16078}, {"contestId": 1104, "index": "A", "name": "Splitting into digits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 15722}, {"contestId": 1103, "index": "E", "name": "Radix sum", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["fft", "math", "number theory"], "solvedCount": 253}, {"contestId": 1103, "index": "D", "name": "Professional layer", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["bitmasks", "dp"], "solvedCount": 458}, {"contestId": 1103, "index": "C", "name": "Johnny Solving", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"], "solvedCount": 916}, {"contestId": 1103, "index": "B", "name": "Game with modulo", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 3392}, {"contestId": 1103, "index": "A", "name": "Grid game", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 10368}, {"contestId": 1102, "index": "F", "name": "Elongated Matrix", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "bitmasks", "brute force", "dp", "graphs"], "solvedCount": 2188}, {"contestId": 1102, "index": "E", "name": "Monotonic Renumeration", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "sortings"], "solvedCount": 6475}, {"contestId": 1102, "index": "D", "name": "Balanced Ternary String", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "strings"], "solvedCount": 8327}, {"contestId": 1102, "index": "C", "name": "Doors Breaking and Repairing", "type": "PROGRAMMING", "rating": 1200, "tags": ["games"], "solvedCount": 13609}, {"contestId": 1102, "index": "B", "name": "Array K-Coloring", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 10805}, {"contestId": 1102, "index": "A", "name": "Integer Sequence Dividing", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 25648}, {"contestId": 1101, "index": "G", "name": "(Zero XOR Subset)-less", "type": "PROGRAMMING", "rating": 2300, "tags": ["math", "matrices"], "solvedCount": 1967}, {"contestId": 1101, "index": "F", "name": "Trucks and Cities", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dp"], "solvedCount": 1519}, {"contestId": 1101, "index": "E", "name": "Polycarp's New Job", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"], "solvedCount": 8122}, {"contestId": 1101, "index": "D", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "number theory", "trees"], "solvedCount": 5081}, {"contestId": 1101, "index": "C", "name": "Division and Union", "type": "PROGRAMMING", "rating": 1500, "tags": ["sortings"], "solvedCount": 9891}, {"contestId": 1101, "index": "B", "name": "Accordion", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "implementation"], "solvedCount": 10905}, {"contestId": 1101, "index": "A", "name": "Minimum Integer", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"], "solvedCount": 18150}, {"contestId": 1100, "index": "F", "name": "Ivan and Burgers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "greedy", "math"], "solvedCount": 3158}, {"contestId": 1100, "index": "E", "name": "Andrew and Taxi", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "dfs and similar", "graphs"], "solvedCount": 2498}, {"contestId": 1100, "index": "D", "name": "Dasha and Chess", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "games", "interactive"], "solvedCount": 903}, {"contestId": 1100, "index": "C", "name": "NN and the Optical Illusion", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["binary search", "geometry", "math"], "solvedCount": 10558}, {"contestId": 1100, "index": "B", "name": "Build a Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation"], "solvedCount": 11491}, {"contestId": 1100, "index": "A", "name": "Roman and Browser", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 10443}, {"contestId": 1099, "index": "F", "name": "Cookies", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "games", "trees"], "solvedCount": 994}, {"contestId": 1099, "index": "C", "name": "Postcard", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 10092}, {"contestId": 1099, "index": "B", "name": "Squares and Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 11328}, {"contestId": 1099, "index": "A", "name": "Snowball", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 13161}, {"contestId": 1098, "index": "F", "name": "\u0416-function", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["string suffix structures", "strings"], "solvedCount": 263}, {"contestId": 1098, "index": "E", "name": "Fedya the Potter", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["binary search", "implementation", "math", "number theory"], "solvedCount": 261}, {"contestId": 1098, "index": "D", "name": "Eels", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures"], "solvedCount": 844}, {"contestId": 1098, "index": "C", "name": "Construct a tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1128}, {"contestId": 1098, "index": "B", "name": "Nice table", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 1750}, {"contestId": 1098, "index": "A", "name": "Sum in the tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 9221}, {"contestId": 1097, "index": "H", "name": "Mateusz and an Infinite Sequence", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["bitmasks", "brute force", "dp", "strings"], "solvedCount": 116}, {"contestId": 1097, "index": "G", "name": "Vladislav and a Great Legend", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 885}, {"contestId": 1097, "index": "F", "name": "Alex and a TV Show", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "number theory"], "solvedCount": 1367}, {"contestId": 1097, "index": "E", "name": "Egor and an RPG game", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 509}, {"contestId": 1097, "index": "D", "name": "Makoto and a Blackboard", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "math", "number theory", "probabilities"], "solvedCount": 3001}, {"contestId": 1097, "index": "C", "name": "Yuhao and a Parenthesis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 8596}, {"contestId": 1097, "index": "B", "name": "Petr and a Combination Lock", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "dp"], "solvedCount": 32795}, {"contestId": 1097, "index": "A", "name": "Gennady and a Card Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 41927}, {"contestId": 1096, "index": "G", "name": "Lucky Tickets", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "fft"], "solvedCount": 1773}, {"contestId": 1096, "index": "F", "name": "Inversion Expectation", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "math", "probabilities"], "solvedCount": 1911}, {"contestId": 1096, "index": "E", "name": "The Top Scorer", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 1159}, {"contestId": 1096, "index": "D", "name": "Easy Problem", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"], "solvedCount": 8837}, {"contestId": 1096, "index": "C", "name": "Polygon for the Angle", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "geometry"], "solvedCount": 7004}, {"contestId": 1096, "index": "B", "name": "Substring Removal", "type": "PROGRAMMING", "rating": 1300, "tags": ["combinatorics", "math", "strings"], "solvedCount": 11098}, {"contestId": 1096, "index": "A", "name": "Find Divisible", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "math"], "solvedCount": 19292}, {"contestId": 1095, "index": "F", "name": "Make It Connected", "type": "PROGRAMMING", "rating": 1900, "tags": ["dsu", "graphs", "greedy"], "solvedCount": 6951}, {"contestId": 1095, "index": "E", "name": "Almost Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["implementation"], "solvedCount": 4303}, {"contestId": 1095, "index": "D", "name": "Circular Dance", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 7865}, {"contestId": 1095, "index": "C", "name": "Powers Of Two", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "greedy"], "solvedCount": 18554}, {"contestId": 1095, "index": "B", "name": "Array Stabilization", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 23347}, {"contestId": 1095, "index": "A", "name": "Repeating Cipher", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 34590}, {"contestId": 1093, "index": "G", "name": "Multidimensional Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "data structures"], "solvedCount": 2066}, {"contestId": 1093, "index": "F", "name": "Vasya and Array", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"], "solvedCount": 1151}, {"contestId": 1093, "index": "E", "name": "Intersection of Permutations", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 1755}, {"contestId": 1093, "index": "D", "name": "Beautiful Graph", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs"], "solvedCount": 10447}, {"contestId": 1093, "index": "C", "name": "Mishka and the Last Exam", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"], "solvedCount": 9578}, {"contestId": 1093, "index": "B", "name": "Letters Rearranging", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 17231}, {"contestId": 1093, "index": "A", "name": "Dice Rolling", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 18035}, {"contestId": 1092, "index": "F", "name": "Tree with Maximum Cost", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 9537}, {"contestId": 1092, "index": "E", "name": "Minimal Diameter Forest", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1875}, {"contestId": 1092, "index": "D2", "name": "Great Vova Wall (Version 2)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "implementation"], "solvedCount": 3209}, {"contestId": 1092, "index": "D1", "name": "Great Vova Wall (Version 1)", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation", "math"], "solvedCount": 5311}, {"contestId": 1092, "index": "C", "name": "Prefixes and Suffixes", "type": "PROGRAMMING", "rating": 1700, "tags": ["strings"], "solvedCount": 6177}, {"contestId": 1092, "index": "B", "name": "Teams Forming", "type": "PROGRAMMING", "rating": 800, "tags": ["sortings"], "solvedCount": 27711}, {"contestId": 1092, "index": "A", "name": "Uniform String", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 16817}, {"contestId": 1091, "index": "H", "name": "New Year and the Tricolore Recreation", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["games"], "solvedCount": 465}, {"contestId": 1091, "index": "G", "name": "New Year and the Factorisation Collaboration", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["interactive", "math", "number theory"], "solvedCount": 218}, {"contestId": 1091, "index": "F", "name": "New Year and the Mallard Expedition", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 860}, {"contestId": 1091, "index": "E", "name": "New Year and the Acquaintance Estimation", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["binary search", "data structures", "graphs", "greedy", "implementation", "math", "sortings"], "solvedCount": 1036}, {"contestId": 1091, "index": "D", "name": "New Year and the Permutation Concatenation", "type": "PROGRAMMING", "points": 2250.0, "rating": 1700, "tags": ["combinatorics", "dp", "math"], "solvedCount": 7149}, {"contestId": 1091, "index": "C", "name": "New Year and the Sphere Transmission", "type": "PROGRAMMING", "points": 1750.0, "rating": 1400, "tags": ["math", "number theory"], "solvedCount": 10332}, {"contestId": 1091, "index": "B", "name": "New Year and the Treasure Geolocation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 10860}, {"contestId": 1091, "index": "A", "name": "New Year and the Christmas Ornament", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "math"], "solvedCount": 18066}, {"contestId": 1090, "index": "M", "name": "The Pleasant Walk", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 6740}, {"contestId": 1090, "index": "L", "name": "Berland University", "type": "PROGRAMMING", "rating": 2000, "tags": ["greedy", "math"], "solvedCount": 1360}, {"contestId": 1090, "index": "K", "name": "Right Expansion Of The Mind", "type": "PROGRAMMING", "rating": 2000, "tags": ["math"], "solvedCount": 1154}, {"contestId": 1090, "index": "J", "name": "Two Prefixes", "type": "PROGRAMMING", "rating": 2600, "tags": ["strings"], "solvedCount": 524}, {"contestId": 1090, "index": "I", "name": "Minimal Product", "type": "PROGRAMMING", "rating": 2000, "tags": [], "solvedCount": 1134}, {"contestId": 1090, "index": "H", "name": "Linearization", "type": "PROGRAMMING", "rating": 2900, "tags": ["graphs"], "solvedCount": 103}, {"contestId": 1090, "index": "G", "name": "Combostone", "type": "PROGRAMMING", "rating": 2500, "tags": ["games", "implementation"], "solvedCount": 118}, {"contestId": 1090, "index": "F", "name": "How to Learn You Score", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "interactive"], "solvedCount": 352}, {"contestId": 1090, "index": "E", "name": "Horseback Riding", "type": "PROGRAMMING", "rating": 2300, "tags": ["flows", "graphs"], "solvedCount": 639}, {"contestId": 1090, "index": "D", "name": "Similar Arrays", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 2215}, {"contestId": 1090, "index": "C", "name": "New Year Presents", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "data structures"], "solvedCount": 549}, {"contestId": 1090, "index": "B", "name": "LaTeX Expert", "type": "PROGRAMMING", "rating": 1900, "tags": [], "solvedCount": 1492}, {"contestId": 1090, "index": "A", "name": "Company Merging", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"], "solvedCount": 4729}, {"contestId": 1089, "index": "M", "name": "Minegraphed", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "graphs"], "solvedCount": 636}, {"contestId": 1089, "index": "L", "name": "Lazyland", "type": "PROGRAMMING", "rating": 900, "tags": [], "solvedCount": 4373}, {"contestId": 1089, "index": "K", "name": "King Kog's Reception", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 1191}, {"contestId": 1089, "index": "J", "name": "JS Minification", "type": "PROGRAMMING", "rating": 3200, "tags": ["greedy", "implementation"], "solvedCount": 140}, {"contestId": 1089, "index": "I", "name": "Interval-Free Permutations", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics"], "solvedCount": 403}, {"contestId": 1089, "index": "H", "name": "Harder Satisfiability", "type": "PROGRAMMING", "rating": 3400, "tags": ["2-sat", "dfs and similar", "graphs"], "solvedCount": 121}, {"contestId": 1089, "index": "G", "name": "Guest Student", "type": "PROGRAMMING", "rating": 1500, "tags": ["math"], "solvedCount": 3091}, {"contestId": 1089, "index": "F", "name": "Fractions", "type": "PROGRAMMING", "rating": 1900, "tags": ["math"], "solvedCount": 2079}, {"contestId": 1089, "index": "E", "name": "Easy Chess", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms"], "solvedCount": 2089}, {"contestId": 1089, "index": "D", "name": "Distance Sum", "type": "PROGRAMMING", "rating": 3100, "tags": ["graphs"], "solvedCount": 104}, {"contestId": 1089, "index": "C", "name": "Cactus Search", "type": "PROGRAMMING", "rating": 2500, "tags": ["interactive"], "solvedCount": 440}, {"contestId": 1089, "index": "B", "name": "Bimatching", "type": "PROGRAMMING", "rating": 3200, "tags": ["graphs"], "solvedCount": 238}, {"contestId": 1089, "index": "A", "name": "Alice the Fan", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"], "solvedCount": 1234}, {"contestId": 1088, "index": "F", "name": "Ehab and a weird weight formula", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "trees"], "solvedCount": 561}, {"contestId": 1088, "index": "E", "name": "Ehab and a component choosing problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp", "greedy", "math", "trees"], "solvedCount": 1575}, {"contestId": 1088, "index": "D", "name": "Ehab and another another xor problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "constructive algorithms", "implementation", "interactive"], "solvedCount": 3003}, {"contestId": 1088, "index": "C", "name": "Ehab and a 2-operation task", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 8378}, {"contestId": 1088, "index": "B", "name": "Ehab and subtraction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation", "sortings"], "solvedCount": 12905}, {"contestId": 1088, "index": "A", "name": "Ehab and another construction problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 17392}, {"contestId": 1086, "index": "F", "name": "Forest Fires", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["math"], "solvedCount": 292}, {"contestId": 1085, "index": "G", "name": "Beautiful Matrix", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["combinatorics", "data structures", "dp"], "solvedCount": 625}, {"contestId": 1085, "index": "F", "name": "Rock-Paper-Scissors Champion", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": [], "solvedCount": 659}, {"contestId": 1085, "index": "E", "name": "Vasya and Templates", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["greedy", "implementation", "strings"], "solvedCount": 1096}, {"contestId": 1085, "index": "D", "name": "Minimum Diameter Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 5675}, {"contestId": 1085, "index": "C", "name": "Connect Three", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["implementation", "math"], "solvedCount": 5551}, {"contestId": 1085, "index": "B", "name": "Div Times Mod", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["math"], "solvedCount": 9707}, {"contestId": 1085, "index": "A", "name": "Right-Left Cipher", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 12461}, {"contestId": 1084, "index": "C", "name": "The Fair Nut and String", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "implementation"], "solvedCount": 9717}, {"contestId": 1084, "index": "B", "name": "Kvass and the Fair Nut", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 8079}, {"contestId": 1084, "index": "A", "name": "The Fair Nut and Elevator", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 8070}, {"contestId": 1083, "index": "F", "name": "The Fair Nut and Amusing Xor", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 301}, {"contestId": 1083, "index": "E", "name": "The Fair Nut and Rectangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "geometry"], "solvedCount": 4988}, {"contestId": 1083, "index": "D", "name": "The Fair Nut's getting crazy", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "implementation"], "solvedCount": 311}, {"contestId": 1083, "index": "C", "name": "Max Mex", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 1019}, {"contestId": 1083, "index": "B", "name": "The Fair Nut and Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["greedy", "strings"], "solvedCount": 2077}, {"contestId": 1083, "index": "A", "name": "The Fair Nut and the Best Path", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["data structures", "dp", "trees"], "solvedCount": 5924}, {"contestId": 1082, "index": "G", "name": "Petya and Graph", "type": "PROGRAMMING", "rating": 2400, "tags": ["flows", "graphs"], "solvedCount": 2428}, {"contestId": 1082, "index": "F", "name": "Speed Dial", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "strings", "trees"], "solvedCount": 464}, {"contestId": 1082, "index": "E", "name": "Increasing Frequency", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "dp", "greedy"], "solvedCount": 5450}, {"contestId": 1082, "index": "D", "name": "Maximum Diameter Graph", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 3948}, {"contestId": 1082, "index": "C", "name": "Multi-Subject Competition", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "sortings"], "solvedCount": 5976}, {"contestId": 1082, "index": "B", "name": "Vova and Trophies", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"], "solvedCount": 7839}, {"contestId": 1082, "index": "A", "name": "Vasya and Book", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 8982}, {"contestId": 1081, "index": "H", "name": "Palindromic Magic", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures", "hashing", "strings"], "solvedCount": 122}, {"contestId": 1081, "index": "G", "name": "Mergesort Strikes Back", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["math", "probabilities"], "solvedCount": 416}, {"contestId": 1081, "index": "F", "name": "Tricky Interactor", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "implementation", "interactive"], "solvedCount": 494}, {"contestId": 1081, "index": "E", "name": "Missing Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 2697}, {"contestId": 1081, "index": "D", "name": "Maximum Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dsu", "graphs", "shortest paths", "sortings"], "solvedCount": 4436}, {"contestId": 1081, "index": "C", "name": "Colorful Bricks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"], "solvedCount": 8044}, {"contestId": 1081, "index": "B", "name": "Farewell Party", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 4568}, {"contestId": 1081, "index": "A", "name": "Definite Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 12613}, {"contestId": 1080, "index": "F", "name": "Katya and Segments Sets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "interactive", "sortings"], "solvedCount": 825}, {"contestId": 1080, "index": "E", "name": "Sonya and Matrix Beauty", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["strings"], "solvedCount": 1206}, {"contestId": 1080, "index": "D", "name": "Olya and magical square", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 1628}, {"contestId": 1080, "index": "C", "name": "Masha and two friends", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["implementation"], "solvedCount": 4155}, {"contestId": 1080, "index": "B", "name": "Margarite and the best present", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["math"], "solvedCount": 12320}, {"contestId": 1080, "index": "A", "name": "Petya and Origami", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 18698}, {"contestId": 1078, "index": "E", "name": "Negative Time Summation", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["constructive algorithms"], "solvedCount": 93}, {"contestId": 1077, "index": "F2", "name": "Pictures with Kittens (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 3817}, {"contestId": 1077, "index": "F1", "name": "Pictures with Kittens (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"], "solvedCount": 4891}, {"contestId": 1077, "index": "E", "name": "Thematic Contests", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "sortings"], "solvedCount": 4923}, {"contestId": 1077, "index": "D", "name": "Cutting Out", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "sortings"], "solvedCount": 9686}, {"contestId": 1077, "index": "C", "name": "Good Array", "type": "PROGRAMMING", "rating": 1300, "tags": [], "solvedCount": 21489}, {"contestId": 1077, "index": "B", "name": "Disturbed People", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy"], "solvedCount": 19812}, {"contestId": 1077, "index": "A", "name": "Frog Jumping", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 31358}, {"contestId": 1076, "index": "G", "name": "Array Game", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "games"], "solvedCount": 672}, {"contestId": 1076, "index": "F", "name": "Summer Practice Report", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "greedy"], "solvedCount": 682}, {"contestId": 1076, "index": "E", "name": "Vasya and a Tree", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "trees"], "solvedCount": 3958}, {"contestId": 1076, "index": "D", "name": "Edge Deletion", "type": "PROGRAMMING", "rating": 1800, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 5611}, {"contestId": 1076, "index": "C", "name": "Meme Problem", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "math"], "solvedCount": 12982}, {"contestId": 1076, "index": "B", "name": "Divisor Subtraction", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math", "number theory"], "solvedCount": 13938}, {"contestId": 1076, "index": "A", "name": "Minimizing the String", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "strings"], "solvedCount": 13776}, {"contestId": 1075, "index": "B", "name": "Taxi drivers and Lyft", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 4386}, {"contestId": 1075, "index": "A", "name": "The King's Race", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 8792}, {"contestId": 1073, "index": "G", "name": "Yet Another LCP Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "string suffix structures"], "solvedCount": 1019}, {"contestId": 1073, "index": "F", "name": "Choosing Two Paths", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 574}, {"contestId": 1073, "index": "E", "name": "Segment Sum", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "combinatorics", "dp", "math"], "solvedCount": 3018}, {"contestId": 1073, "index": "D", "name": "Berland Fair", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "data structures", "greedy"], "solvedCount": 6586}, {"contestId": 1073, "index": "C", "name": "Vasya and Robot", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "two pointers"], "solvedCount": 5162}, {"contestId": 1073, "index": "B", "name": "Vasya and Books", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 10908}, {"contestId": 1073, "index": "A", "name": "Diverse Substring", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 16450}, {"contestId": 1071, "index": "E", "name": "Rain Protection", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["binary search", "geometry"], "solvedCount": 158}, {"contestId": 1070, "index": "M", "name": "Algoland and Berland", "type": "PROGRAMMING", "rating": 3000, "tags": ["constructive algorithms", "divide and conquer", "geometry"], "solvedCount": 77}, {"contestId": 1070, "index": "L", "name": "Odd Federalization", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 329}, {"contestId": 1070, "index": "K", "name": "Video Posts", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 5104}, {"contestId": 1070, "index": "J", "name": "Streets and Avenues in Berhattan", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"], "solvedCount": 737}, {"contestId": 1070, "index": "I", "name": "Privatization of Roads in Berland", "type": "PROGRAMMING", "rating": 2400, "tags": ["flows", "graph matchings", "graphs"], "solvedCount": 755}, {"contestId": 1070, "index": "H", "name": "BerOS File Suggestion", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 3785}, {"contestId": 1070, "index": "G", "name": "Monsters and Potions", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 882}, {"contestId": 1070, "index": "F", "name": "Debate", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"], "solvedCount": 3751}, {"contestId": 1070, "index": "E", "name": "Getting Deals Done", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures"], "solvedCount": 1432}, {"contestId": 1070, "index": "D", "name": "Garbage Disposal", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"], "solvedCount": 5131}, {"contestId": 1070, "index": "C", "name": "Cloud Computing", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "greedy"], "solvedCount": 2216}, {"contestId": 1070, "index": "B", "name": "Berkomnadzor", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "greedy"], "solvedCount": 665}, {"contestId": 1070, "index": "A", "name": "Find a Number", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "graphs", "number theory", "shortest paths"], "solvedCount": 2481}, {"contestId": 1068, "index": "C", "name": "Colored Rooks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs"], "solvedCount": 3275}, {"contestId": 1068, "index": "B", "name": "LCM", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["math", "number theory"], "solvedCount": 12357}, {"contestId": 1068, "index": "A", "name": "Birthday", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["math"], "solvedCount": 7068}, {"contestId": 1067, "index": "E", "name": "Random Forest Rank", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "graph matchings", "math", "trees"], "solvedCount": 507}, {"contestId": 1067, "index": "D", "name": "Computer Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["dp", "greedy", "math", "probabilities"], "solvedCount": 458}, {"contestId": 1067, "index": "C", "name": "Knights", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 698}, {"contestId": 1067, "index": "B", "name": "Multihedgehog", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 2789}, {"contestId": 1067, "index": "A", "name": "Array Without Local Maximums ", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["dp"], "solvedCount": 3028}, {"contestId": 1066, "index": "F", "name": "Yet another 2D Walking", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"], "solvedCount": 2163}, {"contestId": 1066, "index": "E", "name": "Binary Numbers AND Sum", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "math"], "solvedCount": 6360}, {"contestId": 1066, "index": "D", "name": "Boxes Packing", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "implementation"], "solvedCount": 5715}, {"contestId": 1066, "index": "C", "name": "Books Queries", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"], "solvedCount": 10015}, {"contestId": 1066, "index": "B", "name": "Heaters", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "two pointers"], "solvedCount": 8939}, {"contestId": 1066, "index": "A", "name": "Vova and Train", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"], "solvedCount": 15044}, {"contestId": 1065, "index": "G", "name": "Fibonacci Suffix", "type": "PROGRAMMING", "rating": 2700, "tags": ["strings"], "solvedCount": 278}, {"contestId": 1065, "index": "F", "name": "Up and Down the Tree", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 1261}, {"contestId": 1065, "index": "E", "name": "Side Transmutations", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "strings"], "solvedCount": 1164}, {"contestId": 1065, "index": "D", "name": "Three Pieces", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "shortest paths"], "solvedCount": 1381}, {"contestId": 1065, "index": "C", "name": "Make It Equal", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"], "solvedCount": 8108}, {"contestId": 1065, "index": "B", "name": "Vasya and Isolated Vertices", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "graphs"], "solvedCount": 11309}, {"contestId": 1065, "index": "A", "name": "Vasya and Chocolate", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 14933}, {"contestId": 1064, "index": "B", "name": "Equations of Mathematical Magic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math"], "solvedCount": 7728}, {"contestId": 1064, "index": "A", "name": "Make a triangle!", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "geometry", "math"], "solvedCount": 23699}, {"contestId": 1063, "index": "F", "name": "String Journey", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures", "dp", "string suffix structures"], "solvedCount": 964}, {"contestId": 1063, "index": "E", "name": "Lasers and Mirrors", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["constructive algorithms", "math"], "solvedCount": 385}, {"contestId": 1063, "index": "D", "name": "Candies for Children", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "math"], "solvedCount": 455}, {"contestId": 1063, "index": "C", "name": "Dwarves, Hats and Extrasensory Abilities", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "geometry", "interactive"], "solvedCount": 3170}, {"contestId": 1063, "index": "B", "name": "Labyrinth", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["graphs", "shortest paths"], "solvedCount": 8523}, {"contestId": 1063, "index": "A", "name": "Oh Those Palindromes", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "strings"], "solvedCount": 10808}, {"contestId": 1062, "index": "F", "name": "Upgrading Cities", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dfs and similar", "graphs"], "solvedCount": 841}, {"contestId": 1062, "index": "E", "name": "Company", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 1964}, {"contestId": 1062, "index": "D", "name": "Fun with Integers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "implementation", "math"], "solvedCount": 4056}, {"contestId": 1062, "index": "C", "name": "Banh-mi", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy", "implementation", "math"], "solvedCount": 5764}, {"contestId": 1062, "index": "B", "name": "Math", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math", "number theory"], "solvedCount": 9448}, {"contestId": 1062, "index": "A", "name": "A Prank", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "implementation"], "solvedCount": 9064}, {"contestId": 1061, "index": "F", "name": "Lost Root", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["interactive", "probabilities"], "solvedCount": 835}, {"contestId": 1061, "index": "E", "name": "Politics", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["flows", "graphs"], "solvedCount": 563}, {"contestId": 1061, "index": "D", "name": "TV Shows", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 2463}, {"contestId": 1061, "index": "C", "name": "Multiplicity", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp", "implementation", "math", "number theory"], "solvedCount": 9887}, {"contestId": 1061, "index": "B", "name": "Views Matter", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 7520}, {"contestId": 1061, "index": "A", "name": "Coins", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math"], "solvedCount": 23198}, {"contestId": 1060, "index": "H", "name": "Sophisticated Device", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms"], "solvedCount": 234}, {"contestId": 1060, "index": "G", "name": "Balls and Pockets", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["data structures"], "solvedCount": 225}, {"contestId": 1060, "index": "F", "name": "Shrinking Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["combinatorics", "dp"], "solvedCount": 710}, {"contestId": 1060, "index": "E", "name": "Sergey and Subway", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 3335}, {"contestId": 1060, "index": "D", "name": "Social Circles", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["greedy", "math"], "solvedCount": 3750}, {"contestId": 1060, "index": "C", "name": "Maximum Subrectangle", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "implementation", "two pointers"], "solvedCount": 5082}, {"contestId": 1060, "index": "B", "name": "Maximum Sum of Digits", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 9295}, {"contestId": 1060, "index": "A", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 14992}, {"contestId": 1059, "index": "E", "name": "Split the Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "trees"], "solvedCount": 1537}, {"contestId": 1059, "index": "D", "name": "Nature Reserve", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "geometry", "ternary search"], "solvedCount": 2885}, {"contestId": 1059, "index": "C", "name": "Sequence Transformation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "math"], "solvedCount": 7364}, {"contestId": 1059, "index": "B", "name": "Forgery", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 7318}, {"contestId": 1059, "index": "A", "name": "Cashier", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 13420}, {"contestId": 1057, "index": "C", "name": "Tanya and Colored Candies", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["*special", "dp"], "solvedCount": 1059}, {"contestId": 1057, "index": "B", "name": "DDoS", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["*special", "brute force"], "solvedCount": 1897}, {"contestId": 1057, "index": "A", "name": "Bmail Computer Network", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["*special", "dfs and similar", "trees"], "solvedCount": 6707}, {"contestId": 1056, "index": "H", "name": "Detect Robots", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "strings"], "solvedCount": 189}, {"contestId": 1056, "index": "G", "name": "Take Metro", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["brute force", "data structures", "graphs"], "solvedCount": 280}, {"contestId": 1056, "index": "F", "name": "Write The Contest", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "dp", "math"], "solvedCount": 674}, {"contestId": 1056, "index": "E", "name": "Check Transcription", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "data structures", "hashing", "strings"], "solvedCount": 2573}, {"contestId": 1056, "index": "D", "name": "Decorate Apple Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "solvedCount": 6383}, {"contestId": 1056, "index": "C", "name": "Pick Heroes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "implementation", "interactive", "sortings"], "solvedCount": 2491}, {"contestId": 1056, "index": "B", "name": "Divide Candies", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 4390}, {"contestId": 1056, "index": "A", "name": "Determine Line", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 7012}, {"contestId": 1055, "index": "G", "name": "Jellyfish Nightmare", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": [], "solvedCount": 95}, {"contestId": 1055, "index": "F", "name": "Tree and XOR", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["strings", "trees"], "solvedCount": 517}, {"contestId": 1055, "index": "E", "name": "Segments on the Line", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["binary search", "dp"], "solvedCount": 826}, {"contestId": 1055, "index": "D", "name": "Refactoring", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["greedy", "implementation", "strings"], "solvedCount": 634}, {"contestId": 1055, "index": "C", "name": "Lucky Days", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["math", "number theory"], "solvedCount": 1994}, {"contestId": 1055, "index": "B", "name": "Alice and Hairdresser", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dsu", "implementation"], "solvedCount": 5294}, {"contestId": 1055, "index": "A", "name": "Metro", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["graphs"], "solvedCount": 12183}, {"contestId": 1054, "index": "H", "name": "Epic Convolution", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["chinese remainder theorem", "fft", "math", "number theory"], "solvedCount": 199}, {"contestId": 1054, "index": "G", "name": "New Road Network", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 404}, {"contestId": 1054, "index": "F", "name": "Electric Scheme", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["flows", "graph matchings"], "solvedCount": 354}, {"contestId": 1054, "index": "E", "name": "Chips Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 505}, {"contestId": 1054, "index": "D", "name": "Changing Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["greedy", "implementation"], "solvedCount": 2332}, {"contestId": 1054, "index": "C", "name": "Candies Distribution", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 4399}, {"contestId": 1054, "index": "B", "name": "Appending Mex", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 6894}, {"contestId": 1054, "index": "A", "name": "Elevator or Stairs?", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 9280}, {"contestId": 1053, "index": "E", "name": "Euler tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "trees"], "solvedCount": 233}, {"contestId": 1051, "index": "G", "name": "Distinctification", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "dsu", "greedy"], "solvedCount": 438}, {"contestId": 1051, "index": "F", "name": "The Shortest Statement", "type": "PROGRAMMING", "rating": 2400, "tags": ["graphs", "shortest paths", "trees"], "solvedCount": 3326}, {"contestId": 1051, "index": "E", "name": "Vasya and Big Integers", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "data structures", "dp", "hashing", "strings"], "solvedCount": 1096}, {"contestId": 1051, "index": "D", "name": "Bicolorings", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "dp"], "solvedCount": 7833}, {"contestId": 1051, "index": "C", "name": "Vasya and Multisets", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp", "greedy", "implementation", "math"], "solvedCount": 9594}, {"contestId": 1051, "index": "B", "name": "Relatively Prime Pairs", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "math", "number theory"], "solvedCount": 18071}, {"contestId": 1051, "index": "A", "name": "Vasya And Password", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "strings"], "solvedCount": 8623}, {"contestId": 1047, "index": "B", "name": "Cover Points", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["geometry", "math"], "solvedCount": 17913}, {"contestId": 1047, "index": "A", "name": "Little C Loves 3 I", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 20646}, {"contestId": 1046, "index": "I", "name": "Say Hello", "type": "PROGRAMMING", "rating": 2300, "tags": ["geometry"], "solvedCount": 536}, {"contestId": 1046, "index": "F", "name": "Splitting money", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"], "solvedCount": 2888}, {"contestId": 1046, "index": "C", "name": "Space Formula", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy"], "solvedCount": 3234}, {"contestId": 1045, "index": "J", "name": "Moonwalk challenge", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "strings", "trees"], "solvedCount": 193}, {"contestId": 1045, "index": "I", "name": "Palindrome Pairs", "type": "PROGRAMMING", "rating": 1600, "tags": ["hashing", "strings"], "solvedCount": 4942}, {"contestId": 1045, "index": "H", "name": "Self-exploration", "type": "PROGRAMMING", "rating": 2400, "tags": ["math"], "solvedCount": 403}, {"contestId": 1045, "index": "G", "name": "AI robots", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures"], "solvedCount": 1863}, {"contestId": 1045, "index": "F", "name": "Shady Lady", "type": "PROGRAMMING", "rating": 3400, "tags": ["geometry", "math"], "solvedCount": 111}, {"contestId": 1045, "index": "E", "name": "Ancient civilizations", "type": "PROGRAMMING", "rating": 3200, "tags": ["constructive algorithms", "geometry"], "solvedCount": 245}, {"contestId": 1045, "index": "D", "name": "Interstellar battle", "type": "PROGRAMMING", "rating": 2200, "tags": ["math", "probabilities", "trees"], "solvedCount": 790}, {"contestId": 1045, "index": "C", "name": "Hyperspace Highways", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 779}, {"contestId": 1045, "index": "B", "name": "Space Isaac", "type": "PROGRAMMING", "rating": 2400, "tags": ["hashing", "number theory"], "solvedCount": 547}, {"contestId": 1045, "index": "A", "name": "Last chance", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "flows", "graph matchings", "graphs", "trees"], "solvedCount": 556}, {"contestId": 1044, "index": "F", "name": "DFS", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 643}, {"contestId": 1044, "index": "E", "name": "Grid Sort", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["implementation"], "solvedCount": 126}, {"contestId": 1044, "index": "D", "name": "Deduction Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dsu"], "solvedCount": 1079}, {"contestId": 1044, "index": "C", "name": "Optimal Polygon Perimeter", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "geometry"], "solvedCount": 1372}, {"contestId": 1044, "index": "B", "name": "Intersecting Subtrees", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["dfs and similar", "interactive", "trees"], "solvedCount": 1650}, {"contestId": 1044, "index": "A", "name": "The Tower is Going Home", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["binary search", "two pointers"], "solvedCount": 3012}, {"contestId": 1043, "index": "G", "name": "Speckled Band", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "hashing", "string suffix structures", "strings"], "solvedCount": 297}, {"contestId": 1043, "index": "F", "name": "Make It One", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory", "shortest paths"], "solvedCount": 2724}, {"contestId": 1043, "index": "E", "name": "Train Hard, Win Easy", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 3105}, {"contestId": 1043, "index": "D", "name": "Mysterious Crime", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["brute force", "combinatorics", "math", "meet-in-the-middle", "two pointers"], "solvedCount": 4596}, {"contestId": 1043, "index": "C", "name": "Smallest Word", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 7087}, {"contestId": 1043, "index": "B", "name": "Lost Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 6417}, {"contestId": 1043, "index": "A", "name": "Elections", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 11007}, {"contestId": 1042, "index": "F", "name": "Leaf Sets", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1383}, {"contestId": 1042, "index": "E", "name": "Vasya and Magic Matrix", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "probabilities"], "solvedCount": 1937}, {"contestId": 1042, "index": "D", "name": "Petya and Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "divide and conquer", "two pointers"], "solvedCount": 6760}, {"contestId": 1042, "index": "C", "name": "Array Product", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 4835}, {"contestId": 1042, "index": "B", "name": "Vitamins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "dp", "implementation"], "solvedCount": 17944}, {"contestId": 1042, "index": "A", "name": "Benches", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["binary search", "implementation"], "solvedCount": 13640}, {"contestId": 1041, "index": "F", "name": "Ray in the tube", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math"], "solvedCount": 1568}, {"contestId": 1041, "index": "E", "name": "Tree Reconstruction", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "graphs", "greedy"], "solvedCount": 3733}, {"contestId": 1041, "index": "D", "name": "Glider", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 6211}, {"contestId": 1041, "index": "C", "name": "Coffee Break", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 9863}, {"contestId": 1041, "index": "B", "name": "Buying a TV Set", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["math"], "solvedCount": 14500}, {"contestId": 1041, "index": "A", "name": "Heist", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 25918}, {"contestId": 1040, "index": "B", "name": "Shashlik Cooking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "math"], "solvedCount": 7320}, {"contestId": 1040, "index": "A", "name": "Palindrome Dance", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy"], "solvedCount": 9934}, {"contestId": 1039, "index": "E", "name": "Summer Oenothera Exhibition", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures"], "solvedCount": 301}, {"contestId": 1039, "index": "D", "name": "You Are Given a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "dp", "trees"], "solvedCount": 2070}, {"contestId": 1039, "index": "C", "name": "Network Safety", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "dsu", "graphs", "math", "sortings"], "solvedCount": 1416}, {"contestId": 1039, "index": "B", "name": "Subway Pursuit", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "interactive", "probabilities"], "solvedCount": 2505}, {"contestId": 1039, "index": "A", "name": "Timetable", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 820}, {"contestId": 1038, "index": "F", "name": "Wrap Around", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["dp", "strings"], "solvedCount": 386}, {"contestId": 1038, "index": "E", "name": "Maximum Matching", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs"], "solvedCount": 1029}, {"contestId": 1038, "index": "D", "name": "Slime", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dp", "greedy", "implementation"], "solvedCount": 8678}, {"contestId": 1038, "index": "C", "name": "Gambling", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy", "sortings"], "solvedCount": 9633}, {"contestId": 1038, "index": "B", "name": "Non-Coprime Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 14246}, {"contestId": 1038, "index": "A", "name": "Equality", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 15297}, {"contestId": 1037, "index": "H", "name": "Security", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "string suffix structures"], "solvedCount": 1151}, {"contestId": 1037, "index": "G", "name": "A Game on Strings", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["games"], "solvedCount": 353}, {"contestId": 1037, "index": "F", "name": "Maximum Reduction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["combinatorics", "data structures", "math"], "solvedCount": 1192}, {"contestId": 1037, "index": "E", "name": "Trips", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["graphs"], "solvedCount": 3002}, {"contestId": 1037, "index": "D", "name": "Valid BFS?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 16989}, {"contestId": 1037, "index": "C", "name": "Equalize", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dp", "greedy", "strings"], "solvedCount": 19619}, {"contestId": 1037, "index": "B", "name": "Reach Median", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 10685}, {"contestId": 1037, "index": "A", "name": "Packets", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 11615}, {"contestId": 1036, "index": "G", "name": "Sources and Sinks", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "dfs and similar"], "solvedCount": 402}, {"contestId": 1036, "index": "F", "name": "Relatively Prime Powers", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 1702}, {"contestId": 1036, "index": "E", "name": "Covered Points", "type": "PROGRAMMING", "rating": 2400, "tags": ["fft", "geometry", "number theory"], "solvedCount": 1704}, {"contestId": 1036, "index": "D", "name": "Vasya and Arrays", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "two pointers"], "solvedCount": 9971}, {"contestId": 1036, "index": "C", "name": "Classy Numbers", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "dp"], "solvedCount": 11521}, {"contestId": 1036, "index": "B", "name": "Diagonal Walking v.2", "type": "PROGRAMMING", "rating": 1600, "tags": ["math"], "solvedCount": 5878}, {"contestId": 1036, "index": "A", "name": "Function Height", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"], "solvedCount": 10407}, {"contestId": 1034, "index": "E", "name": "Little C Loves 3 III", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["bitmasks", "dp", "math"], "solvedCount": 691}, {"contestId": 1034, "index": "D", "name": "Intervals of Intervals", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 541}, {"contestId": 1034, "index": "C", "name": "Region Separation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["combinatorics", "dp", "number theory", "trees"], "solvedCount": 943}, {"contestId": 1034, "index": "B", "name": "Little C Loves 3 II", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "flows", "graph matchings"], "solvedCount": 2214}, {"contestId": 1034, "index": "A", "name": "Enlarge GCD", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["number theory"], "solvedCount": 9379}, {"contestId": 1033, "index": "G", "name": "Chip Game", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["games"], "solvedCount": 466}, {"contestId": 1033, "index": "F", "name": "Boolean Computer", "type": "PROGRAMMING", "points": 3250.0, "rating": 2800, "tags": ["bitmasks", "brute force", "fft", "math"], "solvedCount": 423}, {"contestId": 1033, "index": "E", "name": "Hidden Bipartite Graph", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "interactive"], "solvedCount": 695}, {"contestId": 1033, "index": "D", "name": "Divisors", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["interactive", "math", "number theory"], "solvedCount": 2529}, {"contestId": 1033, "index": "C", "name": "Permutation Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "dp", "games"], "solvedCount": 5970}, {"contestId": 1033, "index": "B", "name": "Square Difference", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math", "number theory"], "solvedCount": 10788}, {"contestId": 1033, "index": "A", "name": "King Escape", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dfs and similar", "graphs", "implementation"], "solvedCount": 14849}, {"contestId": 1032, "index": "G", "name": "Chattering", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": [], "solvedCount": 481}, {"contestId": 1032, "index": "F", "name": "Vasya and Maximum Matching", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "trees"], "solvedCount": 1047}, {"contestId": 1032, "index": "E", "name": "The Unbearable Lightness of Weights", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "math"], "solvedCount": 1761}, {"contestId": 1032, "index": "D", "name": "Barcelonian Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["geometry", "implementation"], "solvedCount": 2877}, {"contestId": 1032, "index": "C", "name": "Playing Piano", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dp"], "solvedCount": 4171}, {"contestId": 1032, "index": "B", "name": "Personalized Cup", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": [], "solvedCount": 5070}, {"contestId": 1032, "index": "A", "name": "Kitchen Utensils", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": [], "solvedCount": 7158}, {"contestId": 1031, "index": "F", "name": "Familiar Operations", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["brute force", "graphs", "math"], "solvedCount": 294}, {"contestId": 1031, "index": "E", "name": "Triple Flips", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 558}, {"contestId": 1031, "index": "D", "name": "Minimum path", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy"], "solvedCount": 2886}, {"contestId": 1031, "index": "C", "name": "Cram Time", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 5438}, {"contestId": 1031, "index": "B", "name": "Curiosity Has No Limits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": [], "solvedCount": 3980}, {"contestId": 1031, "index": "A", "name": "Golden Plate", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 13141}, {"contestId": 1030, "index": "G", "name": "Linear Congruential Generator", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["number theory"], "solvedCount": 385}, {"contestId": 1030, "index": "F", "name": "Putting Boxes Together", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 866}, {"contestId": 1030, "index": "E", "name": "Vasya and Good Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "dp"], "solvedCount": 3207}, {"contestId": 1030, "index": "D", "name": "Vasya and Triangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["geometry", "number theory"], "solvedCount": 6133}, {"contestId": 1030, "index": "C", "name": "Vasya and Golden Ticket", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 9642}, {"contestId": 1030, "index": "B", "name": "Vasya and Cornfield", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["geometry"], "solvedCount": 12764}, {"contestId": 1030, "index": "A", "name": "In Search of an Easy Problem", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["implementation"], "solvedCount": 153433}, {"contestId": 1029, "index": "F", "name": "Multicolored Markers", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "math", "number theory"], "solvedCount": 2680}, {"contestId": 1029, "index": "E", "name": "Tree with Small Distances", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "graphs", "greedy"], "solvedCount": 3156}, {"contestId": 1029, "index": "D", "name": "Concatenated Multiples", "type": "PROGRAMMING", "rating": 1900, "tags": ["implementation", "math"], "solvedCount": 4048}, {"contestId": 1029, "index": "C", "name": "Maximal Intersection", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "math", "sortings"], "solvedCount": 7943}, {"contestId": 1029, "index": "B", "name": "Creating the Contest", "type": "PROGRAMMING", "rating": 1200, "tags": ["dp", "greedy", "math"], "solvedCount": 17834}, {"contestId": 1029, "index": "A", "name": "Many Equal Substrings", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "strings"], "solvedCount": 12930}, {"contestId": 1028, "index": "H", "name": "Make Square", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["math"], "solvedCount": 526}, {"contestId": 1028, "index": "G", "name": "Guess the number", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["dp", "interactive"], "solvedCount": 621}, {"contestId": 1028, "index": "F", "name": "Make Symmetrical", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["brute force"], "solvedCount": 539}, {"contestId": 1028, "index": "E", "name": "Restore Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms"], "solvedCount": 1172}, {"contestId": 1028, "index": "D", "name": "Order book", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "data structures", "greedy"], "solvedCount": 1796}, {"contestId": 1028, "index": "C", "name": "Rectangles", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["geometry", "implementation", "sortings"], "solvedCount": 4870}, {"contestId": 1028, "index": "B", "name": "Unnatural Conditions", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 9792}, {"contestId": 1028, "index": "A", "name": "Find Square", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 11187}, {"contestId": 1027, "index": "G", "name": "X-mouse in the Campus", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "math", "number theory"], "solvedCount": 334}, {"contestId": 1027, "index": "F", "name": "Session in BSU", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "dfs and similar", "dsu", "graph matchings", "graphs"], "solvedCount": 1797}, {"contestId": 1027, "index": "E", "name": "Inverse Coloring", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 2257}, {"contestId": 1027, "index": "D", "name": "Mouse Hunt", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs"], "solvedCount": 7993}, {"contestId": 1027, "index": "C", "name": "Minimum Value Rectangle", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"], "solvedCount": 7053}, {"contestId": 1027, "index": "B", "name": "Numbers on the Chessboard", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 8551}, {"contestId": 1027, "index": "A", "name": "Palindromic Twist", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 17756}, {"contestId": 1025, "index": "G", "name": "Company Acquisitions", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "math"], "solvedCount": 811}, {"contestId": 1025, "index": "F", "name": "Disjoint Triangles", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["geometry"], "solvedCount": 816}, {"contestId": 1025, "index": "E", "name": "Colored Cubes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms", "implementation", "matrices"], "solvedCount": 598}, {"contestId": 1025, "index": "D", "name": "Recovering BST", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "dp", "math", "number theory", "trees"], "solvedCount": 3930}, {"contestId": 1025, "index": "C", "name": "Plasticine zebra", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation"], "solvedCount": 6328}, {"contestId": 1025, "index": "B", "name": "Weakened Common Divisor", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "greedy", "number theory"], "solvedCount": 8209}, {"contestId": 1025, "index": "A", "name": "Doggo Recoloring", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "sortings"], "solvedCount": 15810}, {"contestId": 1023, "index": "G", "name": "Pisces", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["data structures", "flows", "trees"], "solvedCount": 154}, {"contestId": 1023, "index": "F", "name": "Mobile Phone Network", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 946}, {"contestId": 1023, "index": "E", "name": "Down or Right", "type": "PROGRAMMING", "points": 2750.0, "rating": 2100, "tags": ["constructive algorithms", "interactive", "matrices"], "solvedCount": 2131}, {"contestId": 1023, "index": "D", "name": "Array Restoration", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "data structures"], "solvedCount": 4170}, {"contestId": 1023, "index": "C", "name": "Bracket Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["greedy"], "solvedCount": 10364}, {"contestId": 1023, "index": "B", "name": "Pair of Toys", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["math"], "solvedCount": 11282}, {"contestId": 1023, "index": "A", "name": "Single Wildcard Pattern Matching", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation", "strings"], "solvedCount": 9008}, {"contestId": 1020, "index": "B", "name": "Badge", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "dfs and similar", "graphs"], "solvedCount": 23395}, {"contestId": 1020, "index": "A", "name": "New Building for SIS", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"], "solvedCount": 9245}, {"contestId": 1019, "index": "E", "name": "Raining season", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 389}, {"contestId": 1019, "index": "D", "name": "Large Triangle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "geometry", "sortings"], "solvedCount": 697}, {"contestId": 1019, "index": "C", "name": "Sergey's problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["constructive algorithms", "graphs"], "solvedCount": 1301}, {"contestId": 1019, "index": "B", "name": "The hat", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "interactive"], "solvedCount": 2023}, {"contestId": 1019, "index": "A", "name": "Elections", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "greedy"], "solvedCount": 4726}, {"contestId": 1017, "index": "H", "name": "The Films", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["brute force"], "solvedCount": 167}, {"contestId": 1017, "index": "G", "name": "The Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures"], "solvedCount": 1049}, {"contestId": 1017, "index": "F", "name": "The Neutral Zone", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "math"], "solvedCount": 878}, {"contestId": 1017, "index": "E", "name": "The Supersonic Rocket", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["geometry", "hashing", "strings"], "solvedCount": 1049}, {"contestId": 1017, "index": "D", "name": "The Wu", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["bitmasks", "brute force", "data structures"], "solvedCount": 3748}, {"contestId": 1017, "index": "C", "name": "The Phone Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 6317}, {"contestId": 1017, "index": "B", "name": "The Bits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 9344}, {"contestId": 1017, "index": "A", "name": "The Rank", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 21076}, {"contestId": 1016, "index": "G", "name": "Appropriate Team", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "math", "number theory"], "solvedCount": 289}, {"contestId": 1016, "index": "F", "name": "Road Projects", "type": "PROGRAMMING", "rating": 2600, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 939}, {"contestId": 1016, "index": "E", "name": "Rest In The Shades", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "geometry"], "solvedCount": 1229}, {"contestId": 1016, "index": "D", "name": "Vasya And The Matrix", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "flows", "math"], "solvedCount": 4852}, {"contestId": 1016, "index": "C", "name": "Vasya And The Mushrooms", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "implementation"], "solvedCount": 3907}, {"contestId": 1016, "index": "B", "name": "Segment Occurrences", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 9876}, {"contestId": 1016, "index": "A", "name": "Death Note", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "math"], "solvedCount": 15275}, {"contestId": 1015, "index": "F", "name": "Bracket Substring", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "strings"], "solvedCount": 1262}, {"contestId": 1015, "index": "E2", "name": "Stars Drawing (Hard Edition)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp", "greedy"], "solvedCount": 3842}, {"contestId": 1015, "index": "E1", "name": "Stars Drawing (Easy Edition)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dp", "greedy"], "solvedCount": 6393}, {"contestId": 1015, "index": "D", "name": "Walking Between Houses", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 8661}, {"contestId": 1015, "index": "C", "name": "Songs Compression", "type": "PROGRAMMING", "rating": 1100, "tags": ["sortings"], "solvedCount": 19548}, {"contestId": 1015, "index": "B", "name": "Obtaining the String", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"], "solvedCount": 12059}, {"contestId": 1015, "index": "A", "name": "Points in Segments", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 21774}, {"contestId": 1013, "index": "B", "name": "And", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy"], "solvedCount": 7950}, {"contestId": 1013, "index": "A", "name": "Piles With Stones", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 11279}, {"contestId": 1012, "index": "F", "name": "Passports", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["dp", "implementation"], "solvedCount": 193}, {"contestId": 1012, "index": "E", "name": "Cycle sort", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dsu", "math"], "solvedCount": 351}, {"contestId": 1012, "index": "D", "name": "AB-Strings", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "strings"], "solvedCount": 416}, {"contestId": 1012, "index": "C", "name": "Hills", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"], "solvedCount": 3693}, {"contestId": 1012, "index": "B", "name": "Chemical table", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "matrices"], "solvedCount": 4210}, {"contestId": 1012, "index": "A", "name": "Photo of The Sky", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "implementation", "math", "sortings"], "solvedCount": 6546}, {"contestId": 1011, "index": "B", "name": "Planning The Expedition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 10521}, {"contestId": 1011, "index": "A", "name": "Stages", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 12750}, {"contestId": 1010, "index": "F", "name": "Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["fft", "graphs", "trees"], "solvedCount": 240}, {"contestId": 1010, "index": "E", "name": "Store", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 367}, {"contestId": 1010, "index": "D", "name": "Mars rover", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 2457}, {"contestId": 1010, "index": "C", "name": "Border", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["number theory"], "solvedCount": 5324}, {"contestId": 1010, "index": "B", "name": "Rocket", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["binary search", "interactive"], "solvedCount": 5749}, {"contestId": 1010, "index": "A", "name": "Fly", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "math"], "solvedCount": 8419}, {"contestId": 1009, "index": "G", "name": "Allowed Letters", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "flows", "graph matchings", "graphs", "greedy"], "solvedCount": 941}, {"contestId": 1009, "index": "F", "name": "Dominant Indices", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dsu", "trees"], "solvedCount": 6756}, {"contestId": 1009, "index": "E", "name": "Intercity Travelling", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "math", "probabilities"], "solvedCount": 3167}, {"contestId": 1009, "index": "D", "name": "Relatively Prime Graph", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "math"], "solvedCount": 6470}, {"contestId": 1009, "index": "C", "name": "Annoying Present", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy", "math"], "solvedCount": 5412}, {"contestId": 1009, "index": "B", "name": "Minimum Ternary String", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 10477}, {"contestId": 1009, "index": "A", "name": "Game Shopping", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 12075}, {"contestId": 1008, "index": "B", "name": "Turn the Rectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "sortings"], "solvedCount": 11867}, {"contestId": 1008, "index": "A", "name": "Romaji", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 15763}, {"contestId": 1007, "index": "E", "name": "Mini Metro", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["dp"], "solvedCount": 234}, {"contestId": 1007, "index": "D", "name": "Ants", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["2-sat", "data structures", "trees"], "solvedCount": 310}, {"contestId": 1007, "index": "C", "name": "Guess two numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 3000, "tags": ["binary search", "interactive"], "solvedCount": 428}, {"contestId": 1007, "index": "B", "name": "Pave the Parallelepiped", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "brute force", "combinatorics", "math", "number theory"], "solvedCount": 1010}, {"contestId": 1007, "index": "A", "name": "Reorder the Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["combinatorics", "data structures", "math", "sortings", "two pointers"], "solvedCount": 12682}, {"contestId": 1006, "index": "F", "name": "Xor-Paths", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "solvedCount": 6148}, {"contestId": 1006, "index": "E", "name": "Military Problem", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 10841}, {"contestId": 1006, "index": "D", "name": "Two Strings Swaps", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation"], "solvedCount": 6258}, {"contestId": 1006, "index": "C", "name": "Three Parts of the Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 23290}, {"contestId": 1006, "index": "B", "name": "Polycarp's Practice", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 14016}, {"contestId": 1006, "index": "A", "name": "Adjacent Replacements", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 22311}, {"contestId": 1005, "index": "F", "name": "Berland and the Shortest Paths", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1950}, {"contestId": 1005, "index": "E2", "name": "Median on Segments (General Case Edition)", "type": "PROGRAMMING", "rating": 2400, "tags": ["sortings"], "solvedCount": 1405}, {"contestId": 1005, "index": "E1", "name": "Median on Segments (Permutations Edition)", "type": "PROGRAMMING", "rating": 1800, "tags": ["sortings"], "solvedCount": 4141}, {"contestId": 1005, "index": "D", "name": "Polycarp and Div 3", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "greedy", "number theory"], "solvedCount": 10837}, {"contestId": 1005, "index": "C", "name": "Summarize to the Power of Two", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 12478}, {"contestId": 1005, "index": "B", "name": "Delete from the Left", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "implementation", "strings"], "solvedCount": 25757}, {"contestId": 1005, "index": "A", "name": "Tanya and Stairways", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 25464}, {"contestId": 1004, "index": "F", "name": "Sonya and Bitwise OR", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "data structures", "divide and conquer"], "solvedCount": 827}, {"contestId": 1004, "index": "E", "name": "Sonya and Ice Cream", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "trees"], "solvedCount": 1144}, {"contestId": 1004, "index": "D", "name": "Sonya and Matrix", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 1462}, {"contestId": 1004, "index": "C", "name": "Sonya and Robots", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7719}, {"contestId": 1004, "index": "B", "name": "Sonya and Exhibition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 9768}, {"contestId": 1004, "index": "A", "name": "Sonya and Hotels", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 11605}, {"contestId": 1003, "index": "F", "name": "Abbreviation", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "hashing", "strings"], "solvedCount": 1463}, {"contestId": 1003, "index": "E", "name": "Tree Constructing", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "graphs"], "solvedCount": 2888}, {"contestId": 1003, "index": "D", "name": "Coins and Queries", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"], "solvedCount": 8200}, {"contestId": 1003, "index": "C", "name": "Intense Heat", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation", "math"], "solvedCount": 11053}, {"contestId": 1003, "index": "B", "name": "Binary String Constructing", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms"], "solvedCount": 11831}, {"contestId": 1003, "index": "A", "name": "Polycarp's Pockets", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 28473}, {"contestId": 1002, "index": "E2", "name": "Another array reconstruction algorithm", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 208}, {"contestId": 1002, "index": "E1", "name": "Bernstein-Vazirani algorithm", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"], "solvedCount": 329}, {"contestId": 1002, "index": "D3", "name": "Oracle for majority function", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 340}, {"contestId": 1002, "index": "D2", "name": "Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special"], "solvedCount": 389}, {"contestId": 1002, "index": "D1", "name": "Oracle for f(x) = b * x mod 2", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special"], "solvedCount": 415}, {"contestId": 1002, "index": "C2", "name": "Distinguish zero state and plus state without errors", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 273}, {"contestId": 1002, "index": "C1", "name": "Distinguish zero state and plus state with minimum error", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 308}, {"contestId": 1002, "index": "B4", "name": "Distinguish four 2-qubit states - 2", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 317}, {"contestId": 1002, "index": "B3", "name": "Distinguish four 2-qubit states", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 420}, {"contestId": 1002, "index": "B2", "name": "Distinguish GHZ state and W state", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 455}, {"contestId": 1002, "index": "B1", "name": "Distinguish zero state and W state", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special"], "solvedCount": 487}, {"contestId": 1002, "index": "A4", "name": "Generate W state", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 274}, {"contestId": 1002, "index": "A3", "name": "Generate superposition of two basis states", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"], "solvedCount": 483}, {"contestId": 1002, "index": "A2", "name": "Generate superposition of zero state and a basis state", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special"], "solvedCount": 568}, {"contestId": 1002, "index": "A1", "name": "Generate superposition of all basis states", "type": "PROGRAMMING", "rating": 800, "tags": ["*special"], "solvedCount": 892}, {"contestId": 1001, "index": "I", "name": "Deutsch-Jozsa algorithm", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 409}, {"contestId": 1001, "index": "H", "name": "Oracle for f(x) = parity of the number of 1s in x", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special"], "solvedCount": 542}, {"contestId": 1001, "index": "G", "name": "Oracle for f(x) = k-th element of x", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special"], "solvedCount": 548}, {"contestId": 1001, "index": "F", "name": "Distinguish multi-qubit basis states", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special"], "solvedCount": 548}, {"contestId": 1001, "index": "E", "name": "Distinguish Bell states", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 565}, {"contestId": 1001, "index": "D", "name": "Distinguish plus state and minus state", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special"], "solvedCount": 691}, {"contestId": 1001, "index": "C", "name": "Generate GHZ state", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special"], "solvedCount": 662}, {"contestId": 1001, "index": "B", "name": "Generate Bell state", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special"], "solvedCount": 718}, {"contestId": 1001, "index": "A", "name": "Generate plus state or minus state", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special"], "solvedCount": 1028}, {"contestId": 1000, "index": "G", "name": "Two-Paths", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "trees"], "solvedCount": 654}, {"contestId": 1000, "index": "F", "name": "One Occurrence", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "divide and conquer"], "solvedCount": 4364}, {"contestId": 1000, "index": "E", "name": "We Need More Bosses", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 5655}, {"contestId": 1000, "index": "D", "name": "Yet Another Problem On a Subsequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "dp"], "solvedCount": 4690}, {"contestId": 1000, "index": "C", "name": "Covered Points Count", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 7708}, {"contestId": 1000, "index": "B", "name": "Light It Up", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"], "solvedCount": 6013}, {"contestId": 1000, "index": "A", "name": "Codehorses T-shirts", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 9117}, {"contestId": 999, "index": "F", "name": "Cards and Joy", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"], "solvedCount": 2949}, {"contestId": 999, "index": "E", "name": "Reachability from the Capital", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy"], "solvedCount": 7237}, {"contestId": 999, "index": "D", "name": "Equalize the Remainders", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 4617}, {"contestId": 999, "index": "C", "name": "Alphabetic Removals", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"], "solvedCount": 19837}, {"contestId": 999, "index": "B", "name": "Reversing Encryption", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 18754}, {"contestId": 999, "index": "A", "name": "Mishka and Contest", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 24539}, {"contestId": 998, "index": "B", "name": "Cutting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "greedy", "sortings"], "solvedCount": 13886}, {"contestId": 998, "index": "A", "name": "Balloons", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9895}, {"contestId": 997, "index": "E", "name": "Good Subsegments", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 1456}, {"contestId": 997, "index": "D", "name": "Cycles in product", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "divide and conquer", "trees"], "solvedCount": 496}, {"contestId": 997, "index": "C", "name": "Sky Full of Stars", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "math"], "solvedCount": 1975}, {"contestId": 997, "index": "B", "name": "Roman Digits", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "combinatorics", "dp", "greedy", "math"], "solvedCount": 3063}, {"contestId": 997, "index": "A", "name": "Convert to Ones", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 8472}, {"contestId": 996, "index": "B", "name": "World Cup", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "math"], "solvedCount": 9468}, {"contestId": 996, "index": "A", "name": "Hit the Lottery", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dp", "greedy"], "solvedCount": 105105}, {"contestId": 995, "index": "F", "name": "Cowmpany Cowmpensation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "trees"], "solvedCount": 1431}, {"contestId": 995, "index": "E", "name": "Number Clicker", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["divide and conquer", "graphs", "meet-in-the-middle", "number theory"], "solvedCount": 831}, {"contestId": 995, "index": "D", "name": "Game", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["math"], "solvedCount": 830}, {"contestId": 995, "index": "C", "name": "Leaving the Bar", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "data structures", "geometry", "greedy", "math", "sortings"], "solvedCount": 1995}, {"contestId": 995, "index": "B", "name": "Suit and Tie", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["greedy", "implementation", "math"], "solvedCount": 7253}, {"contestId": 995, "index": "A", "name": "Tesla", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1759}, {"contestId": 994, "index": "B", "name": "Knights of a Polygonal Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 5907}, {"contestId": 994, "index": "A", "name": "Fingerprints", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 14851}, {"contestId": 993, "index": "F", "name": "The Moral Dilemma", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": [], "solvedCount": 65}, {"contestId": 993, "index": "E", "name": "Nikita and Order Statistics", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["chinese remainder theorem", "fft", "math"], "solvedCount": 1614}, {"contestId": 993, "index": "D", "name": "Compute Power", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "dp", "greedy"], "solvedCount": 782}, {"contestId": 993, "index": "C", "name": "Careful Maneuvering", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["bitmasks", "brute force", "geometry"], "solvedCount": 1746}, {"contestId": 993, "index": "B", "name": "Open Communication", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "brute force"], "solvedCount": 1987}, {"contestId": 993, "index": "A", "name": "Two Squares", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["geometry", "implementation"], "solvedCount": 4360}, {"contestId": 992, "index": "E", "name": "Nastya and King-Shamans", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures"], "solvedCount": 1585}, {"contestId": 992, "index": "D", "name": "Nastya and a Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "implementation", "math"], "solvedCount": 1712}, {"contestId": 992, "index": "C", "name": "Nastya and a Wardrobe", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"], "solvedCount": 4712}, {"contestId": 992, "index": "B", "name": "Nastya Studies Informatics", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 6516}, {"contestId": 992, "index": "A", "name": "Nastya and an Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 13809}, {"contestId": 991, "index": "F", "name": "Concise and clear", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 328}, {"contestId": 991, "index": "E", "name": "Bus Number", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "combinatorics", "math"], "solvedCount": 3617}, {"contestId": 991, "index": "D", "name": "Bishwock", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy"], "solvedCount": 7600}, {"contestId": 991, "index": "C", "name": "Candies", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["binary search", "implementation"], "solvedCount": 11073}, {"contestId": 991, "index": "B", "name": "Getting an A", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "sortings"], "solvedCount": 13239}, {"contestId": 991, "index": "A", "name": "If at first you don't succeed...", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 10959}, {"contestId": 990, "index": "G", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "dsu", "number theory", "trees"], "solvedCount": 2069}, {"contestId": 990, "index": "F", "name": "Flow Control", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 997}, {"contestId": 990, "index": "E", "name": "Post Lamps", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "greedy"], "solvedCount": 2099}, {"contestId": 990, "index": "D", "name": "Graph And Its Complement", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 3998}, {"contestId": 990, "index": "C", "name": "Bracket Sequences Concatenation Problem", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"], "solvedCount": 6091}, {"contestId": 990, "index": "B", "name": "Micro-World", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 8378}, {"contestId": 990, "index": "A", "name": "Commentary Boxes", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 10889}, {"contestId": 989, "index": "E", "name": "A Trance of Nightfall", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "geometry", "matrices", "probabilities"], "solvedCount": 266}, {"contestId": 989, "index": "D", "name": "A Shade of Moonlight", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "geometry", "math", "sortings", "two pointers"], "solvedCount": 528}, {"contestId": 989, "index": "C", "name": "A Mist of Florescence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "graphs"], "solvedCount": 3931}, {"contestId": 989, "index": "B", "name": "A Tide of Riverscape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "strings"], "solvedCount": 7183}, {"contestId": 989, "index": "A", "name": "A Blend of Springtime", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 10833}, {"contestId": 988, "index": "F", "name": "Rain and Umbrellas", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"], "solvedCount": 2487}, {"contestId": 988, "index": "E", "name": "Divisibility by 25", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "greedy"], "solvedCount": 4209}, {"contestId": 988, "index": "D", "name": "Points and Powers of Two", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "math"], "solvedCount": 7702}, {"contestId": 988, "index": "C", "name": "Equal Sums", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "sortings"], "solvedCount": 10765}, {"contestId": 988, "index": "B", "name": "Substrings Sort", "type": "PROGRAMMING", "rating": 1100, "tags": ["sortings", "strings"], "solvedCount": 19530}, {"contestId": 988, "index": "A", "name": "Diverse Team", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 27132}, {"contestId": 987, "index": "C", "name": "Three displays", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "dp", "implementation"], "solvedCount": 14279}, {"contestId": 987, "index": "B", "name": "High School: Become Human", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"], "solvedCount": 11940}, {"contestId": 987, "index": "A", "name": "Infinity Gauntlet", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 17152}, {"contestId": 986, "index": "F", "name": "Oppa Funcan Style Remastered", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["graphs", "math", "number theory", "shortest paths"], "solvedCount": 703}, {"contestId": 986, "index": "E", "name": "Prince's Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["brute force", "data structures", "math", "number theory", "trees"], "solvedCount": 842}, {"contestId": 986, "index": "D", "name": "Perfect Encoding", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["fft", "math"], "solvedCount": 342}, {"contestId": 986, "index": "C", "name": "AND Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "dfs and similar", "dsu", "graphs"], "solvedCount": 2596}, {"contestId": 986, "index": "B", "name": "Petr and Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "math"], "solvedCount": 4864}, {"contestId": 986, "index": "A", "name": "Fair", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["graphs", "greedy", "number theory", "shortest paths"], "solvedCount": 7722}, {"contestId": 985, "index": "G", "name": "Team Players", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics"], "solvedCount": 620}, {"contestId": 985, "index": "F", "name": "Isomorphic Strings", "type": "PROGRAMMING", "rating": 2300, "tags": ["hashing", "strings"], "solvedCount": 2012}, {"contestId": 985, "index": "E", "name": "Pencils and Boxes", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 3973}, {"contestId": 985, "index": "D", "name": "Sand Fortress", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 2660}, {"contestId": 985, "index": "C", "name": "Liebig's Barrels", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"], "solvedCount": 5891}, {"contestId": 985, "index": "B", "name": "Switches and Lamps", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"], "solvedCount": 7630}, {"contestId": 985, "index": "A", "name": "Chess Placing", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 8314}, {"contestId": 984, "index": "B", "name": "Minesweeper", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 7804}, {"contestId": 984, "index": "A", "name": "Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["sortings"], "solvedCount": 20208}, {"contestId": 983, "index": "E", "name": "NN country", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "data structures", "trees"], "solvedCount": 1075}, {"contestId": 983, "index": "D", "name": "Arkady and Rectangles", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 467}, {"contestId": 983, "index": "C", "name": "Elevator", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 868}, {"contestId": 983, "index": "B", "name": "XOR-pyramid", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp"], "solvedCount": 5884}, {"contestId": 983, "index": "A", "name": "Finite or not?", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 4643}, {"contestId": 982, "index": "F", "name": "The Meeting Place Cannot Be Changed", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "graphs"], "solvedCount": 217}, {"contestId": 982, "index": "E", "name": "Billiard", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry", "number theory"], "solvedCount": 766}, {"contestId": 982, "index": "D", "name": "Shark", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "data structures", "dsu", "trees"], "solvedCount": 2415}, {"contestId": 982, "index": "C", "name": "Cut 'em all!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 13584}, {"contestId": 982, "index": "B", "name": "Bus of Characters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 8671}, {"contestId": 982, "index": "A", "name": "Row", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "constructive algorithms"], "solvedCount": 9423}, {"contestId": 981, "index": "H", "name": "K Paths", "type": "PROGRAMMING", "points": 3750.0, "rating": 3100, "tags": ["combinatorics", "data structures", "dp", "fft", "math"], "solvedCount": 282}, {"contestId": 981, "index": "G", "name": "Magic multisets", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 722}, {"contestId": 981, "index": "F", "name": "Round Marriage", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["binary search", "graph matchings", "greedy"], "solvedCount": 860}, {"contestId": 981, "index": "E", "name": "Addition on Segments", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "data structures", "divide and conquer", "dp"], "solvedCount": 2310}, {"contestId": 981, "index": "D", "name": "Bookshelves", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "dp", "greedy"], "solvedCount": 3402}, {"contestId": 981, "index": "C", "name": "Useful Decomposition", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["implementation", "trees"], "solvedCount": 6268}, {"contestId": 981, "index": "B", "name": "Businessmen Problems", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["sortings"], "solvedCount": 7546}, {"contestId": 981, "index": "A", "name": "Antipalindrome", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "strings"], "solvedCount": 9968}, {"contestId": 980, "index": "F", "name": "Cactus to Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "graphs", "trees"], "solvedCount": 209}, {"contestId": 980, "index": "E", "name": "The Number Games", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "greedy", "trees"], "solvedCount": 2017}, {"contestId": 980, "index": "D", "name": "Perfect Groups", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "math", "number theory"], "solvedCount": 2884}, {"contestId": 980, "index": "C", "name": "Posterized", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["games", "greedy"], "solvedCount": 3884}, {"contestId": 980, "index": "B", "name": "Marlin", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 4848}, {"contestId": 980, "index": "A", "name": "Links and Pearls", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 10693}, {"contestId": 979, "index": "E", "name": "Kuro and Topological Parity", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["dp"], "solvedCount": 827}, {"contestId": 979, "index": "D", "name": "Kuro and GCD and XOR and SUM", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp", "dsu", "greedy", "math", "number theory", "strings", "trees"], "solvedCount": 2052}, {"contestId": 979, "index": "C", "name": "Kuro and Walking Route", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "trees"], "solvedCount": 6946}, {"contestId": 979, "index": "B", "name": "Treasure Hunt", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 4649}, {"contestId": 979, "index": "A", "name": "Pizza, Pizza, Pizza!!!", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"], "solvedCount": 14202}, {"contestId": 978, "index": "G", "name": "Petya's Exams", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 4614}, {"contestId": 978, "index": "F", "name": "Mentors", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 8847}, {"contestId": 978, "index": "E", "name": "Bus Video System", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "math"], "solvedCount": 10113}, {"contestId": 978, "index": "D", "name": "Almost Arithmetic Progression", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation", "math"], "solvedCount": 9456}, {"contestId": 978, "index": "C", "name": "Letters", "type": "PROGRAMMING", "rating": 1000, "tags": ["binary search", "implementation", "two pointers"], "solvedCount": 27902}, {"contestId": 978, "index": "B", "name": "File Name", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "strings"], "solvedCount": 39161}, {"contestId": 978, "index": "A", "name": "Remove Duplicates", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 29120}, {"contestId": 977, "index": "F", "name": "Consecutive Subsequence", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp"], "solvedCount": 22463}, {"contestId": 977, "index": "E", "name": "Cyclic Components", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 23509}, {"contestId": 977, "index": "D", "name": "Divide by three, multiply by two", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "math", "sortings"], "solvedCount": 19625}, {"contestId": 977, "index": "C", "name": "Less or Equal", "type": "PROGRAMMING", "rating": 1200, "tags": ["sortings"], "solvedCount": 39206}, {"contestId": 977, "index": "B", "name": "Two-gram", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 45278}, {"contestId": 977, "index": "A", "name": "Wrong Subtraction", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 194883}, {"contestId": 976, "index": "F", "name": "Minimal k-covering", "type": "PROGRAMMING", "rating": 2500, "tags": ["flows", "graphs"], "solvedCount": 632}, {"contestId": 976, "index": "E", "name": "Well played!", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy", "sortings"], "solvedCount": 2477}, {"contestId": 976, "index": "D", "name": "Degree Set", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 722}, {"contestId": 976, "index": "C", "name": "Nested Segments", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 8556}, {"contestId": 976, "index": "B", "name": "Lara Croft and the New Game", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 5909}, {"contestId": 976, "index": "A", "name": "Minimum Binary Number", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 10772}, {"contestId": 975, "index": "E", "name": "Hag's Khashba", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry"], "solvedCount": 320}, {"contestId": 975, "index": "D", "name": "Ghosts", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["geometry", "math"], "solvedCount": 2332}, {"contestId": 975, "index": "C", "name": "Valhalla Siege", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search"], "solvedCount": 10392}, {"contestId": 975, "index": "B", "name": "Mancala", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 6981}, {"contestId": 975, "index": "A", "name": "Aramic script", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 9863}, {"contestId": 967, "index": "B", "name": "Watering System", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["math", "sortings"], "solvedCount": 7598}, {"contestId": 967, "index": "A", "name": "Mind the Gap", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 4451}, {"contestId": 965, "index": "E", "name": "Short Code", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "strings", "trees"], "solvedCount": 1714}, {"contestId": 965, "index": "D", "name": "Single-use Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "flows", "greedy", "two pointers"], "solvedCount": 3245}, {"contestId": 965, "index": "C", "name": "Greedy Arkady", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["math"], "solvedCount": 2162}, {"contestId": 965, "index": "B", "name": "Battleship", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 4660}, {"contestId": 965, "index": "A", "name": "Paper Airplanes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 9918}, {"contestId": 964, "index": "B", "name": "Messages", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math"], "solvedCount": 4494}, {"contestId": 964, "index": "A", "name": "Splits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 9948}, {"contestId": 963, "index": "E", "name": "Circles of Waiting", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["math"], "solvedCount": 614}, {"contestId": 963, "index": "D", "name": "Frequency of String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["hashing", "string suffix structures", "strings"], "solvedCount": 2406}, {"contestId": 963, "index": "C", "name": "Cutting Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "math", "number theory"], "solvedCount": 618}, {"contestId": 963, "index": "B", "name": "Destruction of a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2913}, {"contestId": 963, "index": "A", "name": "Alternating Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["math", "number theory"], "solvedCount": 3485}, {"contestId": 962, "index": "G", "name": "Visible Black Areas", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dsu", "geometry", "trees"], "solvedCount": 197}, {"contestId": 962, "index": "F", "name": "Simple Cycles Edges", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 1473}, {"contestId": 962, "index": "E", "name": "Byteland, Berland and Disputed Cities", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1118}, {"contestId": 962, "index": "D", "name": "Merge Equals", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "implementation"], "solvedCount": 7142}, {"contestId": 962, "index": "C", "name": "Make a Square", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "implementation", "math"], "solvedCount": 8100}, {"contestId": 962, "index": "B", "name": "Students in Railway Carriage", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 7881}, {"contestId": 962, "index": "A", "name": "Equator", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 13105}, {"contestId": 961, "index": "G", "name": "Partitions", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 1487}, {"contestId": 961, "index": "F", "name": "k-substrings", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "hashing", "string suffix structures"], "solvedCount": 875}, {"contestId": 961, "index": "E", "name": "Tufurama", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures"], "solvedCount": 3986}, {"contestId": 961, "index": "D", "name": "Pair Of Lines", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry"], "solvedCount": 4553}, {"contestId": 961, "index": "C", "name": "Chessboard", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "brute force", "implementation"], "solvedCount": 5454}, {"contestId": 961, "index": "B", "name": "Lecture Sleep", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "dp", "implementation", "two pointers"], "solvedCount": 23637}, {"contestId": 961, "index": "A", "name": "Tetris", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 10444}, {"contestId": 960, "index": "H", "name": "Santa's Gift", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 327}, {"contestId": 960, "index": "G", "name": "Bandit Blues", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 1145}, {"contestId": 960, "index": "F", "name": "Pathwalks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dp", "graphs"], "solvedCount": 3214}, {"contestId": 960, "index": "E", "name": "Alternating Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "divide and conquer", "dp", "probabilities", "trees"], "solvedCount": 2087}, {"contestId": 960, "index": "D", "name": "Full Binary Tree Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "implementation", "trees"], "solvedCount": 1910}, {"contestId": 960, "index": "C", "name": "Subsequence Counting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation"], "solvedCount": 4020}, {"contestId": 960, "index": "B", "name": "Minimize the error", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 10209}, {"contestId": 960, "index": "A", "name": "Check the string", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 8515}, {"contestId": 959, "index": "F", "name": "Mahmoud and Ehab and yet another xor task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "matrices"], "solvedCount": 2474}, {"contestId": 959, "index": "E", "name": "Mahmoud and Ehab and the xor-MST", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dp", "graphs", "implementation", "math"], "solvedCount": 3635}, {"contestId": 959, "index": "D", "name": "Mahmoud and Ehab and another array construction task", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 3183}, {"contestId": 959, "index": "C", "name": "Mahmoud and Ehab and the wrong algorithm", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 6063}, {"contestId": 959, "index": "B", "name": "Mahmoud and Ehab and the message", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dsu", "greedy", "implementation"], "solvedCount": 10186}, {"contestId": 959, "index": "A", "name": "Mahmoud and Ehab and the even-odd game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "math"], "solvedCount": 52072}, {"contestId": 958, "index": "F3", "name": "Lightsabers (hard)", "type": "PROGRAMMING", "rating": 2600, "tags": ["fft"], "solvedCount": 825}, {"contestId": 958, "index": "F2", "name": "Lightsabers (medium)", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "two pointers"], "solvedCount": 1339}, {"contestId": 958, "index": "F1", "name": "Lightsabers (easy)", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"], "solvedCount": 1758}, {"contestId": 958, "index": "E3", "name": "Guard Duty (hard)", "type": "PROGRAMMING", "rating": 2700, "tags": ["geometry"], "solvedCount": 201}, {"contestId": 958, "index": "E2", "name": "Guard Duty (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "dp", "greedy", "sortings"], "solvedCount": 1089}, {"contestId": 958, "index": "E1", "name": "Guard Duty (easy)", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "geometry", "greedy", "math"], "solvedCount": 1639}, {"contestId": 958, "index": "D2", "name": "Hyperspace Jump (hard)", "type": "PROGRAMMING", "rating": 2700, "tags": [], "solvedCount": 107}, {"contestId": 958, "index": "D1", "name": "Hyperspace Jump (easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["expression parsing", "math"], "solvedCount": 2166}, {"contestId": 958, "index": "C3", "name": "Encryption (hard)", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dp"], "solvedCount": 653}, {"contestId": 958, "index": "C2", "name": "Encryption (medium)", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"], "solvedCount": 1325}, {"contestId": 958, "index": "C1", "name": "Encryption (easy)", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force"], "solvedCount": 3057}, {"contestId": 958, "index": "B2", "name": "Maximum Control (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 714}, {"contestId": 958, "index": "B1", "name": "Maximum Control (easy)", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 3663}, {"contestId": 958, "index": "A3", "name": "Death Stars (hard)", "type": "PROGRAMMING", "rating": 3100, "tags": [], "solvedCount": 48}, {"contestId": 958, "index": "A2", "name": "Death Stars (medium)", "type": "PROGRAMMING", "rating": 2000, "tags": ["hashing", "strings"], "solvedCount": 965}, {"contestId": 958, "index": "A1", "name": "Death Stars (easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"], "solvedCount": 1782}, {"contestId": 957, "index": "A", "name": "Tritonic Iridescence", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 5876}, {"contestId": 955, "index": "F", "name": "Heaps", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dp", "trees"], "solvedCount": 1090}, {"contestId": 955, "index": "E", "name": "Icicles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": [], "solvedCount": 102}, {"contestId": 955, "index": "D", "name": "Scissors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "strings"], "solvedCount": 563}, {"contestId": 955, "index": "C", "name": "Sad powers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["binary search", "math", "number theory"], "solvedCount": 2816}, {"contestId": 955, "index": "B", "name": "Not simply beatiful strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 4978}, {"contestId": 955, "index": "A", "name": "Feed the cat", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 6832}, {"contestId": 954, "index": "I", "name": "Yet Another String Matching Problem", "type": "PROGRAMMING", "rating": 2200, "tags": ["fft", "math"], "solvedCount": 1159}, {"contestId": 954, "index": "H", "name": "Path Counting", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "dp"], "solvedCount": 691}, {"contestId": 954, "index": "G", "name": "Castle Defense", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 2297}, {"contestId": 954, "index": "F", "name": "Runner's Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "matrices", "sortings"], "solvedCount": 1316}, {"contestId": 954, "index": "E", "name": "Water Taps", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 2000}, {"contestId": 954, "index": "D", "name": "Fight Against Traffic", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 7283}, {"contestId": 954, "index": "C", "name": "Matrix Walk", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation"], "solvedCount": 3885}, {"contestId": 954, "index": "B", "name": "String Typing", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "strings"], "solvedCount": 7514}, {"contestId": 954, "index": "A", "name": "Diagonal Walking", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 10830}, {"contestId": 952, "index": "G", "name": "Puzzling Language", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "*special", "*special", "constructive algorithms"], "solvedCount": 247}, {"contestId": 952, "index": "F", "name": "2 + 2 != 4", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special"], "solvedCount": 416}, {"contestId": 952, "index": "E", "name": "Cheese Board", "type": "PROGRAMMING", "rating": 2000, "tags": [], "solvedCount": 665}, {"contestId": 952, "index": "D", "name": "I'm Feeling Lucky!", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "probabilities"], "solvedCount": 2524}, {"contestId": 952, "index": "C", "name": "Ravioli Sort", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 3001}, {"contestId": 952, "index": "B", "name": "A Map of the Cat", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "brute force", "interactive"], "solvedCount": 2099}, {"contestId": 952, "index": "A", "name": "Quirky Quantifiers", "type": "PROGRAMMING", "rating": 800, "tags": ["math"], "solvedCount": 11659}, {"contestId": 950, "index": "B", "name": "Intercepted Message", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 7773}, {"contestId": 950, "index": "A", "name": "Left-handers, Right-handers and Ambidexters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 16025}, {"contestId": 949, "index": "F", "name": "Astronomy", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["geometry", "probabilities"], "solvedCount": 62}, {"contestId": 949, "index": "E", "name": "Binary Cards", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["brute force"], "solvedCount": 698}, {"contestId": 949, "index": "D", "name": "Curfew", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["binary search", "brute force", "greedy", "sortings"], "solvedCount": 841}, {"contestId": 949, "index": "C", "name": "Data Center Maintenance", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["dfs and similar", "graphs"], "solvedCount": 2156}, {"contestId": 949, "index": "B", "name": "A Leapfrog in the Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 3778}, {"contestId": 949, "index": "A", "name": "Zebras", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 5548}, {"contestId": 948, "index": "A", "name": "Protect Sheep", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "solvedCount": 14618}, {"contestId": 946, "index": "G", "name": "Almost Increasing Array", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dp"], "solvedCount": 744}, {"contestId": 946, "index": "F", "name": "Fibonacci String Subsequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "matrices"], "solvedCount": 608}, {"contestId": 946, "index": "E", "name": "Largest Beautiful Number", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation"], "solvedCount": 1154}, {"contestId": 946, "index": "D", "name": "Timetable", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"], "solvedCount": 4675}, {"contestId": 946, "index": "C", "name": "String Transformation", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "strings"], "solvedCount": 9121}, {"contestId": 946, "index": "B", "name": "Weird Subtraction Process", "type": "PROGRAMMING", "rating": 1100, "tags": ["math", "number theory"], "solvedCount": 11206}, {"contestId": 946, "index": "A", "name": "Partition", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy"], "solvedCount": 17503}, {"contestId": 940, "index": "F", "name": "Machine Learning", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["brute force", "data structures"], "solvedCount": 3049}, {"contestId": 940, "index": "E", "name": "Cashback", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 4123}, {"contestId": 940, "index": "D", "name": "Alena And The Heater", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "implementation"], "solvedCount": 3702}, {"contestId": 940, "index": "C", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 6410}, {"contestId": 940, "index": "B", "name": "Our Tanya is Crying Out Loud", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["dp", "greedy"], "solvedCount": 9262}, {"contestId": 940, "index": "A", "name": "Points on the line", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 8553}, {"contestId": 939, "index": "F", "name": "Cutlet", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dp"], "solvedCount": 1109}, {"contestId": 939, "index": "E", "name": "Maximize!", "type": "PROGRAMMING", "points": 2500.0, "rating": 1800, "tags": ["binary search", "greedy", "ternary search", "two pointers"], "solvedCount": 3293}, {"contestId": 939, "index": "D", "name": "Love Rescue", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "strings"], "solvedCount": 7758}, {"contestId": 939, "index": "C", "name": "Convenient For Everybody", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "two pointers"], "solvedCount": 4764}, {"contestId": 939, "index": "B", "name": "Hamster Farm", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 10913}, {"contestId": 939, "index": "A", "name": "Love Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["graphs"], "solvedCount": 27604}, {"contestId": 938, "index": "G", "name": "Shortest Path Queries", "type": "PROGRAMMING", "rating": 2900, "tags": ["bitmasks", "data structures", "dsu", "graphs"], "solvedCount": 1014}, {"contestId": 938, "index": "F", "name": "Erasing Substrings", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "dp", "greedy"], "solvedCount": 548}, {"contestId": 938, "index": "E", "name": "Max History", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "math"], "solvedCount": 1400}, {"contestId": 938, "index": "D", "name": "Buy a Ticket", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 6411}, {"contestId": 938, "index": "C", "name": "Constructing Tests", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "constructive algorithms"], "solvedCount": 3415}, {"contestId": 938, "index": "B", "name": "Run For Your Prize", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "greedy"], "solvedCount": 9068}, {"contestId": 938, "index": "A", "name": "Word Correction", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 11768}, {"contestId": 937, "index": "B", "name": "Vile Grasshoppers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "math", "number theory"], "solvedCount": 7072}, {"contestId": 937, "index": "A", "name": "Olympiad", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings"], "solvedCount": 15961}, {"contestId": 936, "index": "E", "name": "Iqea", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "shortest paths", "trees"], "solvedCount": 240}, {"contestId": 936, "index": "D", "name": "World of Tank", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["dp", "greedy"], "solvedCount": 345}, {"contestId": 936, "index": "C", "name": "Lock Puzzle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 1211}, {"contestId": 936, "index": "B", "name": "Sleepy Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "games", "graphs"], "solvedCount": 3332}, {"contestId": 936, "index": "A", "name": "Save Energy!", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "implementation", "math"], "solvedCount": 4523}, {"contestId": 935, "index": "F", "name": "Fafa and Array", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["data structures", "greedy"], "solvedCount": 398}, {"contestId": 935, "index": "E", "name": "Fafa and Ancient Mathematics", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 917}, {"contestId": 935, "index": "D", "name": "Fafa and Ancient Alphabet", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["math", "probabilities"], "solvedCount": 2726}, {"contestId": 935, "index": "C", "name": "Fifa and Fafa", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["geometry"], "solvedCount": 4922}, {"contestId": 935, "index": "B", "name": "Fafa and the Gates", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["implementation"], "solvedCount": 12036}, {"contestId": 935, "index": "A", "name": "Fafa and his Company", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 45643}, {"contestId": 934, "index": "B", "name": "A Prosperous Lot", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 8951}, {"contestId": 934, "index": "A", "name": "A Compatible Pair", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "games"], "solvedCount": 7241}, {"contestId": 933, "index": "E", "name": "A Preponderant Reunion", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "dp"], "solvedCount": 284}, {"contestId": 933, "index": "D", "name": "A Creative Cutout", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["brute force", "combinatorics", "math"], "solvedCount": 368}, {"contestId": 933, "index": "C", "name": "A Colourful Prospect", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["geometry", "graphs"], "solvedCount": 617}, {"contestId": 933, "index": "B", "name": "A Determined Cleanup", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["math"], "solvedCount": 2001}, {"contestId": 933, "index": "A", "name": "A Twisty Movement", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp"], "solvedCount": 5179}, {"contestId": 932, "index": "G", "name": "Palindrome Partition", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "string suffix structures", "strings"], "solvedCount": 1072}, {"contestId": 932, "index": "F", "name": "Escape Through Leaf", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "dp", "geometry"], "solvedCount": 3491}, {"contestId": 932, "index": "E", "name": "Team Work", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"], "solvedCount": 3164}, {"contestId": 932, "index": "D", "name": "Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "dp", "trees"], "solvedCount": 1860}, {"contestId": 932, "index": "C", "name": "Permutation Cycle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms"], "solvedCount": 4162}, {"contestId": 932, "index": "B", "name": "Recursive Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "data structures", "dfs and similar"], "solvedCount": 8590}, {"contestId": 932, "index": "A", "name": "Palindromic Supersequence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 10564}, {"contestId": 931, "index": "C", "name": "Laboratory Work", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 3417}, {"contestId": 931, "index": "B", "name": "World Cup", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7295}, {"contestId": 931, "index": "A", "name": "Friends Meeting", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 12644}, {"contestId": 930, "index": "E", "name": "Coins Exhibition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "dp", "math"], "solvedCount": 470}, {"contestId": 930, "index": "D", "name": "Game with Tokens", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "games", "implementation"], "solvedCount": 432}, {"contestId": 930, "index": "C", "name": "Teodor is not a liar!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp"], "solvedCount": 2231}, {"contestId": 930, "index": "B", "name": "Game with String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation", "probabilities", "strings"], "solvedCount": 2890}, {"contestId": 930, "index": "A", "name": "Peculiar apple-tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 7932}, {"contestId": 929, "index": "D", "name": "\u041f\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0435 \u0432\u0440\u0430\u0442\u0430", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": [], "solvedCount": 156}, {"contestId": 929, "index": "C", "name": "\u041a\u0440\u0430\u0441\u0438\u0432\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["*special", "combinatorics", "math"], "solvedCount": 1174}, {"contestId": 929, "index": "B", "name": "\u041c\u0435\u0441\u0442\u0430 \u0432 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0435", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["*special", "implementation"], "solvedCount": 2059}, {"contestId": 929, "index": "A", "name": "\u041f\u0440\u043e\u043a\u0430\u0442 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u043e\u0432", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["*special", "greedy", "implementation"], "solvedCount": 2526}, {"contestId": 928, "index": "D", "name": "Autocompletion", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["*special", "strings", "trees"], "solvedCount": 823}, {"contestId": 928, "index": "C", "name": "Dependency management", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["*special", "graphs", "implementation"], "solvedCount": 899}, {"contestId": 928, "index": "B", "name": "Chat", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["*special", "dp"], "solvedCount": 2590}, {"contestId": 928, "index": "A", "name": "Login Verification", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["*special", "strings"], "solvedCount": 3474}, {"contestId": 927, "index": "A", "name": "BuberPool Taxi Optimization", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "interactive"], "solvedCount": 1}, {"contestId": 926, "index": "J", "name": "Segments", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"], "solvedCount": 500}, {"contestId": 926, "index": "I", "name": "A Vital Problem", "type": "PROGRAMMING", "rating": 1700, "tags": [], "solvedCount": 683}, {"contestId": 926, "index": "H", "name": "Endless Roses Most Beautiful", "type": "PROGRAMMING", "rating": 2200, "tags": [], "solvedCount": 234}, {"contestId": 926, "index": "G", "name": "Large Bouquets", "type": "PROGRAMMING", "rating": 1500, "tags": [], "solvedCount": 1648}, {"contestId": 926, "index": "F", "name": "Mobile Communications", "type": "PROGRAMMING", "rating": 2000, "tags": [], "solvedCount": 261}, {"contestId": 926, "index": "E", "name": "Merge Equal Elements", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures"], "solvedCount": 972}, {"contestId": 926, "index": "D", "name": "Choose Place", "type": "PROGRAMMING", "rating": 1600, "tags": [], "solvedCount": 1000}, {"contestId": 926, "index": "C", "name": "Is This a Zebra?", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation"], "solvedCount": 1993}, {"contestId": 926, "index": "B", "name": "Add Points", "type": "PROGRAMMING", "rating": 1800, "tags": ["math", "number theory"], "solvedCount": 1874}, {"contestId": 926, "index": "A", "name": "2-3-numbers", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 3910}, {"contestId": 925, "index": "F", "name": "Parametric Circulation", "type": "PROGRAMMING", "points": 3250.0, "rating": 3100, "tags": ["binary search", "flows"], "solvedCount": 154}, {"contestId": 925, "index": "E", "name": "May Holidays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 448}, {"contestId": 925, "index": "D", "name": "Aztec Catacombs", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 543}, {"contestId": 925, "index": "C", "name": "Big Secret", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "math"], "solvedCount": 1362}, {"contestId": 925, "index": "B", "name": "Resource Distribution", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "implementation", "sortings"], "solvedCount": 2272}, {"contestId": 925, "index": "A", "name": "Stairs and Elevators", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search"], "solvedCount": 3702}, {"contestId": 924, "index": "F", "name": "Minimal Subset Difference", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp"], "solvedCount": 302}, {"contestId": 924, "index": "E", "name": "Wardrobe", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "greedy"], "solvedCount": 549}, {"contestId": 924, "index": "D", "name": "Contact ATC", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": [], "solvedCount": 890}, {"contestId": 924, "index": "C", "name": "Riverside Curio", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "dp", "greedy"], "solvedCount": 4145}, {"contestId": 924, "index": "B", "name": "Three-level Laser", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "greedy", "two pointers"], "solvedCount": 5489}, {"contestId": 924, "index": "A", "name": "Mystical Mosaic", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "implementation"], "solvedCount": 5116}, {"contestId": 923, "index": "F", "name": "Public Service", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 124}, {"contestId": 923, "index": "E", "name": "Perpetual Subtraction", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["fft", "math", "matrices"], "solvedCount": 489}, {"contestId": 923, "index": "D", "name": "Picking Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 1232}, {"contestId": 923, "index": "C", "name": "Perfect Security", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy", "strings", "trees"], "solvedCount": 4565}, {"contestId": 923, "index": "B", "name": "Producing Snow", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "data structures"], "solvedCount": 7568}, {"contestId": 923, "index": "A", "name": "Primal Sport", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["math", "number theory"], "solvedCount": 5301}, {"contestId": 922, "index": "F", "name": "Divisibility", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "greedy", "number theory"], "solvedCount": 682}, {"contestId": 922, "index": "E", "name": "Birds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp"], "solvedCount": 2300}, {"contestId": 922, "index": "D", "name": "Robot Vacuum Cleaner", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "sortings"], "solvedCount": 4611}, {"contestId": 922, "index": "C", "name": "Cave Painting", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "number theory"], "solvedCount": 7411}, {"contestId": 922, "index": "B", "name": "Magic Forest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force"], "solvedCount": 8803}, {"contestId": 922, "index": "A", "name": "Cloning Toys", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 12062}, {"contestId": 921, "index": "14", "name": "Labyrinth-14", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "13", "name": "Labyrinth-13", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "12", "name": "Labyrinth-12", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "11", "name": "Labyrinth-11", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "10", "name": "Labyrinth-10", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "09", "name": "Labyrinth-9", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "08", "name": "Labyrinth-8", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "07", "name": "Labyrinth-7", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "06", "name": "Labyrinth-6", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "05", "name": "Labyrinth-5", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "04", "name": "Labyrinth-4", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "03", "name": "Labyrinth-3", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "02", "name": "Labyrinth-2", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 921, "index": "01", "name": "Labyrinth-1", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 0}, {"contestId": 920, "index": "G", "name": "List Of Integers", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "math", "number theory"], "solvedCount": 1854}, {"contestId": 920, "index": "F", "name": "SUM and REPLACE", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dsu", "number theory"], "solvedCount": 7744}, {"contestId": 920, "index": "E", "name": "Connected Components?", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "solvedCount": 7070}, {"contestId": 920, "index": "D", "name": "Tanks", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "greedy", "implementation"], "solvedCount": 773}, {"contestId": 920, "index": "C", "name": "Swap Adjacent Elements", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "greedy", "math", "sortings", "two pointers"], "solvedCount": 9673}, {"contestId": 920, "index": "B", "name": "Tea Queue", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"], "solvedCount": 7769}, {"contestId": 920, "index": "A", "name": "Water The Garden", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 7989}, {"contestId": 919, "index": "F", "name": "A Game With Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["games", "graphs", "shortest paths"], "solvedCount": 362}, {"contestId": 919, "index": "E", "name": "Congruence Equation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["chinese remainder theorem", "math", "number theory"], "solvedCount": 2300}, {"contestId": 919, "index": "D", "name": "Substring", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs"], "solvedCount": 11194}, {"contestId": 919, "index": "C", "name": "Seat Arrangements", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 9237}, {"contestId": 919, "index": "B", "name": "Perfect Number", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["binary search", "brute force", "dp", "implementation", "number theory"], "solvedCount": 30062}, {"contestId": 919, "index": "A", "name": "Supermarket", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 16666}, {"contestId": 918, "index": "B", "name": "Radio Station", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 18432}, {"contestId": 918, "index": "A", "name": "Eleven", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 17768}, {"contestId": 917, "index": "E", "name": "Upside Down", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 154}, {"contestId": 917, "index": "D", "name": "Stranger Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "math", "matrices", "trees"], "solvedCount": 1360}, {"contestId": 917, "index": "C", "name": "Pollywog", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["combinatorics", "dp", "matrices"], "solvedCount": 420}, {"contestId": 917, "index": "B", "name": "MADMAX", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["dfs and similar", "dp", "games", "graphs"], "solvedCount": 3861}, {"contestId": 917, "index": "A", "name": "The Monster", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "greedy", "implementation", "math"], "solvedCount": 3590}, {"contestId": 916, "index": "E", "name": "Jamie and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "trees"], "solvedCount": 1871}, {"contestId": 916, "index": "D", "name": "Jamie and To-do List", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "interactive", "trees"], "solvedCount": 541}, {"contestId": 916, "index": "C", "name": "Jamie and Interesting Graph", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 5380}, {"contestId": 916, "index": "B", "name": "Jamie and Binary Sequence (changed after round)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["bitmasks", "greedy", "math"], "solvedCount": 1946}, {"contestId": 916, "index": "A", "name": "Jamie and Alarm Snooze", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"], "solvedCount": 9075}, {"contestId": 915, "index": "G", "name": "Coprime Arrays", "type": "PROGRAMMING", "rating": 2300, "tags": ["math", "number theory"], "solvedCount": 1377}, {"contestId": 915, "index": "F", "name": "Imbalance Value of a Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 2776}, {"contestId": 915, "index": "E", "name": "Physical Education Lessons", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 4999}, {"contestId": 915, "index": "D", "name": "Almost Acyclic Graph", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "graphs"], "solvedCount": 3813}, {"contestId": 915, "index": "C", "name": "Permute Digits", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "greedy"], "solvedCount": 7310}, {"contestId": 915, "index": "B", "name": "Browser", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 8018}, {"contestId": 915, "index": "A", "name": "Garden", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 15380}, {"contestId": 914, "index": "H", "name": "Ember and Storm's Tree Game", "type": "PROGRAMMING", "points": 3750.0, "rating": 3400, "tags": ["combinatorics", "dp", "games", "trees"], "solvedCount": 259}, {"contestId": 914, "index": "G", "name": "Sum the Fibonacci", "type": "PROGRAMMING", "points": 3500.0, "rating": 2600, "tags": ["bitmasks", "divide and conquer", "dp", "fft", "math"], "solvedCount": 1011}, {"contestId": 914, "index": "F", "name": "Substrings in a String", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["bitmasks", "brute force", "data structures", "string suffix structures", "strings"], "solvedCount": 1876}, {"contestId": 914, "index": "E", "name": "Palindromes in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "trees"], "solvedCount": 1752}, {"contestId": 914, "index": "D", "name": "Bash and a Tough Math Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "number theory"], "solvedCount": 5896}, {"contestId": 914, "index": "C", "name": "Travelling Salesman and Special Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "combinatorics", "dp"], "solvedCount": 4007}, {"contestId": 914, "index": "B", "name": "Conan and Agasa play a Card Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["games", "greedy", "implementation"], "solvedCount": 8839}, {"contestId": 914, "index": "A", "name": "Perfect Squares", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"], "solvedCount": 14841}, {"contestId": 913, "index": "H", "name": "Don't Exceed", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["math", "probabilities"], "solvedCount": 137}, {"contestId": 913, "index": "G", "name": "Power Substring", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["math", "number theory"], "solvedCount": 221}, {"contestId": 913, "index": "F", "name": "Strongly Connected Tournament", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["dp", "graphs", "math", "probabilities"], "solvedCount": 722}, {"contestId": 913, "index": "E", "name": "Logical Expression", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["bitmasks", "dp", "shortest paths"], "solvedCount": 852}, {"contestId": 913, "index": "D", "name": "Too Easy Problems", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "greedy", "sortings"], "solvedCount": 4966}, {"contestId": 913, "index": "C", "name": "Party Lemonade", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "dp", "greedy"], "solvedCount": 8247}, {"contestId": 913, "index": "B", "name": "Christmas Spruce", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["implementation", "trees"], "solvedCount": 17996}, {"contestId": 913, "index": "A", "name": "Modular Exponentiation", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 22762}, {"contestId": 912, "index": "E", "name": "Prime Gift", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "dfs and similar", "math", "meet-in-the-middle", "number theory", "two pointers"], "solvedCount": 1851}, {"contestId": 912, "index": "D", "name": "Fishes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "graphs", "greedy", "probabilities", "shortest paths"], "solvedCount": 2074}, {"contestId": 912, "index": "C", "name": "Perun, Ult!", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 528}, {"contestId": 912, "index": "B", "name": "New Year's Eve", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "number theory"], "solvedCount": 12989}, {"contestId": 912, "index": "A", "name": "Tricky Alchemy", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 13821}, {"contestId": 911, "index": "G", "name": "Mass Change Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"], "solvedCount": 3376}, {"contestId": 911, "index": "F", "name": "Tree Destruction", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1926}, {"contestId": 911, "index": "E", "name": "Stack Sorting", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 2703}, {"contestId": 911, "index": "D", "name": "Inversion Counting", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "math"], "solvedCount": 4832}, {"contestId": 911, "index": "C", "name": "Three Garlands", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms"], "solvedCount": 7191}, {"contestId": 911, "index": "B", "name": "Two Cakes", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 11999}, {"contestId": 911, "index": "A", "name": "Nearest Minimums", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 11822}, {"contestId": 910, "index": "C", "name": "Minimum Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 2050}, {"contestId": 910, "index": "B", "name": "Door Frames", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "implementation"], "solvedCount": 1758}, {"contestId": 910, "index": "A", "name": "The Way to Home", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["dfs and similar", "dp", "greedy", "implementation"], "solvedCount": 13100}, {"contestId": 909, "index": "F", "name": "AND-permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 600}, {"contestId": 909, "index": "E", "name": "Coprocessor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "greedy"], "solvedCount": 2296}, {"contestId": 909, "index": "D", "name": "Colorful Points", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 2001}, {"contestId": 909, "index": "C", "name": "Python Indentation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"], "solvedCount": 5194}, {"contestId": 909, "index": "B", "name": "Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "math"], "solvedCount": 6636}, {"contestId": 909, "index": "A", "name": "Generate Login", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 9843}, {"contestId": 908, "index": "H", "name": "New Year and Boolean Bridges", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": [], "solvedCount": 412}, {"contestId": 908, "index": "G", "name": "New Year and Original Order", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["dp", "math"], "solvedCount": 1512}, {"contestId": 908, "index": "F", "name": "New Year and Rainbow Roads", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["graphs", "greedy", "implementation"], "solvedCount": 1517}, {"contestId": 908, "index": "E", "name": "New Year and Entity Enumeration", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "combinatorics", "dp", "math"], "solvedCount": 801}, {"contestId": 908, "index": "D", "name": "New Year and Arbitrary Arrangement", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dp", "math", "probabilities"], "solvedCount": 2478}, {"contestId": 908, "index": "C", "name": "New Year and Curling", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "geometry", "implementation", "math"], "solvedCount": 7067}, {"contestId": 908, "index": "B", "name": "New Year and Buggy Bot", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 7800}, {"contestId": 908, "index": "A", "name": "New Year and Counting Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 15352}, {"contestId": 907, "index": "B", "name": "Tic-Tac-Toe", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 4163}, {"contestId": 907, "index": "A", "name": "Masha and Bears", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 5832}, {"contestId": 906, "index": "E", "name": "Reverses", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["dp", "string suffix structures", "strings"], "solvedCount": 520}, {"contestId": 906, "index": "D", "name": "Power Tower", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["chinese remainder theorem", "math", "number theory"], "solvedCount": 2386}, {"contestId": 906, "index": "C", "name": "Party", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dp", "graphs"], "solvedCount": 1456}, {"contestId": 906, "index": "B", "name": "Seating of Students", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 1239}, {"contestId": 906, "index": "A", "name": "Shockers", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "strings"], "solvedCount": 4301}, {"contestId": 903, "index": "G", "name": "Yet Another Maxflow Problem", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "flows", "graphs"], "solvedCount": 604}, {"contestId": 903, "index": "F", "name": "Clear The Matrix", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 718}, {"contestId": 903, "index": "E", "name": "Swapping Characters", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "hashing", "implementation", "strings"], "solvedCount": 1532}, {"contestId": 903, "index": "D", "name": "Almost Difference", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "math"], "solvedCount": 4149}, {"contestId": 903, "index": "C", "name": "Boxes Packing", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy"], "solvedCount": 20504}, {"contestId": 903, "index": "B", "name": "The Modcrab", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 7945}, {"contestId": 903, "index": "A", "name": "Hungry Student Problem", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 15104}, {"contestId": 902, "index": "B", "name": "Coloring a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dfs and similar", "dsu", "greedy"], "solvedCount": 11456}, {"contestId": 902, "index": "A", "name": "Visiting a Friend", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 10110}, {"contestId": 901, "index": "E", "name": "Cyclic Cipher", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["fft", "math"], "solvedCount": 98}, {"contestId": 901, "index": "D", "name": "Weighting a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 590}, {"contestId": 901, "index": "C", "name": "Bipartite Segments", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "two pointers"], "solvedCount": 1236}, {"contestId": 901, "index": "B", "name": "GCD of Polynomials", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "math"], "solvedCount": 1608}, {"contestId": 901, "index": "A", "name": "Hashing Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 5249}, {"contestId": 900, "index": "E", "name": "Maximum Questions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dp", "strings"], "solvedCount": 1315}, {"contestId": 900, "index": "D", "name": "Unusual Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"], "solvedCount": 3552}, {"contestId": 900, "index": "C", "name": "Remove Extra One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "data structures", "math"], "solvedCount": 4748}, {"contestId": 900, "index": "B", "name": "Position in Fraction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math", "number theory"], "solvedCount": 8154}, {"contestId": 900, "index": "A", "name": "Find Extra One", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["geometry", "implementation"], "solvedCount": 14279}, {"contestId": 899, "index": "F", "name": "Letters Removing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "strings"], "solvedCount": 1937}, {"contestId": 899, "index": "E", "name": "Segments Removal", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures", "dsu", "flows", "implementation", "two pointers"], "solvedCount": 3319}, {"contestId": 899, "index": "D", "name": "Shovel Sale", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "math"], "solvedCount": 3048}, {"contestId": 899, "index": "C", "name": "Dividing the numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 8807}, {"contestId": 899, "index": "B", "name": "Months and Years", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 6098}, {"contestId": 899, "index": "A", "name": "Splitting in Teams", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 10823}, {"contestId": 898, "index": "F", "name": "Restoring the Expression", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "hashing", "math"], "solvedCount": 1395}, {"contestId": 898, "index": "E", "name": "Squares and not squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 4782}, {"contestId": 898, "index": "D", "name": "Alarm Clock", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 4254}, {"contestId": 898, "index": "C", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["implementation", "strings"], "solvedCount": 5485}, {"contestId": 898, "index": "B", "name": "Proper Nutrition", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["brute force", "implementation", "number theory"], "solvedCount": 10161}, {"contestId": 898, "index": "A", "name": "Rounding", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 17207}, {"contestId": 897, "index": "B", "name": "Chtholly's request", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force"], "solvedCount": 7382}, {"contestId": 897, "index": "A", "name": "Scarborough Fair", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 14728}, {"contestId": 896, "index": "E", "name": "Welcome home, Chtholly", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "dsu"], "solvedCount": 2339}, {"contestId": 896, "index": "D", "name": "Nephren Runs a Cinema", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["chinese remainder theorem", "combinatorics", "math", "number theory"], "solvedCount": 583}, {"contestId": 896, "index": "C", "name": "Willem, Chtholly and Seniorious", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["data structures", "probabilities"], "solvedCount": 3967}, {"contestId": 896, "index": "B", "name": "Ithea Plays With Chtholly", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "games", "greedy", "interactive"], "solvedCount": 2218}, {"contestId": 896, "index": "A", "name": "Nephren gives a riddle", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "dfs and similar"], "solvedCount": 3611}, {"contestId": 895, "index": "E", "name": "Eyes Closed", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "probabilities"], "solvedCount": 1199}, {"contestId": 895, "index": "D", "name": "String Mark", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "math", "strings"], "solvedCount": 1173}, {"contestId": 895, "index": "C", "name": "Square Subsets", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["bitmasks", "combinatorics", "dp", "math"], "solvedCount": 6465}, {"contestId": 895, "index": "B", "name": "XK Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "math", "sortings", "two pointers"], "solvedCount": 3685}, {"contestId": 895, "index": "A", "name": "Pizza Separation", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 6750}, {"contestId": 894, "index": "E", "name": "Ralph and Mushrooms", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "graphs"], "solvedCount": 2687}, {"contestId": 894, "index": "D", "name": "Ralph And His Tour in Binary Country", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "trees"], "solvedCount": 1165}, {"contestId": 894, "index": "C", "name": "Marco and GCD Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "math"], "solvedCount": 4516}, {"contestId": 894, "index": "B", "name": "Ralph And His Magic Field", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "constructive algorithms", "math", "number theory"], "solvedCount": 4593}, {"contestId": 894, "index": "A", "name": "QAQ", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "dp"], "solvedCount": 37414}, {"contestId": 893, "index": "F", "name": "Subtree Minimum Query", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "trees"], "solvedCount": 2293}, {"contestId": 893, "index": "E", "name": "Counting Arrays", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 3934}, {"contestId": 893, "index": "D", "name": "Credit Card", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp", "greedy", "implementation"], "solvedCount": 3214}, {"contestId": 893, "index": "C", "name": "Rumor", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "graphs", "greedy"], "solvedCount": 25999}, {"contestId": 893, "index": "B", "name": "Beautiful Divisors", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 12124}, {"contestId": 893, "index": "A", "name": "Chess For Three", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 10591}, {"contestId": 892, "index": "B", "name": "Wrath", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation", "two pointers"], "solvedCount": 9477}, {"contestId": 892, "index": "A", "name": "Greed", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 14144}, {"contestId": 891, "index": "E", "name": "Lust", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics", "math", "matrices"], "solvedCount": 1032}, {"contestId": 891, "index": "D", "name": "Sloth", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["dfs and similar", "dp", "graph matchings", "trees"], "solvedCount": 218}, {"contestId": 891, "index": "C", "name": "Envy", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dsu", "graphs"], "solvedCount": 2718}, {"contestId": 891, "index": "B", "name": "Gluttony", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3117}, {"contestId": 891, "index": "A", "name": "Pride", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "dp", "greedy", "math", "number theory"], "solvedCount": 12044}, {"contestId": 889, "index": "E", "name": "Mod Mod Mod", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["binary search", "dp", "math"], "solvedCount": 634}, {"contestId": 888, "index": "G", "name": "Xor-MST", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "data structures"], "solvedCount": 5279}, {"contestId": 888, "index": "F", "name": "Connecting Vertices", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "graphs"], "solvedCount": 945}, {"contestId": 888, "index": "E", "name": "Maximum Subsequence", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "divide and conquer", "meet-in-the-middle"], "solvedCount": 8334}, {"contestId": 888, "index": "D", "name": "Almost Identity Permutations", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "dp", "math"], "solvedCount": 9581}, {"contestId": 888, "index": "C", "name": "K-Dominant Character", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "implementation", "two pointers"], "solvedCount": 8622}, {"contestId": 888, "index": "B", "name": "Buggy Robot", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy"], "solvedCount": 10223}, {"contestId": 888, "index": "A", "name": "Local Extrema", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 11509}, {"contestId": 887, "index": "F", "name": "Row of Models", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["greedy", "sortings"], "solvedCount": 179}, {"contestId": 887, "index": "E", "name": "Little Brother", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "geometry", "sortings"], "solvedCount": 175}, {"contestId": 887, "index": "D", "name": "Ratings and Reality Shows", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "two pointers"], "solvedCount": 505}, {"contestId": 887, "index": "C", "name": "Solution for Cube", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 2951}, {"contestId": 887, "index": "B", "name": "Cubes for Masha", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 5818}, {"contestId": 887, "index": "A", "name": "Div. 64", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 11613}, {"contestId": 886, "index": "F", "name": "Symmetric Projections", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["geometry"], "solvedCount": 282}, {"contestId": 886, "index": "E", "name": "Maximum Element", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1126}, {"contestId": 886, "index": "D", "name": "Restoration of string", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 1828}, {"contestId": 886, "index": "C", "name": "Petya and Catacombs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dsu", "greedy", "implementation", "trees"], "solvedCount": 5563}, {"contestId": 886, "index": "B", "name": "Vlad and Cafes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": [], "solvedCount": 8116}, {"contestId": 886, "index": "A", "name": "ACM ICPC", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force"], "solvedCount": 10704}, {"contestId": 884, "index": "F", "name": "Anti-Palindromize", "type": "PROGRAMMING", "rating": 2500, "tags": ["flows", "graphs", "greedy"], "solvedCount": 1185}, {"contestId": 884, "index": "E", "name": "Binary Matrix", "type": "PROGRAMMING", "rating": 2500, "tags": ["dsu"], "solvedCount": 746}, {"contestId": 884, "index": "D", "name": "Boxes And Balls", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy"], "solvedCount": 2135}, {"contestId": 884, "index": "C", "name": "Bertown Subway", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "greedy", "math"], "solvedCount": 5023}, {"contestId": 884, "index": "B", "name": "Japanese Crosswords Strike Back", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 7185}, {"contestId": 884, "index": "A", "name": "Book Reading", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 10872}, {"contestId": 883, "index": "M", "name": "Quadcopter Competition", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 3709}, {"contestId": 883, "index": "L", "name": "Berland.Taxi", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"], "solvedCount": 243}, {"contestId": 883, "index": "K", "name": "Road Widening", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 1145}, {"contestId": 883, "index": "J", "name": "Renovation", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 593}, {"contestId": 883, "index": "I", "name": "Photo Processing", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "dp"], "solvedCount": 2180}, {"contestId": 883, "index": "H", "name": "Palindromic Cut", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 1698}, {"contestId": 883, "index": "G", "name": "Orientation of Edges", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "graphs"], "solvedCount": 1477}, {"contestId": 883, "index": "F", "name": "Lost in Transliteration", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 2335}, {"contestId": 883, "index": "E", "name": "Field of Wonders", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation", "strings"], "solvedCount": 1959}, {"contestId": 883, "index": "D", "name": "Packmen Strike Back", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "dp", "math"], "solvedCount": 485}, {"contestId": 883, "index": "C", "name": "Downloading B++", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "implementation"], "solvedCount": 639}, {"contestId": 883, "index": "B", "name": "Berland Army", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 404}, {"contestId": 883, "index": "A", "name": "Automatic Door", "type": "PROGRAMMING", "rating": 2200, "tags": ["implementation"], "solvedCount": 615}, {"contestId": 879, "index": "B", "name": "Table Tennis", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["data structures", "implementation"], "solvedCount": 13557}, {"contestId": 879, "index": "A", "name": "Borya's Diagnosis", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 9344}, {"contestId": 878, "index": "E", "name": "Numbers on the blackboard", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["combinatorics", "dp"], "solvedCount": 669}, {"contestId": 878, "index": "D", "name": "Magic Breeding", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["bitmasks"], "solvedCount": 795}, {"contestId": 878, "index": "C", "name": "Tournament", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["data structures", "graphs"], "solvedCount": 984}, {"contestId": 878, "index": "B", "name": "Teams Formation", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "implementation"], "solvedCount": 1090}, {"contestId": 878, "index": "A", "name": "Short Program", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 5791}, {"contestId": 877, "index": "F", "name": "Ann and Books", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "flows", "hashing"], "solvedCount": 2064}, {"contestId": 877, "index": "E", "name": "Danil and a Part-time Job", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 5017}, {"contestId": 877, "index": "D", "name": "Olya and Energy Drinks", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 4739}, {"contestId": 877, "index": "C", "name": "Slava and tanks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 5902}, {"contestId": 877, "index": "B", "name": "Nikita and string", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp"], "solvedCount": 11324}, {"contestId": 877, "index": "A", "name": "Alex and broken contest", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 11314}, {"contestId": 876, "index": "B", "name": "Divisiblity of Differences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "math", "number theory"], "solvedCount": 9883}, {"contestId": 876, "index": "A", "name": "Trip For Meal", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"], "solvedCount": 9767}, {"contestId": 875, "index": "F", "name": "Royal Questions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dsu", "graphs", "greedy"], "solvedCount": 1473}, {"contestId": 875, "index": "E", "name": "Delivery Club", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dp"], "solvedCount": 974}, {"contestId": 875, "index": "D", "name": "High Cry", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "combinatorics", "data structures", "divide and conquer"], "solvedCount": 2362}, {"contestId": 875, "index": "C", "name": "National Property", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["2-sat", "dfs and similar", "graphs", "implementation"], "solvedCount": 2266}, {"contestId": 875, "index": "B", "name": "Sorting the Coins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dsu", "implementation", "sortings", "two pointers"], "solvedCount": 5295}, {"contestId": 875, "index": "A", "name": "Classroom Watch", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "math"], "solvedCount": 9995}, {"contestId": 873, "index": "F", "name": "Forbidden Indices", "type": "PROGRAMMING", "rating": 2400, "tags": ["dsu", "string suffix structures", "strings"], "solvedCount": 1633}, {"contestId": 873, "index": "E", "name": "Awards For Contestants", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "data structures", "dp"], "solvedCount": 745}, {"contestId": 873, "index": "D", "name": "Merge Sort", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 3549}, {"contestId": 873, "index": "C", "name": "Strange Game On Matrix", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "two pointers"], "solvedCount": 3472}, {"contestId": 873, "index": "B", "name": "Balanced Substring", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"], "solvedCount": 8407}, {"contestId": 873, "index": "A", "name": "Chores", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 9236}, {"contestId": 871, "index": "E", "name": "Restore the Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["graphs", "greedy", "trees"], "solvedCount": 158}, {"contestId": 870, "index": "F", "name": "Paths", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["data structures", "number theory"], "solvedCount": 652}, {"contestId": 870, "index": "E", "name": "Points, Lines and Ready-made Titles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 1269}, {"contestId": 870, "index": "D", "name": "Something with XOR Queries", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["brute force", "interactive", "probabilities"], "solvedCount": 1257}, {"contestId": 870, "index": "C", "name": "Maximum splitting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dp", "greedy", "math", "number theory"], "solvedCount": 9432}, {"contestId": 870, "index": "B", "name": "Maximum of Maximums of Minimums", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy"], "solvedCount": 10092}, {"contestId": 870, "index": "A", "name": "Search for Pretty Integers", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 10428}, {"contestId": 869, "index": "E", "name": "The Untended Antiquity", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "hashing"], "solvedCount": 1972}, {"contestId": 869, "index": "D", "name": "The Overdosing Ubiquity", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "dfs and similar", "graphs"], "solvedCount": 268}, {"contestId": 869, "index": "C", "name": "The Intriguing Obsession", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["combinatorics", "dp", "math"], "solvedCount": 4980}, {"contestId": 869, "index": "B", "name": "The Eternal Immortality", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"], "solvedCount": 14790}, {"contestId": 869, "index": "A", "name": "The Artful Expedient", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 9656}, {"contestId": 868, "index": "G", "name": "El Toll Caves", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["math"], "solvedCount": 161}, {"contestId": 868, "index": "F", "name": "Yet Another Minimization Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "dp"], "solvedCount": 4470}, {"contestId": 868, "index": "E", "name": "Policeman and a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "graphs", "trees"], "solvedCount": 550}, {"contestId": 868, "index": "D", "name": "Huge Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dp", "implementation", "strings"], "solvedCount": 945}, {"contestId": 868, "index": "C", "name": "Qualification Rounds", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"], "solvedCount": 4820}, {"contestId": 868, "index": "B", "name": "Race Against Time", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 3773}, {"contestId": 868, "index": "A", "name": "Bark to Unlock", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["brute force", "implementation", "strings"], "solvedCount": 9383}, {"contestId": 867, "index": "A", "name": "Between the Offices", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 20126}, {"contestId": 865, "index": "G", "name": "Flowers and Chocolate", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["combinatorics", "math", "matrices"], "solvedCount": 152}, {"contestId": 865, "index": "F", "name": "Egg Roulette", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["bitmasks", "brute force", "divide and conquer", "math", "meet-in-the-middle"], "solvedCount": 80}, {"contestId": 865, "index": "E", "name": "Hex Dyslexia", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["bitmasks", "brute force", "dp", "graphs"], "solvedCount": 154}, {"contestId": 865, "index": "D", "name": "Buy Low Sell High", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 6823}, {"contestId": 865, "index": "C", "name": "Gotta Go Fast", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "dp"], "solvedCount": 895}, {"contestId": 865, "index": "B", "name": "Ordering Pizza", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "sortings", "ternary search"], "solvedCount": 1898}, {"contestId": 865, "index": "A", "name": "Save the problem!", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms"], "solvedCount": 4389}, {"contestId": 864, "index": "F", "name": "Cities Excursions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 656}, {"contestId": 864, "index": "E", "name": "Fire", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["dp", "sortings"], "solvedCount": 4459}, {"contestId": 864, "index": "D", "name": "Make a Permutation!", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["greedy", "implementation", "math"], "solvedCount": 6245}, {"contestId": 864, "index": "C", "name": "Bus", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["greedy", "implementation", "math"], "solvedCount": 6081}, {"contestId": 864, "index": "B", "name": "Polycarp and Letters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation", "strings"], "solvedCount": 9642}, {"contestId": 864, "index": "A", "name": "Fair Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "sortings"], "solvedCount": 11969}, {"contestId": 863, "index": "G", "name": "Graphic Settings", "type": "PROGRAMMING", "rating": 3200, "tags": [], "solvedCount": 63}, {"contestId": 863, "index": "F", "name": "Almost Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["flows"], "solvedCount": 1412}, {"contestId": 863, "index": "E", "name": "Turn Off The TV", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "sortings"], "solvedCount": 3582}, {"contestId": 863, "index": "D", "name": "Yet Another Array Queries Problem", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation"], "solvedCount": 3529}, {"contestId": 863, "index": "C", "name": "1-2-3", "type": "PROGRAMMING", "rating": 1800, "tags": ["graphs", "implementation"], "solvedCount": 2613}, {"contestId": 863, "index": "B", "name": "Kayaking", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 9734}, {"contestId": 863, "index": "A", "name": "Quasi-palindrome", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 10597}, {"contestId": 862, "index": "F", "name": "Mahmoud and Ehab and the final stage", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "strings"], "solvedCount": 245}, {"contestId": 862, "index": "E", "name": "Mahmoud and Ehab and the function", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 1902}, {"contestId": 862, "index": "D", "name": "Mahmoud and Ehab and the binary string", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["binary search", "divide and conquer", "interactive"], "solvedCount": 1940}, {"contestId": 862, "index": "C", "name": "Mahmoud and Ehab and the xor", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 4336}, {"contestId": 862, "index": "B", "name": "Mahmoud and Ehab and the bipartiteness", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 21729}, {"contestId": 862, "index": "A", "name": "Mahmoud and Ehab and the MEX", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation"], "solvedCount": 9838}, {"contestId": 860, "index": "E", "name": "Arkady and a Nobody-men", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 489}, {"contestId": 859, "index": "G", "name": "Circle of Numbers", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["math"], "solvedCount": 169}, {"contestId": 859, "index": "F", "name": "Ordering T-Shirts", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["greedy"], "solvedCount": 204}, {"contestId": 859, "index": "E", "name": "Desk Disorder", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 2021}, {"contestId": 859, "index": "D", "name": "Third Month Insanity", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "probabilities", "trees"], "solvedCount": 1086}, {"contestId": 859, "index": "C", "name": "Pie Rules", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "games"], "solvedCount": 5816}, {"contestId": 859, "index": "B", "name": "Lazy Security Guard", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "geometry", "math"], "solvedCount": 7541}, {"contestId": 859, "index": "A", "name": "Declined Finalists", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 8048}, {"contestId": 858, "index": "F", "name": "Wizard's Tour", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 1809}, {"contestId": 858, "index": "E", "name": "Tests Renumeration", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["greedy", "implementation"], "solvedCount": 522}, {"contestId": 858, "index": "D", "name": "Polycarp's phone book", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 4061}, {"contestId": 858, "index": "C", "name": "Did you mean...", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dp", "greedy", "implementation"], "solvedCount": 5742}, {"contestId": 858, "index": "B", "name": "Which floor?", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 4000}, {"contestId": 858, "index": "A", "name": "k-rounding", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["brute force", "math", "number theory"], "solvedCount": 8707}, {"contestId": 856, "index": "F", "name": "To Play or not to Play", "type": "PROGRAMMING", "rating": 3000, "tags": ["greedy"], "solvedCount": 111}, {"contestId": 856, "index": "E", "name": "Satellites", "type": "PROGRAMMING", "rating": 3100, "tags": [], "solvedCount": 80}, {"contestId": 856, "index": "D", "name": "Masha and Cactus", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "trees"], "solvedCount": 556}, {"contestId": 856, "index": "C", "name": "Eleventh Birthday", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dp", "math"], "solvedCount": 666}, {"contestId": 856, "index": "B", "name": "Similar Words", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "hashing", "strings", "trees"], "solvedCount": 545}, {"contestId": 856, "index": "A", "name": "Set Theory", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms"], "solvedCount": 1551}, {"contestId": 855, "index": "G", "name": "Harry Vs Voldemort", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 263}, {"contestId": 855, "index": "F", "name": "Nagini", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["binary search", "data structures"], "solvedCount": 531}, {"contestId": 855, "index": "E", "name": "Salazar Slytherin's Locket", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 2009}, {"contestId": 855, "index": "D", "name": "Rowena Ravenclaw's Diadem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["trees"], "solvedCount": 553}, {"contestId": 855, "index": "C", "name": "Helga Hufflepuff's Cup", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "trees"], "solvedCount": 2255}, {"contestId": 855, "index": "B", "name": "Marvolo Gaunt's Ring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "dp"], "solvedCount": 9378}, {"contestId": 855, "index": "A", "name": "Tom Riddle's Diary", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 24478}, {"contestId": 854, "index": "B", "name": "Maxim Buys an Apartment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 8390}, {"contestId": 854, "index": "A", "name": "Fraction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 14192}, {"contestId": 853, "index": "E", "name": "Lada Malina", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "geometry"], "solvedCount": 77}, {"contestId": 853, "index": "D", "name": "Michael and Charging Stations", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "dp", "greedy"], "solvedCount": 700}, {"contestId": 853, "index": "C", "name": "Boredom", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures"], "solvedCount": 1546}, {"contestId": 853, "index": "B", "name": "Jury Meeting", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 2639}, {"contestId": 853, "index": "A", "name": "Planning", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["greedy"], "solvedCount": 5987}, {"contestId": 852, "index": "I", "name": "Dating", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dfs and similar", "graphs", "trees"], "solvedCount": 661}, {"contestId": 852, "index": "H", "name": "Bob and stages", "type": "PROGRAMMING", "rating": 3000, "tags": ["dp", "geometry"], "solvedCount": 167}, {"contestId": 852, "index": "G", "name": "Bathroom terminal", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation"], "solvedCount": 1360}, {"contestId": 852, "index": "F", "name": "Product transformation", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 627}, {"contestId": 852, "index": "E", "name": "Casinos and travel", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"], "solvedCount": 1117}, {"contestId": 852, "index": "D", "name": "Exploration plan", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "flows", "graph matchings", "shortest paths"], "solvedCount": 1130}, {"contestId": 852, "index": "C", "name": "Property", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy", "sortings"], "solvedCount": 620}, {"contestId": 852, "index": "B", "name": "Neural Network country", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "matrices"], "solvedCount": 1598}, {"contestId": 852, "index": "A", "name": "Digits", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "implementation", "math"], "solvedCount": 413}, {"contestId": 851, "index": "B", "name": "Arpa and an exam about geometry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["geometry", "math"], "solvedCount": 5699}, {"contestId": 851, "index": "A", "name": "Arpa and a research in Mexican wave", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 10054}, {"contestId": 850, "index": "F", "name": "Rainbow Balls", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["math"], "solvedCount": 726}, {"contestId": 850, "index": "E", "name": "Random Elections", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "brute force", "divide and conquer", "fft", "math"], "solvedCount": 443}, {"contestId": 850, "index": "D", "name": "Tournament Construction", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "solvedCount": 419}, {"contestId": 850, "index": "C", "name": "Arpa and a game with Mojtaba", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["bitmasks", "dp", "games"], "solvedCount": 1655}, {"contestId": 850, "index": "B", "name": "Arpa and a list of numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["implementation", "number theory"], "solvedCount": 2079}, {"contestId": 850, "index": "A", "name": "Five Dimensional Points", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "geometry", "math"], "solvedCount": 3279}, {"contestId": 849, "index": "B", "name": "Tell Your World", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "geometry"], "solvedCount": 3850}, {"contestId": 849, "index": "A", "name": "Odds and Ends", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 9444}, {"contestId": 848, "index": "E", "name": "Days of Floral Colours", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"], "solvedCount": 234}, {"contestId": 848, "index": "D", "name": "Shake It!", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["combinatorics", "dp", "flows", "graphs"], "solvedCount": 433}, {"contestId": 848, "index": "C", "name": "Goodbye Souvenir", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["data structures", "divide and conquer"], "solvedCount": 1466}, {"contestId": 848, "index": "B", "name": "Rooter's Song", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "geometry", "implementation", "sortings", "two pointers"], "solvedCount": 1968}, {"contestId": 848, "index": "A", "name": "From Y to Y", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 5265}, {"contestId": 847, "index": "M", "name": "Weather Tomorrow", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 6500}, {"contestId": 847, "index": "L", "name": "Berland SU Computer Network", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "hashing", "trees"], "solvedCount": 333}, {"contestId": 847, "index": "K", "name": "Travel Cards", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 1790}, {"contestId": 847, "index": "J", "name": "Students Initiation", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "flows", "graphs"], "solvedCount": 738}, {"contestId": 847, "index": "I", "name": "Noise Level", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "implementation", "math"], "solvedCount": 1570}, {"contestId": 847, "index": "H", "name": "Load Testing", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy"], "solvedCount": 2518}, {"contestId": 847, "index": "G", "name": "University Classes", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 7291}, {"contestId": 847, "index": "F", "name": "Berland Elections", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy", "sortings"], "solvedCount": 894}, {"contestId": 847, "index": "E", "name": "Packmen", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp"], "solvedCount": 3396}, {"contestId": 847, "index": "D", "name": "Dog Show", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 1313}, {"contestId": 847, "index": "C", "name": "Sum of Nestings", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 2467}, {"contestId": 847, "index": "B", "name": "Preparing for Merge Sort", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures"], "solvedCount": 5581}, {"contestId": 847, "index": "A", "name": "Union of Doubly Linked Lists", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"], "solvedCount": 3680}, {"contestId": 846, "index": "F", "name": "Random Query", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "math", "probabilities", "two pointers"], "solvedCount": 2470}, {"contestId": 846, "index": "E", "name": "Chemistry in Berland", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "greedy", "trees"], "solvedCount": 977}, {"contestId": 846, "index": "D", "name": "Monitor", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures"], "solvedCount": 2715}, {"contestId": 846, "index": "C", "name": "Four Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp"], "solvedCount": 2830}, {"contestId": 846, "index": "B", "name": "Math Show", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "greedy"], "solvedCount": 2714}, {"contestId": 846, "index": "A", "name": "Curriculum Vitae", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 4481}, {"contestId": 845, "index": "G", "name": "Shortest Path Problem?", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "graphs", "math"], "solvedCount": 1924}, {"contestId": 845, "index": "F", "name": "Guards In The Storehouse", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "dp"], "solvedCount": 525}, {"contestId": 845, "index": "E", "name": "Fire in the City", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures"], "solvedCount": 651}, {"contestId": 845, "index": "D", "name": "Driving Test", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2495}, {"contestId": 845, "index": "C", "name": "Two TVs", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 10982}, {"contestId": 845, "index": "B", "name": "Luba And The Ticket", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 5197}, {"contestId": 845, "index": "A", "name": "Chess Tourney", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "sortings"], "solvedCount": 8137}, {"contestId": 844, "index": "B", "name": "Rectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "math"], "solvedCount": 8437}, {"contestId": 844, "index": "A", "name": "Diversity", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation", "strings"], "solvedCount": 11502}, {"contestId": 843, "index": "E", "name": "Maximum Flow", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["flows", "graphs"], "solvedCount": 377}, {"contestId": 843, "index": "D", "name": "Dynamic Shortest Path", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["graphs", "shortest paths"], "solvedCount": 1038}, {"contestId": 843, "index": "C", "name": "Upgrading Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math", "trees"], "solvedCount": 389}, {"contestId": 843, "index": "B", "name": "Interactive LowerBound", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "interactive", "probabilities"], "solvedCount": 2411}, {"contestId": 843, "index": "A", "name": "Sorting by Subsequences", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "dsu", "implementation", "math", "sortings"], "solvedCount": 5811}, {"contestId": 842, "index": "E", "name": "Nikita and game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "dfs and similar", "divide and conquer", "graphs", "trees"], "solvedCount": 477}, {"contestId": 842, "index": "D", "name": "Vitya and Strange Lesson", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures"], "solvedCount": 4109}, {"contestId": 842, "index": "C", "name": "Ilya And The Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "math", "number theory", "trees"], "solvedCount": 3585}, {"contestId": 842, "index": "B", "name": "Gleb And Pizza", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["geometry"], "solvedCount": 10722}, {"contestId": 842, "index": "A", "name": "Kirill And The Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "two pointers"], "solvedCount": 10828}, {"contestId": 841, "index": "B", "name": "Godsend", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["games", "math"], "solvedCount": 12654}, {"contestId": 841, "index": "A", "name": "Generous Kefa", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 13616}, {"contestId": 840, "index": "E", "name": "In a Trap", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["trees"], "solvedCount": 546}, {"contestId": 840, "index": "D", "name": "Destiny", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "probabilities"], "solvedCount": 3504}, {"contestId": 840, "index": "C", "name": "On the Bench", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp"], "solvedCount": 1939}, {"contestId": 840, "index": "B", "name": "Leha and another game about graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "graphs"], "solvedCount": 2591}, {"contestId": 840, "index": "A", "name": "Leha and Function", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["combinatorics", "greedy", "math", "number theory", "sortings"], "solvedCount": 7178}, {"contestId": 839, "index": "E", "name": "Mother of Dragons", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "graphs", "math", "meet-in-the-middle"], "solvedCount": 966}, {"contestId": 839, "index": "D", "name": "Winter is here", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 3279}, {"contestId": 839, "index": "C", "name": "Journey", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "probabilities", "trees"], "solvedCount": 18619}, {"contestId": 839, "index": "B", "name": "Game of the Rows", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 3366}, {"contestId": 839, "index": "A", "name": "Arya and Bran", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 14605}, {"contestId": 838, "index": "F", "name": "Expected Earnings", "type": "PROGRAMMING", "rating": 2800, "tags": [], "solvedCount": 110}, {"contestId": 838, "index": "E", "name": "Convex Countour", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp"], "solvedCount": 386}, {"contestId": 838, "index": "D", "name": "Airplane Arrangements", "type": "PROGRAMMING", "rating": 2700, "tags": ["math", "number theory"], "solvedCount": 1052}, {"contestId": 838, "index": "C", "name": "Future Failure", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "games"], "solvedCount": 390}, {"contestId": 838, "index": "B", "name": "Diverging Directions", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 931}, {"contestId": 838, "index": "A", "name": "Binary Blocks", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"], "solvedCount": 995}, {"contestId": 837, "index": "G", "name": "Functions On The Segments", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"], "solvedCount": 798}, {"contestId": 837, "index": "F", "name": "Prefix Sums", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "brute force", "combinatorics", "math", "matrices"], "solvedCount": 1035}, {"contestId": 837, "index": "E", "name": "Vasya's Function", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "implementation", "math"], "solvedCount": 1921}, {"contestId": 837, "index": "D", "name": "Round Subset", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "math"], "solvedCount": 6510}, {"contestId": 837, "index": "C", "name": "Two Seals", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 4183}, {"contestId": 837, "index": "B", "name": "Flag of Berland", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "implementation"], "solvedCount": 4052}, {"contestId": 837, "index": "A", "name": "Text Volume", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 9798}, {"contestId": 835, "index": "F", "name": "Roads in the Kingdom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 1162}, {"contestId": 835, "index": "E", "name": "The penguin's game", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 1284}, {"contestId": 835, "index": "D", "name": "Palindromic characteristics", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp", "hashing", "strings"], "solvedCount": 4432}, {"contestId": 835, "index": "C", "name": "Star sky", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dp", "implementation"], "solvedCount": 8761}, {"contestId": 835, "index": "B", "name": "The number on the board", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 11269}, {"contestId": 835, "index": "A", "name": "Key races", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 20961}, {"contestId": 834, "index": "B", "name": "The Festive Evening", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation"], "solvedCount": 9157}, {"contestId": 834, "index": "A", "name": "The Useless Toy", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 8885}, {"contestId": 833, "index": "E", "name": "Caramel Clouds", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dp", "sortings"], "solvedCount": 264}, {"contestId": 833, "index": "D", "name": "Red-Black Cobweb", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 441}, {"contestId": 833, "index": "C", "name": "Ever-Hungry Krakozyabra", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["brute force", "combinatorics", "greedy", "math"], "solvedCount": 494}, {"contestId": 833, "index": "B", "name": "The Bakery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 5806}, {"contestId": 833, "index": "A", "name": "The Meaningless Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["math", "number theory"], "solvedCount": 6417}, {"contestId": 832, "index": "E", "name": "Vasya and Shifts", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["matrices"], "solvedCount": 355}, {"contestId": 832, "index": "D", "name": "Misha, Grisha and Underground", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 4181}, {"contestId": 832, "index": "C", "name": "Strange Radiation", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["binary search", "implementation", "math"], "solvedCount": 474}, {"contestId": 832, "index": "B", "name": "Petya and Exam", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation", "strings"], "solvedCount": 4456}, {"contestId": 832, "index": "A", "name": "Sasha and Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["games", "math"], "solvedCount": 21495}, {"contestId": 831, "index": "C", "name": "Jury Marks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "constructive algorithms"], "solvedCount": 5017}, {"contestId": 831, "index": "B", "name": "Keyboard Layouts", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 15258}, {"contestId": 831, "index": "A", "name": "Unimodal Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 10691}, {"contestId": 830, "index": "E", "name": "Perpetual Motion Machine", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["constructive algorithms", "dp", "graphs", "implementation", "math", "trees"], "solvedCount": 316}, {"contestId": 830, "index": "D", "name": "Singer House", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["combinatorics", "dp", "graphs", "trees"], "solvedCount": 921}, {"contestId": 830, "index": "C", "name": "Bamboo Partition", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "data structures", "implementation", "math", "number theory", "sortings", "two pointers"], "solvedCount": 1260}, {"contestId": 830, "index": "B", "name": "Cards Sorting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 2955}, {"contestId": 830, "index": "A", "name": "Office Keys", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "brute force", "dp", "greedy", "sortings"], "solvedCount": 7779}, {"contestId": 828, "index": "B", "name": "Black Square", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 5800}, {"contestId": 828, "index": "A", "name": "Restaurant Tables", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 8173}, {"contestId": 827, "index": "F", "name": "Dirty Arkady's Kitchen", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dp", "graphs", "shortest paths"], "solvedCount": 494}, {"contestId": 827, "index": "E", "name": "Rusty String", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["fft", "math", "strings"], "solvedCount": 1131}, {"contestId": 827, "index": "D", "name": "Best Edge Weight", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 1303}, {"contestId": 827, "index": "C", "name": "DNA Evolution", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "strings"], "solvedCount": 1721}, {"contestId": 827, "index": "B", "name": "High Load", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "trees"], "solvedCount": 3621}, {"contestId": 827, "index": "A", "name": "String Reconstruction", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "greedy", "sortings", "strings"], "solvedCount": 4222}, {"contestId": 825, "index": "G", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 1373}, {"contestId": 825, "index": "F", "name": "String Compression", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "hashing", "string suffix structures", "strings"], "solvedCount": 1803}, {"contestId": 825, "index": "E", "name": "Minimal Labels", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "graphs", "greedy"], "solvedCount": 3893}, {"contestId": 825, "index": "D", "name": "Suitable Replacement", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "greedy", "implementation"], "solvedCount": 3559}, {"contestId": 825, "index": "C", "name": "Multi-judge Solving", "type": "PROGRAMMING", "rating": 1600, "tags": ["greedy", "implementation"], "solvedCount": 4755}, {"contestId": 825, "index": "B", "name": "Five-In-a-Row", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "implementation"], "solvedCount": 4454}, {"contestId": 825, "index": "A", "name": "Binary Protocol", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 7943}, {"contestId": 822, "index": "F", "name": "Madness", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 361}, {"contestId": 822, "index": "E", "name": "Liar", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "dp", "hashing", "string suffix structures"], "solvedCount": 961}, {"contestId": 822, "index": "D", "name": "My pretty girl Noora", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "dp", "greedy", "math", "number theory"], "solvedCount": 3218}, {"contestId": 822, "index": "C", "name": "Hacker, pack your bags!", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "greedy", "implementation", "sortings"], "solvedCount": 4761}, {"contestId": 822, "index": "B", "name": "Crossword solving", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "implementation", "strings"], "solvedCount": 9812}, {"contestId": 822, "index": "A", "name": "I'm bored with life", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math", "number theory"], "solvedCount": 35208}, {"contestId": 821, "index": "E", "name": "Okabe and El Psy Kongroo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "matrices"], "solvedCount": 1571}, {"contestId": 821, "index": "D", "name": "Okabe and City", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 1549}, {"contestId": 821, "index": "C", "name": "Okabe and Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "greedy", "trees"], "solvedCount": 7452}, {"contestId": 821, "index": "B", "name": "Okabe and Banana Trees", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "math"], "solvedCount": 5930}, {"contestId": 821, "index": "A", "name": "Okabe and Future Gadget Laboratory", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 8752}, {"contestId": 820, "index": "B", "name": "Mister B and Angle in Polygon", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "geometry", "math"], "solvedCount": 5378}, {"contestId": 820, "index": "A", "name": "Mister B and Book Reading", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 8368}, {"contestId": 819, "index": "E", "name": "Mister B and Flight to the Moon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "graphs"], "solvedCount": 580}, {"contestId": 819, "index": "D", "name": "Mister B and Astronomers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["number theory"], "solvedCount": 289}, {"contestId": 819, "index": "C", "name": "Mister B and Beacons on Field", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["number theory"], "solvedCount": 220}, {"contestId": 819, "index": "B", "name": "Mister B and PR Shifts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "implementation", "math"], "solvedCount": 1744}, {"contestId": 819, "index": "A", "name": "Mister B and Boring Game", "type": "PROGRAMMING", "points": 500.0, "rating": 2200, "tags": ["games", "greedy"], "solvedCount": 509}, {"contestId": 818, "index": "G", "name": "Four Melodies", "type": "PROGRAMMING", "rating": 2600, "tags": ["flows", "graphs"], "solvedCount": 912}, {"contestId": 818, "index": "F", "name": "Level Generation", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "math", "ternary search"], "solvedCount": 1751}, {"contestId": 818, "index": "E", "name": "Card Game Again", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "number theory", "two pointers"], "solvedCount": 2439}, {"contestId": 818, "index": "D", "name": "Multicolored Cars", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation"], "solvedCount": 3649}, {"contestId": 818, "index": "C", "name": "Sofa Thief", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "implementation"], "solvedCount": 1309}, {"contestId": 818, "index": "B", "name": "Permutation Game", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 3149}, {"contestId": 818, "index": "A", "name": "Diplomas and Certificates", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 7403}, {"contestId": 817, "index": "F", "name": "MEX Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "trees"], "solvedCount": 2993}, {"contestId": 817, "index": "E", "name": "Choosing The Commander", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 3411}, {"contestId": 817, "index": "D", "name": "Imbalanced Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "dsu", "sortings"], "solvedCount": 5465}, {"contestId": 817, "index": "C", "name": "Really Big Numbers", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "dp", "math"], "solvedCount": 7967}, {"contestId": 817, "index": "B", "name": "Makes And The Product", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "implementation", "math", "sortings"], "solvedCount": 6099}, {"contestId": 817, "index": "A", "name": "Treasure Hunt", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math", "number theory"], "solvedCount": 6563}, {"contestId": 816, "index": "B", "name": "Karen and Coffee", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 22705}, {"contestId": 816, "index": "A", "name": "Karen and Morning", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 9437}, {"contestId": 815, "index": "E", "name": "Karen and Neighborhood", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["binary search", "constructive algorithms", "implementation"], "solvedCount": 233}, {"contestId": 815, "index": "D", "name": "Karen and Cards", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["binary search", "combinatorics", "data structures", "geometry"], "solvedCount": 664}, {"contestId": 815, "index": "C", "name": "Karen and Supermarket", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["brute force", "dp", "trees"], "solvedCount": 2928}, {"contestId": 815, "index": "B", "name": "Karen and Test", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "combinatorics", "constructive algorithms", "math"], "solvedCount": 1450}, {"contestId": 815, "index": "A", "name": "Karen and Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 5791}, {"contestId": 814, "index": "E", "name": "An unavoidable detour for home", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "graphs", "shortest paths"], "solvedCount": 700}, {"contestId": 814, "index": "D", "name": "An overnight dance in discotheque", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "geometry", "greedy", "trees"], "solvedCount": 2439}, {"contestId": 814, "index": "C", "name": "An impassioned circulation of affection", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "dp", "strings", "two pointers"], "solvedCount": 7267}, {"contestId": 814, "index": "B", "name": "An express train to reveries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms"], "solvedCount": 5788}, {"contestId": 814, "index": "A", "name": "An abandoned sentiment from past", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 10843}, {"contestId": 813, "index": "F", "name": "Bipartite Checking", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dsu", "graphs"], "solvedCount": 1523}, {"contestId": 813, "index": "E", "name": "Army Creation", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 2746}, {"contestId": 813, "index": "D", "name": "Two Melodies", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "flows"], "solvedCount": 1111}, {"contestId": 813, "index": "C", "name": "The Tag Game", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs"], "solvedCount": 7216}, {"contestId": 813, "index": "B", "name": "The Golden Age", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "math"], "solvedCount": 4232}, {"contestId": 813, "index": "A", "name": "The Contest", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 5255}, {"contestId": 812, "index": "E", "name": "Sagheer and Apple Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["games", "trees"], "solvedCount": 1185}, {"contestId": 812, "index": "D", "name": "Sagheer and Kindergarten", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 340}, {"contestId": 812, "index": "C", "name": "Sagheer and Nubian Market", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "sortings"], "solvedCount": 15953}, {"contestId": 812, "index": "B", "name": "Sagheer, the Hausmeister", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "brute force", "dp"], "solvedCount": 5396}, {"contestId": 812, "index": "A", "name": "Sagheer and Crossroads", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 6340}, {"contestId": 811, "index": "E", "name": "Vladik and Entertaining Flags", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dsu", "graphs"], "solvedCount": 920}, {"contestId": 811, "index": "D", "name": "Vladik and Favorite Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "interactive"], "solvedCount": 1829}, {"contestId": 811, "index": "C", "name": "Vladik and Memorable Trip", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp", "implementation"], "solvedCount": 3390}, {"contestId": 811, "index": "B", "name": "Vladik and Complicated Book", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 6638}, {"contestId": 811, "index": "A", "name": "Vladik and Courtesy", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 12170}, {"contestId": 810, "index": "B", "name": "Summer sell-off", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "sortings"], "solvedCount": 12210}, {"contestId": 810, "index": "A", "name": "Straight <<A>>", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 9045}, {"contestId": 809, "index": "E", "name": "Surprise me!", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["divide and conquer", "math", "number theory", "trees"], "solvedCount": 777}, {"contestId": 809, "index": "D", "name": "Hitchhiking in the Baltic States", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dp"], "solvedCount": 944}, {"contestId": 809, "index": "C", "name": "Find a car", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 868}, {"contestId": 809, "index": "B", "name": "Glad to see you!", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["binary search", "interactive"], "solvedCount": 1717}, {"contestId": 809, "index": "A", "name": "Do you want a date?", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation", "math", "sortings"], "solvedCount": 4793}, {"contestId": 808, "index": "G", "name": "Anthem of Berland", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "strings"], "solvedCount": 3254}, {"contestId": 808, "index": "F", "name": "Card Game", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "flows", "graphs"], "solvedCount": 1396}, {"contestId": 808, "index": "E", "name": "Selling Souvenirs", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "dp", "greedy", "ternary search"], "solvedCount": 2036}, {"contestId": 808, "index": "D", "name": "Array Division", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 7672}, {"contestId": 808, "index": "C", "name": "Tea Party", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 6647}, {"contestId": 808, "index": "B", "name": "Average Sleep Time", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "implementation", "math"], "solvedCount": 10954}, {"contestId": 808, "index": "A", "name": "Lucky Year", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 10240}, {"contestId": 807, "index": "B", "name": "T-Shirt Hunt", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 3579}, {"contestId": 807, "index": "A", "name": "Is it rated?", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "sortings"], "solvedCount": 22205}, {"contestId": 805, "index": "B", "name": "3-palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 18053}, {"contestId": 805, "index": "A", "name": "Fake NP", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 18716}, {"contestId": 804, "index": "F", "name": "Fake bullions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["combinatorics", "dfs and similar", "dp", "graphs", "number theory"], "solvedCount": 198}, {"contestId": 804, "index": "E", "name": "The same permutation ", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 612}, {"contestId": 804, "index": "D", "name": "Expected diameter of a tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "brute force", "dfs and similar", "dp", "sortings", "trees"], "solvedCount": 1467}, {"contestId": 804, "index": "C", "name": "Ice cream coloring", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "greedy"], "solvedCount": 1867}, {"contestId": 804, "index": "B", "name": "Minimum number of steps", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["combinatorics", "greedy", "implementation", "math"], "solvedCount": 9931}, {"contestId": 804, "index": "A", "name": "Find Amir", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 16125}, {"contestId": 803, "index": "G", "name": "Periodic RMQ Problem", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures"], "solvedCount": 1732}, {"contestId": 803, "index": "F", "name": "Coprime Subsequences", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "combinatorics", "number theory"], "solvedCount": 4012}, {"contestId": 803, "index": "E", "name": "Roma and Poker", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "graphs"], "solvedCount": 2457}, {"contestId": 803, "index": "D", "name": "Magazine Ad", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "greedy"], "solvedCount": 3707}, {"contestId": 803, "index": "C", "name": "Maximal GCD", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 5488}, {"contestId": 803, "index": "B", "name": "Distances to Zero", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 7160}, {"contestId": 803, "index": "A", "name": "Maximal Binary Matrix", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms"], "solvedCount": 5186}, {"contestId": 802, "index": "O", "name": "April Fools' Problem (hard)", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "data structures", "flows"], "solvedCount": 1110}, {"contestId": 802, "index": "N", "name": "April Fools' Problem (medium)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "flows", "graphs"], "solvedCount": 1347}, {"contestId": 802, "index": "M", "name": "April Fools' Problem (easy)", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 3407}, {"contestId": 802, "index": "L", "name": "Send the Fool Further! (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "dp", "math", "trees"], "solvedCount": 354}, {"contestId": 802, "index": "K", "name": "Send the Fool Further! (medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "trees"], "solvedCount": 683}, {"contestId": 802, "index": "J", "name": "Send the Fool Further! (easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 5859}, {"contestId": 802, "index": "I", "name": "Fake News (hard)", "type": "PROGRAMMING", "rating": 2300, "tags": ["string suffix structures"], "solvedCount": 1688}, {"contestId": 802, "index": "H", "name": "Fake News (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "strings"], "solvedCount": 529}, {"contestId": 802, "index": "G", "name": "Fake News (easy)", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 7590}, {"contestId": 802, "index": "F", "name": "Marmots (hard)", "type": "PROGRAMMING", "rating": 2800, "tags": ["math", "probabilities"], "solvedCount": 146}, {"contestId": 802, "index": "E", "name": "Marmots (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["math"], "solvedCount": 285}, {"contestId": 802, "index": "D", "name": "Marmots (easy)", "type": "PROGRAMMING", "rating": 2100, "tags": ["math"], "solvedCount": 502}, {"contestId": 802, "index": "C", "name": "Heidi and Library (hard)", "type": "PROGRAMMING", "rating": 2600, "tags": ["flows"], "solvedCount": 645}, {"contestId": 802, "index": "B", "name": "Heidi and Library (medium)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 1217}, {"contestId": 802, "index": "A", "name": "Heidi and Library (easy)", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy"], "solvedCount": 1455}, {"contestId": 801, "index": "B", "name": "Valued Keys", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 10847}, {"contestId": 801, "index": "A", "name": "Vicious Keyboard", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force"], "solvedCount": 7508}, {"contestId": 799, "index": "G", "name": "Cut the pie", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["binary search", "data structures", "geometry"], "solvedCount": 121}, {"contestId": 799, "index": "F", "name": "Beautiful fountains rows", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures"], "solvedCount": 478}, {"contestId": 799, "index": "E", "name": "Aquarium decoration", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "greedy", "two pointers"], "solvedCount": 963}, {"contestId": 799, "index": "D", "name": "Field expansion", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dp", "meet-in-the-middle"], "solvedCount": 2119}, {"contestId": 799, "index": "C", "name": "Fountains", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 3884}, {"contestId": 799, "index": "B", "name": "T-shirt buying", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 9408}, {"contestId": 799, "index": "A", "name": "Carrot Cakes", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 20206}, {"contestId": 798, "index": "E", "name": "Mike and code of a permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "data structures", "graphs", "sortings"], "solvedCount": 523}, {"contestId": 798, "index": "D", "name": "Mike and distribution", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "sortings"], "solvedCount": 2070}, {"contestId": 798, "index": "C", "name": "Mike and gcd problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "greedy", "number theory"], "solvedCount": 6116}, {"contestId": 798, "index": "B", "name": "Mike and strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dp", "strings"], "solvedCount": 8818}, {"contestId": 798, "index": "A", "name": "Mike and palindrome", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "strings"], "solvedCount": 23044}, {"contestId": 797, "index": "F", "name": "Mice and Holes", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "greedy", "sortings"], "solvedCount": 1345}, {"contestId": 797, "index": "E", "name": "Array Queries", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dp"], "solvedCount": 4999}, {"contestId": 797, "index": "D", "name": "Broken BST", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar"], "solvedCount": 1979}, {"contestId": 797, "index": "C", "name": "Minimal string", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "greedy", "strings"], "solvedCount": 8676}, {"contestId": 797, "index": "B", "name": "Odd sum", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "implementation"], "solvedCount": 11103}, {"contestId": 797, "index": "A", "name": "k-Factorization", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math", "number theory"], "solvedCount": 18232}, {"contestId": 796, "index": "F", "name": "Sequence Recovery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "data structures", "greedy"], "solvedCount": 193}, {"contestId": 796, "index": "E", "name": "Exam Cheating", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "dp"], "solvedCount": 713}, {"contestId": 796, "index": "D", "name": "Police Stations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths", "trees"], "solvedCount": 6546}, {"contestId": 796, "index": "C", "name": "Bank Hacking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 3167}, {"contestId": 796, "index": "B", "name": "Find The Bone", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 9356}, {"contestId": 796, "index": "A", "name": "Buying A House", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 13398}, {"contestId": 794, "index": "G", "name": "Replace All", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["combinatorics", "dp", "math"], "solvedCount": 380}, {"contestId": 794, "index": "F", "name": "Leha and security system", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["data structures"], "solvedCount": 901}, {"contestId": 794, "index": "E", "name": "Choosing Carrot", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["games", "math"], "solvedCount": 852}, {"contestId": 794, "index": "D", "name": "Labelling Cities", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dfs and similar", "graphs", "hashing"], "solvedCount": 860}, {"contestId": 794, "index": "C", "name": "Naming Company", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["games", "greedy", "sortings"], "solvedCount": 3241}, {"contestId": 794, "index": "B", "name": "Cutting Carrot", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["geometry", "math"], "solvedCount": 6913}, {"contestId": 794, "index": "A", "name": "Bank Robbery", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 7460}, {"contestId": 793, "index": "G", "name": "Oleg and chess", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "flows", "graph matchings"], "solvedCount": 442}, {"contestId": 793, "index": "F", "name": "Julia the snail", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 692}, {"contestId": 793, "index": "E", "name": "Problem of offices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "solvedCount": 293}, {"contestId": 793, "index": "D", "name": "Presents in Bankopolis", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 1653}, {"contestId": 793, "index": "C", "name": "Mice problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["geometry", "implementation", "math", "sortings"], "solvedCount": 1299}, {"contestId": 793, "index": "B", "name": "Igor and his way to work", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "solvedCount": 4658}, {"contestId": 793, "index": "A", "name": "Oleg and shares", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 7593}, {"contestId": 792, "index": "F", "name": "Mages and Monsters", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "geometry"], "solvedCount": 225}, {"contestId": 792, "index": "E", "name": "Colored Balls", "type": "PROGRAMMING", "rating": 2500, "tags": ["greedy", "math", "number theory"], "solvedCount": 1172}, {"contestId": 792, "index": "D", "name": "Paths in a Complete Binary Tree", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "trees"], "solvedCount": 3208}, {"contestId": 792, "index": "C", "name": "Divide by Three", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "math", "number theory"], "solvedCount": 4719}, {"contestId": 792, "index": "B", "name": "Counting-out Rhyme", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 6318}, {"contestId": 792, "index": "A", "name": "New Bus Route", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "sortings"], "solvedCount": 9437}, {"contestId": 791, "index": "A", "name": "Bear and Big Brother", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 229077}, {"contestId": 789, "index": "B", "name": "Masha and geometric depression", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation", "math"], "solvedCount": 4468}, {"contestId": 789, "index": "A", "name": "Anastasia and pebbles", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 9521}, {"contestId": 788, "index": "E", "name": "New task", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 370}, {"contestId": 788, "index": "D", "name": "Finding lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["constructive algorithms", "divide and conquer", "interactive"], "solvedCount": 394}, {"contestId": 788, "index": "C", "name": "The Great Mixing", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 2474}, {"contestId": 788, "index": "B", "name": "Weird journey", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 2730}, {"contestId": 788, "index": "A", "name": "Functions again", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "two pointers"], "solvedCount": 9744}, {"contestId": 787, "index": "B", "name": "Not Afraid", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "implementation", "math"], "solvedCount": 5687}, {"contestId": 787, "index": "A", "name": "The Monster", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "math", "number theory"], "solvedCount": 11871}, {"contestId": 786, "index": "E", "name": "ALT", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "flows", "graphs", "trees"], "solvedCount": 706}, {"contestId": 786, "index": "D", "name": "Rap God", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "hashing", "strings", "trees"], "solvedCount": 147}, {"contestId": 786, "index": "C", "name": "Till I Collapse", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "divide and conquer"], "solvedCount": 3314}, {"contestId": 786, "index": "B", "name": "Legacy", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 7126}, {"contestId": 786, "index": "A", "name": "Berzerk", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "games"], "solvedCount": 2701}, {"contestId": 785, "index": "E", "name": "Anton and Permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "data structures"], "solvedCount": 2074}, {"contestId": 785, "index": "D", "name": "Anton and School - 2", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 3237}, {"contestId": 785, "index": "C", "name": "Anton and Fairy Tale", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "math"], "solvedCount": 7622}, {"contestId": 785, "index": "B", "name": "Anton and Classes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 10446}, {"contestId": 785, "index": "A", "name": "Anton and Polyhedrons", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 101163}, {"contestId": 784, "index": "G", "name": "BF Calculator", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 758}, {"contestId": 784, "index": "F", "name": "Crunching Numbers Just for You", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "implementation"], "solvedCount": 1119}, {"contestId": 784, "index": "E", "name": "Twisted Circuit", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "brute force", "implementation"], "solvedCount": 2006}, {"contestId": 784, "index": "D", "name": "Touchy-Feely Palindromes", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "implementation"], "solvedCount": 488}, {"contestId": 784, "index": "C", "name": "INTERCALC", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "implementation"], "solvedCount": 758}, {"contestId": 784, "index": "B", "name": "Kids' Riddle", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 900}, {"contestId": 784, "index": "A", "name": "Numbers Joke", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 3268}, {"contestId": 780, "index": "H", "name": "Intranet of Buses", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["binary search", "geometry", "implementation", "two pointers"], "solvedCount": 130}, {"contestId": 780, "index": "G", "name": "Andryusha and Nervous Barriers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures", "dp"], "solvedCount": 680}, {"contestId": 780, "index": "F", "name": "Axel and Marston in Bitland", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "graphs", "matrices"], "solvedCount": 1213}, {"contestId": 780, "index": "E", "name": "Underground Lab", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 2772}, {"contestId": 780, "index": "D", "name": "Innokenty and a Football League", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["2-sat", "graphs", "greedy", "implementation", "shortest paths", "strings"], "solvedCount": 2970}, {"contestId": 780, "index": "C", "name": "Andryusha and Colored Balloons", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 9635}, {"contestId": 780, "index": "B", "name": "The Meeting Place Cannot Be Changed", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search"], "solvedCount": 11446}, {"contestId": 780, "index": "A", "name": "Andryusha and Socks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 21464}, {"contestId": 779, "index": "C", "name": "Dishonest Sellers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 12372}, {"contestId": 779, "index": "B", "name": "Weird Rounding", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "greedy"], "solvedCount": 10553}, {"contestId": 779, "index": "A", "name": "Pupils Redistribution", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 9491}, {"contestId": 778, "index": "E", "name": "Selling Numbers", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "sortings"], "solvedCount": 348}, {"contestId": 778, "index": "D", "name": "Parquet Re-laying", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms"], "solvedCount": 575}, {"contestId": 778, "index": "C", "name": "Peterson Polyglot", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "dfs and similar", "dsu", "hashing", "strings", "trees"], "solvedCount": 958}, {"contestId": 778, "index": "B", "name": "Bitwise Formula", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dfs and similar", "expression parsing", "implementation"], "solvedCount": 2430}, {"contestId": 778, "index": "A", "name": "String Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "greedy", "strings"], "solvedCount": 12352}, {"contestId": 777, "index": "E", "name": "Hanoi Factory", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "solvedCount": 4360}, {"contestId": 777, "index": "D", "name": "Cloud of Hashtags", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "greedy", "implementation", "strings"], "solvedCount": 5135}, {"contestId": 777, "index": "C", "name": "Alyona and Spreadsheet", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"], "solvedCount": 6630}, {"contestId": 777, "index": "B", "name": "Game of Credit Cards", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "dp", "greedy", "sortings"], "solvedCount": 9747}, {"contestId": 777, "index": "A", "name": "Shell Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 10538}, {"contestId": 776, "index": "G", "name": "Sherlock and the Encrypted Data", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["bitmasks", "combinatorics", "dp"], "solvedCount": 360}, {"contestId": 776, "index": "F", "name": "Sherlock's bet to Moriarty", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation", "trees"], "solvedCount": 482}, {"contestId": 776, "index": "E", "name": "The Holmes Children", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["math", "number theory"], "solvedCount": 2297}, {"contestId": 776, "index": "D", "name": "The Door Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["2-sat", "dfs and similar", "dsu", "graphs"], "solvedCount": 5689}, {"contestId": 776, "index": "C", "name": "Molly's Chemicals", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "implementation", "math"], "solvedCount": 6126}, {"contestId": 776, "index": "B", "name": "Sherlock and his girlfriend", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "number theory"], "solvedCount": 23489}, {"contestId": 776, "index": "A", "name": "A Serial Killer", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "strings"], "solvedCount": 12594}, {"contestId": 775, "index": "A", "name": "University Schedule", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special"], "solvedCount": 0}, {"contestId": 774, "index": "L", "name": "Bars", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "binary search"], "solvedCount": 357}, {"contestId": 774, "index": "K", "name": "Stepan and Vowels", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "implementation", "strings"], "solvedCount": 1352}, {"contestId": 774, "index": "J", "name": "Stepan's Series", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "dp"], "solvedCount": 393}, {"contestId": 774, "index": "I", "name": "Composing Of String", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "dp"], "solvedCount": 114}, {"contestId": 774, "index": "H", "name": "Repairing Of String", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "constructive algorithms"], "solvedCount": 262}, {"contestId": 774, "index": "G", "name": "Perfectionist Arkadiy", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "number theory"], "solvedCount": 186}, {"contestId": 774, "index": "F", "name": "Pens And Days Of Week", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "binary search", "number theory"], "solvedCount": 117}, {"contestId": 774, "index": "E", "name": "Big Number and Remainder", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "math", "number theory"], "solvedCount": 227}, {"contestId": 774, "index": "D", "name": "Lie or Truth", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "constructive algorithms", "implementation", "sortings"], "solvedCount": 2000}, {"contestId": 774, "index": "C", "name": "Maximum Number", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "constructive algorithms", "greedy", "implementation"], "solvedCount": 4231}, {"contestId": 774, "index": "B", "name": "Significant Cups", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "binary search", "data structures", "two pointers"], "solvedCount": 231}, {"contestId": 774, "index": "A", "name": "Amusement Park", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "ternary search"], "solvedCount": 329}, {"contestId": 773, "index": "F", "name": "Test Data Generation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"], "solvedCount": 216}, {"contestId": 773, "index": "E", "name": "Blog Post Rating", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["data structures", "sortings"], "solvedCount": 455}, {"contestId": 773, "index": "D", "name": "Perishable Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 748}, {"contestId": 773, "index": "C", "name": "Prairie Partition", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "solvedCount": 971}, {"contestId": 773, "index": "B", "name": "Dynamic Problem Scoring", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "greedy"], "solvedCount": 1186}, {"contestId": 773, "index": "A", "name": "Success Rate", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "math"], "solvedCount": 4615}, {"contestId": 772, "index": "E", "name": "Verifying Kingdom", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["binary search", "divide and conquer", "interactive", "trees"], "solvedCount": 187}, {"contestId": 772, "index": "D", "name": "Varying Kibibits", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["bitmasks", "dp"], "solvedCount": 657}, {"contestId": 772, "index": "C", "name": "Vulnerable Kerbals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dp", "graphs", "math", "number theory"], "solvedCount": 1400}, {"contestId": 772, "index": "B", "name": "Volatile Kite", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["geometry"], "solvedCount": 3382}, {"contestId": 772, "index": "A", "name": "Voltage Keepsake", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "math"], "solvedCount": 4596}, {"contestId": 771, "index": "F", "name": "Bear and Isomorphic Points", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["geometry", "two pointers"], "solvedCount": 88}, {"contestId": 771, "index": "E", "name": "Bear and Rectangle Strips", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "greedy"], "solvedCount": 561}, {"contestId": 771, "index": "D", "name": "Bear and Company", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp"], "solvedCount": 1490}, {"contestId": 771, "index": "C", "name": "Bear and Tree Jumps", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 3393}, {"contestId": 771, "index": "B", "name": "Bear and Different Names", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 7048}, {"contestId": 771, "index": "A", "name": "Bear and Friendship Condition", "type": "PROGRAMMING", "points": 250.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 16482}, {"contestId": 770, "index": "D", "name": "Draw Brackets!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "implementation"], "solvedCount": 1608}, {"contestId": 770, "index": "C", "name": "Online Courses In BSU", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["*special", "dfs and similar", "graphs", "implementation"], "solvedCount": 2852}, {"contestId": 770, "index": "B", "name": "Maximize Sum of Digits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["*special", "implementation", "math"], "solvedCount": 2947}, {"contestId": 770, "index": "A", "name": "New Password", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["*special", "implementation"], "solvedCount": 21056}, {"contestId": 769, "index": "D", "name": "k-Interesting Pairs Of Integers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["*special", "bitmasks", "brute force", "meet-in-the-middle"], "solvedCount": 2433}, {"contestId": 769, "index": "C", "name": "Cycle In Maze", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["*special", "dfs and similar", "graphs", "greedy", "shortest paths"], "solvedCount": 2672}, {"contestId": 769, "index": "B", "name": "News About Credit", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["*special", "greedy", "two pointers"], "solvedCount": 3376}, {"contestId": 769, "index": "A", "name": "Year of University Entrance", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["*special", "implementation", "sortings"], "solvedCount": 6151}, {"contestId": 768, "index": "G", "name": "The Winds of Winter", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["binary search", "data structures"], "solvedCount": 391}, {"contestId": 768, "index": "F", "name": "Barrels and boxes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "math", "number theory", "probabilities"], "solvedCount": 1061}, {"contestId": 768, "index": "E", "name": "Game of Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "dp", "games"], "solvedCount": 3299}, {"contestId": 768, "index": "D", "name": "Jon and Orbs", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dp", "math", "probabilities"], "solvedCount": 3269}, {"contestId": 768, "index": "C", "name": "Jon Snow and his Favourite Number", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "dp", "implementation", "sortings"], "solvedCount": 3899}, {"contestId": 768, "index": "B", "name": "Code For 1", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer"], "solvedCount": 6399}, {"contestId": 768, "index": "A", "name": "Oath of the Night's Watch", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "sortings"], "solvedCount": 29537}, {"contestId": 767, "index": "E", "name": "Change-free", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["greedy"], "solvedCount": 1051}, {"contestId": 767, "index": "D", "name": "Cartons of milk", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 2330}, {"contestId": 767, "index": "C", "name": "Garland", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 4428}, {"contestId": 767, "index": "B", "name": "The Queue", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["brute force", "greedy"], "solvedCount": 2193}, {"contestId": 767, "index": "A", "name": "Snacktower", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["data structures", "implementation"], "solvedCount": 21631}, {"contestId": 766, "index": "E", "name": "Mahmoud and a xor trip", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "dp", "math", "trees"], "solvedCount": 3261}, {"contestId": 766, "index": "D", "name": "Mahmoud and a Dictionary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs"], "solvedCount": 3641}, {"contestId": 766, "index": "C", "name": "Mahmoud and a Message", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "dp", "greedy", "strings"], "solvedCount": 4693}, {"contestId": 766, "index": "B", "name": "Mahmoud and a Triangle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "geometry", "greedy", "math", "number theory", "sortings"], "solvedCount": 35926}, {"contestId": 766, "index": "A", "name": "Mahmoud and Longest Uncommon Subsequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "strings"], "solvedCount": 33057}, {"contestId": 765, "index": "G", "name": "Math, math everywhere", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["brute force", "dp", "math", "meet-in-the-middle", "number theory"], "solvedCount": 104}, {"contestId": 765, "index": "F", "name": "Souvenirs", "type": "PROGRAMMING", "points": 3250.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 2336}, {"contestId": 765, "index": "E", "name": "Tree Folding", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "greedy", "implementation", "trees"], "solvedCount": 1325}, {"contestId": 765, "index": "D", "name": "Artsem and Saunders", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "dsu", "math"], "solvedCount": 2554}, {"contestId": 765, "index": "C", "name": "Table Tennis Game 2", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["math"], "solvedCount": 7222}, {"contestId": 765, "index": "B", "name": "Code obfuscation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation", "strings"], "solvedCount": 7376}, {"contestId": 765, "index": "A", "name": "Neverending competitions", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 9296}, {"contestId": 764, "index": "B", "name": "Timofey and cubes", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "implementation"], "solvedCount": 12300}, {"contestId": 764, "index": "A", "name": "Taymyr is calling you", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "math"], "solvedCount": 16777}, {"contestId": 763, "index": "E", "name": "Timofey and our friends animals", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "dsu"], "solvedCount": 530}, {"contestId": 763, "index": "D", "name": "Timofey and a flat tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "graphs", "hashing", "shortest paths", "trees"], "solvedCount": 614}, {"contestId": 763, "index": "C", "name": "Timofey and remoduling", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 757}, {"contestId": 763, "index": "B", "name": "Timofey and rectangles", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "geometry"], "solvedCount": 2957}, {"contestId": 763, "index": "A", "name": "Timofey and a tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"], "solvedCount": 11350}, {"contestId": 762, "index": "F", "name": "Tree nesting", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "graphs", "trees"], "solvedCount": 416}, {"contestId": 762, "index": "E", "name": "Radio stations", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 1520}, {"contestId": 762, "index": "D", "name": "Maximum path", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "greedy", "implementation"], "solvedCount": 1690}, {"contestId": 762, "index": "C", "name": "Two strings", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "hashing", "strings", "two pointers"], "solvedCount": 2723}, {"contestId": 762, "index": "B", "name": "USB vs. PS/2", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "implementation", "sortings", "two pointers"], "solvedCount": 9605}, {"contestId": 762, "index": "A", "name": "k-th divisor", "type": "PROGRAMMING", "rating": 1400, "tags": ["math", "number theory"], "solvedCount": 23298}, {"contestId": 761, "index": "F", "name": "Dasha and Photos", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["brute force", "data structures", "dp", "implementation"], "solvedCount": 489}, {"contestId": 761, "index": "E", "name": "Dasha and Puzzle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 2265}, {"contestId": 761, "index": "D", "name": "Dasha and Very Difficult Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "sortings"], "solvedCount": 4123}, {"contestId": 761, "index": "C", "name": "Dasha and Password", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp", "implementation"], "solvedCount": 5984}, {"contestId": 761, "index": "B", "name": "Dasha and friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation", "math"], "solvedCount": 6978}, {"contestId": 761, "index": "A", "name": "Dasha and Stairs", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 14803}, {"contestId": 760, "index": "B", "name": "Frodo and pillows", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "greedy"], "solvedCount": 7177}, {"contestId": 760, "index": "A", "name": "Petr and a calendar", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 8428}, {"contestId": 758, "index": "F", "name": "Geometrical Progression", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["brute force", "math", "number theory"], "solvedCount": 662}, {"contestId": 758, "index": "E", "name": "Broken Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 523}, {"contestId": 758, "index": "D", "name": "Ability To Convert", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "dp", "greedy", "math", "strings"], "solvedCount": 2838}, {"contestId": 758, "index": "C", "name": "Unfair Poll", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "constructive algorithms", "implementation", "math"], "solvedCount": 3951}, {"contestId": 758, "index": "B", "name": "Blown Garland", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "number theory"], "solvedCount": 10488}, {"contestId": 758, "index": "A", "name": "Holiday Of Equality", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 68641}, {"contestId": 757, "index": "G", "name": "Can Bash Save the Day?", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "graphs", "trees"], "solvedCount": 574}, {"contestId": 757, "index": "F", "name": "Team Rocket Rises Again", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 1259}, {"contestId": 757, "index": "E", "name": "Bash Plays with Functions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "number theory"], "solvedCount": 1465}, {"contestId": 757, "index": "D", "name": "Felicity's Big Secret Revealed", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 1476}, {"contestId": 757, "index": "C", "name": "Felicity is Coming!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "hashing", "sortings", "strings"], "solvedCount": 2414}, {"contestId": 757, "index": "B", "name": "Bash's Big Day", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "math", "number theory"], "solvedCount": 10968}, {"contestId": 757, "index": "A", "name": "Gotta Catch Em' All!", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 11484}, {"contestId": 756, "index": "F", "name": "Long number", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["expression parsing", "math", "number theory"], "solvedCount": 110}, {"contestId": 756, "index": "E", "name": "Byteland coins", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["combinatorics", "dp", "math"], "solvedCount": 196}, {"contestId": 756, "index": "D", "name": "Bacterial Melee", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "string suffix structures"], "solvedCount": 1044}, {"contestId": 756, "index": "C", "name": "Nikita and stack", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 1403}, {"contestId": 756, "index": "B", "name": "Travel Card", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "dp"], "solvedCount": 4154}, {"contestId": 756, "index": "A", "name": "Pavel and barbecue", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar"], "solvedCount": 3109}, {"contestId": 755, "index": "G", "name": "PolandBall and Many Other Balls", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"], "solvedCount": 980}, {"contestId": 755, "index": "F", "name": "PolandBall and Gifts", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "dp", "greedy"], "solvedCount": 1624}, {"contestId": 755, "index": "E", "name": "PolandBall and White-Red graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 890}, {"contestId": 755, "index": "D", "name": "PolandBall and Polygon", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures"], "solvedCount": 2612}, {"contestId": 755, "index": "C", "name": "PolandBall and Forest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dfs and similar", "dsu", "graphs", "interactive", "trees"], "solvedCount": 13770}, {"contestId": 755, "index": "B", "name": "PolandBall and Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "data structures", "games", "greedy", "sortings", "strings"], "solvedCount": 12090}, {"contestId": 755, "index": "A", "name": "PolandBall and Hypothesis", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "graphs", "math", "number theory"], "solvedCount": 19060}, {"contestId": 754, "index": "E", "name": "Dasha and cyclic table", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "fft", "strings", "trees"], "solvedCount": 522}, {"contestId": 754, "index": "D", "name": "Fedor and coupons", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 2513}, {"contestId": 754, "index": "C", "name": "Vladik and chat", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "implementation", "strings"], "solvedCount": 986}, {"contestId": 754, "index": "B", "name": "Ilya and tic-tac-toe game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 7379}, {"contestId": 754, "index": "A", "name": "Lesha and array splitting", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 9039}, {"contestId": 753, "index": "C", "name": "Interactive Bulls and Cows (Hard)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "interactive"], "solvedCount": 334}, {"contestId": 753, "index": "B", "name": "Interactive Bulls and Cows (Easy)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 1287}, {"contestId": 753, "index": "A", "name": "Santa Claus and Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dp", "greedy", "math"], "solvedCount": 9538}, {"contestId": 750, "index": "H", "name": "New Year and Snowy Grid", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dfs and similar", "dsu", "graphs", "interactive"], "solvedCount": 228}, {"contestId": 750, "index": "G", "name": "New Year and Binary Tree Paths", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["bitmasks", "brute force", "combinatorics", "dp"], "solvedCount": 489}, {"contestId": 750, "index": "F", "name": "New Year and Finding Roots", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "implementation", "interactive", "trees"], "solvedCount": 546}, {"contestId": 750, "index": "E", "name": "New Year and Old Subsequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "matrices"], "solvedCount": 1767}, {"contestId": 750, "index": "D", "name": "New Year and Fireworks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation"], "solvedCount": 3123}, {"contestId": 750, "index": "C", "name": "New Year and Rating", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "greedy", "math"], "solvedCount": 6685}, {"contestId": 750, "index": "B", "name": "New Year and North Pole", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["geometry", "implementation"], "solvedCount": 9603}, {"contestId": 750, "index": "A", "name": "New Year and Hurry", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["binary search", "brute force", "implementation", "math"], "solvedCount": 85062}, {"contestId": 749, "index": "E", "name": "Inversions After Shuffle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "probabilities"], "solvedCount": 1192}, {"contestId": 749, "index": "D", "name": "Leaving Auction", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures"], "solvedCount": 2646}, {"contestId": 749, "index": "C", "name": "Voting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["greedy", "implementation", "two pointers"], "solvedCount": 6130}, {"contestId": 749, "index": "B", "name": "Parallelogram is Back", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "geometry"], "solvedCount": 8738}, {"contestId": 749, "index": "A", "name": "Bachgold Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "math", "number theory"], "solvedCount": 53612}, {"contestId": 748, "index": "F", "name": "Santa Clauses and a Soccer Championship", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 688}, {"contestId": 748, "index": "E", "name": "Santa Claus and Tangerines", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 1546}, {"contestId": 748, "index": "D", "name": "Santa Claus and a Palindrome", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 1962}, {"contestId": 748, "index": "C", "name": "Santa Claus and Robot", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 4747}, {"contestId": 748, "index": "B", "name": "Santa Claus and Keyboard Check", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "strings"], "solvedCount": 5465}, {"contestId": 748, "index": "A", "name": "Santa Claus and a Place in a Class", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 9188}, {"contestId": 747, "index": "F", "name": "Igor and Interesting Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "combinatorics", "dp", "math"], "solvedCount": 445}, {"contestId": 747, "index": "E", "name": "Comments", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dfs and similar", "expression parsing", "implementation", "strings"], "solvedCount": 2041}, {"contestId": 747, "index": "D", "name": "Winter Is Coming", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy", "sortings"], "solvedCount": 3377}, {"contestId": 747, "index": "C", "name": "Servers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 4885}, {"contestId": 747, "index": "B", "name": "Mammoth's Genome Decoding", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 9247}, {"contestId": 747, "index": "A", "name": "Display Size", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math"], "solvedCount": 10707}, {"contestId": 746, "index": "G", "name": "New Roads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 1589}, {"contestId": 746, "index": "F", "name": "Music in Car", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "greedy", "two pointers"], "solvedCount": 850}, {"contestId": 746, "index": "E", "name": "Numbers Exchange", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["greedy", "implementation", "math"], "solvedCount": 1794}, {"contestId": 746, "index": "D", "name": "Green and Black Tea", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 5283}, {"contestId": 746, "index": "C", "name": "Tram", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 3800}, {"contestId": 746, "index": "B", "name": "Decoding", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 30375}, {"contestId": 746, "index": "A", "name": "Compote", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 22671}, {"contestId": 745, "index": "B", "name": "Hongcow Solves A Puzzle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 3804}, {"contestId": 745, "index": "A", "name": "Hongcow Learns the Cyclic Shift", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 10705}, {"contestId": 744, "index": "E", "name": "Hongcow Masters the Cyclic Shift", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["strings", "two pointers"], "solvedCount": 148}, {"contestId": 744, "index": "D", "name": "Hongcow Draws a Circle", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["geometry"], "solvedCount": 133}, {"contestId": 744, "index": "C", "name": "Hongcow Buys a Deck of Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["bitmasks", "brute force", "dp"], "solvedCount": 1240}, {"contestId": 744, "index": "B", "name": "Hongcow's Game", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["bitmasks", "divide and conquer", "interactive"], "solvedCount": 1821}, {"contestId": 744, "index": "A", "name": "Hongcow Builds A Nation", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "graphs"], "solvedCount": 9290}, {"contestId": 743, "index": "E", "name": "Vladik and cards", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "dp"], "solvedCount": 1552}, {"contestId": 743, "index": "D", "name": "Chloe and pleasant prizes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 4517}, {"contestId": 743, "index": "C", "name": "Vladik and fractions", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 12947}, {"contestId": 743, "index": "B", "name": "Chloe and the sequence ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "bitmasks", "constructive algorithms", "implementation"], "solvedCount": 15506}, {"contestId": 743, "index": "A", "name": "Vladik and flights", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 11510}, {"contestId": 742, "index": "B", "name": "Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solution", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "math", "number theory"], "solvedCount": 9691}, {"contestId": 742, "index": "A", "name": "Arpa\u2019s hard exam and Mehrdad\u2019s naive cheat", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math", "number theory"], "solvedCount": 47903}, {"contestId": 741, "index": "E", "name": "Arpa\u2019s abnormal DNA and Mehrdad\u2019s deep interest", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "string suffix structures"], "solvedCount": 189}, {"contestId": 741, "index": "D", "name": "Arpa\u2019s letter-marked tree and Mehrdad\u2019s Dokhtar-kosh paths", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 3167}, {"contestId": 741, "index": "C", "name": "Arpa\u2019s overnight party and Mehrdad\u2019s silent entering", "type": "PROGRAMMING", "points": 1250.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 2933}, {"contestId": 741, "index": "B", "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "dp", "dsu"], "solvedCount": 5577}, {"contestId": 741, "index": "A", "name": "Arpa's loud Owf and Mehrdad's evil plan", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "math"], "solvedCount": 5550}, {"contestId": 740, "index": "B", "name": "Alyona and flowers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 8609}, {"contestId": 740, "index": "A", "name": "Alyona and copybooks", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 8991}, {"contestId": 739, "index": "E", "name": "Gosha is hunting", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "data structures", "dp", "flows", "math", "probabilities", "sortings"], "solvedCount": 2395}, {"contestId": 739, "index": "D", "name": "Recover a functional graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["graph matchings"], "solvedCount": 211}, {"contestId": 739, "index": "C", "name": "Alyona and towers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 1621}, {"contestId": 739, "index": "B", "name": "Alyona and a tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 4856}, {"contestId": 739, "index": "A", "name": "Alyona and mex", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy"], "solvedCount": 8207}, {"contestId": 737, "index": "F", "name": "Dirty plates", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["constructive algorithms", "math"], "solvedCount": 83}, {"contestId": 737, "index": "E", "name": "Tanya is 5!", "type": "PROGRAMMING", "points": 2000.0, "rating": 3300, "tags": ["graph matchings", "graphs", "greedy", "schedules"], "solvedCount": 131}, {"contestId": 736, "index": "E", "name": "Chess Championship", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["constructive algorithms", "flows", "greedy", "math"], "solvedCount": 198}, {"contestId": 736, "index": "D", "name": "Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["math", "matrices"], "solvedCount": 496}, {"contestId": 735, "index": "E", "name": "Ostap and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "trees"], "solvedCount": 950}, {"contestId": 735, "index": "D", "name": "Taxes", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 14795}, {"contestId": 735, "index": "C", "name": "Tennis Championship", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "solvedCount": 7757}, {"contestId": 735, "index": "B", "name": "Urbanization", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "number theory", "sortings"], "solvedCount": 8618}, {"contestId": 735, "index": "A", "name": "Ostap and Grasshopper", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 12872}, {"contestId": 734, "index": "F", "name": "Anton and School", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "implementation", "math"], "solvedCount": 1350}, {"contestId": 734, "index": "E", "name": "Anton and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 4693}, {"contestId": 734, "index": "D", "name": "Anton and Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 3837}, {"contestId": 734, "index": "C", "name": "Anton and Making Potions", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "two pointers"], "solvedCount": 5540}, {"contestId": 734, "index": "B", "name": "Anton and Digits", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 30739}, {"contestId": 734, "index": "A", "name": "Anton and Danik", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 176076}, {"contestId": 733, "index": "F", "name": "Drivers Dissatisfaction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 1203}, {"contestId": 733, "index": "E", "name": "Sleep in Class", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "math", "two pointers"], "solvedCount": 1000}, {"contestId": 733, "index": "D", "name": "Kostya the Sculptor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["data structures", "hashing"], "solvedCount": 4276}, {"contestId": 733, "index": "C", "name": "Epidemic in Monstropolis", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy", "two pointers"], "solvedCount": 3472}, {"contestId": 733, "index": "B", "name": "Parade", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"], "solvedCount": 10818}, {"contestId": 733, "index": "A", "name": "Grasshopper And the String", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 16522}, {"contestId": 732, "index": "F", "name": "Tourist Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dfs and similar", "graphs"], "solvedCount": 2930}, {"contestId": 732, "index": "E", "name": "Sockets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["greedy", "sortings"], "solvedCount": 1638}, {"contestId": 732, "index": "D", "name": "Exams", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 5727}, {"contestId": 732, "index": "C", "name": "Sanatorium", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 9947}, {"contestId": 732, "index": "B", "name": "Cormen --- The Best Friend Of a Man", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["dp", "greedy"], "solvedCount": 25279}, {"contestId": 732, "index": "A", "name": "Buy a Shovel", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 81272}, {"contestId": 731, "index": "F", "name": "Video Cards", "type": "PROGRAMMING", "points": 3000.0, "rating": 1900, "tags": ["brute force", "data structures", "implementation", "math", "number theory"], "solvedCount": 2980}, {"contestId": 731, "index": "E", "name": "Funny Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "games"], "solvedCount": 1797}, {"contestId": 731, "index": "D", "name": "80-th Level Archeology", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "greedy", "sortings"], "solvedCount": 1210}, {"contestId": 731, "index": "C", "name": "Socks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 7494}, {"contestId": 731, "index": "B", "name": "Coupons and Discounts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 8160}, {"contestId": 731, "index": "A", "name": "Night at the Museum", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 50189}, {"contestId": 730, "index": "L", "name": "Expression Queries", "type": "PROGRAMMING", "rating": 3200, "tags": ["data structures"], "solvedCount": 89}, {"contestId": 730, "index": "K", "name": "Roads Orientation Problem", "type": "PROGRAMMING", "rating": 3200, "tags": ["graphs"], "solvedCount": 132}, {"contestId": 730, "index": "J", "name": "Bottles", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"], "solvedCount": 3715}, {"contestId": 730, "index": "I", "name": "Olympiad in Programming and Sports", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "flows", "graphs", "greedy"], "solvedCount": 2364}, {"contestId": 730, "index": "H", "name": "Delete Them", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3138}, {"contestId": 730, "index": "G", "name": "Car Repair Shop", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 2241}, {"contestId": 730, "index": "F", "name": "Ber Patio", "type": "PROGRAMMING", "rating": 3100, "tags": [], "solvedCount": 101}, {"contestId": 730, "index": "E", "name": "Award Ceremony", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation"], "solvedCount": 739}, {"contestId": 730, "index": "D", "name": "Running Over The Bridges", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "implementation", "math"], "solvedCount": 892}, {"contestId": 730, "index": "C", "name": "Bulmart", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "dfs and similar"], "solvedCount": 1323}, {"contestId": 730, "index": "B", "name": "Minimum and Maximum", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "interactive"], "solvedCount": 2629}, {"contestId": 730, "index": "A", "name": "Toda 2", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "implementation"], "solvedCount": 1666}, {"contestId": 729, "index": "F", "name": "Financiers Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp"], "solvedCount": 1036}, {"contestId": 729, "index": "E", "name": "Subordinates", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "sortings"], "solvedCount": 2295}, {"contestId": 729, "index": "D", "name": "Sea Battle", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 3925}, {"contestId": 729, "index": "C", "name": "Road to Cinema", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 4044}, {"contestId": 729, "index": "B", "name": "Spotlights", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dp", "implementation"], "solvedCount": 8312}, {"contestId": 729, "index": "A", "name": "Interview with Oleg", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 7832}, {"contestId": 727, "index": "F", "name": "Polycarp's problems", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["binary search", "dp", "greedy"], "solvedCount": 877}, {"contestId": 727, "index": "E", "name": "Games on a CD", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "hashing", "string suffix structures", "strings"], "solvedCount": 1400}, {"contestId": 727, "index": "D", "name": "T-shirts Distribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "flows", "greedy"], "solvedCount": 1992}, {"contestId": 727, "index": "C", "name": "Guess the Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 8239}, {"contestId": 727, "index": "B", "name": "Bill Total Value", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["expression parsing", "implementation", "strings"], "solvedCount": 2072}, {"contestId": 727, "index": "A", "name": "Transformation: from A to B", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "dfs and similar", "math"], "solvedCount": 15658}, {"contestId": 725, "index": "G", "name": "Messages on a Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": [], "solvedCount": 170}, {"contestId": 725, "index": "F", "name": "Family Photos", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["games", "greedy"], "solvedCount": 591}, {"contestId": 725, "index": "E", "name": "Too Much Money", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "greedy"], "solvedCount": 687}, {"contestId": 725, "index": "D", "name": "Contest Balloons", "type": "PROGRAMMING", "points": 2250.0, "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 2989}, {"contestId": 725, "index": "C", "name": "Hidden Word", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation", "strings"], "solvedCount": 2850}, {"contestId": 725, "index": "B", "name": "Food on the Plane", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 5221}, {"contestId": 725, "index": "A", "name": "Jumping Ball", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 7287}, {"contestId": 724, "index": "G", "name": "Xor-matic Number of the Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "graphs", "math", "number theory", "trees"], "solvedCount": 1179}, {"contestId": 724, "index": "F", "name": "Uniformly Branched Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 497}, {"contestId": 724, "index": "E", "name": "Goods transportation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "flows", "greedy"], "solvedCount": 1523}, {"contestId": 724, "index": "D", "name": "Dense Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "greedy", "strings"], "solvedCount": 2403}, {"contestId": 724, "index": "C", "name": "Ray Tracing", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "hashing", "implementation", "math", "number theory", "sortings"], "solvedCount": 2185}, {"contestId": 724, "index": "B", "name": "Batch Sort", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 4125}, {"contestId": 724, "index": "A", "name": "Checking the Calendar", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 7240}, {"contestId": 723, "index": "F", "name": "st-Spanning Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["dsu", "graphs", "greedy", "implementation"], "solvedCount": 1565}, {"contestId": 723, "index": "E", "name": "One-Way Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "flows", "graphs", "greedy"], "solvedCount": 2129}, {"contestId": 723, "index": "D", "name": "Lakes in Berland", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation"], "solvedCount": 7309}, {"contestId": 723, "index": "C", "name": "Polycarp at the Radio", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 5017}, {"contestId": 723, "index": "B", "name": "Text Document Analysis", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["expression parsing", "implementation", "strings"], "solvedCount": 10632}, {"contestId": 723, "index": "A", "name": "The New Year: Meeting Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math", "sortings"], "solvedCount": 90898}, {"contestId": 722, "index": "F", "name": "Cyclic Cipher", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["chinese remainder theorem", "data structures", "implementation", "number theory", "two pointers"], "solvedCount": 563}, {"contestId": 722, "index": "E", "name": "Research Rover", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["combinatorics", "dp"], "solvedCount": 1018}, {"contestId": 722, "index": "D", "name": "Generating Sets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "strings", "trees"], "solvedCount": 3265}, {"contestId": 722, "index": "C", "name": "Destroying Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "dsu"], "solvedCount": 10634}, {"contestId": 722, "index": "B", "name": "Verse Pattern", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "strings"], "solvedCount": 6630}, {"contestId": 722, "index": "A", "name": "Broken Clock", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 6739}, {"contestId": 721, "index": "E", "name": "Road to Home", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "dp"], "solvedCount": 331}, {"contestId": 721, "index": "D", "name": "Maxim and Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 2421}, {"contestId": 721, "index": "C", "name": "Journey", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "graphs"], "solvedCount": 6186}, {"contestId": 721, "index": "B", "name": "Passwords", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "math", "sortings", "strings"], "solvedCount": 12276}, {"contestId": 721, "index": "A", "name": "One-dimensional Japanese Crossword", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 19014}, {"contestId": 720, "index": "F", "name": "Array Covering", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures"], "solvedCount": 190}, {"contestId": 720, "index": "E", "name": "Cipher", "type": "PROGRAMMING", "rating": 3100, "tags": ["implementation"], "solvedCount": 67}, {"contestId": 720, "index": "D", "name": "Slalom", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "dp", "sortings"], "solvedCount": 320}, {"contestId": 720, "index": "C", "name": "Homework", "type": "PROGRAMMING", "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 151}, {"contestId": 720, "index": "B", "name": "Cactusophobia", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "flows"], "solvedCount": 439}, {"contestId": 720, "index": "A", "name": "Closing ceremony", "type": "PROGRAMMING", "rating": 2000, "tags": ["greedy"], "solvedCount": 913}, {"contestId": 719, "index": "B", "name": "Anatoly and Cockroaches", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy"], "solvedCount": 8663}, {"contestId": 719, "index": "A", "name": "Vitya in the Countryside", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 15958}, {"contestId": 718, "index": "E", "name": "Matvey's Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["bitmasks", "graphs"], "solvedCount": 409}, {"contestId": 718, "index": "D", "name": "Andrew and Chemistry", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "hashing", "trees"], "solvedCount": 460}, {"contestId": 718, "index": "C", "name": "Sasha and Array", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "math", "matrices"], "solvedCount": 4264}, {"contestId": 718, "index": "A", "name": "Efim and Strange Grade", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "implementation", "math"], "solvedCount": 4518}, {"contestId": 717, "index": "I", "name": "Cowboy Beblop at his computer", "type": "PROGRAMMING", "rating": 2800, "tags": ["geometry"], "solvedCount": 212}, {"contestId": 717, "index": "H", "name": "Pokermon League challenge", "type": "PROGRAMMING", "rating": 2400, "tags": ["math", "probabilities"], "solvedCount": 451}, {"contestId": 717, "index": "G", "name": "Underfail", "type": "PROGRAMMING", "rating": 2400, "tags": ["flows"], "solvedCount": 694}, {"contestId": 717, "index": "F", "name": "Heroes of Making Magic III", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures"], "solvedCount": 362}, {"contestId": 717, "index": "E", "name": "Paint it really, really dark gray", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar"], "solvedCount": 1539}, {"contestId": 717, "index": "D", "name": "Dexterina\u2019s Lab", "type": "PROGRAMMING", "rating": 1900, "tags": ["games", "matrices", "probabilities"], "solvedCount": 1514}, {"contestId": 717, "index": "C", "name": "Potions Homework", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 4132}, {"contestId": 717, "index": "B", "name": "R3D3\u2019s Summer Adventure", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "greedy"], "solvedCount": 175}, {"contestId": 717, "index": "A", "name": "Festival Organization", "type": "PROGRAMMING", "rating": 2900, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 399}, {"contestId": 716, "index": "B", "name": "Complete the Word", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "two pointers"], "solvedCount": 12649}, {"contestId": 716, "index": "A", "name": "Crazy Computer", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 23389}, {"contestId": 715, "index": "E", "name": "Complete the Permutations", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["combinatorics", "fft", "graphs", "math"], "solvedCount": 393}, {"contestId": 715, "index": "D", "name": "Create a Maze", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 331}, {"contestId": 715, "index": "C", "name": "Digit Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["dfs and similar", "divide and conquer", "dsu", "trees"], "solvedCount": 2375}, {"contestId": 715, "index": "B", "name": "Complete The Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["binary search", "constructive algorithms", "graphs", "shortest paths"], "solvedCount": 3149}, {"contestId": 715, "index": "A", "name": "Plus and Square Root", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "math"], "solvedCount": 5770}, {"contestId": 714, "index": "B", "name": "Filya and Homework", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 15099}, {"contestId": 714, "index": "A", "name": "Meeting of Old Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 10948}, {"contestId": 713, "index": "E", "name": "Sonya Partymaker", "type": "PROGRAMMING", "points": 2000.0, "rating": 3300, "tags": ["binary search", "dp"], "solvedCount": 374}, {"contestId": 713, "index": "D", "name": "Animals and Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "data structures"], "solvedCount": 1256}, {"contestId": 713, "index": "C", "name": "Sonya and Problem Wihtout a Legend", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "sortings"], "solvedCount": 6042}, {"contestId": 713, "index": "B", "name": "Searching Rectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 1478}, {"contestId": 713, "index": "A", "name": "Sonya and Queries", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 8692}, {"contestId": 712, "index": "E", "name": "Memory and Casinos", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "math", "probabilities"], "solvedCount": 655}, {"contestId": 712, "index": "D", "name": "Memory and Scores", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1919}, {"contestId": 712, "index": "C", "name": "Memory and De-Evolution", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy", "math"], "solvedCount": 6053}, {"contestId": 712, "index": "B", "name": "Memory and Trident", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 10103}, {"contestId": 712, "index": "A", "name": "Memory and Crow", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 12212}, {"contestId": 711, "index": "E", "name": "ZS and The Birthday Paradox", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["math", "number theory", "probabilities"], "solvedCount": 1323}, {"contestId": 711, "index": "D", "name": "Directed Roads", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "graphs", "math"], "solvedCount": 4749}, {"contestId": 711, "index": "C", "name": "Coloring Trees", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp"], "solvedCount": 8819}, {"contestId": 711, "index": "B", "name": "Chris and Magic Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 8517}, {"contestId": 711, "index": "A", "name": "Bus to Udayland", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 30311}, {"contestId": 710, "index": "F", "name": "String Set Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "data structures", "hashing", "interactive", "string suffix structures", "strings"], "solvedCount": 2162}, {"contestId": 710, "index": "E", "name": "Generate a String", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp"], "solvedCount": 5466}, {"contestId": 710, "index": "D", "name": "Two Arithmetic Progressions", "type": "PROGRAMMING", "rating": 2500, "tags": ["math", "number theory"], "solvedCount": 1577}, {"contestId": 710, "index": "C", "name": "Magic Odd Square", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "math"], "solvedCount": 5356}, {"contestId": 710, "index": "B", "name": "Optimal Point on a Line", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "sortings"], "solvedCount": 9668}, {"contestId": 710, "index": "A", "name": "King Moves", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 14365}, {"contestId": 709, "index": "B", "name": "Checkpoints", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 4921}, {"contestId": 709, "index": "A", "name": "Juicer", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 35361}, {"contestId": 708, "index": "E", "name": "Student's Camp", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "math"], "solvedCount": 1224}, {"contestId": 708, "index": "D", "name": "Incorrect Flow", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["flows"], "solvedCount": 847}, {"contestId": 708, "index": "C", "name": "Centroids", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 3869}, {"contestId": 708, "index": "B", "name": "Recover the String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 3358}, {"contestId": 708, "index": "A", "name": "Letters Cyclic Shift", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 9381}, {"contestId": 707, "index": "E", "name": "Garlands", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 1285}, {"contestId": 707, "index": "D", "name": "Persistent Bookcase ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "data structures", "dfs and similar", "implementation"], "solvedCount": 2854}, {"contestId": 707, "index": "C", "name": "Pythagorean Triples", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["math", "number theory"], "solvedCount": 13063}, {"contestId": 707, "index": "B", "name": "Bakery", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["graphs"], "solvedCount": 13327}, {"contestId": 707, "index": "A", "name": "Brain's Photos", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 52928}, {"contestId": 706, "index": "E", "name": "Working routine", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "implementation"], "solvedCount": 1229}, {"contestId": 706, "index": "D", "name": "Vasiliy's Multiset", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "bitmasks", "data structures", "trees"], "solvedCount": 11274}, {"contestId": 706, "index": "C", "name": "Hard problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "strings"], "solvedCount": 17656}, {"contestId": 706, "index": "B", "name": "Interesting drink", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "dp", "implementation"], "solvedCount": 73651}, {"contestId": 706, "index": "A", "name": "Beru-taxi", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "geometry", "implementation"], "solvedCount": 14965}, {"contestId": 705, "index": "B", "name": "Spider Man", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["games", "math"], "solvedCount": 9375}, {"contestId": 705, "index": "A", "name": "Hulk", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 120200}, {"contestId": 704, "index": "E", "name": "Iron Man", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures", "geometry", "trees"], "solvedCount": 317}, {"contestId": 704, "index": "D", "name": "Captain America", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["flows", "greedy"], "solvedCount": 932}, {"contestId": 704, "index": "C", "name": "Black Widow", "type": "PROGRAMMING", "points": 1250.0, "rating": 2900, "tags": ["dp", "graphs", "implementation", "math"], "solvedCount": 501}, {"contestId": 704, "index": "B", "name": "Ant Man", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["dp", "graphs", "greedy"], "solvedCount": 2090}, {"contestId": 704, "index": "A", "name": "Thor", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 9825}, {"contestId": 703, "index": "E", "name": "Mishka and Divisors", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["dp", "number theory"], "solvedCount": 642}, {"contestId": 703, "index": "D", "name": "Mishka and Interesting sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures"], "solvedCount": 3863}, {"contestId": 703, "index": "C", "name": "Chris and Road", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["geometry", "implementation"], "solvedCount": 1929}, {"contestId": 703, "index": "B", "name": "Mishka and trip", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 5825}, {"contestId": 703, "index": "A", "name": "Mishka and Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 62050}, {"contestId": 702, "index": "F", "name": "T-Shirts", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"], "solvedCount": 1756}, {"contestId": 702, "index": "E", "name": "Analysis of Pathes in Functional Graph", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "graphs"], "solvedCount": 2839}, {"contestId": 702, "index": "D", "name": "Road to Post Office", "type": "PROGRAMMING", "rating": 1900, "tags": ["math"], "solvedCount": 3528}, {"contestId": 702, "index": "C", "name": "Cellular Network", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "implementation", "two pointers"], "solvedCount": 19553}, {"contestId": 702, "index": "B", "name": "Powers of Two", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "implementation", "math"], "solvedCount": 12714}, {"contestId": 702, "index": "A", "name": "Maximum Increase", "type": "PROGRAMMING", "rating": 800, "tags": ["dp", "greedy", "implementation"], "solvedCount": 50256}, {"contestId": 701, "index": "C", "name": "They Are Everywhere", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "strings", "two pointers"], "solvedCount": 17766}, {"contestId": 701, "index": "B", "name": "Cells Not Under Attack", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["data structures", "math"], "solvedCount": 12134}, {"contestId": 701, "index": "A", "name": "Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 20542}, {"contestId": 700, "index": "E", "name": "Cool Slogans", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["string suffix structures", "strings"], "solvedCount": 1277}, {"contestId": 700, "index": "D", "name": "Huffman Coding on Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["data structures", "greedy"], "solvedCount": 501}, {"contestId": 700, "index": "C", "name": "Break Up", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dfs and similar", "graphs"], "solvedCount": 1395}, {"contestId": 700, "index": "B", "name": "Connecting Universities", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 4340}, {"contestId": 700, "index": "A", "name": "As Fast As Possible", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["binary search", "math"], "solvedCount": 3252}, {"contestId": 699, "index": "B", "name": "One Bomb", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 7718}, {"contestId": 699, "index": "A", "name": "Launch of Collider", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 17299}, {"contestId": 698, "index": "F", "name": "Coprime Permutation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["combinatorics", "number theory"], "solvedCount": 469}, {"contestId": 698, "index": "E", "name": "Cron", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": [], "solvedCount": 122}, {"contestId": 698, "index": "D", "name": "Limak and Shooting Points", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "geometry", "math"], "solvedCount": 565}, {"contestId": 698, "index": "C", "name": "LRU", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "probabilities"], "solvedCount": 1384}, {"contestId": 698, "index": "B", "name": "Fix a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 5969}, {"contestId": 698, "index": "A", "name": "Vacations", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dp"], "solvedCount": 34380}, {"contestId": 697, "index": "B", "name": "Barnicle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "implementation", "math", "strings"], "solvedCount": 5891}, {"contestId": 697, "index": "A", "name": "Pineapple Incident", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 13085}, {"contestId": 696, "index": "F", "name": "...Dary!", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["binary search", "geometry", "two pointers"], "solvedCount": 135}, {"contestId": 696, "index": "E", "name": "...Wait for it...", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dsu", "trees"], "solvedCount": 598}, {"contestId": 696, "index": "D", "name": "Legen...", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dp", "matrices", "strings"], "solvedCount": 1461}, {"contestId": 696, "index": "C", "name": "PLEASE", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp", "implementation", "math", "matrices"], "solvedCount": 2137}, {"contestId": 696, "index": "B", "name": "Puzzles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "math", "probabilities", "trees"], "solvedCount": 3664}, {"contestId": 696, "index": "A", "name": "Lorenzo Von Matterhorn", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation", "trees"], "solvedCount": 6267}, {"contestId": 691, "index": "F", "name": "Couple Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "dp", "number theory"], "solvedCount": 1375}, {"contestId": 691, "index": "E", "name": "Xor-sequences", "type": "PROGRAMMING", "rating": 1900, "tags": ["matrices"], "solvedCount": 2807}, {"contestId": 691, "index": "D", "name": "Swaps in Permutation", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dsu", "math"], "solvedCount": 6064}, {"contestId": 691, "index": "C", "name": "Exponential notation", "type": "PROGRAMMING", "rating": 1800, "tags": ["implementation", "strings"], "solvedCount": 2811}, {"contestId": 691, "index": "B", "name": "s-palindrome", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "strings"], "solvedCount": 7684}, {"contestId": 691, "index": "A", "name": "Fashion in Berland", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 10624}, {"contestId": 690, "index": "F3", "name": "Tree of Life (hard)", "type": "PROGRAMMING", "rating": 3200, "tags": ["trees"], "solvedCount": 56}, {"contestId": 690, "index": "F2", "name": "Tree of Life (medium)", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "hashing", "trees"], "solvedCount": 90}, {"contestId": 690, "index": "F1", "name": "Tree of Life (easy)", "type": "PROGRAMMING", "rating": 1300, "tags": [], "solvedCount": 2287}, {"contestId": 690, "index": "E2", "name": "Photographs (II)", "type": "PROGRAMMING", "rating": 2600, "tags": [], "solvedCount": 146}, {"contestId": 690, "index": "E1", "name": "Photographs (I)", "type": "PROGRAMMING", "rating": 1800, "tags": [], "solvedCount": 727}, {"contestId": 690, "index": "D3", "name": "The Wall (hard)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp"], "solvedCount": 561}, {"contestId": 690, "index": "D2", "name": "The Wall (medium)", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics"], "solvedCount": 1346}, {"contestId": 690, "index": "D1", "name": "The Wall (easy)", "type": "PROGRAMMING", "rating": 1200, "tags": [], "solvedCount": 2751}, {"contestId": 690, "index": "C3", "name": "Brain Network (hard)", "type": "PROGRAMMING", "rating": 2200, "tags": ["trees"], "solvedCount": 965}, {"contestId": 690, "index": "C2", "name": "Brain Network (medium)", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 4392}, {"contestId": 690, "index": "C1", "name": "Brain Network (easy)", "type": "PROGRAMMING", "rating": 1300, "tags": [], "solvedCount": 2985}, {"contestId": 690, "index": "B3", "name": "Recover Polygon (hard)", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures"], "solvedCount": 104}, {"contestId": 690, "index": "B2", "name": "Recover Polygon (medium)", "type": "PROGRAMMING", "rating": 2600, "tags": ["geometry"], "solvedCount": 219}, {"contestId": 690, "index": "B1", "name": "Recover Polygon (easy)", "type": "PROGRAMMING", "rating": 1700, "tags": [], "solvedCount": 970}, {"contestId": 690, "index": "A3", "name": "Collective Mindsets (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": [], "solvedCount": 593}, {"contestId": 690, "index": "A2", "name": "Collective Mindsets (medium)", "type": "PROGRAMMING", "rating": 2300, "tags": [], "solvedCount": 741}, {"contestId": 690, "index": "A1", "name": "Collective Mindsets (easy)", "type": "PROGRAMMING", "rating": 1100, "tags": [], "solvedCount": 2991}, {"contestId": 689, "index": "E", "name": "Mike and Geometry Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["combinatorics", "data structures", "dp", "geometry", "implementation"], "solvedCount": 2045}, {"contestId": 689, "index": "D", "name": "Friends and Subsequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures"], "solvedCount": 3727}, {"contestId": 689, "index": "C", "name": "Mike and Chocolate Thieves", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "combinatorics", "math"], "solvedCount": 5818}, {"contestId": 689, "index": "B", "name": "Mike and Shortcuts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "greedy", "shortest paths"], "solvedCount": 6359}, {"contestId": 689, "index": "A", "name": "Mike and Cellphone", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 5365}, {"contestId": 688, "index": "B", "name": "Lovely Palindromes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 34533}, {"contestId": 688, "index": "A", "name": "Opponents", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 14389}, {"contestId": 687, "index": "E", "name": "TOF", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dfs and similar", "graphs"], "solvedCount": 428}, {"contestId": 687, "index": "D", "name": "Dividing Kingdom II", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "dsu", "graphs", "sortings"], "solvedCount": 1002}, {"contestId": 687, "index": "C", "name": "The Values You Can Make", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"], "solvedCount": 6936}, {"contestId": 687, "index": "B", "name": "Remainders Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["chinese remainder theorem", "math", "number theory"], "solvedCount": 6361}, {"contestId": 687, "index": "A", "name": "NP-Hard Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "graphs"], "solvedCount": 15726}, {"contestId": 686, "index": "B", "name": "Little Robber Girl's Zoo", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 7914}, {"contestId": 686, "index": "A", "name": "Free Ice Cream", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 40952}, {"contestId": 685, "index": "E", "name": "Travelling Through the Snow Queen's Kingdom", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "brute force", "divide and conquer", "graphs"], "solvedCount": 574}, {"contestId": 685, "index": "D", "name": "Kay and Eternity", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "implementation", "sortings"], "solvedCount": 503}, {"contestId": 685, "index": "C", "name": "Optimal Point", "type": "PROGRAMMING", "points": 1250.0, "rating": 2900, "tags": ["binary search", "math"], "solvedCount": 630}, {"contestId": 685, "index": "B", "name": "Kay and Snowflake", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 4832}, {"contestId": 685, "index": "A", "name": "Robbers' watch", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "combinatorics", "dp", "math"], "solvedCount": 4378}, {"contestId": 683, "index": "J", "name": "The Hero with Bombs", "type": "PROGRAMMING", "rating": 3000, "tags": ["*special"], "solvedCount": 45}, {"contestId": 683, "index": "I", "name": "Loader", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "graphs"], "solvedCount": 45}, {"contestId": 683, "index": "H", "name": "Exchange of Books", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 120}, {"contestId": 683, "index": "G", "name": "The Fraction", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 139}, {"contestId": 683, "index": "F", "name": "Reformat the String", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 158}, {"contestId": 683, "index": "E", "name": "Hammer throwing", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 198}, {"contestId": 683, "index": "D", "name": "Chocolate Bar", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "math"], "solvedCount": 350}, {"contestId": 683, "index": "C", "name": "Symmetric Difference", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 329}, {"contestId": 683, "index": "B", "name": "The Teacher of Physical Education", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 328}, {"contestId": 683, "index": "A", "name": "The Check of the Point", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "geometry"], "solvedCount": 1161}, {"contestId": 682, "index": "E", "name": "Alyona and Triangles", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["geometry", "two pointers"], "solvedCount": 689}, {"contestId": 682, "index": "D", "name": "Alyona and Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "strings"], "solvedCount": 3430}, {"contestId": 682, "index": "C", "name": "Alyona and the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 7687}, {"contestId": 682, "index": "B", "name": "Alyona and Mex", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["sortings"], "solvedCount": 12222}, {"contestId": 682, "index": "A", "name": "Alyona and Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 23147}, {"contestId": 681, "index": "E", "name": "Runaway to a Shadow", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry", "sortings"], "solvedCount": 481}, {"contestId": 681, "index": "D", "name": "Gifts by the List", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 1819}, {"contestId": 681, "index": "C", "name": "Heap Operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 8717}, {"contestId": 681, "index": "B", "name": "Economy Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force"], "solvedCount": 9201}, {"contestId": 681, "index": "A", "name": "A Good Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 16211}, {"contestId": 680, "index": "B", "name": "Bear and Finding Criminals", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 25539}, {"contestId": 680, "index": "A", "name": "Bear and Five Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 12818}, {"contestId": 679, "index": "E", "name": "Bear and Bad Powers of 42", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 755}, {"contestId": 679, "index": "D", "name": "Bear and Chase", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "dfs and similar", "graphs", "implementation", "math", "probabilities"], "solvedCount": 325}, {"contestId": 679, "index": "C", "name": "Bear and Square Grid", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "implementation"], "solvedCount": 1227}, {"contestId": 679, "index": "B", "name": "Bear and Tower of Cubes", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "dp", "greedy"], "solvedCount": 2178}, {"contestId": 679, "index": "A", "name": "Bear and Prime 100", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 14410}, {"contestId": 678, "index": "F", "name": "Lena and Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "geometry"], "solvedCount": 962}, {"contestId": 678, "index": "E", "name": "Another Sith Tournament", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp", "math", "probabilities"], "solvedCount": 2499}, {"contestId": 678, "index": "D", "name": "Iterated Linear Function", "type": "PROGRAMMING", "rating": 1700, "tags": ["math", "number theory"], "solvedCount": 4840}, {"contestId": 678, "index": "C", "name": "Joty and Chocolate", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "math", "number theory"], "solvedCount": 10430}, {"contestId": 678, "index": "B", "name": "The Same Calendar", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 4262}, {"contestId": 678, "index": "A", "name": "Johny Likes Numbers", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 14049}, {"contestId": 677, "index": "E", "name": "Vanya and Balloons", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "brute force", "dp", "implementation"], "solvedCount": 618}, {"contestId": 677, "index": "D", "name": "Vanya and Treasure", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "shortest paths"], "solvedCount": 1825}, {"contestId": 677, "index": "C", "name": "Vanya and Label", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["bitmasks", "combinatorics", "implementation", "strings"], "solvedCount": 6693}, {"contestId": 677, "index": "B", "name": "Vanya and Food Processor", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 7799}, {"contestId": 677, "index": "A", "name": "Vanya and Fence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 162335}, {"contestId": 676, "index": "E", "name": "The Last Fight Between Human and AI", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["math"], "solvedCount": 912}, {"contestId": 676, "index": "D", "name": "Theseus and labyrinth", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["graphs", "implementation", "shortest paths"], "solvedCount": 1909}, {"contestId": 676, "index": "C", "name": "Vasya and String", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "dp", "strings", "two pointers"], "solvedCount": 20859}, {"contestId": 676, "index": "B", "name": "Pyramid of Glasses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "math", "math"], "solvedCount": 5685}, {"contestId": 676, "index": "A", "name": "Nicholas and Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 14247}, {"contestId": 675, "index": "E", "name": "Trains and Statistic", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"], "solvedCount": 3030}, {"contestId": 675, "index": "D", "name": "Tree Construction", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "trees"], "solvedCount": 4063}, {"contestId": 675, "index": "C", "name": "Money Transfers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 3743}, {"contestId": 675, "index": "B", "name": "Restoring Painting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 7594}, {"contestId": 675, "index": "A", "name": "Infinite Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["math"], "solvedCount": 15237}, {"contestId": 673, "index": "B", "name": "Problems for Round", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["greedy", "implementation"], "solvedCount": 3573}, {"contestId": 673, "index": "A", "name": "Bear and Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 10534}, {"contestId": 672, "index": "B", "name": "Different is Good", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 18009}, {"contestId": 672, "index": "A", "name": "Summer Camp", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 16269}, {"contestId": 671, "index": "E", "name": "Organizing a Race", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "greedy"], "solvedCount": 464}, {"contestId": 671, "index": "D", "name": "Roads in Yusland", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dp", "greedy"], "solvedCount": 1246}, {"contestId": 671, "index": "C", "name": "Ultimate Weirdness of an Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "number theory"], "solvedCount": 741}, {"contestId": 671, "index": "B", "name": "Robin Hood", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "greedy"], "solvedCount": 3166}, {"contestId": 671, "index": "A", "name": "Recycling Bottles", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "geometry", "greedy", "implementation"], "solvedCount": 4252}, {"contestId": 670, "index": "F", "name": "Restore a Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "strings"], "solvedCount": 873}, {"contestId": 670, "index": "E", "name": "Correct Bracket Sequence Editor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "dsu", "strings"], "solvedCount": 3326}, {"contestId": 670, "index": "D2", "name": "Magic Powder - 2", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "implementation"], "solvedCount": 16970}, {"contestId": 670, "index": "D1", "name": "Magic Powder - 1", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 21247}, {"contestId": 670, "index": "C", "name": "Cinema", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 9628}, {"contestId": 670, "index": "B", "name": "Game of Robots", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 11661}, {"contestId": 670, "index": "A", "name": "Holidays", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 17816}, {"contestId": 669, "index": "A", "name": "Little Artem and Presents", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 11270}, {"contestId": 667, "index": "B", "name": "Coat of Anticubism", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "geometry"], "solvedCount": 5790}, {"contestId": 667, "index": "A", "name": "Pouring Rain", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["geometry", "math"], "solvedCount": 8282}, {"contestId": 666, "index": "E", "name": "Forensic Examination", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "string suffix structures"], "solvedCount": 1507}, {"contestId": 666, "index": "D", "name": "Chain Reaction", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["brute force", "geometry"], "solvedCount": 293}, {"contestId": 666, "index": "C", "name": "Codeword", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["combinatorics", "strings"], "solvedCount": 828}, {"contestId": 666, "index": "B", "name": "World Tour", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["graphs", "shortest paths"], "solvedCount": 2309}, {"contestId": 666, "index": "A", "name": "Reberland Linguistics", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "implementation", "strings"], "solvedCount": 3671}, {"contestId": 665, "index": "F", "name": "Four Divisors", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "math", "number theory", "sortings", "two pointers"], "solvedCount": 675}, {"contestId": 665, "index": "E", "name": "Beautiful Subarrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "strings", "trees"], "solvedCount": 3791}, {"contestId": 665, "index": "D", "name": "Simple Subset", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 3948}, {"contestId": 665, "index": "C", "name": "Simple Strings", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "greedy", "strings"], "solvedCount": 13656}, {"contestId": 665, "index": "B", "name": "Shopping", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"], "solvedCount": 3698}, {"contestId": 665, "index": "A", "name": "Buses Between Cities", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 3065}, {"contestId": 664, "index": "A", "name": "Complicated GCD", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 20029}, {"contestId": 663, "index": "A", "name": "Rebus", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "expression parsing", "greedy", "math"], "solvedCount": 3582}, {"contestId": 662, "index": "E", "name": "To Hack or not to Hack", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["brute force", "dp", "greedy"], "solvedCount": 150}, {"contestId": 662, "index": "D", "name": "International Olympiad", "type": "PROGRAMMING", "points": 250.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 1672}, {"contestId": 662, "index": "C", "name": "Binary Table", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "fft", "math"], "solvedCount": 2227}, {"contestId": 662, "index": "B", "name": "Graph Coloring", "type": "PROGRAMMING", "points": 250.0, "rating": 2200, "tags": ["dfs and similar", "graphs"], "solvedCount": 1568}, {"contestId": 662, "index": "A", "name": "Gambling Nim", "type": "PROGRAMMING", "points": 500.0, "rating": 2400, "tags": ["bitmasks", "math", "matrices", "probabilities"], "solvedCount": 529}, {"contestId": 661, "index": "H", "name": "Rotate Matrix", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special"], "solvedCount": 77}, {"contestId": 661, "index": "G", "name": "Hungarian Notation", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special"], "solvedCount": 74}, {"contestId": 661, "index": "F", "name": "Primes in Interval", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 534}, {"contestId": 661, "index": "E", "name": "Divisibility Check", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 88}, {"contestId": 661, "index": "D", "name": "Maximal Difference", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"], "solvedCount": 135}, {"contestId": 661, "index": "C", "name": "Array Sum", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 136}, {"contestId": 661, "index": "B", "name": "Seasons", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 233}, {"contestId": 661, "index": "A", "name": "Lazy Caterer Sequence", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special"], "solvedCount": 645}, {"contestId": 660, "index": "F", "name": "Bear and Bowling 4", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "divide and conquer", "geometry", "ternary search"], "solvedCount": 2014}, {"contestId": 660, "index": "E", "name": "Different Subsets For All Tuples", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "math"], "solvedCount": 1726}, {"contestId": 660, "index": "D", "name": "Number of Parallelograms", "type": "PROGRAMMING", "rating": 1900, "tags": ["geometry"], "solvedCount": 4379}, {"contestId": 660, "index": "C", "name": "Hard Process", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "dp", "two pointers"], "solvedCount": 10182}, {"contestId": 660, "index": "B", "name": "Seating On Bus", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 5633}, {"contestId": 660, "index": "A", "name": "Co-prime Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "implementation", "math", "number theory"], "solvedCount": 9715}, {"contestId": 659, "index": "G", "name": "Fence Divercity", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp", "number theory"], "solvedCount": 1272}, {"contestId": 659, "index": "F", "name": "Polycarp and Hay", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "sortings"], "solvedCount": 1880}, {"contestId": 659, "index": "E", "name": "New Reform", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 7778}, {"contestId": 659, "index": "D", "name": "Bicycle Race", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["geometry", "implementation", "math"], "solvedCount": 6518}, {"contestId": 659, "index": "C", "name": "Tanya and Toys", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 11705}, {"contestId": 659, "index": "B", "name": "Qualifying Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "sortings"], "solvedCount": 6438}, {"contestId": 659, "index": "A", "name": "Round House", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 16346}, {"contestId": 658, "index": "A", "name": "Bear and Reverse Radewoosh", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 7309}, {"contestId": 656, "index": "G", "name": "You're a Professional", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 497}, {"contestId": 656, "index": "F", "name": "Ace It!", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 942}, {"contestId": 656, "index": "E", "name": "Out of Controls", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 744}, {"contestId": 656, "index": "D", "name": "Rosetta Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"], "solvedCount": 978}, {"contestId": 656, "index": "C", "name": "Without Text", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 707}, {"contestId": 656, "index": "B", "name": "Scrambled", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "implementation"], "solvedCount": 1680}, {"contestId": 656, "index": "A", "name": "Da Vinci Powers", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 3721}, {"contestId": 653, "index": "G", "name": "Move by Prime", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 592}, {"contestId": 653, "index": "F", "name": "Paper task", "type": "PROGRAMMING", "points": 3500.0, "rating": 2600, "tags": ["data structures", "string suffix structures", "strings"], "solvedCount": 1073}, {"contestId": 653, "index": "E", "name": "Bear and Forgotten Tree 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 1628}, {"contestId": 653, "index": "D", "name": "Delivery Bears", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "flows", "graphs"], "solvedCount": 2748}, {"contestId": 653, "index": "C", "name": "Bear and Up-Down", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "implementation"], "solvedCount": 1709}, {"contestId": 653, "index": "B", "name": "Bear and Compressing", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dfs and similar", "dp", "strings"], "solvedCount": 5204}, {"contestId": 653, "index": "A", "name": "Bear and Three Balls", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "sortings"], "solvedCount": 8831}, {"contestId": 652, "index": "F", "name": "Ants on a Circle", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms", "math"], "solvedCount": 589}, {"contestId": 652, "index": "E", "name": "Pursuit For Artifacts", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 2545}, {"contestId": 652, "index": "D", "name": "Nested Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "sortings"], "solvedCount": 4365}, {"contestId": 652, "index": "C", "name": "Foe Pairs", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "sortings", "two pointers"], "solvedCount": 3469}, {"contestId": 652, "index": "B", "name": "z-sort", "type": "PROGRAMMING", "rating": 1000, "tags": ["sortings"], "solvedCount": 10990}, {"contestId": 652, "index": "A", "name": "Gabriel and Caterpillar", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 4968}, {"contestId": 651, "index": "B", "name": "Beautiful Paintings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 11877}, {"contestId": 651, "index": "A", "name": "Joysticks", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["dp", "greedy", "implementation", "math"], "solvedCount": 23634}, {"contestId": 650, "index": "E", "name": "Clockwork Bomb", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "dsu", "greedy", "trees"], "solvedCount": 625}, {"contestId": 650, "index": "D", "name": "Zip-line", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "hashing"], "solvedCount": 1484}, {"contestId": 650, "index": "C", "name": "Table Compression", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"], "solvedCount": 2086}, {"contestId": 650, "index": "B", "name": "Image Preview", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "brute force", "dp", "two pointers"], "solvedCount": 3424}, {"contestId": 650, "index": "A", "name": "Watchmen", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "geometry", "math"], "solvedCount": 16222}, {"contestId": 649, "index": "E", "name": "\u0410\u0432\u0442\u043e\u0431\u0443\u0441", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 138}, {"contestId": 649, "index": "D", "name": "\u0414\u0435\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0430\u043c\u044f\u0442\u0438", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 408}, {"contestId": 649, "index": "C", "name": "\u041f\u0435\u0447\u0430\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0439", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 507}, {"contestId": 649, "index": "B", "name": "\u042d\u0442\u0430\u0436\u0438", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms"], "solvedCount": 587}, {"contestId": 649, "index": "A", "name": "\u041b\u044e\u0431\u0438\u043c\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u041f\u043e\u043b\u0438\u043a\u0430\u0440\u043f\u0430", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1506}, {"contestId": 648, "index": "E", "name": "\u0421\u043e\u0431\u0435\u0440\u0438 \u0447\u0438\u0441\u043b\u043e", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["graphs", "shortest paths"], "solvedCount": 147}, {"contestId": 648, "index": "D", "name": "\u0421\u043e\u0431\u0430\u0447\u043a\u0438 \u0438 \u043c\u0438\u0441\u043a\u0438", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 271}, {"contestId": 648, "index": "C", "name": "\u041f\u0443\u0442\u044c \u0420\u043e\u0431\u043e\u0442\u0430", "type": "PROGRAMMING", "points": 1500.0, "rating": 1100, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 1193}, {"contestId": 648, "index": "B", "name": "\u0421\u043e\u0431\u0435\u0440\u0438 \u0441\u0442\u043e\u043b", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 1938}, {"contestId": 648, "index": "A", "name": "\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043f\u043e\u0434\u044a\u0435\u043c", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "implementation"], "solvedCount": 892}, {"contestId": 645, "index": "G", "name": "Armistice Area Apportionment", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["binary search", "geometry"], "solvedCount": 125}, {"contestId": 645, "index": "F", "name": "Cowslip Collections", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 907}, {"contestId": 645, "index": "E", "name": "Intellectual Inquiry", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "greedy", "strings"], "solvedCount": 1332}, {"contestId": 645, "index": "D", "name": "Robot Rapping Results Report", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "dp", "graphs"], "solvedCount": 3185}, {"contestId": 645, "index": "C", "name": "Enduring Exodus", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "two pointers"], "solvedCount": 3824}, {"contestId": 645, "index": "B", "name": "Mischievous Mess Makers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "math"], "solvedCount": 3519}, {"contestId": 645, "index": "A", "name": "Amity Assessment", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 3675}, {"contestId": 644, "index": "C", "name": "Hostname Aliases", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["*special", "binary search", "data structures", "implementation", "sortings", "strings"], "solvedCount": 938}, {"contestId": 644, "index": "B", "name": "Processing Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["*special", "constructive algorithms", "data structures", "two pointers"], "solvedCount": 2743}, {"contestId": 644, "index": "A", "name": "Parliament of Berland", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["*special", "constructive algorithms"], "solvedCount": 4562}, {"contestId": 643, "index": "G", "name": "Choosing Ads", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures"], "solvedCount": 1093}, {"contestId": 643, "index": "F", "name": "Bears and Juice", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "math", "meet-in-the-middle"], "solvedCount": 775}, {"contestId": 643, "index": "E", "name": "Bear and Destroying Subtrees", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "math", "probabilities", "trees"], "solvedCount": 673}, {"contestId": 643, "index": "D", "name": "Bearish Fanpages", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": [], "solvedCount": 329}, {"contestId": 643, "index": "C", "name": "Levels and Regions", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["dp"], "solvedCount": 1539}, {"contestId": 643, "index": "B", "name": "Bear and Two Paths", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "graphs"], "solvedCount": 3305}, {"contestId": 643, "index": "A", "name": "Bear and Colors", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation"], "solvedCount": 4256}, {"contestId": 641, "index": "G", "name": "Little Artem and Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": [], "solvedCount": 97}, {"contestId": 641, "index": "F", "name": "Little Artem and 2-SAT", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": [], "solvedCount": 215}, {"contestId": 641, "index": "E", "name": "Little Artem and Time Machine", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures"], "solvedCount": 3614}, {"contestId": 641, "index": "D", "name": "Little Artem and Random Variable", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["dp", "implementation", "math", "probabilities"], "solvedCount": 1387}, {"contestId": 641, "index": "C", "name": "Little Artem and Dance", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 3105}, {"contestId": 641, "index": "B", "name": "Little Artem and Matrix", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 4089}, {"contestId": 641, "index": "A", "name": "Little Artem and Grasshopper", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 6164}, {"contestId": 639, "index": "F", "name": "Bear and Chemistry", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 439}, {"contestId": 639, "index": "E", "name": "Bear and Paradox", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["binary search", "greedy", "math", "sortings"], "solvedCount": 595}, {"contestId": 639, "index": "D", "name": "Bear and Contribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "greedy", "sortings", "two pointers"], "solvedCount": 998}, {"contestId": 639, "index": "C", "name": "Bear and Polynomials", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["hashing", "implementation", "math"], "solvedCount": 1230}, {"contestId": 639, "index": "B", "name": "Bear and Forgotten Tree 3", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 6739}, {"contestId": 639, "index": "A", "name": "Bear and Displayed Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 6266}, {"contestId": 638, "index": "D", "name": "Three-dimensional Turtle Super Computer ", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "dfs and similar", "graphs"], "solvedCount": 740}, {"contestId": 638, "index": "C", "name": "Road Improvement", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["*special", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1965}, {"contestId": 638, "index": "B", "name": "Making Genome in Berland", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["*special", "dfs and similar", "strings"], "solvedCount": 2036}, {"contestId": 638, "index": "A", "name": "Home Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["*special", "constructive algorithms", "math"], "solvedCount": 4180}, {"contestId": 637, "index": "D", "name": "Running with Obstacles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "data structures", "dp", "greedy"], "solvedCount": 2072}, {"contestId": 637, "index": "C", "name": "Promocodes with Mistakes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "brute force", "constructive algorithms", "implementation"], "solvedCount": 2467}, {"contestId": 637, "index": "B", "name": "Chat Order", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["*special", "binary search", "constructive algorithms", "data structures", "sortings"], "solvedCount": 19853}, {"contestId": 637, "index": "A", "name": "Voting for Photos", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["*special", "constructive algorithms", "implementation"], "solvedCount": 5642}, {"contestId": 635, "index": "A", "name": "Orchestra", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 3019}, {"contestId": 634, "index": "A", "name": "Island Puzzle", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3384}, {"contestId": 633, "index": "H", "name": "Fibonacci-ish II", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "implementation"], "solvedCount": 649}, {"contestId": 633, "index": "G", "name": "Yash And Trees", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "data structures", "dfs and similar", "math", "number theory"], "solvedCount": 827}, {"contestId": 633, "index": "F", "name": "The Chocolate Spree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 1124}, {"contestId": 633, "index": "E", "name": "Startup Funding", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "probabilities", "two pointers"], "solvedCount": 604}, {"contestId": 633, "index": "D", "name": "Fibonacci-ish", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["brute force", "dp", "hashing", "implementation", "math"], "solvedCount": 2953}, {"contestId": 633, "index": "C", "name": "Spy Syndrome 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp", "hashing", "implementation", "sortings", "string suffix structures", "strings"], "solvedCount": 3098}, {"contestId": 633, "index": "B", "name": "A Trivial Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 6956}, {"contestId": 633, "index": "A", "name": "Ebony and Ivory", "type": "PROGRAMMING", "points": 250.0, "rating": 1100, "tags": ["brute force", "math", "number theory"], "solvedCount": 13748}, {"contestId": 632, "index": "F", "name": "Magic Matrix", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "divide and conquer", "graphs", "matrices", "trees"], "solvedCount": 1201}, {"contestId": 632, "index": "E", "name": "Thief in a Shop", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "fft", "math"], "solvedCount": 3206}, {"contestId": 632, "index": "D", "name": "Longest Subsequence", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "math", "number theory"], "solvedCount": 4259}, {"contestId": 632, "index": "C", "name": "The Smallest String Concatenation", "type": "PROGRAMMING", "rating": 1700, "tags": ["sortings", "strings"], "solvedCount": 9175}, {"contestId": 632, "index": "B", "name": "Alice, Bob, Two Teams", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms"], "solvedCount": 4196}, {"contestId": 632, "index": "A", "name": "Grandma Laura and Apples", "type": "PROGRAMMING", "rating": 1200, "tags": [], "solvedCount": 4750}, {"contestId": 631, "index": "E", "name": "Product Sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "geometry"], "solvedCount": 2808}, {"contestId": 631, "index": "D", "name": "Messenger", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "hashing", "implementation", "string suffix structures", "strings"], "solvedCount": 2286}, {"contestId": 631, "index": "C", "name": "Report", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "sortings"], "solvedCount": 4121}, {"contestId": 631, "index": "B", "name": "Print Check", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7662}, {"contestId": 631, "index": "A", "name": "Interview", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 9530}, {"contestId": 630, "index": "R", "name": "Game", "type": "PROGRAMMING", "rating": 1200, "tags": ["games", "math"], "solvedCount": 9188}, {"contestId": 630, "index": "Q", "name": "Pyramids", "type": "PROGRAMMING", "rating": 1700, "tags": ["geometry", "math"], "solvedCount": 1375}, {"contestId": 630, "index": "P", "name": "Area of a Star", "type": "PROGRAMMING", "rating": 2100, "tags": ["geometry"], "solvedCount": 1235}, {"contestId": 630, "index": "O", "name": "Arrow", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry"], "solvedCount": 821}, {"contestId": 630, "index": "N", "name": "Forecast", "type": "PROGRAMMING", "rating": 1300, "tags": ["math"], "solvedCount": 4983}, {"contestId": 630, "index": "M", "name": "Turn", "type": "PROGRAMMING", "rating": 1800, "tags": ["geometry", "math"], "solvedCount": 1292}, {"contestId": 630, "index": "L", "name": "Cracking the Code", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 3811}, {"contestId": 630, "index": "K", "name": "Indivisibility", "type": "PROGRAMMING", "rating": 1500, "tags": ["math", "number theory"], "solvedCount": 5704}, {"contestId": 630, "index": "J", "name": "Divisibility", "type": "PROGRAMMING", "rating": 1100, "tags": ["math", "number theory"], "solvedCount": 11933}, {"contestId": 630, "index": "I", "name": "Parking Lot", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "math"], "solvedCount": 7595}, {"contestId": 630, "index": "H", "name": "Benches", "type": "PROGRAMMING", "rating": 1400, "tags": ["combinatorics", "math"], "solvedCount": 5288}, {"contestId": 630, "index": "G", "name": "Challenge Pennants", "type": "PROGRAMMING", "rating": 1600, "tags": ["combinatorics", "math"], "solvedCount": 3069}, {"contestId": 630, "index": "F", "name": "Selection of Personnel", "type": "PROGRAMMING", "rating": 1300, "tags": ["combinatorics", "math"], "solvedCount": 7413}, {"contestId": 630, "index": "E", "name": "A rectangle", "type": "PROGRAMMING", "rating": 1900, "tags": ["math"], "solvedCount": 2499}, {"contestId": 630, "index": "D", "name": "Hexagons!", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"], "solvedCount": 11892}, {"contestId": 630, "index": "C", "name": "Lucky Numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["combinatorics", "math"], "solvedCount": 24692}, {"contestId": 630, "index": "B", "name": "Moore's Law", "type": "PROGRAMMING", "rating": 1200, "tags": ["math"], "solvedCount": 7939}, {"contestId": 630, "index": "A", "name": "Again Twenty Five!", "type": "PROGRAMMING", "rating": 800, "tags": ["number theory"], "solvedCount": 81006}, {"contestId": 629, "index": "E", "name": "Famil Door and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "probabilities", "trees"], "solvedCount": 1092}, {"contestId": 629, "index": "D", "name": "Babaei and Birthday Cake", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp"], "solvedCount": 4321}, {"contestId": 629, "index": "C", "name": "Famil Door and Brackets", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "strings"], "solvedCount": 2928}, {"contestId": 629, "index": "B", "name": "Far Relative\u2019s Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force"], "solvedCount": 8216}, {"contestId": 629, "index": "A", "name": "Far Relative\u2019s Birthday Cake", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation"], "solvedCount": 14075}, {"contestId": 628, "index": "F", "name": "Bear and Fair Set", "type": "PROGRAMMING", "rating": 2500, "tags": ["flows", "graphs"], "solvedCount": 890}, {"contestId": 628, "index": "E", "name": "Zbazi in Zeydabad", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "implementation"], "solvedCount": 1001}, {"contestId": 628, "index": "D", "name": "Magic Numbers", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp"], "solvedCount": 7177}, {"contestId": 628, "index": "C", "name": "Bear and String Distance", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy", "strings"], "solvedCount": 6202}, {"contestId": 628, "index": "B", "name": "New Skateboard", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp"], "solvedCount": 11599}, {"contestId": 628, "index": "A", "name": "Tennis Tournament", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 6744}, {"contestId": 627, "index": "F", "name": "Island Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 249}, {"contestId": 627, "index": "E", "name": "Orchestra", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["two pointers"], "solvedCount": 623}, {"contestId": 627, "index": "D", "name": "Preorder Test", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 924}, {"contestId": 627, "index": "C", "name": "Package Delivery", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "greedy"], "solvedCount": 1228}, {"contestId": 627, "index": "B", "name": "Factory Repairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures"], "solvedCount": 3139}, {"contestId": 627, "index": "A", "name": "XOR Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "math"], "solvedCount": 4434}, {"contestId": 626, "index": "G", "name": "Raffles", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 566}, {"contestId": 626, "index": "F", "name": "Group Projects", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"], "solvedCount": 3288}, {"contestId": 626, "index": "E", "name": "Simple Skewness", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "math", "ternary search"], "solvedCount": 1491}, {"contestId": 626, "index": "D", "name": "Jerry's Protest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "combinatorics", "dp", "probabilities"], "solvedCount": 3035}, {"contestId": 626, "index": "C", "name": "Block Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "greedy", "math", "number theory"], "solvedCount": 4473}, {"contestId": 626, "index": "B", "name": "Cards", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 6772}, {"contestId": 626, "index": "A", "name": "Robot Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 6452}, {"contestId": 625, "index": "E", "name": "Frog Fights", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "greedy"], "solvedCount": 366}, {"contestId": 625, "index": "D", "name": "Finals in arithmetic", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 648}, {"contestId": 625, "index": "C", "name": "K-special Tables", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 6981}, {"contestId": 625, "index": "B", "name": "War of the Corporations", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 11107}, {"contestId": 625, "index": "A", "name": "Guest From the Past", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 5522}, {"contestId": 624, "index": "B", "name": "Making a String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 8208}, {"contestId": 624, "index": "A", "name": "Save Luke", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 10744}, {"contestId": 623, "index": "E", "name": "Transforming Sequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["combinatorics", "dp", "fft", "math"], "solvedCount": 590}, {"contestId": 623, "index": "D", "name": "Birthday", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["greedy", "math", "probabilities"], "solvedCount": 520}, {"contestId": 623, "index": "C", "name": "Electric Charges", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["binary search", "dp"], "solvedCount": 510}, {"contestId": 623, "index": "B", "name": "Array GCD", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["dp", "greedy", "number theory"], "solvedCount": 2278}, {"contestId": 623, "index": "A", "name": "Graph and String", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "graphs"], "solvedCount": 4685}, {"contestId": 622, "index": "F", "name": "The Sum of the k-th Powers", "type": "PROGRAMMING", "rating": 2600, "tags": ["math"], "solvedCount": 4483}, {"contestId": 622, "index": "E", "name": "Ants in Leaves", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "greedy", "sortings", "trees"], "solvedCount": 2291}, {"contestId": 622, "index": "D", "name": "Optimal Number Permutation", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 3214}, {"contestId": 622, "index": "C", "name": "Not Equal on a Segment", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation"], "solvedCount": 7175}, {"contestId": 622, "index": "B", "name": "The Time", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 10233}, {"contestId": 622, "index": "A", "name": "Infinite Sequence", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 9872}, {"contestId": 621, "index": "E", "name": "Wet Shark and Blocks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["dp", "matrices"], "solvedCount": 3035}, {"contestId": 621, "index": "D", "name": "Rat Kwesh and Cheese", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 1018}, {"contestId": 621, "index": "C", "name": "Wet Shark and Flowers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["combinatorics", "math", "number theory", "probabilities"], "solvedCount": 5874}, {"contestId": 621, "index": "B", "name": "Wet Shark and Bishops", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "implementation"], "solvedCount": 11353}, {"contestId": 621, "index": "A", "name": "Wet Shark and Odd and Even", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 21926}, {"contestId": 620, "index": "F", "name": "Xors on Segments", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "strings", "trees"], "solvedCount": 821}, {"contestId": 620, "index": "E", "name": "New Year Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 6410}, {"contestId": 620, "index": "D", "name": "Professor GukiZ and Two Arrays", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "two pointers"], "solvedCount": 1865}, {"contestId": 620, "index": "C", "name": "Pearls in a Row", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"], "solvedCount": 7432}, {"contestId": 620, "index": "B", "name": "Grandfather Dovlet\u2019s calculator", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 10098}, {"contestId": 620, "index": "A", "name": "Professor GukiZ's Robot", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation", "math"], "solvedCount": 13897}, {"contestId": 618, "index": "G", "name": "Combining Slimes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["dp", "math", "matrices", "probabilities"], "solvedCount": 264}, {"contestId": 618, "index": "F", "name": "Double Knapsack", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["constructive algorithms", "two pointers"], "solvedCount": 1614}, {"contestId": 618, "index": "E", "name": "Robot Arm", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "geometry"], "solvedCount": 664}, {"contestId": 618, "index": "D", "name": "Hamiltonian Spanning Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"], "solvedCount": 1826}, {"contestId": 618, "index": "C", "name": "Constellation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["geometry", "implementation"], "solvedCount": 4500}, {"contestId": 618, "index": "B", "name": "Guess the Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms"], "solvedCount": 8188}, {"contestId": 618, "index": "A", "name": "Slime Combining", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 8603}, {"contestId": 617, "index": "E", "name": "XOR and Favorite Number", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 9626}, {"contestId": 617, "index": "D", "name": "Polyline", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 4325}, {"contestId": 617, "index": "C", "name": "Watering Flowers", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 5080}, {"contestId": 617, "index": "B", "name": "Chocolate", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics"], "solvedCount": 19164}, {"contestId": 617, "index": "A", "name": "Elephant", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math"], "solvedCount": 218481}, {"contestId": 616, "index": "F", "name": "Expensive Strings", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "sortings", "string suffix structures", "strings"], "solvedCount": 651}, {"contestId": 616, "index": "E", "name": "Sum of Remainders", "type": "PROGRAMMING", "rating": 2200, "tags": ["implementation", "math", "number theory"], "solvedCount": 3265}, {"contestId": 616, "index": "D", "name": "Longest k-Good Segment", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 11109}, {"contestId": 616, "index": "C", "name": "The Labyrinth", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar"], "solvedCount": 6300}, {"contestId": 616, "index": "B", "name": "Dinner with Emma", "type": "PROGRAMMING", "rating": 1000, "tags": ["games", "greedy"], "solvedCount": 12595}, {"contestId": 616, "index": "A", "name": "Comparing Two Long Integers", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 10369}, {"contestId": 615, "index": "E", "name": "Hexagons", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "implementation", "math"], "solvedCount": 1011}, {"contestId": 615, "index": "D", "name": "Multipliers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["math", "number theory"], "solvedCount": 4111}, {"contestId": 615, "index": "C", "name": "Running Track", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "greedy", "strings", "trees"], "solvedCount": 2390}, {"contestId": 615, "index": "B", "name": "Longtail Hedgehog", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dp", "graphs"], "solvedCount": 5498}, {"contestId": 615, "index": "A", "name": "Bulbs", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 18556}, {"contestId": 614, "index": "B", "name": "Gena's Code", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 7119}, {"contestId": 614, "index": "A", "name": "Link/Cut Tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 7612}, {"contestId": 613, "index": "E", "name": "Puzzle Lover", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["dp", "hashing", "strings"], "solvedCount": 507}, {"contestId": 613, "index": "D", "name": "Kingdom and its Cities", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dfs and similar", "divide and conquer", "dp", "graphs", "sortings", "trees"], "solvedCount": 3528}, {"contestId": 613, "index": "C", "name": "Necklace", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["constructive algorithms", "math"], "solvedCount": 1044}, {"contestId": 613, "index": "B", "name": "Skills", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["binary search", "brute force", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 2313}, {"contestId": 613, "index": "A", "name": "Peter and Snow Blower", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "geometry", "ternary search"], "solvedCount": 3326}, {"contestId": 612, "index": "F", "name": "Simba on the Circle", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp"], "solvedCount": 418}, {"contestId": 612, "index": "E", "name": "Square Root of Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "constructive algorithms", "dfs and similar", "graphs", "math"], "solvedCount": 1859}, {"contestId": 612, "index": "D", "name": "The Union of k-Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["greedy", "sortings"], "solvedCount": 4150}, {"contestId": 612, "index": "C", "name": "Replace To Make Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "expression parsing", "math"], "solvedCount": 9128}, {"contestId": 612, "index": "B", "name": "HDD is Outdated Technology", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 7361}, {"contestId": 612, "index": "A", "name": "The Text Splitting", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "implementation", "strings"], "solvedCount": 7645}, {"contestId": 611, "index": "H", "name": "New Year  and Forgotten Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "flows", "graphs"], "solvedCount": 663}, {"contestId": 611, "index": "G", "name": "New Year and Cake", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["geometry", "two pointers"], "solvedCount": 455}, {"contestId": 611, "index": "F", "name": "New Year and Cleaning", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "implementation"], "solvedCount": 498}, {"contestId": 611, "index": "E", "name": "New Year and Three Musketeers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 884}, {"contestId": 611, "index": "D", "name": "New Year and Ancient Prophecy", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "hashing", "strings"], "solvedCount": 2667}, {"contestId": 611, "index": "C", "name": "New Year and Domino", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["dp", "implementation"], "solvedCount": 8718}, {"contestId": 611, "index": "B", "name": "New Year and Old Property", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["bitmasks", "brute force", "implementation"], "solvedCount": 10656}, {"contestId": 611, "index": "A", "name": "New Year and Days", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 11836}, {"contestId": 610, "index": "E", "name": "Alphabet Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "strings"], "solvedCount": 965}, {"contestId": 610, "index": "D", "name": "Vika and Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "geometry", "two pointers"], "solvedCount": 1604}, {"contestId": 610, "index": "C", "name": "Harmony Analysis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 2924}, {"contestId": 610, "index": "B", "name": "Vika and Squares", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7855}, {"contestId": 610, "index": "A", "name": "Pasha and Stick", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["combinatorics", "math"], "solvedCount": 25700}, {"contestId": 609, "index": "F", "name": "Frogs and mosquitoes", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "greedy"], "solvedCount": 1384}, {"contestId": 609, "index": "E", "name": "Minimum spanning tree for each edge", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 9187}, {"contestId": 609, "index": "D", "name": "Gadgets for dollars and pounds", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "greedy", "two pointers"], "solvedCount": 2963}, {"contestId": 609, "index": "C", "name": "Load Balancing", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation", "math"], "solvedCount": 7001}, {"contestId": 609, "index": "B", "name": "The Best Gift", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9662}, {"contestId": 609, "index": "A", "name": "USB Flash Drives", "type": "PROGRAMMING", "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 18495}, {"contestId": 608, "index": "B", "name": "Hamming Distance Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "strings"], "solvedCount": 7249}, {"contestId": 608, "index": "A", "name": "Saitama Destroys Hotel", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 9655}, {"contestId": 607, "index": "E", "name": "Cross Sum", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["binary search", "geometry"], "solvedCount": 288}, {"contestId": 607, "index": "D", "name": "Power Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 623}, {"contestId": 607, "index": "C", "name": "Marbles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["hashing", "strings"], "solvedCount": 820}, {"contestId": 607, "index": "B", "name": "Zuma", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["dp"], "solvedCount": 14310}, {"contestId": 607, "index": "A", "name": "Chain Reaction", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "dp"], "solvedCount": 10196}, {"contestId": 606, "index": "B", "name": "Testing Robots", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 2791}, {"contestId": 606, "index": "A", "name": "Magic Spheres", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 8118}, {"contestId": 605, "index": "E", "name": "Intergalaxy Trips", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["probabilities", "shortest paths"], "solvedCount": 1443}, {"contestId": 605, "index": "D", "name": "Board Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dfs and similar"], "solvedCount": 874}, {"contestId": 605, "index": "C", "name": "Freelancer's Dreams", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["geometry"], "solvedCount": 1169}, {"contestId": 605, "index": "B", "name": "Lazy Student", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "graphs"], "solvedCount": 3676}, {"contestId": 605, "index": "A", "name": "Sorting Railway Cars", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 7381}, {"contestId": 604, "index": "B", "name": "More Cowbell", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "greedy"], "solvedCount": 8806}, {"contestId": 604, "index": "A", "name": "Uncowed Forces", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 9193}, {"contestId": 603, "index": "E", "name": "Pastoral Oddities", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "math", "trees"], "solvedCount": 1454}, {"contestId": 603, "index": "D", "name": "Ruminations on Ruminants", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["geometry", "math"], "solvedCount": 351}, {"contestId": 603, "index": "C", "name": "Lieges of Legendre", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["games", "math"], "solvedCount": 1974}, {"contestId": 603, "index": "B", "name": "Moodular Arithmetic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "dfs and similar", "dsu", "math", "number theory"], "solvedCount": 2633}, {"contestId": 603, "index": "A", "name": "Alternative Thinking", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "greedy", "math"], "solvedCount": 7992}, {"contestId": 602, "index": "B", "name": "Approximating a Constant Range", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "implementation", "two pointers"], "solvedCount": 11474}, {"contestId": 602, "index": "A", "name": "Two Bases", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 8658}, {"contestId": 601, "index": "E", "name": "A Museum Robbery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dp"], "solvedCount": 1002}, {"contestId": 601, "index": "D", "name": "Acyclic Organic Compounds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "hashing", "strings", "trees"], "solvedCount": 1207}, {"contestId": 601, "index": "C", "name": "Kleof\u00e1\u0161 and the n-thlon", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["dp", "math", "probabilities"], "solvedCount": 1376}, {"contestId": 601, "index": "B", "name": "Lipshitz Sequence", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "math"], "solvedCount": 2365}, {"contestId": 601, "index": "A", "name": "The Two Routes", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["graphs", "shortest paths"], "solvedCount": 13150}, {"contestId": 600, "index": "F", "name": "Edge coloring of bipartite graph", "type": "PROGRAMMING", "rating": 2800, "tags": ["graphs"], "solvedCount": 1007}, {"contestId": 600, "index": "E", "name": "Lomsat gelral", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "dsu", "trees"], "solvedCount": 16154}, {"contestId": 600, "index": "D", "name": "Area of Two Circles' Intersection", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry"], "solvedCount": 2533}, {"contestId": 600, "index": "C", "name": "Make Palindrome", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 6693}, {"contestId": 600, "index": "B", "name": "Queries about less or equal elements", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "data structures", "sortings", "two pointers"], "solvedCount": 34661}, {"contestId": 600, "index": "A", "name": "Extract Numbers", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "strings"], "solvedCount": 5600}, {"contestId": 599, "index": "E", "name": "Sandy and Nuts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "dp", "trees"], "solvedCount": 707}, {"contestId": 599, "index": "D", "name": "Spongebob and Squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "math"], "solvedCount": 2640}, {"contestId": 599, "index": "C", "name": "Day at the Beach", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["sortings"], "solvedCount": 4941}, {"contestId": 599, "index": "B", "name": "Spongebob and Joke", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation"], "solvedCount": 4482}, {"contestId": 599, "index": "A", "name": "Patrick and Shopping", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 30342}, {"contestId": 598, "index": "F", "name": "Cut Length", "type": "PROGRAMMING", "rating": 2900, "tags": ["geometry"], "solvedCount": 410}, {"contestId": 598, "index": "E", "name": "Chocolate Bar", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp"], "solvedCount": 5633}, {"contestId": 598, "index": "D", "name": "Igor In the Museum", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 12183}, {"contestId": 598, "index": "C", "name": "Nearest vectors", "type": "PROGRAMMING", "rating": 2300, "tags": ["geometry", "sortings"], "solvedCount": 4985}, {"contestId": 598, "index": "B", "name": "Queries on a String", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation", "strings"], "solvedCount": 11758}, {"contestId": 598, "index": "A", "name": "Tricky Sum", "type": "PROGRAMMING", "rating": 900, "tags": ["math"], "solvedCount": 29463}, {"contestId": 597, "index": "C", "name": "Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp"], "solvedCount": 5911}, {"contestId": 597, "index": "B", "name": "Restaurant", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "greedy", "sortings"], "solvedCount": 5332}, {"contestId": 597, "index": "A", "name": "Divisibility", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math"], "solvedCount": 4721}, {"contestId": 596, "index": "E", "name": "Wilbur and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "graphs", "strings"], "solvedCount": 407}, {"contestId": 596, "index": "D", "name": "Wilbur and Trees", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dp", "math", "probabilities", "sortings"], "solvedCount": 708}, {"contestId": 596, "index": "C", "name": "Wilbur and Points", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["combinatorics", "greedy", "sortings"], "solvedCount": 2271}, {"contestId": 596, "index": "B", "name": "Wilbur and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 10705}, {"contestId": 596, "index": "A", "name": "Wilbur and Swimming Pool", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["geometry", "implementation"], "solvedCount": 7915}, {"contestId": 595, "index": "B", "name": "Pasha and Phone", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "math"], "solvedCount": 3013}, {"contestId": 595, "index": "A", "name": "Vitaly and Night", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 15176}, {"contestId": 594, "index": "E", "name": "Cutting the Line", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["string suffix structures", "strings"], "solvedCount": 170}, {"contestId": 594, "index": "D", "name": "REQ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "number theory"], "solvedCount": 1848}, {"contestId": 594, "index": "C", "name": "Edo and Magnets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "greedy", "implementation", "two pointers"], "solvedCount": 701}, {"contestId": 594, "index": "B", "name": "Max and Bike", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["binary search", "geometry"], "solvedCount": 514}, {"contestId": 594, "index": "A", "name": "Warrior and Archer", "type": "PROGRAMMING", "points": 500.0, "rating": 2300, "tags": ["games"], "solvedCount": 1801}, {"contestId": 593, "index": "E", "name": "Strange Calculation and Cats", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "matrices"], "solvedCount": 662}, {"contestId": 593, "index": "D", "name": "Happy Tree Party", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "graphs", "math", "trees"], "solvedCount": 1316}, {"contestId": 593, "index": "C", "name": "Beautiful Function", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "math"], "solvedCount": 299}, {"contestId": 593, "index": "B", "name": "Anton and Lines", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["geometry", "sortings"], "solvedCount": 4112}, {"contestId": 593, "index": "A", "name": "2Char", "type": "PROGRAMMING", "points": 250.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 5992}, {"contestId": 592, "index": "E", "name": "BCPC", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["binary search", "geometry", "two pointers"], "solvedCount": 230}, {"contestId": 592, "index": "D", "name": "Super M", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 2798}, {"contestId": 592, "index": "C", "name": "The Big Race", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["math"], "solvedCount": 3143}, {"contestId": 592, "index": "B", "name": "The Monster and the Squirrel", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["math"], "solvedCount": 8728}, {"contestId": 592, "index": "A", "name": "PawnChess", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 6443}, {"contestId": 591, "index": "B", "name": "Rebranding", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "strings"], "solvedCount": 8423}, {"contestId": 591, "index": "A", "name": "Wizards' Duel", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 15483}, {"contestId": 590, "index": "E", "name": "Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["graph matchings", "strings"], "solvedCount": 825}, {"contestId": 590, "index": "D", "name": "Top Secret Task", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp"], "solvedCount": 1270}, {"contestId": 590, "index": "C", "name": "Three States", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 3154}, {"contestId": 590, "index": "B", "name": "Chip 'n Dale Rescue Rangers", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "geometry", "math"], "solvedCount": 1956}, {"contestId": 590, "index": "A", "name": "Median Smoothing", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 4215}, {"contestId": 588, "index": "B", "name": "Duff in Love", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math"], "solvedCount": 14625}, {"contestId": 588, "index": "A", "name": "Duff and Meat", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["greedy"], "solvedCount": 23644}, {"contestId": 587, "index": "F", "name": "Duff is Mad", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["data structures", "strings"], "solvedCount": 1177}, {"contestId": 587, "index": "E", "name": "Duff as a Queen", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 774}, {"contestId": 587, "index": "D", "name": "Duff in Mafia", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["2-sat", "binary search"], "solvedCount": 818}, {"contestId": 587, "index": "C", "name": "Duff in the Army", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "trees"], "solvedCount": 4382}, {"contestId": 587, "index": "B", "name": "Duff in Beach", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp"], "solvedCount": 1448}, {"contestId": 587, "index": "A", "name": "Duff and Weight Lifting", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy"], "solvedCount": 7987}, {"contestId": 586, "index": "B", "name": "Laurenty and Shop", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 5196}, {"contestId": 586, "index": "A", "name": "Alena's Schedule", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 10387}, {"contestId": 585, "index": "F", "name": "Digits of Number Pi", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "implementation", "strings"], "solvedCount": 729}, {"contestId": 585, "index": "E", "name": "Present for Vitalik the Philatelist ", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 1160}, {"contestId": 585, "index": "D", "name": "Lizard Era: Beginning", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["meet-in-the-middle"], "solvedCount": 1934}, {"contestId": 585, "index": "C", "name": "Alice, Bob, Oranges and Apples", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["number theory"], "solvedCount": 1021}, {"contestId": 585, "index": "B", "name": "Phillip and Trains", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 3691}, {"contestId": 585, "index": "A", "name": "Gennady the Dentist", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["brute force", "implementation"], "solvedCount": 4417}, {"contestId": 584, "index": "E", "name": "Anton and Ira", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1454}, {"contestId": 584, "index": "D", "name": "Dima and Lisa", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "math", "number theory"], "solvedCount": 10506}, {"contestId": 584, "index": "C", "name": "Marina and Vasya", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 6376}, {"contestId": 584, "index": "B", "name": "Kolya and Tanya ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics"], "solvedCount": 12918}, {"contestId": 584, "index": "A", "name": "Olesya and Rodion", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"], "solvedCount": 49434}, {"contestId": 583, "index": "B", "name": "Robot's Task", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 8866}, {"contestId": 583, "index": "A", "name": "Asphalting Roads", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 11591}, {"contestId": 582, "index": "E", "name": "Boolean Function", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["bitmasks", "dp", "expression parsing"], "solvedCount": 518}, {"contestId": 582, "index": "D", "name": "Number of Binominal Coefficients", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["dp", "math", "number theory"], "solvedCount": 711}, {"contestId": 582, "index": "C", "name": "Superior Periodic Subarrays", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["number theory"], "solvedCount": 772}, {"contestId": 582, "index": "B", "name": "Once Again...", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dp", "matrices"], "solvedCount": 3531}, {"contestId": 582, "index": "A", "name": "GCD Table", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 8100}, {"contestId": 581, "index": "F", "name": "Zublicanes and Mumocrates", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "trees", "two pointers"], "solvedCount": 938}, {"contestId": 581, "index": "E", "name": "Kojiro and Furrari", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dp", "greedy"], "solvedCount": 215}, {"contestId": 581, "index": "D", "name": "Three Logos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["bitmasks", "brute force", "constructive algorithms", "geometry", "implementation", "math"], "solvedCount": 4240}, {"contestId": 581, "index": "C", "name": "Developing Skills", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["implementation", "math", "sortings"], "solvedCount": 7443}, {"contestId": 581, "index": "B", "name": "Luxurious Houses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 13389}, {"contestId": 581, "index": "A", "name": "Vasya the Hipster", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 78734}, {"contestId": 580, "index": "E", "name": "Kefa and Watch", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "hashing", "strings"], "solvedCount": 2346}, {"contestId": 580, "index": "D", "name": "Kefa and Dishes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["bitmasks", "dp"], "solvedCount": 10901}, {"contestId": 580, "index": "C", "name": "Kefa and Park", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 49766}, {"contestId": 580, "index": "B", "name": "Kefa and Company", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["binary search", "sortings", "two pointers"], "solvedCount": 29501}, {"contestId": 580, "index": "A", "name": "Kefa and First Steps", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["brute force", "dp", "implementation"], "solvedCount": 96934}, {"contestId": 579, "index": "B", "name": "Finding Team Member", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation", "sortings"], "solvedCount": 5350}, {"contestId": 579, "index": "A", "name": "Raising Bacteria", "type": "PROGRAMMING", "points": 250.0, "rating": 1000, "tags": ["bitmasks"], "solvedCount": 70497}, {"contestId": 578, "index": "F", "name": "Mirror Box", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["matrices", "trees"], "solvedCount": 583}, {"contestId": 578, "index": "E", "name": "Walking!", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "greedy"], "solvedCount": 663}, {"contestId": 578, "index": "D", "name": "LCS Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "greedy"], "solvedCount": 934}, {"contestId": 578, "index": "C", "name": "Weakness and Poorness", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["ternary search"], "solvedCount": 4860}, {"contestId": 578, "index": "B", "name": "\"Or\" Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "greedy"], "solvedCount": 5355}, {"contestId": 578, "index": "A", "name": "A Problem about Polyline", "type": "PROGRAMMING", "points": 250.0, "rating": 1700, "tags": ["geometry", "math"], "solvedCount": 4869}, {"contestId": 577, "index": "B", "name": "Modulo Sum", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["combinatorics", "data structures", "dp", "two pointers"], "solvedCount": 13485}, {"contestId": 577, "index": "A", "name": "Multiplication Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "number theory"], "solvedCount": 43102}, {"contestId": 576, "index": "E", "name": "Painting Edges", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["binary search", "data structures"], "solvedCount": 1383}, {"contestId": 576, "index": "D", "name": "Flights for Regular Customers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "matrices"], "solvedCount": 1509}, {"contestId": 576, "index": "C", "name": "Points on Plane", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "divide and conquer", "geometry", "greedy", "sortings"], "solvedCount": 3818}, {"contestId": 576, "index": "B", "name": "Invariance of Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1858}, {"contestId": 576, "index": "A", "name": "Vasya and Petya's Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["math", "number theory"], "solvedCount": 15218}, {"contestId": 575, "index": "I", "name": "Robots protection", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"], "solvedCount": 523}, {"contestId": 575, "index": "H", "name": "Bots", "type": "PROGRAMMING", "rating": 1800, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 1769}, {"contestId": 575, "index": "G", "name": "Run for beer", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "shortest paths"], "solvedCount": 948}, {"contestId": 575, "index": "F", "name": "Bulbo", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "greedy"], "solvedCount": 1069}, {"contestId": 575, "index": "E", "name": "Spectator Riots", "type": "PROGRAMMING", "rating": 2800, "tags": ["geometry"], "solvedCount": 297}, {"contestId": 575, "index": "D", "name": "Tablecity", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1942}, {"contestId": 575, "index": "C", "name": "Party", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "graph matchings"], "solvedCount": 230}, {"contestId": 575, "index": "B", "name": "Bribes", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 1165}, {"contestId": 575, "index": "A", "name": "Fibonotci", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "math", "matrices"], "solvedCount": 830}, {"contestId": 574, "index": "B", "name": "Bear and Three Musketeers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "graphs", "hashing"], "solvedCount": 8105}, {"contestId": 574, "index": "A", "name": "Bear and Elections", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 9354}, {"contestId": 573, "index": "E", "name": "Bear and Bowling", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "greedy"], "solvedCount": 1883}, {"contestId": 573, "index": "D", "name": "Bear and Cavalry", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 635}, {"contestId": 573, "index": "C", "name": "Bear and Drawing", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 1009}, {"contestId": 573, "index": "B", "name": "Bear and Blocks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "data structures", "dp", "math"], "solvedCount": 6124}, {"contestId": 573, "index": "A", "name": "Bear and Poker", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "math", "number theory"], "solvedCount": 17452}, {"contestId": 572, "index": "B", "name": "Order Book", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 7581}, {"contestId": 572, "index": "A", "name": "Arrays", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["sortings"], "solvedCount": 17227}, {"contestId": 571, "index": "E", "name": "Geometric Progressions", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["math"], "solvedCount": 281}, {"contestId": 571, "index": "D", "name": "Campus", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["binary search", "data structures", "dsu", "trees"], "solvedCount": 739}, {"contestId": 571, "index": "C", "name": "CNF 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 687}, {"contestId": 571, "index": "B", "name": "Minimization", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["dp", "greedy", "sortings"], "solvedCount": 2748}, {"contestId": 571, "index": "A", "name": "Lengthening Sticks", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["combinatorics", "implementation", "math"], "solvedCount": 2568}, {"contestId": 570, "index": "E", "name": "Pig and Palindromes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "dp"], "solvedCount": 2003}, {"contestId": 570, "index": "D", "name": "Tree Requests", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 8096}, {"contestId": 570, "index": "C", "name": "Replacement", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 9417}, {"contestId": 570, "index": "B", "name": "Simple Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "games", "greedy", "implementation", "math"], "solvedCount": 16542}, {"contestId": 570, "index": "A", "name": "Elections", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 14094}, {"contestId": 569, "index": "B", "name": "Inventory", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "math"], "solvedCount": 7276}, {"contestId": 569, "index": "A", "name": "Music", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation", "math"], "solvedCount": 4978}, {"contestId": 568, "index": "E", "name": "Longest Increasing Subsequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp"], "solvedCount": 617}, {"contestId": 568, "index": "D", "name": "Sign Posts", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "geometry", "math"], "solvedCount": 312}, {"contestId": 568, "index": "C", "name": "New Language", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["2-sat", "greedy"], "solvedCount": 910}, {"contestId": 568, "index": "B", "name": "Symmetric and Transitive", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp", "math"], "solvedCount": 2306}, {"contestId": 568, "index": "A", "name": "Primes or Palindromes?", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 5225}, {"contestId": 567, "index": "F", "name": "Mausoleum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"], "solvedCount": 623}, {"contestId": 567, "index": "E", "name": "President and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "hashing", "shortest paths"], "solvedCount": 2039}, {"contestId": 567, "index": "D", "name": "One-Dimensional Battle Ships", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 5058}, {"contestId": 567, "index": "C", "name": "Geometric Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "data structures", "dp"], "solvedCount": 9969}, {"contestId": 567, "index": "B", "name": "Berland National Library", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 8588}, {"contestId": 567, "index": "A", "name": "Lineland Mail", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 34500}, {"contestId": 566, "index": "G", "name": "Max and Min", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry"], "solvedCount": 345}, {"contestId": 566, "index": "F", "name": "Clique in the Divisibility Graph", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp", "math", "number theory"], "solvedCount": 4046}, {"contestId": 566, "index": "E", "name": "Restoring Map", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["bitmasks", "constructive algorithms", "trees"], "solvedCount": 663}, {"contestId": 566, "index": "D", "name": "Restructuring Company", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dsu"], "solvedCount": 3607}, {"contestId": 566, "index": "C", "name": "Logistical Questions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "divide and conquer", "trees"], "solvedCount": 824}, {"contestId": 566, "index": "B", "name": "Replicating Processes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 289}, {"contestId": 566, "index": "A", "name": "Matching Names", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dfs and similar", "strings", "trees"], "solvedCount": 989}, {"contestId": 560, "index": "B", "name": "Gerald is into Art", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 8107}, {"contestId": 560, "index": "A", "name": "Currency System in Geraldion", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "sortings"], "solvedCount": 18197}, {"contestId": 559, "index": "E", "name": "Gerald and Path", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["dp", "sortings"], "solvedCount": 1052}, {"contestId": 559, "index": "D", "name": "Randomizer", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["combinatorics", "geometry", "probabilities"], "solvedCount": 463}, {"contestId": 559, "index": "C", "name": "Gerald and Giant Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 7281}, {"contestId": 559, "index": "B", "name": "Equivalent Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["divide and conquer", "hashing", "sortings", "strings"], "solvedCount": 11263}, {"contestId": 559, "index": "A", "name": "Gerald's Hexagon", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "geometry", "math"], "solvedCount": 10678}, {"contestId": 558, "index": "E", "name": "A Simple Task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "sortings", "strings"], "solvedCount": 6824}, {"contestId": 558, "index": "D", "name": "Guess Your Way Out! II", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 1177}, {"contestId": 558, "index": "C", "name": "Amr and Chemistry", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "graphs", "greedy", "math", "shortest paths"], "solvedCount": 4085}, {"contestId": 558, "index": "B", "name": "Amr and The Large Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 8021}, {"contestId": 558, "index": "A", "name": "Lala Land and Apple Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation", "sortings"], "solvedCount": 10730}, {"contestId": 557, "index": "E", "name": "Ann and Half-Palindrome", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "string suffix structures", "strings", "trees"], "solvedCount": 1170}, {"contestId": 557, "index": "D", "name": "Vitaly and Cycle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["combinatorics", "dfs and similar", "graphs", "math"], "solvedCount": 2287}, {"contestId": 557, "index": "C", "name": "Arthur and Table", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings"], "solvedCount": 4127}, {"contestId": 557, "index": "B", "name": "Pasha and Tea", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "math", "sortings"], "solvedCount": 7320}, {"contestId": 557, "index": "A", "name": "Ilya and Diplomas", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation", "math"], "solvedCount": 8376}, {"contestId": 556, "index": "B", "name": "Case of Fake Numbers", "type": "PROGRAMMING", "points": 250.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 8038}, {"contestId": 556, "index": "A", "name": "Case of the Zeros and Ones", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["greedy"], "solvedCount": 43661}, {"contestId": 555, "index": "E", "name": "Case of Computer Network", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 2636}, {"contestId": 555, "index": "D", "name": "Case of a Top Secret", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "implementation", "math"], "solvedCount": 902}, {"contestId": 555, "index": "C", "name": "Case of Chocolate", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 2003}, {"contestId": 555, "index": "B", "name": "Case of Fugitive", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 3940}, {"contestId": 555, "index": "A", "name": "Case of Matryoshkas", "type": "PROGRAMMING", "points": 250.0, "rating": 1500, "tags": ["implementation"], "solvedCount": 6606}, {"contestId": 554, "index": "B", "name": "Ohana Cleans Up", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "strings"], "solvedCount": 10337}, {"contestId": 554, "index": "A", "name": "Kyoya and Photobooks", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["brute force", "math", "strings"], "solvedCount": 14037}, {"contestId": 553, "index": "E", "name": "Kyoya and Train", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "fft", "graphs", "math", "probabilities"], "solvedCount": 590}, {"contestId": 553, "index": "D", "name": "Nudist Beach", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "graphs", "greedy"], "solvedCount": 1035}, {"contestId": 553, "index": "C", "name": "Love Triangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 1869}, {"contestId": 553, "index": "B", "name": "Kyoya and Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["binary search", "combinatorics", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 2196}, {"contestId": 553, "index": "A", "name": "Kyoya and Colored Balls", "type": "PROGRAMMING", "points": 250.0, "rating": 1500, "tags": ["combinatorics", "dp", "math"], "solvedCount": 9199}, {"contestId": 552, "index": "E", "name": "Vanya and Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "dp", "expression parsing", "greedy", "implementation", "strings"], "solvedCount": 1674}, {"contestId": 552, "index": "D", "name": "Vanya and Triangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "combinatorics", "data structures", "geometry", "math", "sortings"], "solvedCount": 4653}, {"contestId": 552, "index": "C", "name": "Vanya and Scales", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp", "greedy", "math", "meet-in-the-middle", "number theory"], "solvedCount": 5623}, {"contestId": 552, "index": "B", "name": "Vanya and Books", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 15784}, {"contestId": 552, "index": "A", "name": "Vanya and Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 9914}, {"contestId": 551, "index": "E", "name": "GukiZ and GukiZiana", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 2039}, {"contestId": 551, "index": "D", "name": "GukiZ and Binary Operations", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "implementation", "math", "matrices", "number theory"], "solvedCount": 2044}, {"contestId": 551, "index": "C", "name": "GukiZ hates Boxes", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "greedy"], "solvedCount": 3804}, {"contestId": 551, "index": "B", "name": "ZgukistringZ", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation", "strings"], "solvedCount": 3942}, {"contestId": 551, "index": "A", "name": "GukiZ and Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "sortings"], "solvedCount": 17122}, {"contestId": 550, "index": "E", "name": "Brackets in Implications", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 1414}, {"contestId": 550, "index": "D", "name": "Regular Bridge", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 3588}, {"contestId": 550, "index": "C", "name": "Divisibility by Eight", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp", "math"], "solvedCount": 30749}, {"contestId": 550, "index": "B", "name": "Preparing Olympiad", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["bitmasks", "brute force"], "solvedCount": 24556}, {"contestId": 550, "index": "A", "name": "Two Substrings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dp", "greedy", "implementation", "strings"], "solvedCount": 41096}, {"contestId": 549, "index": "H", "name": "Degenerate Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["binary search", "math"], "solvedCount": 2037}, {"contestId": 549, "index": "G", "name": "Happy Line", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 2563}, {"contestId": 549, "index": "F", "name": "Yura and Developers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 972}, {"contestId": 549, "index": "E", "name": "Sasha Circle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["geometry", "math"], "solvedCount": 170}, {"contestId": 549, "index": "D", "name": "Haar Features", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy", "implementation"], "solvedCount": 2169}, {"contestId": 549, "index": "C", "name": "The Game Of Parity", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["games"], "solvedCount": 1781}, {"contestId": 549, "index": "B", "name": "Looksery Party", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 1519}, {"contestId": 549, "index": "A", "name": "Face Detection", "type": "PROGRAMMING", "points": 250.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 9919}, {"contestId": 548, "index": "B", "name": "Mike and Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dp", "greedy", "implementation"], "solvedCount": 8756}, {"contestId": 548, "index": "A", "name": "Mike and Fax", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation", "strings"], "solvedCount": 10195}, {"contestId": 547, "index": "E", "name": "Mike and Friends", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 2321}, {"contestId": 547, "index": "D", "name": "Mike and Fish", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 2874}, {"contestId": 547, "index": "C", "name": "Mike and Foam", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"], "solvedCount": 3139}, {"contestId": 547, "index": "B", "name": "Mike and Feet", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "dsu"], "solvedCount": 9815}, {"contestId": 547, "index": "A", "name": "Mike and Frog", "type": "PROGRAMMING", "points": 750.0, "rating": 2200, "tags": ["brute force", "greedy", "implementation", "math"], "solvedCount": 2678}, {"contestId": 546, "index": "E", "name": "Soldier and Traveling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["flows", "graphs", "math"], "solvedCount": 4115}, {"contestId": 546, "index": "D", "name": "Soldier and Number Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dp", "math", "number theory"], "solvedCount": 12880}, {"contestId": 546, "index": "C", "name": "Soldier and Cards", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "dfs and similar", "games"], "solvedCount": 18660}, {"contestId": 546, "index": "B", "name": "Soldier and Badges", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation", "sortings"], "solvedCount": 18214}, {"contestId": 546, "index": "A", "name": "Soldier and Bananas", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "math"], "solvedCount": 211628}, {"contestId": 545, "index": "E", "name": "Paths and Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 5147}, {"contestId": 545, "index": "D", "name": "Queue", "type": "PROGRAMMING", "points": 1750.0, "rating": 1300, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 27105}, {"contestId": 545, "index": "C", "name": "Woodcutters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["dp", "greedy"], "solvedCount": 30602}, {"contestId": 545, "index": "B", "name": "Equidistant String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 11959}, {"contestId": 545, "index": "A", "name": "Toy Cars", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 11870}, {"contestId": 544, "index": "B", "name": "Sea and Islands", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 8368}, {"contestId": 544, "index": "A", "name": "Set of Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 8584}, {"contestId": 543, "index": "E", "name": "Listening to Music", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "data structures"], "solvedCount": 319}, {"contestId": 543, "index": "D", "name": "Road Improvement", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp", "trees"], "solvedCount": 3013}, {"contestId": 543, "index": "C", "name": "Remembering Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "dp"], "solvedCount": 1514}, {"contestId": 543, "index": "B", "name": "Destroying Roads", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 4413}, {"contestId": 543, "index": "A", "name": "Writing Code", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp"], "solvedCount": 8428}, {"contestId": 542, "index": "F", "name": "Quest", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp", "greedy"], "solvedCount": 967}, {"contestId": 542, "index": "E", "name": "Playing on Graph", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["graphs", "shortest paths"], "solvedCount": 917}, {"contestId": 542, "index": "D", "name": "Superhero's Job", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["dfs and similar", "dp", "hashing", "math", "number theory"], "solvedCount": 533}, {"contestId": 542, "index": "C", "name": "Idempotent functions", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 1205}, {"contestId": 542, "index": "B", "name": "Duck Hunt", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 220}, {"contestId": 542, "index": "A", "name": "Place Your Ad Here", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "sortings"], "solvedCount": 596}, {"contestId": 540, "index": "E", "name": "Infinite Inversions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "implementation", "sortings", "trees"], "solvedCount": 2301}, {"contestId": 540, "index": "D", "name": "Bad Luck Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "probabilities"], "solvedCount": 6028}, {"contestId": 540, "index": "C", "name": "Ice Cave", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar"], "solvedCount": 7846}, {"contestId": 540, "index": "B", "name": "School Marks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["greedy", "implementation"], "solvedCount": 4839}, {"contestId": 540, "index": "A", "name": "Combination Lock", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 34179}, {"contestId": 538, "index": "H", "name": "Summer Dichotomy", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["2-sat", "data structures", "dfs and similar", "greedy"], "solvedCount": 714}, {"contestId": 538, "index": "G", "name": "Berserk Robot ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "math", "sortings"], "solvedCount": 561}, {"contestId": 538, "index": "F", "name": "A Heap of Heaps", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "data structures", "math", "sortings"], "solvedCount": 1809}, {"contestId": 538, "index": "E", "name": "Demiurges Play Again", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "math", "trees"], "solvedCount": 1586}, {"contestId": 538, "index": "D", "name": "Weird Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 2494}, {"contestId": 538, "index": "C", "name": "Tourist's Notes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force", "greedy", "implementation", "math"], "solvedCount": 6012}, {"contestId": 538, "index": "B", "name": "Quasi Binary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "dp", "greedy", "implementation"], "solvedCount": 18841}, {"contestId": 538, "index": "A", "name": "Cutting Banner", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "implementation"], "solvedCount": 7253}, {"contestId": 536, "index": "E", "name": "Tavas on the Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 425}, {"contestId": 536, "index": "D", "name": "Tavas in Kansas", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "games"], "solvedCount": 766}, {"contestId": 535, "index": "E", "name": "Tavas and Pashmaks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry", "math"], "solvedCount": 834}, {"contestId": 535, "index": "D", "name": "Tavas and Malekas", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy", "hashing", "string suffix structures", "strings"], "solvedCount": 4411}, {"contestId": 535, "index": "C", "name": "Tavas and Karafs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "greedy", "math"], "solvedCount": 3866}, {"contestId": 535, "index": "B", "name": "Tavas and SaDDas", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "brute force", "combinatorics", "implementation"], "solvedCount": 24308}, {"contestId": 535, "index": "A", "name": "Tavas and Nafas", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 12650}, {"contestId": 534, "index": "F", "name": "Simplified Nonogram", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["bitmasks", "dp", "hashing", "meet-in-the-middle"], "solvedCount": 506}, {"contestId": 534, "index": "E", "name": "Berland Local Positioning System", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "hashing", "implementation"], "solvedCount": 379}, {"contestId": 534, "index": "D", "name": "Handshakes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 2512}, {"contestId": 534, "index": "C", "name": "Polycarpus' Dice", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"], "solvedCount": 5160}, {"contestId": 534, "index": "B", "name": "Covered Path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "greedy", "math"], "solvedCount": 10906}, {"contestId": 534, "index": "A", "name": "Exam", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 12708}, {"contestId": 533, "index": "F", "name": "Encoding", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["hashing", "string suffix structures", "strings"], "solvedCount": 936}, {"contestId": 533, "index": "E", "name": "Correcting Mistakes", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy", "hashing", "strings", "two pointers"], "solvedCount": 2358}, {"contestId": 533, "index": "D", "name": "Landmarks", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dp"], "solvedCount": 247}, {"contestId": 533, "index": "C", "name": "Board Game", "type": "PROGRAMMING", "points": 250.0, "rating": 1700, "tags": ["games", "greedy", "implementation", "math"], "solvedCount": 2304}, {"contestId": 533, "index": "B", "name": "Work Group", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "graphs", "strings", "trees"], "solvedCount": 2546}, {"contestId": 533, "index": "A", "name": "Berland Miners", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 432}, {"contestId": 530, "index": "I", "name": "Different variables", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special"], "solvedCount": 49}, {"contestId": 530, "index": "H", "name": "Points in triangle", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "geometry"], "solvedCount": 125}, {"contestId": 530, "index": "G", "name": "Levenshtein distance", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"], "solvedCount": 403}, {"contestId": 530, "index": "F", "name": "Jumping frogs", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"], "solvedCount": 110}, {"contestId": 530, "index": "E", "name": "Sum and product", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 312}, {"contestId": 530, "index": "D", "name": "Set subtraction", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 458}, {"contestId": 530, "index": "C", "name": "Diophantine equation", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"], "solvedCount": 586}, {"contestId": 530, "index": "B", "name": "String inside out", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 547}, {"contestId": 530, "index": "A", "name": "Quadratic equation", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"], "solvedCount": 686}, {"contestId": 529, "index": "B", "name": "Group Photo 2 (online mirror version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["brute force", "greedy", "sortings"], "solvedCount": 934}, {"contestId": 528, "index": "E", "name": "Triangles 3000", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["geometry", "sortings"], "solvedCount": 223}, {"contestId": 528, "index": "D", "name": "Fuzzy Search", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["bitmasks", "brute force", "fft"], "solvedCount": 2581}, {"contestId": 527, "index": "E", "name": "Data Center Drama", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dfs and similar", "graphs"], "solvedCount": 2096}, {"contestId": 527, "index": "D", "name": "Clique Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 4932}, {"contestId": 527, "index": "C", "name": "Glass Carving", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 7293}, {"contestId": 527, "index": "B", "name": "Error Correct System", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy"], "solvedCount": 3989}, {"contestId": 527, "index": "A", "name": "Playing with Paper", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 15190}, {"contestId": 526, "index": "G", "name": "Spiders Evil Plan", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["greedy", "trees"], "solvedCount": 812}, {"contestId": 526, "index": "F", "name": "Pudding Monsters", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer"], "solvedCount": 3030}, {"contestId": 526, "index": "E", "name": "Transmitting Levels", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["dp", "implementation"], "solvedCount": 1164}, {"contestId": 526, "index": "D", "name": "Om Nom and Necklace", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["hashing", "string suffix structures", "strings"], "solvedCount": 2268}, {"contestId": 526, "index": "C", "name": "Om Nom and Candies", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "greedy", "math"], "solvedCount": 2575}, {"contestId": 526, "index": "B", "name": "Om Nom and Dark Park", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "greedy", "implementation"], "solvedCount": 4568}, {"contestId": 526, "index": "A", "name": "King of Thieves", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 4885}, {"contestId": 525, "index": "E", "name": "Anya and Cubes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "dp", "math", "meet-in-the-middle"], "solvedCount": 3786}, {"contestId": 525, "index": "D", "name": "Arthur and Walls", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "shortest paths"], "solvedCount": 1912}, {"contestId": 525, "index": "C", "name": "Ilya and Sticks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "math", "sortings"], "solvedCount": 5933}, {"contestId": 525, "index": "B", "name": "Pasha and String", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "solvedCount": 9833}, {"contestId": 525, "index": "A", "name": "Vitaliy and Pie", "type": "PROGRAMMING", "points": 250.0, "rating": 1100, "tags": ["greedy", "hashing", "strings"], "solvedCount": 15722}, {"contestId": 524, "index": "F", "name": "And Yet Another Bracket Sequence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures", "greedy", "hashing", "string suffix structures", "strings"], "solvedCount": 560}, {"contestId": 524, "index": "E", "name": "Rooks and Rectangles", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["data structures", "sortings"], "solvedCount": 1266}, {"contestId": 524, "index": "D", "name": "Social Network", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["greedy", "two pointers"], "solvedCount": 967}, {"contestId": 524, "index": "C", "name": "The Art of Dealing with ATM", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "sortings"], "solvedCount": 2102}, {"contestId": 524, "index": "B", "name": "\u0424\u043e\u0442\u043e \u043d\u0430 \u043f\u0430\u043c\u044f\u0442\u044c - 2 (round version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dp", "greedy"], "solvedCount": 1488}, {"contestId": 524, "index": "A", "name": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u044d\u0442\u0438\u0445 \u043b\u044e\u0434\u0435\u0439?", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 1428}, {"contestId": 523, "index": "D", "name": "Statistics of Recompressing Videos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "data structures", "implementation"], "solvedCount": 2443}, {"contestId": 523, "index": "C", "name": "Name Quest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "greedy"], "solvedCount": 2530}, {"contestId": 523, "index": "B", "name": "Mean Requests", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["*special", "implementation"], "solvedCount": 963}, {"contestId": 523, "index": "A", "name": "Rotate, Flip and Zoom", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["*special", "implementation"], "solvedCount": 2758}, {"contestId": 522, "index": "D", "name": "Closest Equals", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["*special", "data structures"], "solvedCount": 3563}, {"contestId": 522, "index": "C", "name": "Chicken or Fish?", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["greedy"], "solvedCount": 728}, {"contestId": 522, "index": "B", "name": "Photo to Remember", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["*special", "data structures", "dp", "implementation"], "solvedCount": 9218}, {"contestId": 522, "index": "A", "name": "Reposts", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["*special", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 17727}, {"contestId": 521, "index": "E", "name": "Cycling City", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dfs and similar", "graphs"], "solvedCount": 1131}, {"contestId": 521, "index": "D", "name": "Shop", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["greedy"], "solvedCount": 1754}, {"contestId": 520, "index": "E", "name": "Pluses everywhere", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["combinatorics", "dp", "math", "number theory"], "solvedCount": 1954}, {"contestId": 520, "index": "D", "name": "Cubes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["games", "greedy", "implementation"], "solvedCount": 1615}, {"contestId": 520, "index": "C", "name": "DNA Alignment", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["math", "strings"], "solvedCount": 4252}, {"contestId": 520, "index": "B", "name": "Two Buttons", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "graphs", "greedy", "implementation", "math", "shortest paths"], "solvedCount": 56803}, {"contestId": 520, "index": "A", "name": "Pangram", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 112942}, {"contestId": 519, "index": "E", "name": "A and B and Lecture Rooms", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "dp", "trees"], "solvedCount": 7694}, {"contestId": 519, "index": "D", "name": "A and B and Interesting Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "two pointers"], "solvedCount": 6672}, {"contestId": 519, "index": "C", "name": "A and B and Team Training", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy", "implementation", "math", "number theory"], "solvedCount": 20309}, {"contestId": 519, "index": "B", "name": "A and B and Compilation Errors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 41858}, {"contestId": 519, "index": "A", "name": "A and B and Chess", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 19663}, {"contestId": 518, "index": "F", "name": "Pasha and Pipe", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "combinatorics", "dp", "implementation"], "solvedCount": 399}, {"contestId": 518, "index": "E", "name": "Arthur and Questions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["greedy", "implementation", "math", "ternary search"], "solvedCount": 1017}, {"contestId": 518, "index": "D", "name": "Ilya and Escalator", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 7628}, {"contestId": 518, "index": "C", "name": "Anya and Smartphone", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 6195}, {"contestId": 518, "index": "B", "name": "Tanya and Postcard", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation", "strings"], "solvedCount": 8229}, {"contestId": 518, "index": "A", "name": "Vitaly and Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "strings"], "solvedCount": 9426}, {"contestId": 516, "index": "E", "name": "Drazil and His Happy Friends", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["math", "number theory"], "solvedCount": 543}, {"contestId": 516, "index": "D", "name": "Drazil and Morning Exercise", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "dp", "dsu", "trees", "two pointers"], "solvedCount": 1396}, {"contestId": 515, "index": "E", "name": "Drazil and Park", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["data structures"], "solvedCount": 2272}, {"contestId": 515, "index": "D", "name": "Drazil and Tiles", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 2943}, {"contestId": 515, "index": "C", "name": "Drazil and Factorial", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "math", "sortings"], "solvedCount": 27676}, {"contestId": 515, "index": "B", "name": "Drazil and His Happy Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dsu", "meet-in-the-middle", "number theory"], "solvedCount": 7646}, {"contestId": 515, "index": "A", "name": "Drazil and Date", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"], "solvedCount": 21268}, {"contestId": 514, "index": "E", "name": "Darth Vader and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "matrices"], "solvedCount": 1582}, {"contestId": 514, "index": "D", "name": "R2D2 and Droid Army", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 4904}, {"contestId": 514, "index": "C", "name": "Watto and Mechanism", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "solvedCount": 7544}, {"contestId": 514, "index": "B", "name": "Han Solo and Lazer Gun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "data structures", "geometry", "implementation", "math"], "solvedCount": 21843}, {"contestId": 514, "index": "A", "name": "Chewba\u0441ca and Number", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 63293}, {"contestId": 513, "index": "G3", "name": "Inversions problem", "type": "PROGRAMMING", "points": 16.0, "rating": 3100, "tags": ["dp"], "solvedCount": 274}, {"contestId": 513, "index": "G2", "name": "Inversions problem", "type": "PROGRAMMING", "points": 5.0, "rating": 2400, "tags": ["dp", "probabilities"], "solvedCount": 684}, {"contestId": 513, "index": "G1", "name": "Inversions problem", "type": "PROGRAMMING", "points": 3.0, "rating": 1800, "tags": ["brute force", "dfs and similar", "dp", "meet-in-the-middle"], "solvedCount": 1818}, {"contestId": 513, "index": "F2", "name": "Scaygerboss", "type": "PROGRAMMING", "points": 6.0, "rating": 2800, "tags": ["flows"], "solvedCount": 394}, {"contestId": 513, "index": "F1", "name": "Scaygerboss", "type": "PROGRAMMING", "points": 14.0, "rating": 2700, "tags": ["flows"], "solvedCount": 345}, {"contestId": 513, "index": "E2", "name": "Subarray Cuts", "type": "PROGRAMMING", "points": 12.0, "rating": 2700, "tags": ["dp"], "solvedCount": 630}, {"contestId": 513, "index": "E1", "name": "Subarray Cuts", "type": "PROGRAMMING", "points": 9.0, "rating": 2600, "tags": ["dp"], "solvedCount": 528}, {"contestId": 513, "index": "D2", "name": "Constrained Tree", "type": "PROGRAMMING", "points": 8.0, "rating": 2600, "tags": ["constructive algorithms", "data structures"], "solvedCount": 389}, {"contestId": 513, "index": "D1", "name": "Constrained Tree", "type": "PROGRAMMING", "points": 9.0, "rating": 2400, "tags": ["dfs and similar"], "solvedCount": 634}, {"contestId": 513, "index": "C", "name": "Second price auction", "type": "PROGRAMMING", "points": 8.0, "rating": 2000, "tags": ["bitmasks", "probabilities"], "solvedCount": 1594}, {"contestId": 513, "index": "B2", "name": "Permutations", "type": "PROGRAMMING", "points": 4.0, "rating": 1800, "tags": ["bitmasks", "divide and conquer", "math"], "solvedCount": 2879}, {"contestId": 513, "index": "B1", "name": "Permutations", "type": "PROGRAMMING", "points": 3.0, "rating": 1400, "tags": ["brute force"], "solvedCount": 3786}, {"contestId": 513, "index": "A", "name": "Game", "type": "PROGRAMMING", "points": 3.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 21173}, {"contestId": 512, "index": "E", "name": "Fox And Polygon", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 543}, {"contestId": 512, "index": "D", "name": "Fox And Travelling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp", "trees"], "solvedCount": 1079}, {"contestId": 510, "index": "E", "name": "Fox And Dinner", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["flows"], "solvedCount": 2317}, {"contestId": 510, "index": "D", "name": "Fox And Jumping", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dp", "math"], "solvedCount": 5989}, {"contestId": 510, "index": "C", "name": "Fox And Names", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "sortings"], "solvedCount": 19790}, {"contestId": 510, "index": "B", "name": "Fox And Two Dots", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar"], "solvedCount": 15210}, {"contestId": 510, "index": "A", "name": "Fox And Snake", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 95977}, {"contestId": 509, "index": "F", "name": "Progress Monitoring", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "trees"], "solvedCount": 1118}, {"contestId": 509, "index": "E", "name": "Pretty Song", "type": "PROGRAMMING", "rating": 2000, "tags": ["math", "strings"], "solvedCount": 1839}, {"contestId": 509, "index": "D", "name": "Restoring Numbers", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "math"], "solvedCount": 781}, {"contestId": 509, "index": "C", "name": "Sums of Digits", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "greedy", "implementation"], "solvedCount": 2240}, {"contestId": 509, "index": "B", "name": "Painting Pebbles", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 9816}, {"contestId": 509, "index": "A", "name": "Maximum in Table", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 40968}, {"contestId": 508, "index": "E", "name": "Arthur and Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "greedy"], "solvedCount": 1843}, {"contestId": 508, "index": "D", "name": "Tanya and Password", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dfs and similar", "graphs"], "solvedCount": 3838}, {"contestId": 508, "index": "C", "name": "Anya and Ghosts", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 4582}, {"contestId": 508, "index": "B", "name": "Anton and currency you all know", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "math", "strings"], "solvedCount": 23466}, {"contestId": 508, "index": "A", "name": "Pasha and Pixels", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force"], "solvedCount": 8244}, {"contestId": 507, "index": "E", "name": "Breaking Good", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 3103}, {"contestId": 507, "index": "D", "name": "The Maths Lecture", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "implementation"], "solvedCount": 1970}, {"contestId": 507, "index": "C", "name": "Guess Your Way Out!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "math", "trees"], "solvedCount": 4465}, {"contestId": 507, "index": "B", "name": "Amr and Pins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["geometry", "math"], "solvedCount": 26010}, {"contestId": 507, "index": "A", "name": "Amr and Music", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 20263}, {"contestId": 506, "index": "E", "name": "Mr. Kitayuta's Gift", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics", "dp", "matrices", "strings"], "solvedCount": 829}, {"contestId": 506, "index": "D", "name": "Mr. Kitayuta's Colorful Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "dfs and similar", "dsu", "graphs"], "solvedCount": 2357}, {"contestId": 505, "index": "E", "name": "Mr. Kitayuta vs. Bamboos", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["binary search", "greedy"], "solvedCount": 1504}, {"contestId": 505, "index": "D", "name": "Mr. Kitayuta's Technology", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar"], "solvedCount": 2748}, {"contestId": 505, "index": "C", "name": "Mr. Kitayuta, the Treasure Hunter", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "two pointers"], "solvedCount": 6896}, {"contestId": 505, "index": "B", "name": "Mr. Kitayuta's Colorful Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "dp", "dsu", "graphs"], "solvedCount": 14215}, {"contestId": 505, "index": "A", "name": "Mr. Kitayuta's Gift", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation", "strings"], "solvedCount": 6824}, {"contestId": 504, "index": "E", "name": "Misha and LCP on Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "dfs and similar", "hashing", "string suffix structures", "trees"], "solvedCount": 1005}, {"contestId": 504, "index": "D", "name": "Misha and XOR", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks"], "solvedCount": 317}, {"contestId": 501, "index": "E", "name": "Misha and Palindrome Degree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "combinatorics", "implementation"], "solvedCount": 937}, {"contestId": 501, "index": "D", "name": "Misha and Permutations Summation", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["data structures"], "solvedCount": 2564}, {"contestId": 501, "index": "C", "name": "Misha and Forest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "sortings", "trees"], "solvedCount": 5912}, {"contestId": 501, "index": "B", "name": "Misha and Changing Handles", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["data structures", "dsu", "strings"], "solvedCount": 17956}, {"contestId": 501, "index": "A", "name": "Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 23705}, {"contestId": 500, "index": "G", "name": "New Year Running", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["number theory", "trees"], "solvedCount": 163}, {"contestId": 500, "index": "F", "name": "New Year Shopping", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["divide and conquer", "dp"], "solvedCount": 792}, {"contestId": 500, "index": "E", "name": "New Year Domino", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "dp", "dsu"], "solvedCount": 1517}, {"contestId": 500, "index": "D", "name": "New Year Santa Network", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "solvedCount": 3176}, {"contestId": 500, "index": "C", "name": "New Year Book Reading", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 5915}, {"contestId": 500, "index": "B", "name": "New Year Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "math", "sortings"], "solvedCount": 9286}, {"contestId": 500, "index": "A", "name": "New Year Transportation", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["dfs and similar", "graphs", "implementation"], "solvedCount": 58227}, {"contestId": 499, "index": "B", "name": "Lecture", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 42487}, {"contestId": 499, "index": "A", "name": "Watching a movie", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation"], "solvedCount": 14313}, {"contestId": 498, "index": "E", "name": "Stairs and Lines", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "matrices"], "solvedCount": 497}, {"contestId": 498, "index": "D", "name": "Traffic Jams in the Land", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "number theory"], "solvedCount": 1170}, {"contestId": 498, "index": "C", "name": "Array and Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["flows", "graph matchings", "number theory"], "solvedCount": 3802}, {"contestId": 498, "index": "B", "name": "Name That Tune", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "probabilities", "two pointers"], "solvedCount": 1260}, {"contestId": 498, "index": "A", "name": "Crazy Town", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["geometry"], "solvedCount": 6694}, {"contestId": 497, "index": "E", "name": "Subsequences Return", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "matrices"], "solvedCount": 305}, {"contestId": 497, "index": "D", "name": "Gears", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "geometry", "math"], "solvedCount": 241}, {"contestId": 496, "index": "E", "name": "Distributing Parts ", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["greedy", "sortings"], "solvedCount": 1705}, {"contestId": 496, "index": "D", "name": "Tennis Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["binary search"], "solvedCount": 3130}, {"contestId": 496, "index": "C", "name": "Removing Columns", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 7954}, {"contestId": 496, "index": "B", "name": "Secret Combination", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 6036}, {"contestId": 496, "index": "A", "name": "Minimum Difficulty", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"], "solvedCount": 16851}, {"contestId": 495, "index": "B", "name": "Modular Equations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 7828}, {"contestId": 495, "index": "A", "name": "Digital Counter", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 8783}, {"contestId": 494, "index": "E", "name": "Sharti", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "games"], "solvedCount": 357}, {"contestId": 494, "index": "D", "name": "Birthday", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 653}, {"contestId": 494, "index": "C", "name": "Helping People", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["dp", "probabilities"], "solvedCount": 915}, {"contestId": 494, "index": "B", "name": "Obsessive String", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "strings"], "solvedCount": 2964}, {"contestId": 494, "index": "A", "name": "Treasure", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy"], "solvedCount": 6414}, {"contestId": 493, "index": "E", "name": "Vasya and Polynomial", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["math"], "solvedCount": 508}, {"contestId": 493, "index": "D", "name": "Vasya and Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "games", "math"], "solvedCount": 10000}, {"contestId": 493, "index": "C", "name": "Vasya and Basketball", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "implementation", "sortings", "two pointers"], "solvedCount": 7164}, {"contestId": 493, "index": "B", "name": "Vasya and Wrestling", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 13752}, {"contestId": 493, "index": "A", "name": "Vasya and Football", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 6260}, {"contestId": 492, "index": "E", "name": "Vanya and Field", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["math"], "solvedCount": 1689}, {"contestId": 492, "index": "D", "name": "Vanya and Computer Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "implementation", "math", "sortings"], "solvedCount": 3245}, {"contestId": 492, "index": "C", "name": "Vanya and Exams", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 14806}, {"contestId": 492, "index": "B", "name": "Vanya and Lanterns", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "implementation", "math", "sortings"], "solvedCount": 83322}, {"contestId": 492, "index": "A", "name": "Vanya and Cubes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 57695}, {"contestId": 491, "index": "C", "name": "Deciphering", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["flows", "graph matchings"], "solvedCount": 479}, {"contestId": 491, "index": "B", "name": "New York Hotel", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["greedy", "math"], "solvedCount": 598}, {"contestId": 491, "index": "A", "name": "Up the hill", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3167}, {"contestId": 490, "index": "F", "name": "Treeland Tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 1816}, {"contestId": 490, "index": "E", "name": "Restoring Increasing Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "brute force", "greedy", "implementation"], "solvedCount": 1655}, {"contestId": 490, "index": "D", "name": "Chocolate", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "dfs and similar", "math", "meet-in-the-middle", "number theory"], "solvedCount": 2235}, {"contestId": 490, "index": "C", "name": "Hacking Cypher", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "math", "number theory", "strings"], "solvedCount": 9291}, {"contestId": 490, "index": "B", "name": "Queue", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dsu", "implementation"], "solvedCount": 6239}, {"contestId": 490, "index": "A", "name": "Team Olympiad", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 65557}, {"contestId": 489, "index": "F", "name": "Special Matrices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["combinatorics", "dp"], "solvedCount": 1823}, {"contestId": 489, "index": "E", "name": "Hiking", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "dp"], "solvedCount": 1083}, {"contestId": 489, "index": "D", "name": "Unbearable Controversy of Being", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["brute force", "combinatorics", "dfs and similar", "graphs"], "solvedCount": 6891}, {"contestId": 489, "index": "C", "name": "Given Length and Sum of Digits...", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["dp", "greedy", "implementation"], "solvedCount": 49248}, {"contestId": 489, "index": "B", "name": "BerSU Ball", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "sortings", "two pointers"], "solvedCount": 53205}, {"contestId": 489, "index": "A", "name": "SwapSort", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 10357}, {"contestId": 488, "index": "B", "name": "Candy Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 2198}, {"contestId": 488, "index": "A", "name": "Giga Tower", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force"], "solvedCount": 14672}, {"contestId": 487, "index": "E", "name": "Tourists", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 2628}, {"contestId": 487, "index": "D", "name": "Conveyor Belts", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 937}, {"contestId": 487, "index": "C", "name": "Prefix Product Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 2925}, {"contestId": 487, "index": "B", "name": "Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "two pointers"], "solvedCount": 3871}, {"contestId": 487, "index": "A", "name": "Fight the Monster", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 3852}, {"contestId": 486, "index": "E", "name": "LIS of Sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "hashing", "math"], "solvedCount": 2440}, {"contestId": 486, "index": "D", "name": "Valid Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "math", "trees"], "solvedCount": 4245}, {"contestId": 486, "index": "C", "name": "Palindrome Transformation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 12107}, {"contestId": 486, "index": "B", "name": "OR in Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "hashing", "implementation"], "solvedCount": 18604}, {"contestId": 486, "index": "A", "name": "Calculating Function", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 137088}, {"contestId": 485, "index": "B", "name": "Valuable Resources", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "greedy"], "solvedCount": 6667}, {"contestId": 485, "index": "A", "name": "Factory", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math", "matrices"], "solvedCount": 8568}, {"contestId": 484, "index": "E", "name": "Sign on Fence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures"], "solvedCount": 2687}, {"contestId": 484, "index": "D", "name": "Kindergarten", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2811}, {"contestId": 484, "index": "C", "name": "Strange Sorting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["implementation", "math"], "solvedCount": 611}, {"contestId": 484, "index": "B", "name": "Maximum Value", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "math", "sortings", "two pointers"], "solvedCount": 7355}, {"contestId": 484, "index": "A", "name": "Bits", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 12428}, {"contestId": 483, "index": "B", "name": "Friends and Presents", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "math"], "solvedCount": 4193}, {"contestId": 483, "index": "A", "name": "Counterexample ", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 24232}, {"contestId": 482, "index": "E", "name": "ELCA", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "trees"], "solvedCount": 187}, {"contestId": 482, "index": "D", "name": "Random Function and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 567}, {"contestId": 482, "index": "C", "name": "Game with Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "dp", "probabilities"], "solvedCount": 965}, {"contestId": 482, "index": "B", "name": "Interesting Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "trees"], "solvedCount": 7078}, {"contestId": 482, "index": "A", "name": "Diverse Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 9928}, {"contestId": 480, "index": "E", "name": "Parking Lot", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 595}, {"contestId": 480, "index": "D", "name": "Parcels", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "graphs"], "solvedCount": 479}, {"contestId": 479, "index": "E", "name": "Riding in a Lift", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["combinatorics", "dp"], "solvedCount": 5378}, {"contestId": 479, "index": "D", "name": "Long Jumps", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "greedy", "implementation"], "solvedCount": 4920}, {"contestId": 479, "index": "C", "name": "Exams", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 31446}, {"contestId": 479, "index": "B", "name": "Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 8141}, {"contestId": 479, "index": "A", "name": "Expression", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "math"], "solvedCount": 103846}, {"contestId": 478, "index": "E", "name": "Wavy numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dfs and similar", "meet-in-the-middle", "sortings"], "solvedCount": 232}, {"contestId": 478, "index": "D", "name": "Red-Green Towers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp"], "solvedCount": 6591}, {"contestId": 478, "index": "C", "name": "Table Decorations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 19521}, {"contestId": 478, "index": "B", "name": "Random Teams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "solvedCount": 39147}, {"contestId": 478, "index": "A", "name": "Initial Bet", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 26544}, {"contestId": 477, "index": "E", "name": "Dreamoon and Notepad", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 143}, {"contestId": 477, "index": "D", "name": "Dreamoon and Binary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "strings"], "solvedCount": 579}, {"contestId": 476, "index": "E", "name": "Dreamoon and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dp", "strings"], "solvedCount": 2046}, {"contestId": 476, "index": "D", "name": "Dreamoon and Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 4875}, {"contestId": 476, "index": "C", "name": "Dreamoon and Sums", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"], "solvedCount": 5914}, {"contestId": 476, "index": "B", "name": "Dreamoon and WiFi", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "math", "probabilities"], "solvedCount": 34363}, {"contestId": 476, "index": "A", "name": "Dreamoon and Stairs", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 48436}, {"contestId": 475, "index": "F", "name": "Meta-universe", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 259}, {"contestId": 475, "index": "E", "name": "Strongly Connected City 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar"], "solvedCount": 575}, {"contestId": 475, "index": "D", "name": "CGCDSSQ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "data structures", "math"], "solvedCount": 5672}, {"contestId": 475, "index": "C", "name": "Kamal-ol-molk's Painting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 805}, {"contestId": 475, "index": "B", "name": "Strongly Connected City", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "solvedCount": 8928}, {"contestId": 475, "index": "A", "name": "Bayan Bus", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 4873}, {"contestId": 474, "index": "F", "name": "Ant colony", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "math", "number theory"], "solvedCount": 10138}, {"contestId": 474, "index": "E", "name": "Pillars", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "sortings", "trees"], "solvedCount": 3821}, {"contestId": 474, "index": "D", "name": "Flowers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp"], "solvedCount": 27885}, {"contestId": 474, "index": "C", "name": "Captain Marmot", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "geometry"], "solvedCount": 3235}, {"contestId": 474, "index": "B", "name": "Worms", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "implementation"], "solvedCount": 56150}, {"contestId": 474, "index": "A", "name": "Keyboard", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 50704}, {"contestId": 472, "index": "G", "name": "Design Tutorial: Increase the Constraints", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["bitmasks", "data structures", "fft"], "solvedCount": 432}, {"contestId": 472, "index": "F", "name": "Design Tutorial: Change the Goal", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "math", "matrices"], "solvedCount": 295}, {"contestId": 472, "index": "E", "name": "Design Tutorial: Learn from a Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 136}, {"contestId": 472, "index": "D", "name": "Design Tutorial: Inverse the Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dsu", "shortest paths", "trees"], "solvedCount": 5995}, {"contestId": 472, "index": "C", "name": "Design Tutorial: Make It Nondeterministic", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy"], "solvedCount": 6444}, {"contestId": 472, "index": "B", "name": "Design Tutorial: Learn from Life", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": [], "solvedCount": 7535}, {"contestId": 472, "index": "A", "name": "Design Tutorial: Learn from Math", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["math", "number theory"], "solvedCount": 66380}, {"contestId": 471, "index": "E", "name": "MUH and Lots and Lots of Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "dsu"], "solvedCount": 85}, {"contestId": 471, "index": "D", "name": "MUH and Cube Walls", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["string suffix structures", "strings"], "solvedCount": 9279}, {"contestId": 471, "index": "C", "name": "MUH and House of Cards", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "brute force", "greedy", "math"], "solvedCount": 3650}, {"contestId": 471, "index": "B", "name": "MUH and Important Things", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 6087}, {"contestId": 471, "index": "A", "name": "MUH and Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 13597}, {"contestId": 470, "index": "H", "name": "Array Sorting", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special"], "solvedCount": 193}, {"contestId": 470, "index": "G", "name": "Hamming Distance", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special"], "solvedCount": 129}, {"contestId": 470, "index": "F", "name": "Pairwise Sums", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special"], "solvedCount": 111}, {"contestId": 470, "index": "E", "name": "Chessboard", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 203}, {"contestId": 470, "index": "D", "name": "Caesar Cipher", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 157}, {"contestId": 470, "index": "C", "name": "Eval", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 260}, {"contestId": 470, "index": "B", "name": "Hexakosioihexekontahexaphobia", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 267}, {"contestId": 470, "index": "A", "name": "Crystal Ball Sequence", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"], "solvedCount": 690}, {"contestId": 469, "index": "B", "name": "Chat Online", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 13088}, {"contestId": 469, "index": "A", "name": "I Wanna Be the Guy", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation"], "solvedCount": 110149}, {"contestId": 468, "index": "E", "name": "Permanent", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["dp", "graph matchings", "math", "meet-in-the-middle"], "solvedCount": 364}, {"contestId": 468, "index": "D", "name": "Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["graph matchings"], "solvedCount": 420}, {"contestId": 468, "index": "C", "name": "Hack it!", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 2610}, {"contestId": 468, "index": "B", "name": "Two Sets", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["2-sat", "dfs and similar", "dsu", "graph matchings", "greedy"], "solvedCount": 4723}, {"contestId": 468, "index": "A", "name": "24 Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 8211}, {"contestId": 467, "index": "E", "name": "Alex and Complicated Task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"], "solvedCount": 823}, {"contestId": 467, "index": "D", "name": "Fedor and Essay", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dfs and similar", "dp", "graphs", "hashing", "strings"], "solvedCount": 1925}, {"contestId": 467, "index": "C", "name": "George and Job", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "implementation"], "solvedCount": 15724}, {"contestId": 467, "index": "B", "name": "Fedor and New Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "brute force", "constructive algorithms", "implementation"], "solvedCount": 40660}, {"contestId": 467, "index": "A", "name": "George and Accommodation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 140107}, {"contestId": 466, "index": "E", "name": "Information Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 2391}, {"contestId": 466, "index": "D", "name": "Increase Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "dp"], "solvedCount": 3469}, {"contestId": 466, "index": "C", "name": "Number of Ways", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "solvedCount": 39085}, {"contestId": 466, "index": "B", "name": "Wonder Room", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "math"], "solvedCount": 5100}, {"contestId": 466, "index": "A", "name": "Cheap Travel", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 70930}, {"contestId": 465, "index": "B", "name": "Inbox (100500)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 10678}, {"contestId": 465, "index": "A", "name": "inc ARG", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 10230}, {"contestId": 464, "index": "E", "name": "The Classic Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 1688}, {"contestId": 464, "index": "D", "name": "World of Darkraft - 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "probabilities"], "solvedCount": 711}, {"contestId": 464, "index": "C", "name": "Substitutes in Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp"], "solvedCount": 1888}, {"contestId": 464, "index": "B", "name": "Restore Cube ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "geometry"], "solvedCount": 1743}, {"contestId": 464, "index": "A", "name": "No to Palindromes!", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["greedy", "strings"], "solvedCount": 6044}, {"contestId": 463, "index": "E", "name": "Caisa and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "dfs and similar", "math", "number theory", "trees"], "solvedCount": 1678}, {"contestId": 463, "index": "D", "name": "Gargari and Permutations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "implementation"], "solvedCount": 6885}, {"contestId": 463, "index": "C", "name": "Gargari and Bishops", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["greedy", "hashing", "implementation"], "solvedCount": 8969}, {"contestId": 463, "index": "B", "name": "Caisa and Pylons", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "math"], "solvedCount": 28971}, {"contestId": 463, "index": "A", "name": "Caisa and Sugar", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 9421}, {"contestId": 462, "index": "B", "name": "Appleman and Card Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 15136}, {"contestId": 462, "index": "A", "name": "Appleman and Easy Task", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 17414}, {"contestId": 461, "index": "E", "name": "Appleman and a Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "shortest paths", "strings"], "solvedCount": 487}, {"contestId": 461, "index": "D", "name": "Appleman and Complicated Task", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dsu", "math"], "solvedCount": 392}, {"contestId": 461, "index": "C", "name": "Appleman and a Sheet of Paper", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "implementation"], "solvedCount": 1359}, {"contestId": 461, "index": "B", "name": "Appleman and Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 6421}, {"contestId": 461, "index": "A", "name": "Appleman and Toastman", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 15876}, {"contestId": 460, "index": "E", "name": "Roland and Rose", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "geometry", "math", "sortings"], "solvedCount": 355}, {"contestId": 460, "index": "D", "name": "Little Victor and Set", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 1027}, {"contestId": 460, "index": "C", "name": "Present", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 6510}, {"contestId": 460, "index": "B", "name": "Little Dima and Equation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "implementation", "math", "number theory"], "solvedCount": 13089}, {"contestId": 460, "index": "A", "name": "Vasya and Socks", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation", "math"], "solvedCount": 49470}, {"contestId": 459, "index": "E", "name": "Pashmak and Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 1900, "tags": ["dp", "sortings"], "solvedCount": 5752}, {"contestId": 459, "index": "D", "name": "Pashmak and Parmida's problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 11441}, {"contestId": 459, "index": "C", "name": "Pashmak and Buses", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 6328}, {"contestId": 459, "index": "B", "name": "Pashmak and Flowers", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["combinatorics", "implementation", "sortings"], "solvedCount": 44277}, {"contestId": 459, "index": "A", "name": "Pashmak and Garden", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 35062}, {"contestId": 457, "index": "F", "name": "An easy problem about trees", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "games", "greedy", "trees"], "solvedCount": 120}, {"contestId": 457, "index": "E", "name": "Flow Optimality", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "flows", "math"], "solvedCount": 111}, {"contestId": 457, "index": "D", "name": "Bingo!", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "math", "probabilities"], "solvedCount": 320}, {"contestId": 457, "index": "C", "name": "Elections", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force"], "solvedCount": 914}, {"contestId": 457, "index": "B", "name": "Distributed Join", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy"], "solvedCount": 1163}, {"contestId": 457, "index": "A", "name": "Golden System", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["math", "meet-in-the-middle"], "solvedCount": 1314}, {"contestId": 456, "index": "B", "name": "Fedya and Maths", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math", "number theory"], "solvedCount": 17802}, {"contestId": 456, "index": "A", "name": "Laptops", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["sortings"], "solvedCount": 52844}, {"contestId": 455, "index": "E", "name": "Function", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 748}, {"contestId": 455, "index": "D", "name": "Serega and Fun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 3298}, {"contestId": 455, "index": "C", "name": "Civilization", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "ternary search", "trees"], "solvedCount": 6103}, {"contestId": 455, "index": "B", "name": "A Lot of Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "implementation", "strings", "trees"], "solvedCount": 6432}, {"contestId": 455, "index": "A", "name": "Boredom", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp"], "solvedCount": 65509}, {"contestId": 454, "index": "B", "name": "Little Pony and Sort by Shift", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 18790}, {"contestId": 454, "index": "A", "name": "Little Pony and Crystal Mine", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 15462}, {"contestId": 453, "index": "E", "name": "Little Pony and Lord Tirek", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 803}, {"contestId": 453, "index": "D", "name": "Little Pony and Elements of Harmony", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "matrices"], "solvedCount": 496}, {"contestId": 453, "index": "C", "name": "Little Pony and Summer Sun Celebration", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 1688}, {"contestId": 453, "index": "B", "name": "Little Pony and Harmony Chest", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp"], "solvedCount": 5002}, {"contestId": 453, "index": "A", "name": "Little Pony and Expected Maximum", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["probabilities"], "solvedCount": 11618}, {"contestId": 452, "index": "F", "name": "Permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "hashing"], "solvedCount": 1712}, {"contestId": 452, "index": "E", "name": "Three strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dsu", "string suffix structures", "strings"], "solvedCount": 1139}, {"contestId": 452, "index": "D", "name": "Washer, Dryer, Folder", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["greedy", "implementation"], "solvedCount": 1565}, {"contestId": 452, "index": "C", "name": "Magic Trick", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["combinatorics", "math", "probabilities"], "solvedCount": 1702}, {"contestId": 452, "index": "B", "name": "4-point polyline", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "geometry", "trees"], "solvedCount": 2060}, {"contestId": 452, "index": "A", "name": "Eevee", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation", "strings"], "solvedCount": 8254}, {"contestId": 451, "index": "E", "name": "Devu and Flowers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "number theory"], "solvedCount": 4085}, {"contestId": 451, "index": "D", "name": "Count Good Substrings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["math"], "solvedCount": 4926}, {"contestId": 451, "index": "C", "name": "Predict Outcome of the Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "implementation", "math"], "solvedCount": 3455}, {"contestId": 451, "index": "B", "name": "Sort the Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 49545}, {"contestId": 451, "index": "A", "name": "Game With Sticks", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 71204}, {"contestId": 450, "index": "B", "name": "Jzzhu and Sequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 27774}, {"contestId": 450, "index": "A", "name": "Jzzhu and Children", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 39607}, {"contestId": 449, "index": "E", "name": "Jzzhu and Squares", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp", "math", "number theory"], "solvedCount": 298}, {"contestId": 449, "index": "D", "name": "Jzzhu and Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "combinatorics", "dp"], "solvedCount": 5236}, {"contestId": 449, "index": "C", "name": "Jzzhu and Apples", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms", "number theory"], "solvedCount": 2392}, {"contestId": 449, "index": "B", "name": "Jzzhu and Cities", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 9610}, {"contestId": 449, "index": "A", "name": "Jzzhu and Chocolate", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["greedy", "math"], "solvedCount": 4035}, {"contestId": 448, "index": "E", "name": "Divisors", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["brute force", "dfs and similar", "implementation", "number theory"], "solvedCount": 1583}, {"contestId": 448, "index": "D", "name": "Multiplication Table", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "brute force"], "solvedCount": 15572}, {"contestId": 448, "index": "C", "name": "Painting Fence", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["divide and conquer", "dp", "greedy"], "solvedCount": 10100}, {"contestId": 448, "index": "B", "name": "Suffix Structures", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "strings"], "solvedCount": 16846}, {"contestId": 448, "index": "A", "name": "Rewards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 25145}, {"contestId": 447, "index": "B", "name": "DZY Loves Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "implementation"], "solvedCount": 20733}, {"contestId": 447, "index": "A", "name": "DZY Loves Hash", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 9951}, {"contestId": 446, "index": "E", "name": "DZY Loves Bridges", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["math", "matrices"], "solvedCount": 140}, {"contestId": 446, "index": "D", "name": "DZY Loves Games", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["math", "matrices", "probabilities"], "solvedCount": 440}, {"contestId": 446, "index": "C", "name": "DZY Loves Fibonacci Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "math", "number theory"], "solvedCount": 3673}, {"contestId": 446, "index": "B", "name": "DZY Loves Modification", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "data structures", "greedy"], "solvedCount": 3690}, {"contestId": 446, "index": "A", "name": "DZY Loves Sequences", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "implementation", "two pointers"], "solvedCount": 13157}, {"contestId": 445, "index": "B", "name": "DZY Loves Chemistry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "dsu", "greedy"], "solvedCount": 13657}, {"contestId": 445, "index": "A", "name": "DZY Loves Chessboard", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["dfs and similar", "implementation"], "solvedCount": 32109}, {"contestId": 444, "index": "E", "name": "DZY Loves Planting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "dsu", "trees"], "solvedCount": 806}, {"contestId": 444, "index": "D", "name": "DZY Loves Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "hashing", "strings", "two pointers"], "solvedCount": 813}, {"contestId": 444, "index": "C", "name": "DZY Loves Colors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 3164}, {"contestId": 444, "index": "B", "name": "DZY Loves FFT", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["probabilities"], "solvedCount": 1121}, {"contestId": 444, "index": "A", "name": "DZY Loves Physics", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy", "math"], "solvedCount": 3501}, {"contestId": 443, "index": "B", "name": "Kolya and Tandem Repeat", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "implementation", "strings"], "solvedCount": 4168}, {"contestId": 443, "index": "A", "name": "Anton and Letters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 101246}, {"contestId": 442, "index": "E", "name": "Gena and Second Distance", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["geometry"], "solvedCount": 188}, {"contestId": 442, "index": "D", "name": "Adam and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 1082}, {"contestId": 442, "index": "C", "name": "Artem and Array ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures", "greedy"], "solvedCount": 1875}, {"contestId": 442, "index": "B", "name": "Andrey and Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "math", "probabilities"], "solvedCount": 5810}, {"contestId": 442, "index": "A", "name": "Borya and Hanabi", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "brute force", "implementation"], "solvedCount": 2234}, {"contestId": 441, "index": "E", "name": "Valera and Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "dp", "math", "probabilities"], "solvedCount": 777}, {"contestId": 441, "index": "D", "name": "Valera and Swaps", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dsu", "graphs", "implementation", "math", "string suffix structures"], "solvedCount": 1151}, {"contestId": 441, "index": "C", "name": "Valera and Tubes ", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "implementation"], "solvedCount": 11704}, {"contestId": 441, "index": "B", "name": "Valera and Fruits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 7275}, {"contestId": 441, "index": "A", "name": "Valera and Antique Items", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 18972}, {"contestId": 440, "index": "D", "name": "Berland Federalization", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "trees"], "solvedCount": 849}, {"contestId": 440, "index": "C", "name": "One-Based Arithmetic", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "dfs and similar", "divide and conquer"], "solvedCount": 1015}, {"contestId": 440, "index": "B", "name": "Balancer", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "implementation"], "solvedCount": 2215}, {"contestId": 440, "index": "A", "name": "Forgotten Episode", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 8195}, {"contestId": 439, "index": "E", "name": "Devu and Birthday Celebration", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1678}, {"contestId": 439, "index": "D", "name": "Devu and his Brother", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "sortings", "ternary search", "two pointers"], "solvedCount": 6470}, {"contestId": 439, "index": "C", "name": "Devu and Partitioning of the Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "implementation", "number theory"], "solvedCount": 4089}, {"contestId": 439, "index": "B", "name": "Devu, the Dumb Guy", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 14740}, {"contestId": 439, "index": "A", "name": "Devu, the Singer and Churu, the Joker", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 26136}, {"contestId": 438, "index": "E", "name": "The Child and Binary Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["combinatorics", "divide and conquer", "fft", "number theory"], "solvedCount": 2038}, {"contestId": 438, "index": "D", "name": "The Child and Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "math"], "solvedCount": 10078}, {"contestId": 437, "index": "E", "name": "The Child and Polygon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "geometry"], "solvedCount": 745}, {"contestId": 437, "index": "D", "name": "The Child and Zoo", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dsu", "sortings"], "solvedCount": 3512}, {"contestId": 437, "index": "C", "name": "The Child and Toy", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["graphs", "greedy", "sortings"], "solvedCount": 14513}, {"contestId": 437, "index": "B", "name": "The Child and Set", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["bitmasks", "greedy", "implementation", "sortings"], "solvedCount": 10104}, {"contestId": 437, "index": "A", "name": "The Child and Homework", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 9192}, {"contestId": 436, "index": "F", "name": "Banners", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["brute force", "data structures", "dp"], "solvedCount": 419}, {"contestId": 436, "index": "E", "name": "Cardboard Box", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "greedy"], "solvedCount": 1614}, {"contestId": 436, "index": "D", "name": "Pudding Monsters", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp"], "solvedCount": 344}, {"contestId": 436, "index": "C", "name": "Dungeons and Candies", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dsu", "graphs", "greedy", "trees"], "solvedCount": 2783}, {"contestId": 436, "index": "B", "name": "Om Nom and Spiders", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 3105}, {"contestId": 436, "index": "A", "name": "Feed with Candy", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy"], "solvedCount": 3635}, {"contestId": 435, "index": "E", "name": "Special Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": [], "solvedCount": 253}, {"contestId": 435, "index": "D", "name": "Special Grid", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "dp", "greedy"], "solvedCount": 772}, {"contestId": 435, "index": "C", "name": "Cardiogram", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 2658}, {"contestId": 435, "index": "B", "name": "Pasha Maximizes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy"], "solvedCount": 7286}, {"contestId": 435, "index": "A", "name": "Queue on Bus Stop", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 10573}, {"contestId": 434, "index": "E", "name": "Furukawa Nagisa's Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "divide and conquer", "sortings", "trees"], "solvedCount": 305}, {"contestId": 434, "index": "D", "name": "Nanami's Power Plant", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["flows"], "solvedCount": 501}, {"contestId": 433, "index": "E", "name": "Tachibana Kanade's Tofu", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp"], "solvedCount": 497}, {"contestId": 433, "index": "D", "name": "Nanami's Digital Board", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dsu", "implementation"], "solvedCount": 1276}, {"contestId": 433, "index": "C", "name": "Ryouko's Memory Note", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["implementation", "math", "sortings"], "solvedCount": 2558}, {"contestId": 433, "index": "B", "name": "Kuriyama Mirai's Stones", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["dp", "implementation", "sortings"], "solvedCount": 46909}, {"contestId": 433, "index": "A", "name": "Kitahara Haruki's Gift", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 17255}, {"contestId": 432, "index": "E", "name": "Square Tiling", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "greedy"], "solvedCount": 772}, {"contestId": 432, "index": "D", "name": "Prefixes and Suffixes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp", "string suffix structures", "strings", "two pointers"], "solvedCount": 10713}, {"contestId": 432, "index": "C", "name": "Prime Swaps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "sortings"], "solvedCount": 2598}, {"contestId": 432, "index": "B", "name": "Football Kit", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 11969}, {"contestId": 432, "index": "A", "name": "Choosing Teams", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 65647}, {"contestId": 431, "index": "E", "name": "Chemistry Experiment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "ternary search"], "solvedCount": 1121}, {"contestId": 431, "index": "D", "name": "Random Task", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "combinatorics", "dp", "math"], "solvedCount": 2630}, {"contestId": 431, "index": "C", "name": "k-Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "implementation", "trees"], "solvedCount": 27656}, {"contestId": 431, "index": "B", "name": "Shower Line", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 11340}, {"contestId": 431, "index": "A", "name": "Black Square", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 61039}, {"contestId": 430, "index": "B", "name": "Balls Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "two pointers"], "solvedCount": 3889}, {"contestId": 430, "index": "A", "name": "Points and Segments (easy)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "sortings"], "solvedCount": 2334}, {"contestId": 429, "index": "E", "name": "Points and Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["graphs"], "solvedCount": 939}, {"contestId": 429, "index": "D", "name": "Tricky Function", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "geometry"], "solvedCount": 3067}, {"contestId": 429, "index": "C", "name": "Guess the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "trees"], "solvedCount": 995}, {"contestId": 429, "index": "B", "name": "Working out", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp"], "solvedCount": 9507}, {"contestId": 429, "index": "A", "name": "Xor-tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["dfs and similar", "trees"], "solvedCount": 11288}, {"contestId": 427, "index": "E", "name": "Police Patrol", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["greedy", "implementation", "math", "ternary search"], "solvedCount": 1525}, {"contestId": 427, "index": "D", "name": "Match & Catch", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "string suffix structures", "strings"], "solvedCount": 2296}, {"contestId": 427, "index": "C", "name": "Checkposts", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "two pointers"], "solvedCount": 15569}, {"contestId": 427, "index": "B", "name": "Prison Transfer", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation"], "solvedCount": 15010}, {"contestId": 427, "index": "A", "name": "Police Recruits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 88327}, {"contestId": 426, "index": "B", "name": "Sereja and Mirroring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 3866}, {"contestId": 426, "index": "A", "name": "Sereja and Mugs", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 9636}, {"contestId": 425, "index": "E", "name": "Sereja and Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp"], "solvedCount": 742}, {"contestId": 425, "index": "D", "name": "Sereja and Squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "data structures", "hashing"], "solvedCount": 1542}, {"contestId": 425, "index": "C", "name": "Sereja and Two Sequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dp"], "solvedCount": 938}, {"contestId": 425, "index": "B", "name": "Sereja and Table ", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["bitmasks", "greedy"], "solvedCount": 1345}, {"contestId": 425, "index": "A", "name": "Sereja and Swaps", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "sortings"], "solvedCount": 4021}, {"contestId": 424, "index": "E", "name": "Colored Jenga", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dfs and similar", "dp", "probabilities"], "solvedCount": 143}, {"contestId": 424, "index": "D", "name": "Biathlon Track", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp"], "solvedCount": 580}, {"contestId": 424, "index": "C", "name": "Magic Formulas", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["math"], "solvedCount": 5764}, {"contestId": 424, "index": "B", "name": "Megacity", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "greedy", "implementation", "sortings"], "solvedCount": 8071}, {"contestId": 424, "index": "A", "name": "Squats", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 8845}, {"contestId": 421, "index": "D", "name": "Bug in Code", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 585}, {"contestId": 421, "index": "A", "name": "Pasha and Hamsters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 6472}, {"contestId": 420, "index": "E", "name": "Playing the ball", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["geometry"], "solvedCount": 232}, {"contestId": 420, "index": "D", "name": "Cup Trick", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 919}, {"contestId": 420, "index": "C", "name": "Bug in Code", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "graphs", "implementation", "two pointers"], "solvedCount": 1320}, {"contestId": 420, "index": "B", "name": "Online Meeting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["implementation"], "solvedCount": 1109}, {"contestId": 420, "index": "A", "name": "Start Up", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 6612}, {"contestId": 418, "index": "E", "name": "Tricky Password", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 339}, {"contestId": 418, "index": "D", "name": "Big Problems for Organizers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "graphs", "trees"], "solvedCount": 516}, {"contestId": 417, "index": "E", "name": "Square Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "math", "probabilities"], "solvedCount": 888}, {"contestId": 417, "index": "D", "name": "Cunning Gena", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dp", "greedy", "sortings"], "solvedCount": 2739}, {"contestId": 417, "index": "C", "name": "Football", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 4835}, {"contestId": 417, "index": "B", "name": "Crash", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 1907}, {"contestId": 417, "index": "A", "name": "Elimination", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp", "implementation", "math"], "solvedCount": 3224}, {"contestId": 416, "index": "E", "name": "President's Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 1654}, {"contestId": 416, "index": "D", "name": "Population Size", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["greedy", "implementation", "math"], "solvedCount": 1034}, {"contestId": 416, "index": "C", "name": "Booking System", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "implementation"], "solvedCount": 8378}, {"contestId": 416, "index": "B", "name": "Art Union", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "dp", "implementation"], "solvedCount": 9080}, {"contestId": 416, "index": "A", "name": "Guess a number!", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "implementation", "two pointers"], "solvedCount": 9369}, {"contestId": 415, "index": "B", "name": "Mashmokh and Tokens", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "greedy", "implementation", "math"], "solvedCount": 6537}, {"contestId": 415, "index": "A", "name": "Mashmokh and Lights", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 9310}, {"contestId": 414, "index": "E", "name": "Mashmokh's Designed Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures"], "solvedCount": 204}, {"contestId": 414, "index": "D", "name": "Mashmokh and Water Tanks", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "data structures", "greedy", "trees", "two pointers"], "solvedCount": 712}, {"contestId": 414, "index": "C", "name": "Mashmokh and Reverse Operation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "divide and conquer"], "solvedCount": 2306}, {"contestId": 414, "index": "B", "name": "Mashmokh and ACM", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["combinatorics", "dp", "number theory"], "solvedCount": 25758}, {"contestId": 414, "index": "A", "name": "Mashmokh and Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "number theory"], "solvedCount": 10363}, {"contestId": 413, "index": "E", "name": "Maze 2D", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "divide and conquer"], "solvedCount": 778}, {"contestId": 413, "index": "D", "name": "2048", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "dp"], "solvedCount": 883}, {"contestId": 413, "index": "C", "name": "Jeopardy!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "math"], "solvedCount": 2481}, {"contestId": 413, "index": "B", "name": "Spyke Chatting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 1766}, {"contestId": 413, "index": "A", "name": "Data Recovery", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 2817}, {"contestId": 412, "index": "E", "name": "E-mail Addresses", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["implementation"], "solvedCount": 897}, {"contestId": 412, "index": "D", "name": "Giving Awards", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar"], "solvedCount": 2198}, {"contestId": 412, "index": "C", "name": "Pattern", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["implementation", "strings"], "solvedCount": 4053}, {"contestId": 412, "index": "B", "name": "Network Configuration", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "sortings"], "solvedCount": 6031}, {"contestId": 412, "index": "A", "name": "Poster", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 4700}, {"contestId": 411, "index": "C", "name": "Kicker", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "implementation"], "solvedCount": 1244}, {"contestId": 411, "index": "B", "name": "Multi-core Processor", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 1325}, {"contestId": 411, "index": "A", "name": "Password Check", "type": "PROGRAMMING", "rating": 800, "tags": ["*special", "implementation"], "solvedCount": 7678}, {"contestId": 409, "index": "I", "name": "Feed the Golorp", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special"], "solvedCount": 134}, {"contestId": 409, "index": "H", "name": "A + B Strikes Back", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "brute force", "constructive algorithms", "dsu", "implementation"], "solvedCount": 9266}, {"contestId": 409, "index": "G", "name": "On a plane", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "geometry"], "solvedCount": 536}, {"contestId": 409, "index": "F", "name": "000001", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 2143}, {"contestId": 409, "index": "E", "name": "Dome", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 600}, {"contestId": 409, "index": "D", "name": "Big Data", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 1760}, {"contestId": 409, "index": "C", "name": "Magnum Opus", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 2044}, {"contestId": 409, "index": "B", "name": "Mysterious Language", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 1391}, {"contestId": 409, "index": "A", "name": "The Great Game", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 2529}, {"contestId": 408, "index": "B", "name": "Garland", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 9920}, {"contestId": 408, "index": "A", "name": "Line to Cashier", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 11646}, {"contestId": 407, "index": "E", "name": "k-d-sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 880}, {"contestId": 407, "index": "D", "name": "Largest Submatrix 3", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "hashing"], "solvedCount": 753}, {"contestId": 407, "index": "C", "name": "Curious Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "combinatorics", "implementation", "math"], "solvedCount": 1120}, {"contestId": 407, "index": "B", "name": "Long Path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dp", "implementation"], "solvedCount": 6803}, {"contestId": 407, "index": "A", "name": "Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "geometry", "implementation", "math"], "solvedCount": 5048}, {"contestId": 406, "index": "E", "name": "Hamming Triples", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["implementation", "math", "two pointers"], "solvedCount": 258}, {"contestId": 406, "index": "D", "name": "Hill Climbing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "geometry", "trees"], "solvedCount": 1227}, {"contestId": 405, "index": "E", "name": "Graph Cutting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["dfs and similar", "graphs"], "solvedCount": 1482}, {"contestId": 405, "index": "D", "name": "Toy Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["greedy", "implementation", "math"], "solvedCount": 3203}, {"contestId": 405, "index": "C", "name": "Unusual Product", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["implementation", "math"], "solvedCount": 4830}, {"contestId": 405, "index": "B", "name": "Domino Effect", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": [], "solvedCount": 5931}, {"contestId": 405, "index": "A", "name": "Gravity Flip", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 114520}, {"contestId": 404, "index": "E", "name": "Maze 1D", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "greedy", "implementation"], "solvedCount": 623}, {"contestId": 404, "index": "D", "name": "Minesweeper 1D", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "implementation"], "solvedCount": 2340}, {"contestId": 404, "index": "C", "name": "Restore Graph", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "sortings"], "solvedCount": 5565}, {"contestId": 404, "index": "B", "name": "Marathon", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "math"], "solvedCount": 2986}, {"contestId": 404, "index": "A", "name": "Valera and X", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 25378}, {"contestId": 403, "index": "E", "name": "Two Rooted Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "implementation", "trees"], "solvedCount": 232}, {"contestId": 403, "index": "D", "name": "Beautiful Pairs of Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "dp"], "solvedCount": 1172}, {"contestId": 402, "index": "E", "name": "Strictly Positive Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["graphs", "math"], "solvedCount": 2272}, {"contestId": 402, "index": "D", "name": "Upgrading Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy", "math", "number theory"], "solvedCount": 2698}, {"contestId": 402, "index": "C", "name": "Searching for Graph", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "graphs"], "solvedCount": 6170}, {"contestId": 402, "index": "B", "name": "Trees in a Row", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "implementation"], "solvedCount": 3890}, {"contestId": 402, "index": "A", "name": "Nuts", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 4714}, {"contestId": 401, "index": "E", "name": "Olympic Games", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["math"], "solvedCount": 171}, {"contestId": 401, "index": "D", "name": "Roman and Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "combinatorics", "dp", "number theory"], "solvedCount": 4380}, {"contestId": 401, "index": "C", "name": "Team", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 21095}, {"contestId": 401, "index": "B", "name": "Sereja and Contests", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation", "math"], "solvedCount": 4503}, {"contestId": 401, "index": "A", "name": "Vanya and Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 16932}, {"contestId": 400, "index": "E", "name": "Inna and Binary Logic", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "bitmasks", "data structures"], "solvedCount": 1012}, {"contestId": 400, "index": "D", "name": "Dima and Bacteria", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dsu", "graphs", "shortest paths"], "solvedCount": 3073}, {"contestId": 400, "index": "C", "name": "Inna and Huge Candy Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["implementation", "math"], "solvedCount": 2951}, {"contestId": 400, "index": "B", "name": "Inna and New Matrix of Candies", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation", "schedules"], "solvedCount": 8329}, {"contestId": 400, "index": "A", "name": "Inna and Choose Options", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 6740}, {"contestId": 399, "index": "B", "name": "Red and Blue Balls", "type": "PROGRAMMING", "points": 1000.0, "tags": [], "solvedCount": 1858}, {"contestId": 399, "index": "A", "name": "Pages", "type": "PROGRAMMING", "points": 500.0, "tags": ["implementation"], "solvedCount": 4174}, {"contestId": 398, "index": "E", "name": "Sorting Permutations", "type": "PROGRAMMING", "points": 2500.0, "tags": [], "solvedCount": 106}, {"contestId": 398, "index": "D", "name": "Instant Messanger", "type": "PROGRAMMING", "points": 2000.0, "tags": ["data structures"], "solvedCount": 1107}, {"contestId": 398, "index": "C", "name": "Tree and Array", "type": "PROGRAMMING", "points": 1500.0, "tags": ["constructive algorithms"], "solvedCount": 217}, {"contestId": 398, "index": "B", "name": "Painting The Wall", "type": "PROGRAMMING", "points": 1000.0, "tags": ["dp", "probabilities"], "solvedCount": 1111}, {"contestId": 398, "index": "A", "name": "Cards", "type": "PROGRAMMING", "points": 500.0, "tags": ["constructive algorithms", "implementation"], "solvedCount": 935}, {"contestId": 397, "index": "B", "name": "On Corruption and Numbers", "type": "PROGRAMMING", "points": 1000.0, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 771}, {"contestId": 397, "index": "A", "name": "On Segment's Own Points", "type": "PROGRAMMING", "points": 500.0, "tags": ["implementation"], "solvedCount": 2658}, {"contestId": 396, "index": "E", "name": "On Iteration of One Well-Known Function", "type": "PROGRAMMING", "points": 2500.0, "tags": ["math"], "solvedCount": 160}, {"contestId": 396, "index": "D", "name": "On Sum of Number of Inversions in Permutations", "type": "PROGRAMMING", "points": 2000.0, "tags": ["combinatorics", "math"], "solvedCount": 451}, {"contestId": 396, "index": "C", "name": "On Changing Tree", "type": "PROGRAMMING", "points": 1500.0, "tags": ["data structures", "graphs", "trees"], "solvedCount": 1698}, {"contestId": 396, "index": "B", "name": "On Sum of Fractions", "type": "PROGRAMMING", "points": 1000.0, "tags": ["math", "number theory"], "solvedCount": 1150}, {"contestId": 396, "index": "A", "name": "On Number of Decompositions into Multipliers", "type": "PROGRAMMING", "points": 500.0, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 1539}, {"contestId": 394, "index": "E", "name": "Lightbulb for Minister", "type": "PROGRAMMING", "points": 2500.0, "tags": ["geometry"], "solvedCount": 121}, {"contestId": 394, "index": "D", "name": "Physical Education and Buns", "type": "PROGRAMMING", "points": 2000.0, "tags": ["brute force", "implementation", "math"], "solvedCount": 273}, {"contestId": 394, "index": "C", "name": "Dominoes", "type": "PROGRAMMING", "points": 1500.0, "tags": ["constructive algorithms", "greedy"], "solvedCount": 529}, {"contestId": 394, "index": "B", "name": "Very Beautiful Number", "type": "PROGRAMMING", "points": 1000.0, "tags": ["math"], "solvedCount": 593}, {"contestId": 394, "index": "A", "name": "Counting Sticks", "type": "PROGRAMMING", "points": 500.0, "tags": ["brute force", "implementation"], "solvedCount": 2710}, {"contestId": 393, "index": "B", "name": "Three matrices", "type": "PROGRAMMING", "points": 1000.0, "tags": [], "solvedCount": 2035}, {"contestId": 393, "index": "A", "name": "Nineteen", "type": "PROGRAMMING", "points": 500.0, "tags": [], "solvedCount": 6837}, {"contestId": 392, "index": "E", "name": "Deleting Substrings", "type": "PROGRAMMING", "points": 2500.0, "tags": [], "solvedCount": 181}, {"contestId": 392, "index": "D", "name": "Three Arrays", "type": "PROGRAMMING", "points": 2000.0, "tags": ["data structures"], "solvedCount": 229}, {"contestId": 392, "index": "C", "name": "Yet Another Number Sequence", "type": "PROGRAMMING", "points": 1500.0, "tags": ["combinatorics", "math", "matrices"], "solvedCount": 620}, {"contestId": 392, "index": "B", "name": "Tower of Hanoi", "type": "PROGRAMMING", "points": 1000.0, "tags": ["dp"], "solvedCount": 984}, {"contestId": 392, "index": "A", "name": "Blocked Points", "type": "PROGRAMMING", "points": 500.0, "tags": ["math"], "solvedCount": 986}, {"contestId": 391, "index": "F3", "name": "Stock Trading", "type": "PROGRAMMING", "points": 10.0, "tags": [], "solvedCount": 109}, {"contestId": 391, "index": "F2", "name": "Stock Trading", "type": "PROGRAMMING", "points": 15.0, "tags": ["greedy"], "solvedCount": 111}, {"contestId": 391, "index": "F1", "name": "Stock Trading", "type": "PROGRAMMING", "points": 8.0, "tags": ["dp"], "solvedCount": 203}, {"contestId": 391, "index": "E2", "name": "Three Trees", "type": "PROGRAMMING", "points": 13.0, "tags": [], "solvedCount": 171}, {"contestId": 391, "index": "E1", "name": "Three Trees", "type": "PROGRAMMING", "points": 11.0, "tags": [], "solvedCount": 128}, {"contestId": 391, "index": "D2", "name": "Supercollider", "type": "PROGRAMMING", "points": 16.0, "tags": ["data structures"], "solvedCount": 201}, {"contestId": 391, "index": "D1", "name": "Supercollider", "type": "PROGRAMMING", "points": 3.0, "tags": ["brute force"], "solvedCount": 220}, {"contestId": 391, "index": "C3", "name": "The Tournament", "type": "PROGRAMMING", "points": 8.0, "tags": [], "solvedCount": 172}, {"contestId": 391, "index": "C2", "name": "The Tournament", "type": "PROGRAMMING", "points": 4.0, "tags": ["greedy"], "solvedCount": 139}, {"contestId": 391, "index": "C1", "name": "The Tournament", "type": "PROGRAMMING", "points": 4.0, "tags": ["brute force"], "solvedCount": 192}, {"contestId": 391, "index": "B", "name": "Word Folding", "type": "PROGRAMMING", "points": 5.0, "tags": ["brute force"], "solvedCount": 403}, {"contestId": 391, "index": "A", "name": "Genetic Engineering", "type": "PROGRAMMING", "points": 3.0, "tags": ["implementation", "two pointers"], "solvedCount": 1760}, {"contestId": 390, "index": "E", "name": "Inna and Large Sweet Matrix", "type": "PROGRAMMING", "points": 2500.0, "tags": [], "solvedCount": 263}, {"contestId": 390, "index": "D", "name": "Inna and Sweet Matrix", "type": "PROGRAMMING", "points": 2000.0, "tags": ["constructive algorithms"], "solvedCount": 525}, {"contestId": 390, "index": "C", "name": "Inna and Candy Boxes", "type": "PROGRAMMING", "points": 1500.0, "tags": ["data structures"], "solvedCount": 631}, {"contestId": 390, "index": "B", "name": "Inna, Dima and Song", "type": "PROGRAMMING", "points": 1000.0, "tags": ["implementation"], "solvedCount": 1188}, {"contestId": 390, "index": "A", "name": "Inna and Alarm Clock", "type": "PROGRAMMING", "points": 500.0, "tags": ["implementation"], "solvedCount": 3637}, {"contestId": 389, "index": "B", "name": "Fox and Cross", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 7189}, {"contestId": 389, "index": "A", "name": "Fox and Number Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 14588}, {"contestId": 388, "index": "E", "name": "Fox and Meteor Shower", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["geometry"], "solvedCount": 127}, {"contestId": 388, "index": "D", "name": "Fox and Perfect Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["math"], "solvedCount": 485}, {"contestId": 388, "index": "C", "name": "Fox and Card Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["games", "greedy", "sortings"], "solvedCount": 3640}, {"contestId": 388, "index": "B", "name": "Fox and Minimal path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "graphs", "implementation", "math"], "solvedCount": 2528}, {"contestId": 388, "index": "A", "name": "Fox and Box Accumulation", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 11736}, {"contestId": 387, "index": "E", "name": "George and Cards", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 956}, {"contestId": 387, "index": "D", "name": "George and Interesting Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["graph matchings"], "solvedCount": 1092}, {"contestId": 387, "index": "C", "name": "George and Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "implementation"], "solvedCount": 2242}, {"contestId": 387, "index": "B", "name": "George and Round", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "two pointers"], "solvedCount": 12586}, {"contestId": 387, "index": "A", "name": "George and Sleep", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 10060}, {"contestId": 386, "index": "D", "name": "Game with Points", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "graphs", "implementation", "shortest paths"], "solvedCount": 498}, {"contestId": 386, "index": "C", "name": "Diverse Substrings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "strings", "two pointers"], "solvedCount": 885}, {"contestId": 386, "index": "B", "name": "Fly, freebies, fly!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 2412}, {"contestId": 386, "index": "A", "name": "Second-Price Auction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 7173}, {"contestId": 385, "index": "E", "name": "Bear in the Field", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["math", "matrices"], "solvedCount": 614}, {"contestId": 385, "index": "D", "name": "Bear and Floodlight", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp", "geometry"], "solvedCount": 901}, {"contestId": 385, "index": "C", "name": "Bear and Prime Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "math", "number theory"], "solvedCount": 10206}, {"contestId": 385, "index": "B", "name": "Bear and Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation", "math", "strings"], "solvedCount": 10495}, {"contestId": 385, "index": "A", "name": "Bear and Raspberry", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 17001}, {"contestId": 384, "index": "B", "name": "Multitasking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation", "sortings", "two pointers"], "solvedCount": 3707}, {"contestId": 384, "index": "A", "name": "Coder", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 16838}, {"contestId": 383, "index": "E", "name": "Vowels", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 3734}, {"contestId": 383, "index": "D", "name": "Antimatter", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp"], "solvedCount": 3178}, {"contestId": 383, "index": "C", "name": "Propagating tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 7015}, {"contestId": 383, "index": "B", "name": "Volcanoes", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "implementation", "sortings", "two pointers"], "solvedCount": 748}, {"contestId": 383, "index": "A", "name": "Milking cows", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 5412}, {"contestId": 382, "index": "E", "name": "Ksenia and Combinatorics", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp"], "solvedCount": 407}, {"contestId": 382, "index": "D", "name": "Ksenia and Pawns", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 709}, {"contestId": 382, "index": "C", "name": "Arithmetic Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "sortings"], "solvedCount": 8549}, {"contestId": 382, "index": "B", "name": "Number Busters", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "math"], "solvedCount": 1457}, {"contestId": 382, "index": "A", "name": "Ksenia and Pan Scales", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 13170}, {"contestId": 381, "index": "B", "name": "Sereja and Stairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 7067}, {"contestId": 381, "index": "A", "name": "Sereja and Dima", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "two pointers"], "solvedCount": 78366}, {"contestId": 380, "index": "E", "name": "Sereja and Dividing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures"], "solvedCount": 334}, {"contestId": 380, "index": "D", "name": "Sereja and Cinema", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["combinatorics", "math"], "solvedCount": 500}, {"contestId": 380, "index": "C", "name": "Sereja and Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "schedules"], "solvedCount": 17597}, {"contestId": 380, "index": "B", "name": "Sereja and Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["graphs", "implementation"], "solvedCount": 546}, {"contestId": 380, "index": "A", "name": "Sereja and Prefixes", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "brute force"], "solvedCount": 2790}, {"contestId": 379, "index": "G", "name": "New Year Cactus", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["dp"], "solvedCount": 148}, {"contestId": 379, "index": "F", "name": "New Year Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 2588}, {"contestId": 379, "index": "E", "name": "New Year Tree Decorations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry", "schedules", "sortings"], "solvedCount": 368}, {"contestId": 379, "index": "D", "name": "New Year Letter", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "dp"], "solvedCount": 1637}, {"contestId": 379, "index": "C", "name": "New Year Ratings Change", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 6873}, {"contestId": 379, "index": "B", "name": "New Year Present", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7522}, {"contestId": 379, "index": "A", "name": "New Year Candles", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 50390}, {"contestId": 378, "index": "B", "name": "Semifinals", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 5752}, {"contestId": 378, "index": "A", "name": "Playing with Dice", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 25107}, {"contestId": 377, "index": "E", "name": "Cookie Clicker", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "geometry"], "solvedCount": 503}, {"contestId": 377, "index": "D", "name": "Developing Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 1272}, {"contestId": 377, "index": "C", "name": "Captains Mode", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["bitmasks", "dp", "games"], "solvedCount": 1183}, {"contestId": 377, "index": "B", "name": "Preparing for the Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 2254}, {"contestId": 377, "index": "A", "name": "Maze", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar"], "solvedCount": 24851}, {"contestId": 376, "index": "B", "name": "I.O.U.", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 6755}, {"contestId": 376, "index": "A", "name": "Lever", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 9627}, {"contestId": 375, "index": "E", "name": "Red and Black Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "implementation", "math"], "solvedCount": 458}, {"contestId": 375, "index": "D", "name": "Tree and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 7819}, {"contestId": 375, "index": "C", "name": "Circling Round Treasures", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "shortest paths"], "solvedCount": 582}, {"contestId": 375, "index": "B", "name": "Maximum Submatrix 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "dp", "implementation", "sortings"], "solvedCount": 5270}, {"contestId": 375, "index": "A", "name": "Divisible by Seven", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 5122}, {"contestId": 374, "index": "E", "name": "Inna and Babies", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "data structures", "dsu", "geometry", "implementation"], "solvedCount": 193}, {"contestId": 374, "index": "D", "name": "Inna and Sequence ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "trees"], "solvedCount": 933}, {"contestId": 374, "index": "C", "name": "Inna and Dima", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "implementation"], "solvedCount": 2880}, {"contestId": 374, "index": "B", "name": "Inna and Nine", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics", "greedy"], "solvedCount": 3402}, {"contestId": 374, "index": "A", "name": "Inna and Pink Pony", "type": "PROGRAMMING", "points": 500.0, "rating": 2000, "tags": ["greedy", "implementation"], "solvedCount": 3036}, {"contestId": 373, "index": "B", "name": "Making Sequences is Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "implementation", "math"], "solvedCount": 2649}, {"contestId": 373, "index": "A", "name": "Collecting Beats is Fun", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 11122}, {"contestId": 372, "index": "E", "name": "Drawing Circles is Fun", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics", "geometry"], "solvedCount": 187}, {"contestId": 372, "index": "D", "name": "Choosing Subtree is Fun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dfs and similar", "trees", "two pointers"], "solvedCount": 1042}, {"contestId": 372, "index": "C", "name": "Watching Fireworks is Fun", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "dp", "math"], "solvedCount": 4563}, {"contestId": 372, "index": "B", "name": "Counting Rectangles is Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "divide and conquer", "dp"], "solvedCount": 2746}, {"contestId": 372, "index": "A", "name": "Counting Kangaroos is Fun", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "greedy", "sortings", "two pointers"], "solvedCount": 14283}, {"contestId": 371, "index": "E", "name": "Subway Innovation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["greedy", "math", "two pointers"], "solvedCount": 1378}, {"contestId": 371, "index": "D", "name": "Vessels", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dsu", "implementation", "trees"], "solvedCount": 6132}, {"contestId": 371, "index": "C", "name": "Hamburgers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force"], "solvedCount": 30613}, {"contestId": 371, "index": "B", "name": "Fox Dividing Cheese", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math", "number theory"], "solvedCount": 12102}, {"contestId": 371, "index": "A", "name": "K-Periodic Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "implementation", "math"], "solvedCount": 6365}, {"contestId": 370, "index": "E", "name": "Summer Reading", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "greedy"], "solvedCount": 308}, {"contestId": 370, "index": "D", "name": "Broken Monitor", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 664}, {"contestId": 370, "index": "C", "name": "Mittens", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 1666}, {"contestId": 370, "index": "B", "name": "Berland Bingo", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 2586}, {"contestId": 370, "index": "A", "name": "Rook, Bishop and King", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["graphs", "math", "shortest paths"], "solvedCount": 11309}, {"contestId": 369, "index": "E", "name": "Valera and Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 2466}, {"contestId": 369, "index": "D", "name": "Valera and Fools", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 1221}, {"contestId": 369, "index": "C", "name": "Valera and Elections", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 11291}, {"contestId": 369, "index": "B", "name": "Valera and Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 6706}, {"contestId": 369, "index": "A", "name": "Valera and Plates", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation"], "solvedCount": 11747}, {"contestId": 368, "index": "B", "name": "Sereja and Suffixes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "dp"], "solvedCount": 46373}, {"contestId": 368, "index": "A", "name": "Sereja and Coat Rack", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 7743}, {"contestId": 367, "index": "E", "name": "Sereja and Intervals", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "dp"], "solvedCount": 1279}, {"contestId": 367, "index": "D", "name": "Sereja and Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "dfs and similar"], "solvedCount": 674}, {"contestId": 367, "index": "C", "name": "Sereja and the Arrangement of Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["graphs", "greedy", "sortings"], "solvedCount": 1835}, {"contestId": 367, "index": "B", "name": "Sereja ans Anagrams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures"], "solvedCount": 2578}, {"contestId": 367, "index": "A", "name": "Sereja and Algorithm ", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 4430}, {"contestId": 366, "index": "E", "name": "Dima and Magic Guitar", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "implementation", "math"], "solvedCount": 805}, {"contestId": 366, "index": "D", "name": "Dima and Trap Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "shortest paths", "two pointers"], "solvedCount": 1625}, {"contestId": 366, "index": "C", "name": "Dima and Salad", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp"], "solvedCount": 5302}, {"contestId": 366, "index": "B", "name": "Dima and To-do List", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 6964}, {"contestId": 366, "index": "A", "name": "Dima and Guards", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 4651}, {"contestId": 365, "index": "B", "name": "The Fibonacci Segment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 15047}, {"contestId": 365, "index": "A", "name": "Good Number", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 20788}, {"contestId": 364, "index": "E", "name": "Empty Rectangles", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["divide and conquer", "two pointers"], "solvedCount": 609}, {"contestId": 364, "index": "D", "name": "Ghd", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "math", "probabilities"], "solvedCount": 2325}, {"contestId": 364, "index": "C", "name": "Beautiful Set", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "number theory"], "solvedCount": 618}, {"contestId": 364, "index": "B", "name": "Free Market", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["dp", "greedy"], "solvedCount": 1208}, {"contestId": 364, "index": "A", "name": "Matrix", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "data structures", "implementation"], "solvedCount": 4827}, {"contestId": 363, "index": "E", "name": "Two Circles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 219}, {"contestId": 363, "index": "D", "name": "Renting Bikes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "greedy"], "solvedCount": 4139}, {"contestId": 363, "index": "C", "name": "Fixing Typos", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 13761}, {"contestId": 363, "index": "B", "name": "Fence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "dp"], "solvedCount": 60266}, {"contestId": 363, "index": "A", "name": "Soroban", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 11177}, {"contestId": 362, "index": "E", "name": "Petya and Pipes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["flows", "graphs", "shortest paths"], "solvedCount": 842}, {"contestId": 362, "index": "D", "name": "Fools and Foolproof Roads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 966}, {"contestId": 362, "index": "C", "name": "Insertion Sort", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures", "dp", "implementation", "math"], "solvedCount": 1912}, {"contestId": 362, "index": "B", "name": "Petya and Staircases", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "sortings"], "solvedCount": 14364}, {"contestId": 362, "index": "A", "name": "Two Semiknights Meet", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 2733}, {"contestId": 361, "index": "B", "name": "Levko and Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 8502}, {"contestId": 361, "index": "A", "name": "Levko and Table", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 17414}, {"contestId": 360, "index": "E", "name": "Levko and Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 749}, {"contestId": 360, "index": "D", "name": "Levko and Sets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["number theory"], "solvedCount": 433}, {"contestId": 360, "index": "C", "name": "Levko and Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["combinatorics", "dp"], "solvedCount": 1163}, {"contestId": 360, "index": "B", "name": "Levko and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "dp"], "solvedCount": 3254}, {"contestId": 360, "index": "A", "name": "Levko and Array Recovery", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["greedy", "implementation"], "solvedCount": 2104}, {"contestId": 359, "index": "E", "name": "Neatness", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar"], "solvedCount": 492}, {"contestId": 359, "index": "D", "name": "Pair of Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "math", "two pointers"], "solvedCount": 5446}, {"contestId": 359, "index": "C", "name": "Prime Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["math", "number theory"], "solvedCount": 3390}, {"contestId": 359, "index": "B", "name": "Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 8422}, {"contestId": 359, "index": "A", "name": "Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 8966}, {"contestId": 358, "index": "E", "name": "Dima and Kicks", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["brute force", "dsu", "graphs", "implementation"], "solvedCount": 411}, {"contestId": 358, "index": "D", "name": "Dima and Hares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dp", "greedy"], "solvedCount": 4264}, {"contestId": 358, "index": "C", "name": "Dima and Containers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 2171}, {"contestId": 358, "index": "B", "name": "Dima and Text Messages", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "strings"], "solvedCount": 3804}, {"contestId": 358, "index": "A", "name": "Dima and Continuous Line", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "implementation"], "solvedCount": 8003}, {"contestId": 357, "index": "B", "name": "Flag Day", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 8406}, {"contestId": 357, "index": "A", "name": "Group of Students", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 7171}, {"contestId": 356, "index": "E", "name": "Xenia and String Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings"], "solvedCount": 430}, {"contestId": 356, "index": "D", "name": "Bags and Coins", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "solvedCount": 1014}, {"contestId": 356, "index": "C", "name": "Compartments", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation"], "solvedCount": 1323}, {"contestId": 356, "index": "B", "name": "Xenia and Hamming", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["implementation", "math"], "solvedCount": 2036}, {"contestId": 356, "index": "A", "name": "Knight Tournament", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "dsu"], "solvedCount": 15289}, {"contestId": 355, "index": "B", "name": "Vasya and Public Transport", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 4649}, {"contestId": 355, "index": "A", "name": "Vasya and Digital Root", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9692}, {"contestId": 354, "index": "E", "name": "Lucky Number Representation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "dp"], "solvedCount": 891}, {"contestId": 354, "index": "D", "name": "Transferring Pyramid", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp"], "solvedCount": 480}, {"contestId": 354, "index": "C", "name": "Vasya and Beautiful Arrays", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "dp", "number theory"], "solvedCount": 3218}, {"contestId": 354, "index": "B", "name": "Game with Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "dp", "games"], "solvedCount": 470}, {"contestId": 354, "index": "A", "name": "Vasya and Robot", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "greedy", "math"], "solvedCount": 5551}, {"contestId": 353, "index": "E", "name": "Antichain", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["dp", "graph matchings", "greedy"], "solvedCount": 631}, {"contestId": 353, "index": "D", "name": "Queue", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "dp"], "solvedCount": 3032}, {"contestId": 353, "index": "C", "name": "Find Maximum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation", "math", "number theory"], "solvedCount": 5091}, {"contestId": 353, "index": "B", "name": "Two Heaps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation", "math", "sortings"], "solvedCount": 2359}, {"contestId": 353, "index": "A", "name": "Domino", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 19446}, {"contestId": 352, "index": "B", "name": "Jeff and Periods", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 17488}, {"contestId": 352, "index": "A", "name": "Jeff and Digits", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation", "math"], "solvedCount": 27338}, {"contestId": 351, "index": "E", "name": "Jeff and Permutation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["greedy"], "solvedCount": 1732}, {"contestId": 351, "index": "D", "name": "Jeff and Removing Periods", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 1243}, {"contestId": 351, "index": "C", "name": "Jeff and Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp", "matrices"], "solvedCount": 591}, {"contestId": 351, "index": "B", "name": "Jeff and Furik", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp", "probabilities"], "solvedCount": 2625}, {"contestId": 351, "index": "A", "name": "Jeff and Rounding", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "greedy", "implementation", "math"], "solvedCount": 2994}, {"contestId": 350, "index": "E", "name": "Wrong Floyd", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 811}, {"contestId": 350, "index": "D", "name": "Looking for Owls", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["binary search", "data structures", "geometry", "hashing", "sortings"], "solvedCount": 280}, {"contestId": 350, "index": "C", "name": "Bombs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 6694}, {"contestId": 350, "index": "B", "name": "Resort", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["graphs"], "solvedCount": 3273}, {"contestId": 350, "index": "A", "name": "TL", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 17055}, {"contestId": 349, "index": "B", "name": "Color the Fence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures", "dp", "greedy", "implementation"], "solvedCount": 14562}, {"contestId": 349, "index": "A", "name": "Cinema Line", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 32304}, {"contestId": 348, "index": "E", "name": "Pilgrims", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 469}, {"contestId": 348, "index": "D", "name": "Turtles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "matrices"], "solvedCount": 2046}, {"contestId": 348, "index": "C", "name": "Subset Sums", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "data structures"], "solvedCount": 2480}, {"contestId": 348, "index": "B", "name": "Apple Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "number theory", "trees"], "solvedCount": 2158}, {"contestId": 348, "index": "A", "name": "Mafia", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "math", "sortings"], "solvedCount": 13990}, {"contestId": 347, "index": "B", "name": "Fixed Points", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation", "math"], "solvedCount": 9625}, {"contestId": 347, "index": "A", "name": "Difference Row", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 9489}, {"contestId": 346, "index": "E", "name": "Doodle Jump", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["math", "number theory"], "solvedCount": 280}, {"contestId": 346, "index": "D", "name": "Robot Control", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 796}, {"contestId": 346, "index": "C", "name": "Number Transformation II", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["greedy", "math"], "solvedCount": 1466}, {"contestId": 346, "index": "B", "name": "Lucky Common Subsequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "strings"], "solvedCount": 3940}, {"contestId": 346, "index": "A", "name": "Alice and Bob", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["games", "math", "number theory"], "solvedCount": 9043}, {"contestId": 345, "index": "G", "name": "Suffix Subgroup", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "strings"], "solvedCount": 103}, {"contestId": 345, "index": "F", "name": "Superstitions Inspection", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special"], "solvedCount": 48}, {"contestId": 345, "index": "E", "name": "Black Cat Rush", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special"], "solvedCount": 53}, {"contestId": 345, "index": "D", "name": "Chain Letter", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "dfs and similar", "graphs"], "solvedCount": 82}, {"contestId": 345, "index": "C", "name": "Counting Fridays", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 128}, {"contestId": 345, "index": "B", "name": "Triskaidekaphobia", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"], "solvedCount": 127}, {"contestId": 345, "index": "A", "name": "Expecting Trouble", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "probabilities"], "solvedCount": 515}, {"contestId": 344, "index": "B", "name": "Simple Molecules", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "graphs", "math"], "solvedCount": 9284}, {"contestId": 344, "index": "A", "name": "Magnets", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 137783}, {"contestId": 343, "index": "E", "name": "Pumping Stations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dfs and similar", "divide and conquer", "flows", "graphs", "greedy", "trees"], "solvedCount": 848}, {"contestId": 343, "index": "D", "name": "Water Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 6353}, {"contestId": 343, "index": "C", "name": "Read Time", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "greedy", "two pointers"], "solvedCount": 3117}, {"contestId": 343, "index": "B", "name": "Alternating Current", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 15308}, {"contestId": 343, "index": "A", "name": "Rational Resistance", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 9575}, {"contestId": 342, "index": "E", "name": "Xenia and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 9770}, {"contestId": 342, "index": "D", "name": "Xenia and Dominoes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "dfs and similar", "dp"], "solvedCount": 535}, {"contestId": 342, "index": "C", "name": "Cupboard and Balloons", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["geometry"], "solvedCount": 1943}, {"contestId": 342, "index": "B", "name": "Xenia and Spies", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 4094}, {"contestId": 342, "index": "A", "name": "Xenia and Divisors", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 13406}, {"contestId": 341, "index": "E", "name": "Candies Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 495}, {"contestId": 341, "index": "D", "name": "Iahub and Xors", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 1313}, {"contestId": 340, "index": "E", "name": "Iahub and Permutations", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["combinatorics", "math"], "solvedCount": 2606}, {"contestId": 340, "index": "D", "name": "Bubble Sort Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["binary search", "data structures", "dp"], "solvedCount": 7534}, {"contestId": 340, "index": "C", "name": "Tourist Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["combinatorics", "implementation", "math"], "solvedCount": 4528}, {"contestId": 340, "index": "B", "name": "Maximal Area Quadrilateral", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["brute force", "geometry"], "solvedCount": 2196}, {"contestId": 340, "index": "A", "name": "The Wall", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["math"], "solvedCount": 8011}, {"contestId": 339, "index": "E", "name": "Three Swaps", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "greedy"], "solvedCount": 576}, {"contestId": 339, "index": "D", "name": "Xenia and Bit Operations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "trees"], "solvedCount": 29524}, {"contestId": 339, "index": "C", "name": "Xenia and Weights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 8565}, {"contestId": 339, "index": "B", "name": "Xenia and Ringroad", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 76279}, {"contestId": 339, "index": "A", "name": "Helpful Maths", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "implementation", "sortings", "strings"], "solvedCount": 247918}, {"contestId": 338, "index": "E", "name": "Optimize!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures"], "solvedCount": 1099}, {"contestId": 338, "index": "D", "name": "GCD Table", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["chinese remainder theorem", "math", "number theory"], "solvedCount": 1254}, {"contestId": 337, "index": "E", "name": "Divisor Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "number theory", "trees"], "solvedCount": 1065}, {"contestId": 337, "index": "D", "name": "Book of Evil", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "divide and conquer", "dp", "trees"], "solvedCount": 6509}, {"contestId": 337, "index": "C", "name": "Quiz", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "greedy", "math", "matrices", "number theory"], "solvedCount": 5096}, {"contestId": 337, "index": "B", "name": "Routine Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy", "math", "number theory"], "solvedCount": 9819}, {"contestId": 337, "index": "A", "name": "Puzzles", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy"], "solvedCount": 87637}, {"contestId": 336, "index": "E", "name": "Vasily the Bear and Painting Square", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "combinatorics", "dp", "implementation"], "solvedCount": 125}, {"contestId": 336, "index": "D", "name": "Vasily the Bear and Beautiful Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 1124}, {"contestId": 336, "index": "C", "name": "Vasily the Bear and Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "greedy", "implementation", "number theory"], "solvedCount": 2550}, {"contestId": 336, "index": "B", "name": "Vasily the Bear and Fly", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["math"], "solvedCount": 1320}, {"contestId": 336, "index": "A", "name": "Vasily the Bear and Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 10440}, {"contestId": 335, "index": "F", "name": "Buy One, Get One Free", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "greedy"], "solvedCount": 703}, {"contestId": 335, "index": "E", "name": "Counting Skyscrapers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "math", "probabilities"], "solvedCount": 237}, {"contestId": 335, "index": "D", "name": "Rectangles and Square", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "dp"], "solvedCount": 336}, {"contestId": 335, "index": "C", "name": "More Reclamation", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["games"], "solvedCount": 566}, {"contestId": 335, "index": "B", "name": "Palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "dp"], "solvedCount": 2254}, {"contestId": 335, "index": "A", "name": "Banana", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "greedy"], "solvedCount": 2723}, {"contestId": 334, "index": "B", "name": "Eight Point Sets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["sortings"], "solvedCount": 3745}, {"contestId": 334, "index": "A", "name": "Candy Bags", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 19512}, {"contestId": 333, "index": "E", "name": "Summer Earnings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "bitmasks", "brute force", "geometry", "sortings"], "solvedCount": 1199}, {"contestId": 333, "index": "D", "name": "Characteristics of Rectangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "implementation", "sortings"], "solvedCount": 2175}, {"contestId": 333, "index": "C", "name": "Lucky Tickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["brute force", "constructive algorithms"], "solvedCount": 404}, {"contestId": 333, "index": "B", "name": "Chips", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 2693}, {"contestId": 333, "index": "A", "name": "Secrets", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 4138}, {"contestId": 332, "index": "E", "name": "Binary Key", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "greedy", "implementation"], "solvedCount": 326}, {"contestId": 332, "index": "D", "name": "Theft of Blueprints", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["graphs", "math"], "solvedCount": 395}, {"contestId": 332, "index": "C", "name": "Students' Revenge", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 980}, {"contestId": 332, "index": "B", "name": "Maximum Absurdity", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "dp", "implementation"], "solvedCount": 8404}, {"contestId": 332, "index": "A", "name": "Down the Hatch!", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 3634}, {"contestId": 331, "index": "E2", "name": "Deja Vu", "type": "PROGRAMMING", "points": 50.0, "rating": 3100, "tags": ["constructive algorithms", "dp"], "solvedCount": 230}, {"contestId": 331, "index": "E1", "name": "Deja Vu", "type": "PROGRAMMING", "points": 50.0, "rating": 2900, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 203}, {"contestId": 331, "index": "D3", "name": "Escaping on Beaveractor", "type": "PROGRAMMING", "points": 40.0, "rating": 3000, "tags": ["data structures", "implementation", "trees"], "solvedCount": 186}, {"contestId": 331, "index": "D2", "name": "Escaping on Beaveractor", "type": "PROGRAMMING", "points": 30.0, "rating": 2600, "tags": ["graphs"], "solvedCount": 151}, {"contestId": 331, "index": "D1", "name": "Escaping on Beaveractor", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["dfs and similar", "implementation"], "solvedCount": 216}, {"contestId": 331, "index": "C3", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 60.0, "rating": 2500, "tags": ["dp"], "solvedCount": 596}, {"contestId": 331, "index": "C2", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 20.0, "rating": 2400, "tags": ["dp"], "solvedCount": 417}, {"contestId": 331, "index": "C1", "name": "The Great Julya Calendar", "type": "PROGRAMMING", "points": 20.0, "rating": 1100, "tags": ["dp"], "solvedCount": 6644}, {"contestId": 331, "index": "B2", "name": "Shave Beaver!", "type": "PROGRAMMING", "points": 70.0, "rating": 1900, "tags": ["data structures"], "solvedCount": 762}, {"contestId": 331, "index": "B1", "name": "Shave Beaver!", "type": "PROGRAMMING", "points": 30.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 770}, {"contestId": 331, "index": "A2", "name": "Oh Sweet Beaverette", "type": "PROGRAMMING", "points": 70.0, "rating": 1500, "tags": ["data structures", "sortings"], "solvedCount": 1480}, {"contestId": 331, "index": "A1", "name": "Oh Sweet Beaverette", "type": "PROGRAMMING", "points": 30.0, "rating": 1400, "tags": ["brute force", "implementation"], "solvedCount": 1442}, {"contestId": 330, "index": "B", "name": "Road Construction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "graphs"], "solvedCount": 18449}, {"contestId": 330, "index": "A", "name": "Cakeminator", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 30218}, {"contestId": 329, "index": "E", "name": "Evil", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["math"], "solvedCount": 177}, {"contestId": 329, "index": "D", "name": "The Evil Temple and the Moving Rocks", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 430}, {"contestId": 329, "index": "C", "name": "Graph Reconstruction", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms"], "solvedCount": 977}, {"contestId": 329, "index": "B", "name": "Biridian Forest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar", "shortest paths"], "solvedCount": 7029}, {"contestId": 329, "index": "A", "name": "Purification", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 4736}, {"contestId": 328, "index": "B", "name": "Sheldon and Ice Pieces", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy"], "solvedCount": 1453}, {"contestId": 328, "index": "A", "name": "IQ Test", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["implementation"], "solvedCount": 2240}, {"contestId": 327, "index": "E", "name": "Axis Walking", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "meet-in-the-middle"], "solvedCount": 1510}, {"contestId": 327, "index": "D", "name": "Block Tower", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 2387}, {"contestId": 327, "index": "C", "name": "Magic Five", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["combinatorics", "math"], "solvedCount": 3469}, {"contestId": 327, "index": "B", "name": "Hungry Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["math"], "solvedCount": 20903}, {"contestId": 327, "index": "A", "name": "Flipping Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "dp", "implementation"], "solvedCount": 46231}, {"contestId": 325, "index": "E", "name": "The Red Button", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 897}, {"contestId": 325, "index": "D", "name": "Reclamation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dsu"], "solvedCount": 560}, {"contestId": 325, "index": "C", "name": "Monsters and Diamonds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dfs and similar", "graphs", "shortest paths"], "solvedCount": 420}, {"contestId": 325, "index": "B", "name": "Stadium and Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "math"], "solvedCount": 1615}, {"contestId": 325, "index": "A", "name": "Square and Rectangles", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation"], "solvedCount": 2204}, {"contestId": 323, "index": "C", "name": "Two permutations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 635}, {"contestId": 323, "index": "B", "name": "Tournament-graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "graphs"], "solvedCount": 425}, {"contestId": 323, "index": "A", "name": "Black-and-White Cube", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "constructive algorithms"], "solvedCount": 869}, {"contestId": 322, "index": "B", "name": "Ciel and Flowers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["combinatorics", "math"], "solvedCount": 12635}, {"contestId": 322, "index": "A", "name": "Ciel and Dancing", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy"], "solvedCount": 8688}, {"contestId": 321, "index": "E", "name": "Ciel and Gondolas", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 5690}, {"contestId": 321, "index": "D", "name": "Ciel and Flipboard", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "greedy", "math"], "solvedCount": 583}, {"contestId": 321, "index": "C", "name": "Ciel the Commander", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "greedy", "trees"], "solvedCount": 8409}, {"contestId": 321, "index": "B", "name": "Ciel and Duel", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp", "flows", "greedy"], "solvedCount": 3439}, {"contestId": 321, "index": "A", "name": "Ciel and Robot", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "implementation", "math"], "solvedCount": 3766}, {"contestId": 320, "index": "B", "name": "Ping-Pong (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar", "graphs"], "solvedCount": 7573}, {"contestId": 320, "index": "A", "name": "Magic Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "greedy"], "solvedCount": 42579}, {"contestId": 319, "index": "E", "name": "Ping-Pong", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 700}, {"contestId": 319, "index": "D", "name": "Have You Ever Heard About the Word?", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["greedy", "hashing", "string suffix structures", "strings"], "solvedCount": 695}, {"contestId": 319, "index": "C", "name": "Kalila and Dimna in the Logging Industry", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "geometry"], "solvedCount": 5920}, {"contestId": 319, "index": "B", "name": "Psychos in a Line", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "implementation"], "solvedCount": 4469}, {"contestId": 319, "index": "A", "name": "Malek Dance Club", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "math"], "solvedCount": 2935}, {"contestId": 318, "index": "B", "name": "Strings of Power", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "strings", "two pointers"], "solvedCount": 8004}, {"contestId": 318, "index": "A", "name": "Even Odds", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math"], "solvedCount": 129214}, {"contestId": 317, "index": "E", "name": "Princess and Her Shadow", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "shortest paths"], "solvedCount": 164}, {"contestId": 317, "index": "D", "name": "Game with Powers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["dp", "games"], "solvedCount": 1166}, {"contestId": 317, "index": "C", "name": "Balance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 528}, {"contestId": 317, "index": "B", "name": "Ants", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "implementation"], "solvedCount": 1632}, {"contestId": 317, "index": "A", "name": "Perfect Pair", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force"], "solvedCount": 4816}, {"contestId": 316, "index": "G3", "name": "Good Substrings", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["string suffix structures"], "solvedCount": 519}, {"contestId": 316, "index": "G2", "name": "Good Substrings", "type": "PROGRAMMING", "points": 40.0, "rating": 2200, "tags": ["string suffix structures"], "solvedCount": 495}, {"contestId": 316, "index": "G1", "name": "Good Substrings", "type": "PROGRAMMING", "points": 30.0, "rating": 1700, "tags": ["hashing", "strings"], "solvedCount": 1038}, {"contestId": 316, "index": "F3", "name": "Suns and Rays", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "implementation"], "solvedCount": 193}, {"contestId": 316, "index": "F2", "name": "Suns and Rays", "type": "PROGRAMMING", "points": 40.0, "rating": 2300, "tags": [], "solvedCount": 174}, {"contestId": 316, "index": "F1", "name": "Suns and Rays", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["dfs and similar", "implementation"], "solvedCount": 190}, {"contestId": 316, "index": "E3", "name": "Summer Homework", "type": "PROGRAMMING", "points": 30.0, "rating": 2300, "tags": ["data structures", "math"], "solvedCount": 545}, {"contestId": 316, "index": "E2", "name": "Summer Homework", "type": "PROGRAMMING", "points": 40.0, "rating": 2300, "tags": ["data structures", "math"], "solvedCount": 407}, {"contestId": 316, "index": "E1", "name": "Summer Homework", "type": "PROGRAMMING", "points": 30.0, "rating": 1500, "tags": ["brute force", "data structures"], "solvedCount": 1514}, {"contestId": 316, "index": "D3", "name": "PE Lesson", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["dp", "math"], "solvedCount": 636}, {"contestId": 316, "index": "D2", "name": "PE Lesson", "type": "PROGRAMMING", "points": 40.0, "rating": 2300, "tags": ["dp"], "solvedCount": 484}, {"contestId": 316, "index": "D1", "name": "PE Lesson", "type": "PROGRAMMING", "points": 30.0, "rating": 2300, "tags": ["brute force", "dp"], "solvedCount": 559}, {"contestId": 316, "index": "C2", "name": "Tidying Up", "type": "PROGRAMMING", "points": 70.0, "rating": 2300, "tags": ["flows", "graph matchings"], "solvedCount": 651}, {"contestId": 316, "index": "C1", "name": "Tidying Up", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["flows"], "solvedCount": 575}, {"contestId": 316, "index": "B2", "name": "EKG", "type": "PROGRAMMING", "points": 70.0, "rating": 1600, "tags": ["dfs and similar", "dp"], "solvedCount": 1720}, {"contestId": 316, "index": "B1", "name": "EKG", "type": "PROGRAMMING", "points": 30.0, "rating": 1500, "tags": ["brute force", "dfs and similar"], "solvedCount": 1443}, {"contestId": 316, "index": "A2", "name": "Special Task", "type": "PROGRAMMING", "points": 70.0, "rating": 1400, "tags": ["math"], "solvedCount": 2195}, {"contestId": 316, "index": "A1", "name": "Special Task", "type": "PROGRAMMING", "points": 30.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 2762}, {"contestId": 315, "index": "B", "name": "Sereja and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 7477}, {"contestId": 315, "index": "A", "name": "Sereja and Bottles", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force"], "solvedCount": 11804}, {"contestId": 314, "index": "E", "name": "Sereja and Squares", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dp"], "solvedCount": 388}, {"contestId": 314, "index": "D", "name": "Sereja and Straight Lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "data structures", "geometry", "sortings", "two pointers"], "solvedCount": 558}, {"contestId": 314, "index": "C", "name": "Sereja and Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dp"], "solvedCount": 1896}, {"contestId": 314, "index": "B", "name": "Sereja and Periods", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "dfs and similar", "strings"], "solvedCount": 1567}, {"contestId": 314, "index": "A", "name": "Sereja and Contest", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 2122}, {"contestId": 313, "index": "E", "name": "Ilya and Two Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "dsu", "greedy"], "solvedCount": 583}, {"contestId": 313, "index": "D", "name": "Ilya and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp"], "solvedCount": 1584}, {"contestId": 313, "index": "C", "name": "Ilya and Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 5791}, {"contestId": 313, "index": "B", "name": "Ilya and Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["dp", "implementation"], "solvedCount": 49520}, {"contestId": 313, "index": "A", "name": "Ilya and Bank Account", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "number theory"], "solvedCount": 61218}, {"contestId": 312, "index": "B", "name": "Archer", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["math", "probabilities"], "solvedCount": 12626}, {"contestId": 312, "index": "A", "name": "Whose sentence is it?", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 5189}, {"contestId": 311, "index": "E", "name": "Biologist", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["flows"], "solvedCount": 1403}, {"contestId": 311, "index": "D", "name": "Interval Cubing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "math"], "solvedCount": 699}, {"contestId": 311, "index": "C", "name": "Fetch the Treasure", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "data structures", "graphs", "shortest paths"], "solvedCount": 520}, {"contestId": 311, "index": "B", "name": "Cats Transport", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["data structures", "dp"], "solvedCount": 3974}, {"contestId": 311, "index": "A", "name": "The Closest Pair", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 4140}, {"contestId": 309, "index": "E", "name": "Sheep", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["binary search", "greedy"], "solvedCount": 263}, {"contestId": 309, "index": "D", "name": "Tennis Rackets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["brute force", "geometry"], "solvedCount": 185}, {"contestId": 309, "index": "C", "name": "Memory for Arrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "bitmasks", "greedy"], "solvedCount": 1412}, {"contestId": 309, "index": "B", "name": "Context Advertising", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["dp", "two pointers"], "solvedCount": 764}, {"contestId": 309, "index": "A", "name": "Morning run", "type": "PROGRAMMING", "points": 500.0, "rating": 2000, "tags": ["binary search", "math", "two pointers"], "solvedCount": 508}, {"contestId": 306, "index": "D", "name": "Polygon", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"], "solvedCount": 306}, {"contestId": 306, "index": "C", "name": "White, Black and White Again", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "number theory"], "solvedCount": 558}, {"contestId": 306, "index": "B", "name": "Optimizer", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 476}, {"contestId": 306, "index": "A", "name": "Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 7660}, {"contestId": 305, "index": "E", "name": "Playing with String", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["games"], "solvedCount": 700}, {"contestId": 305, "index": "D", "name": "Olya and Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["combinatorics", "math"], "solvedCount": 530}, {"contestId": 305, "index": "C", "name": "Ivan and Powers of Two", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy", "implementation"], "solvedCount": 2554}, {"contestId": 305, "index": "B", "name": "Continued Fractions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation", "math"], "solvedCount": 2198}, {"contestId": 305, "index": "A", "name": "Strange Addition", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 5020}, {"contestId": 304, "index": "B", "name": "Calendar", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 3050}, {"contestId": 304, "index": "A", "name": "Pythagorean Theorem II", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "math"], "solvedCount": 11581}, {"contestId": 303, "index": "E", "name": "Random Ranking", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dp", "math", "probabilities"], "solvedCount": 348}, {"contestId": 303, "index": "D", "name": "Rotatable Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["math", "number theory"], "solvedCount": 315}, {"contestId": 303, "index": "C", "name": "Minimum Modular", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "graphs", "math", "number theory"], "solvedCount": 933}, {"contestId": 303, "index": "B", "name": "Rectangle Puzzle II", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 1386}, {"contestId": 303, "index": "A", "name": "Lucky Permutation Triple", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 8334}, {"contestId": 302, "index": "B", "name": "Eugeny and Play List", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "implementation", "two pointers"], "solvedCount": 8912}, {"contestId": 302, "index": "A", "name": "Eugeny and Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 9423}, {"contestId": 301, "index": "E", "name": "Yaroslav and Arrangements", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp"], "solvedCount": 394}, {"contestId": 301, "index": "D", "name": "Yaroslav and Divisors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 2736}, {"contestId": 301, "index": "C", "name": "Yaroslav and Algorithm", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 481}, {"contestId": 301, "index": "B", "name": "Yaroslav and Time", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "graphs", "shortest paths"], "solvedCount": 2670}, {"contestId": 301, "index": "A", "name": "Yaroslav and Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 3157}, {"contestId": 300, "index": "E", "name": "Empire Strikes Back", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["binary search", "math", "number theory"], "solvedCount": 1077}, {"contestId": 300, "index": "D", "name": "Painting Square", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["dp", "fft"], "solvedCount": 809}, {"contestId": 300, "index": "C", "name": "Beautiful Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "combinatorics"], "solvedCount": 10686}, {"contestId": 300, "index": "B", "name": "Coach", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "graphs"], "solvedCount": 6813}, {"contestId": 300, "index": "A", "name": "Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 25129}, {"contestId": 299, "index": "B", "name": "Ksusha the Squirrel", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 5863}, {"contestId": 299, "index": "A", "name": "Ksusha and Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "number theory", "sortings"], "solvedCount": 8833}, {"contestId": 298, "index": "B", "name": "Sail", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 15193}, {"contestId": 298, "index": "A", "name": "Snow Footprints", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "implementation"], "solvedCount": 11381}, {"contestId": 297, "index": "E", "name": "Mystic Carvings", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 399}, {"contestId": 297, "index": "D", "name": "Color the Carpet", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 616}, {"contestId": 297, "index": "C", "name": "Splitting the Uniqueness", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms"], "solvedCount": 1000}, {"contestId": 297, "index": "B", "name": "Fish Weight", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3634}, {"contestId": 297, "index": "A", "name": "Parity Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms"], "solvedCount": 3741}, {"contestId": 296, "index": "B", "name": "Yaroslav and Two Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"], "solvedCount": 2501}, {"contestId": 296, "index": "A", "name": "Yaroslav and Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 24985}, {"contestId": 295, "index": "E", "name": "Yaroslav and Points", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 764}, {"contestId": 295, "index": "D", "name": "Greg and Caves", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dp"], "solvedCount": 702}, {"contestId": 295, "index": "C", "name": "Greg and Friends", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "graphs", "shortest paths"], "solvedCount": 1820}, {"contestId": 295, "index": "B", "name": "Greg and Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 16116}, {"contestId": 295, "index": "A", "name": "Greg and Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 22083}, {"contestId": 294, "index": "E", "name": "Shaass the Great", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp", "trees"], "solvedCount": 1034}, {"contestId": 294, "index": "D", "name": "Shaass and Painter Robot", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "implementation", "number theory"], "solvedCount": 372}, {"contestId": 294, "index": "C", "name": "Shaass and Lights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "number theory"], "solvedCount": 4109}, {"contestId": 294, "index": "B", "name": "Shaass and Bookshelf", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp", "greedy"], "solvedCount": 4800}, {"contestId": 294, "index": "A", "name": "Shaass and Oskols", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 25938}, {"contestId": 293, "index": "E", "name": "Close Vertices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 1710}, {"contestId": 293, "index": "D", "name": "Ksusha and Square", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["geometry", "math", "probabilities", "two pointers"], "solvedCount": 252}, {"contestId": 293, "index": "C", "name": "Cube Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["brute force", "math", "number theory"], "solvedCount": 597}, {"contestId": 293, "index": "B", "name": "Distinct Paths", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["brute force", "combinatorics"], "solvedCount": 925}, {"contestId": 293, "index": "A", "name": "Weird Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["games", "greedy"], "solvedCount": 3038}, {"contestId": 292, "index": "E", "name": "Copying Data", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures"], "solvedCount": 4518}, {"contestId": 292, "index": "D", "name": "Connected Components", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "dsu"], "solvedCount": 2600}, {"contestId": 292, "index": "C", "name": "Beautiful IP Addresses", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force"], "solvedCount": 1246}, {"contestId": 292, "index": "B", "name": "Network Topology", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["graphs", "implementation"], "solvedCount": 9606}, {"contestId": 292, "index": "A", "name": "SMSC", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 2767}, {"contestId": 291, "index": "E", "name": "Tree-String Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["*special", "dfs and similar", "hashing", "strings"], "solvedCount": 1450}, {"contestId": 291, "index": "D", "name": "Parallel Programming", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "greedy"], "solvedCount": 1501}, {"contestId": 291, "index": "C", "name": "Network Mask", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["*special", "bitmasks", "brute force", "implementation"], "solvedCount": 1743}, {"contestId": 291, "index": "B", "name": "Command Line Arguments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["*special", "implementation", "strings"], "solvedCount": 3052}, {"contestId": 291, "index": "A", "name": "Spyke Talks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["*special", "implementation", "sortings"], "solvedCount": 6308}, {"contestId": 290, "index": "F", "name": "Greedy Petya", "type": "PROGRAMMING", "rating": 2800, "tags": ["*special", "dfs and similar", "graphs", "greedy"], "solvedCount": 145}, {"contestId": 290, "index": "E", "name": "HQ", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "constructive algorithms"], "solvedCount": 216}, {"contestId": 290, "index": "D", "name": "Orange", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"], "solvedCount": 1857}, {"contestId": 290, "index": "C", "name": "WTF?", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "graph matchings", "implementation", "trees"], "solvedCount": 1587}, {"contestId": 290, "index": "B", "name": "QR code", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "implementation"], "solvedCount": 2528}, {"contestId": 290, "index": "A", "name": "Mysterious strings", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"], "solvedCount": 3090}, {"contestId": 289, "index": "B", "name": "Polo the Penguin and Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "dp", "implementation", "sortings", "ternary search"], "solvedCount": 18354}, {"contestId": 289, "index": "A", "name": "Polo the Penguin and Segments ", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 9894}, {"contestId": 288, "index": "E", "name": "Polo the Penguin and Lucky Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "implementation", "math"], "solvedCount": 322}, {"contestId": 288, "index": "D", "name": "Polo the Penguin and Trees ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "trees"], "solvedCount": 775}, {"contestId": 288, "index": "C", "name": "Polo the Penguin and XOR operation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 2384}, {"contestId": 288, "index": "B", "name": "Polo the Penguin and Houses ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["combinatorics"], "solvedCount": 3042}, {"contestId": 288, "index": "A", "name": "Polo the Penguin and Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 6605}, {"contestId": 287, "index": "B", "name": "Pipeline", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "math"], "solvedCount": 10863}, {"contestId": 287, "index": "A", "name": "IQ Test", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 21176}, {"contestId": 286, "index": "E", "name": "Ladies' Shop", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "fft", "math"], "solvedCount": 878}, {"contestId": 286, "index": "D", "name": "Tourists", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "sortings"], "solvedCount": 401}, {"contestId": 286, "index": "C", "name": "Main Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["greedy", "implementation"], "solvedCount": 1561}, {"contestId": 286, "index": "B", "name": "Shifting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["implementation"], "solvedCount": 1143}, {"contestId": 286, "index": "A", "name": "Lucky Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 3257}, {"contestId": 285, "index": "E", "name": "Positions in Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "math"], "solvedCount": 1150}, {"contestId": 285, "index": "D", "name": "Permutation Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dp", "implementation", "meet-in-the-middle"], "solvedCount": 1621}, {"contestId": 285, "index": "C", "name": "Building Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 25349}, {"contestId": 285, "index": "B", "name": "Find Marble", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 15436}, {"contestId": 285, "index": "A", "name": "Slightly Decreasing Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 13861}, {"contestId": 284, "index": "B", "name": "Cows and Poker Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 7106}, {"contestId": 284, "index": "A", "name": "Cows and Primitive Roots", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation", "math", "number theory"], "solvedCount": 7040}, {"contestId": 283, "index": "E", "name": "Cow Tennis Tournament", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["combinatorics", "data structures", "math"], "solvedCount": 804}, {"contestId": 283, "index": "D", "name": "Cows and Cool Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "math", "number theory"], "solvedCount": 576}, {"contestId": 283, "index": "C", "name": "Coin Troubles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp"], "solvedCount": 1499}, {"contestId": 283, "index": "B", "name": "Cow Program", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs"], "solvedCount": 3769}, {"contestId": 283, "index": "A", "name": "Cows and Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 6750}, {"contestId": 282, "index": "E", "name": "Sausage Maximization", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 3990}, {"contestId": 282, "index": "D", "name": "Yet Another Number Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "games"], "solvedCount": 1534}, {"contestId": 282, "index": "C", "name": "XOR and OR", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 9814}, {"contestId": 282, "index": "B", "name": "Painting Eggs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math"], "solvedCount": 13570}, {"contestId": 282, "index": "A", "name": "Bit++", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 315695}, {"contestId": 281, "index": "B", "name": "Nearest Fraction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "implementation", "two pointers"], "solvedCount": 3138}, {"contestId": 281, "index": "A", "name": "Word Capitalization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 244460}, {"contestId": 280, "index": "E", "name": "Sequence Transformation", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "data structures", "dp", "implementation", "math"], "solvedCount": 245}, {"contestId": 280, "index": "D", "name": "k-Maximum Subsequence Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "flows", "graphs", "implementation"], "solvedCount": 1506}, {"contestId": 280, "index": "C", "name": "Game on Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["implementation", "math", "probabilities", "trees"], "solvedCount": 4609}, {"contestId": 280, "index": "B", "name": "Maximum Xor Secondary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["data structures", "implementation", "two pointers"], "solvedCount": 4978}, {"contestId": 280, "index": "A", "name": "Rectangle Puzzle", "type": "PROGRAMMING", "points": 500.0, "rating": 2000, "tags": ["geometry"], "solvedCount": 1500}, {"contestId": 279, "index": "E", "name": "Beautiful Decomposition", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "games", "greedy", "number theory"], "solvedCount": 1507}, {"contestId": 279, "index": "D", "name": "The Minimum Number of Variables", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 804}, {"contestId": 279, "index": "C", "name": "Ladder", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "implementation", "two pointers"], "solvedCount": 8626}, {"contestId": 279, "index": "B", "name": "Books", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "implementation", "two pointers"], "solvedCount": 62593}, {"contestId": 279, "index": "A", "name": "Point on Spiral", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "geometry", "implementation"], "solvedCount": 5752}, {"contestId": 278, "index": "B", "name": "New Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "strings"], "solvedCount": 3545}, {"contestId": 278, "index": "A", "name": "Circle Line", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 12311}, {"contestId": 277, "index": "E", "name": "Binary Tree on Plane", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["flows", "trees"], "solvedCount": 1396}, {"contestId": 277, "index": "D", "name": "Google Code Jam", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dp", "probabilities"], "solvedCount": 355}, {"contestId": 277, "index": "C", "name": "Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["games", "implementation"], "solvedCount": 471}, {"contestId": 277, "index": "B", "name": "Set of Points", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"], "solvedCount": 834}, {"contestId": 277, "index": "A", "name": "Learning Languages", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "dsu"], "solvedCount": 20344}, {"contestId": 276, "index": "E", "name": "Little Girl and Problem on Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "graphs", "trees"], "solvedCount": 1728}, {"contestId": 276, "index": "D", "name": "Little Girl and Maximum XOR", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["bitmasks", "dp", "greedy", "implementation", "math"], "solvedCount": 15133}, {"contestId": 276, "index": "C", "name": "Little Girl and Maximum Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 33362}, {"contestId": 276, "index": "B", "name": "Little Girl and Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["games", "greedy"], "solvedCount": 30706}, {"contestId": 276, "index": "A", "name": "Lunch Rush", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 29039}, {"contestId": 275, "index": "B", "name": "Convex Shape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 2960}, {"contestId": 275, "index": "A", "name": "Lights Out", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 33516}, {"contestId": 274, "index": "E", "name": "Mirror Room", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "implementation"], "solvedCount": 330}, {"contestId": 274, "index": "D", "name": "Lovely Matrix", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "greedy", "sortings"], "solvedCount": 1104}, {"contestId": 274, "index": "C", "name": "The Last Hole!", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "geometry"], "solvedCount": 364}, {"contestId": 274, "index": "B", "name": "Zero Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 5281}, {"contestId": 274, "index": "A", "name": "k-Multiple Free Set", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 10524}, {"contestId": 273, "index": "E", "name": "Dima and Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "games"], "solvedCount": 383}, {"contestId": 273, "index": "D", "name": "Dima and Figure", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp"], "solvedCount": 436}, {"contestId": 272, "index": "E", "name": "Dima and Horses", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["combinatorics", "constructive algorithms", "graphs"], "solvedCount": 1258}, {"contestId": 272, "index": "D", "name": "Dima and Two Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["combinatorics", "math", "sortings"], "solvedCount": 2751}, {"contestId": 272, "index": "C", "name": "Dima and Staircase", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 7011}, {"contestId": 272, "index": "B", "name": "Dima and Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 4153}, {"contestId": 272, "index": "A", "name": "Dima and Friends", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 26406}, {"contestId": 271, "index": "E", "name": "Three Horses", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 564}, {"contestId": 271, "index": "D", "name": "Good Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "strings"], "solvedCount": 12850}, {"contestId": 271, "index": "C", "name": "Secret", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3060}, {"contestId": 271, "index": "B", "name": "Prime Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "brute force", "math", "number theory"], "solvedCount": 14184}, {"contestId": 271, "index": "A", "name": "Beautiful Year", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 159723}, {"contestId": 270, "index": "B", "name": "Multithreading", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 4302}, {"contestId": 270, "index": "A", "name": "Fancy Fence", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["geometry", "implementation", "math"], "solvedCount": 48603}, {"contestId": 269, "index": "E", "name": "String Theory", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["geometry", "math", "strings"], "solvedCount": 116}, {"contestId": 269, "index": "D", "name": "Maximum Waterfall", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "dp", "graphs", "sortings"], "solvedCount": 475}, {"contestId": 269, "index": "C", "name": "Flawed Flow", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "flows", "graphs", "greedy"], "solvedCount": 1755}, {"contestId": 269, "index": "B", "name": "Greenhouse Effect", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"], "solvedCount": 6647}, {"contestId": 269, "index": "A", "name": "Magical Boxes", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy", "math"], "solvedCount": 3623}, {"contestId": 268, "index": "E", "name": "Playlist", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["math", "probabilities", "sortings"], "solvedCount": 1050}, {"contestId": 268, "index": "D", "name": "Wall Bars", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp"], "solvedCount": 547}, {"contestId": 268, "index": "C", "name": "Beautiful Sets of Points", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 14233}, {"contestId": 268, "index": "B", "name": "Buttons", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 34535}, {"contestId": 268, "index": "A", "name": "Games", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 96219}, {"contestId": 267, "index": "C", "name": "Berland Traffic", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["math", "matrices"], "solvedCount": 176}, {"contestId": 267, "index": "B", "name": "Dominoes", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dfs and similar", "graphs"], "solvedCount": 705}, {"contestId": 267, "index": "A", "name": "Subtractions", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math", "number theory"], "solvedCount": 8597}, {"contestId": 266, "index": "E", "name": "More Queries to Array...", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "math"], "solvedCount": 993}, {"contestId": 266, "index": "D", "name": "BerDonalds", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["graphs", "math", "shortest paths"], "solvedCount": 942}, {"contestId": 266, "index": "C", "name": "Below the Diagonal", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1411}, {"contestId": 266, "index": "B", "name": "Queue at the School", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "graph matchings", "implementation", "shortest paths"], "solvedCount": 152247}, {"contestId": 266, "index": "A", "name": "Stones on the Table", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 220107}, {"contestId": 265, "index": "B", "name": "Roadside Trees (Simplified Edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy", "implementation"], "solvedCount": 17631}, {"contestId": 265, "index": "A", "name": "Colorful Stones (Simplified Edition)", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 40147}, {"contestId": 264, "index": "E", "name": "Roadside Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp"], "solvedCount": 452}, {"contestId": 264, "index": "D", "name": "Colorful Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "two pointers"], "solvedCount": 445}, {"contestId": 264, "index": "C", "name": "Choosing Balls", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"], "solvedCount": 3121}, {"contestId": 264, "index": "B", "name": "Good Sequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "number theory"], "solvedCount": 11284}, {"contestId": 264, "index": "A", "name": "Escape from Stones", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "data structures", "implementation", "two pointers"], "solvedCount": 11225}, {"contestId": 263, "index": "E", "name": "Rhombus", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "data structures", "dp"], "solvedCount": 423}, {"contestId": 263, "index": "D", "name": "Cycle in Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "graphs"], "solvedCount": 4018}, {"contestId": 263, "index": "C", "name": "Circle of Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "dfs and similar", "implementation"], "solvedCount": 1113}, {"contestId": 263, "index": "B", "name": "Squares", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 9339}, {"contestId": 263, "index": "A", "name": "Beautiful Matrix", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 284438}, {"contestId": 262, "index": "B", "name": "Roma and Changing Signs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy"], "solvedCount": 11903}, {"contestId": 262, "index": "A", "name": "Roma and Lucky Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 21222}, {"contestId": 261, "index": "E", "name": "Maxim and Calculator", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["brute force", "dp", "two pointers"], "solvedCount": 431}, {"contestId": 261, "index": "D", "name": "Maxim and Increasing Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp"], "solvedCount": 688}, {"contestId": 261, "index": "C", "name": "Maxim and Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 803}, {"contestId": 261, "index": "B", "name": "Maxim and Restaurant", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp", "math", "probabilities"], "solvedCount": 1512}, {"contestId": 261, "index": "A", "name": "Maxim and Discounts", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 5435}, {"contestId": 260, "index": "E", "name": "Dividing Kingdom", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "brute force", "data structures"], "solvedCount": 479}, {"contestId": 260, "index": "D", "name": "Black and White Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1622}, {"contestId": 260, "index": "C", "name": "Balls and Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 3095}, {"contestId": 260, "index": "B", "name": "Ancient Prophesy", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "implementation", "strings"], "solvedCount": 3957}, {"contestId": 260, "index": "A", "name": "Adding Digits", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation", "math"], "solvedCount": 15883}, {"contestId": 259, "index": "B", "name": "Little Elephant and Magic Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 14412}, {"contestId": 259, "index": "A", "name": "Little Elephant and Chess", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "strings"], "solvedCount": 9560}, {"contestId": 258, "index": "E", "name": "Little Elephant and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 1212}, {"contestId": 258, "index": "D", "name": "Little Elephant and Broken Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "math", "probabilities"], "solvedCount": 1353}, {"contestId": 258, "index": "C", "name": "Little Elephant and LCM", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "combinatorics", "dp", "math"], "solvedCount": 1858}, {"contestId": 258, "index": "B", "name": "Little Elephant and Elections", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "combinatorics", "dp"], "solvedCount": 1522}, {"contestId": 258, "index": "A", "name": "Little Elephant and Bits", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 24859}, {"contestId": 257, "index": "E", "name": "Greedy Elevator", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "implementation"], "solvedCount": 328}, {"contestId": 257, "index": "D", "name": "Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy", "math"], "solvedCount": 1675}, {"contestId": 257, "index": "C", "name": "View Angle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "geometry", "math"], "solvedCount": 4577}, {"contestId": 257, "index": "B", "name": "Playing Cubes", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["games", "greedy", "implementation"], "solvedCount": 7482}, {"contestId": 257, "index": "A", "name": "Sockets", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 6725}, {"contestId": 256, "index": "E", "name": "Lucky Arrays", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 683}, {"contestId": 256, "index": "D", "name": "Liars and Serge", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp"], "solvedCount": 277}, {"contestId": 255, "index": "E", "name": "Furlo and Rublo and Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["games", "implementation", "math"], "solvedCount": 915}, {"contestId": 255, "index": "D", "name": "Mr. Bender and Square", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "implementation", "math"], "solvedCount": 2106}, {"contestId": 255, "index": "C", "name": "Almost Arithmetical Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dp"], "solvedCount": 4906}, {"contestId": 255, "index": "B", "name": "Code Parsing", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 5254}, {"contestId": 255, "index": "A", "name": "Greg's Workout", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 29997}, {"contestId": 254, "index": "E", "name": "Dormitory", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dp", "implementation"], "solvedCount": 709}, {"contestId": 254, "index": "D", "name": "Rats", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "dfs and similar", "graphs", "implementation", "shortest paths"], "solvedCount": 614}, {"contestId": 254, "index": "C", "name": "Anagram", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy", "strings"], "solvedCount": 1583}, {"contestId": 254, "index": "B", "name": "Jury Size", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 2241}, {"contestId": 254, "index": "A", "name": "Cards with Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "sortings"], "solvedCount": 7520}, {"contestId": 253, "index": "E", "name": "Printer", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "implementation", "sortings"], "solvedCount": 571}, {"contestId": 253, "index": "D", "name": "Table with Letters - 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "two pointers"], "solvedCount": 904}, {"contestId": 253, "index": "C", "name": "Text Editor", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths"], "solvedCount": 2790}, {"contestId": 253, "index": "B", "name": "Physics Practical", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "dp", "sortings", "two pointers"], "solvedCount": 11474}, {"contestId": 253, "index": "A", "name": "Boys and Girls", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 11841}, {"contestId": 252, "index": "B", "name": "Unsorting Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "sortings"], "solvedCount": 1775}, {"contestId": 252, "index": "A", "name": "Little Xor", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 5617}, {"contestId": 251, "index": "E", "name": "Tree and Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "dp", "implementation", "trees"], "solvedCount": 182}, {"contestId": 251, "index": "D", "name": "Two Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["bitmasks", "math"], "solvedCount": 533}, {"contestId": 251, "index": "C", "name": "Number Transformation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "greedy", "number theory"], "solvedCount": 1085}, {"contestId": 251, "index": "B", "name": "Playing with Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["implementation", "math"], "solvedCount": 1328}, {"contestId": 251, "index": "A", "name": "Points on Line", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["binary search", "combinatorics", "two pointers"], "solvedCount": 19505}, {"contestId": 250, "index": "E", "name": "Mad Joe", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force"], "solvedCount": 491}, {"contestId": 250, "index": "D", "name": "Building Bridge", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["geometry", "ternary search", "two pointers"], "solvedCount": 942}, {"contestId": 250, "index": "C", "name": "Movie Critics", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 2111}, {"contestId": 250, "index": "B", "name": "Restoring IPv6", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "strings"], "solvedCount": 2103}, {"contestId": 250, "index": "A", "name": "Paper Work", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy"], "solvedCount": 4443}, {"contestId": 249, "index": "E", "name": "Endless Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["math"], "solvedCount": 339}, {"contestId": 249, "index": "D", "name": "Donkey and Stars", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["data structures", "dp", "geometry", "math", "sortings"], "solvedCount": 484}, {"contestId": 248, "index": "E", "name": "Piglet's Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "math", "probabilities"], "solvedCount": 620}, {"contestId": 248, "index": "D", "name": "Sweets for Everyone!", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "greedy", "implementation"], "solvedCount": 515}, {"contestId": 248, "index": "C", "name": "Robo-Footballer", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "geometry"], "solvedCount": 869}, {"contestId": 248, "index": "B", "name": "Chilly Willy", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["math", "number theory"], "solvedCount": 5576}, {"contestId": 248, "index": "A", "name": "Cupboards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 24033}, {"contestId": 246, "index": "E", "name": "Blood Cousins Return", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "sortings"], "solvedCount": 3892}, {"contestId": 246, "index": "D", "name": "Colorful Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["brute force", "dfs and similar", "graphs"], "solvedCount": 9845}, {"contestId": 246, "index": "C", "name": "Beauty Pageant", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 2734}, {"contestId": 246, "index": "B", "name": "Increase and Decrease", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy", "math"], "solvedCount": 11907}, {"contestId": 246, "index": "A", "name": "Buggy Sorting", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 9886}, {"contestId": 245, "index": "H", "name": "Queries for Number of Palindromes", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "hashing", "strings"], "solvedCount": 7912}, {"contestId": 245, "index": "G", "name": "Suggested Friends", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "graphs"], "solvedCount": 483}, {"contestId": 245, "index": "F", "name": "Log Stream Analysis", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "implementation", "strings"], "solvedCount": 925}, {"contestId": 245, "index": "E", "name": "Mishap in Club", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 3408}, {"contestId": 245, "index": "D", "name": "Restoring Table", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 2493}, {"contestId": 245, "index": "C", "name": "Game with Coins", "type": "PROGRAMMING", "rating": 1700, "tags": ["greedy"], "solvedCount": 1627}, {"contestId": 245, "index": "B", "name": "Internet Address", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 5380}, {"contestId": 245, "index": "A", "name": "System Administrator", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 8742}, {"contestId": 244, "index": "B", "name": "Undoubtedly Lucky Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["bitmasks", "brute force", "dfs and similar"], "solvedCount": 4713}, {"contestId": 244, "index": "A", "name": "Dividing Orange", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 8279}, {"contestId": 243, "index": "E", "name": "Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 206}, {"contestId": 243, "index": "D", "name": "Cubes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures", "dp", "geometry", "two pointers"], "solvedCount": 227}, {"contestId": 243, "index": "C", "name": "Colorado Potato Beetle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "implementation"], "solvedCount": 548}, {"contestId": 243, "index": "B", "name": "Hydra", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["graphs", "sortings"], "solvedCount": 1282}, {"contestId": 243, "index": "A", "name": "The Brand New Function", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["bitmasks"], "solvedCount": 4231}, {"contestId": 242, "index": "E", "name": "XOR on Segment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["bitmasks", "data structures"], "solvedCount": 10704}, {"contestId": 242, "index": "D", "name": "Dispute", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "graphs", "greedy"], "solvedCount": 1956}, {"contestId": 242, "index": "C", "name": "King's Path", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "hashing", "shortest paths"], "solvedCount": 9781}, {"contestId": 242, "index": "B", "name": "Big Segment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "sortings"], "solvedCount": 16737}, {"contestId": 242, "index": "A", "name": "Heads or Tails", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 6616}, {"contestId": 241, "index": "G", "name": "Challenging Balloons", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 560}, {"contestId": 241, "index": "F", "name": "Race", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "implementation"], "solvedCount": 275}, {"contestId": 241, "index": "E", "name": "Flights", "type": "PROGRAMMING", "rating": 2600, "tags": ["graphs", "shortest paths"], "solvedCount": 1261}, {"contestId": 241, "index": "D", "name": "Numbers", "type": "PROGRAMMING", "rating": 2900, "tags": [], "solvedCount": 391}, {"contestId": 241, "index": "C", "name": "Mirror Box", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry", "implementation"], "solvedCount": 516}, {"contestId": 241, "index": "B", "name": "Friends", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "data structures", "math"], "solvedCount": 934}, {"contestId": 241, "index": "A", "name": "Old Peykan", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"], "solvedCount": 2308}, {"contestId": 240, "index": "F", "name": "TorCoder", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures"], "solvedCount": 2129}, {"contestId": 240, "index": "E", "name": "Road Repairs", "type": "PROGRAMMING", "rating": 2800, "tags": ["dfs and similar", "graphs", "greedy"], "solvedCount": 370}, {"contestId": 239, "index": "B", "name": "Easy Tape Programming", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "implementation"], "solvedCount": 1401}, {"contestId": 239, "index": "A", "name": "Two Bags of Potatoes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation", "math"], "solvedCount": 19985}, {"contestId": 238, "index": "E", "name": "Meeting Her", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 412}, {"contestId": 238, "index": "D", "name": "Tape Programming", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "implementation"], "solvedCount": 265}, {"contestId": 238, "index": "C", "name": "World Eater Brothers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1310}, {"contestId": 238, "index": "B", "name": "Boring Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 1374}, {"contestId": 238, "index": "A", "name": "Not Wool Sequences", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "math"], "solvedCount": 2091}, {"contestId": 237, "index": "E", "name": "Build String", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["flows", "graphs"], "solvedCount": 1862}, {"contestId": 237, "index": "D", "name": "T-decomposition", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 585}, {"contestId": 237, "index": "C", "name": "Primes on Interval", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "number theory", "two pointers"], "solvedCount": 6250}, {"contestId": 237, "index": "B", "name": "Young Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "sortings"], "solvedCount": 2277}, {"contestId": 237, "index": "A", "name": "Free Cash", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 28404}, {"contestId": 236, "index": "B", "name": "Easy Number Challenge", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "number theory"], "solvedCount": 15921}, {"contestId": 236, "index": "A", "name": "Boy or Girl", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "implementation", "strings"], "solvedCount": 247661}, {"contestId": 235, "index": "E", "name": "Number Challenge", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp", "implementation", "math", "number theory"], "solvedCount": 823}, {"contestId": 235, "index": "D", "name": "Graph Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["graphs"], "solvedCount": 543}, {"contestId": 235, "index": "C", "name": "Cyclical Quest", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["data structures", "string suffix structures", "strings"], "solvedCount": 2311}, {"contestId": 235, "index": "B", "name": "Let's Play Osu!", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dp", "math", "probabilities"], "solvedCount": 3879}, {"contestId": 235, "index": "A", "name": "LCM Challenge", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["number theory"], "solvedCount": 19644}, {"contestId": 234, "index": "H", "name": "Merging Two Decks", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 603}, {"contestId": 234, "index": "G", "name": "Practice", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "divide and conquer", "implementation"], "solvedCount": 1550}, {"contestId": 234, "index": "F", "name": "Fence", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp"], "solvedCount": 1894}, {"contestId": 234, "index": "E", "name": "Champions' League", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 1027}, {"contestId": 234, "index": "D", "name": "Cinema", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 1577}, {"contestId": 234, "index": "C", "name": "Weather", "type": "PROGRAMMING", "rating": 1300, "tags": ["dp", "implementation"], "solvedCount": 5783}, {"contestId": 234, "index": "B", "name": "Reading", "type": "PROGRAMMING", "rating": 1000, "tags": ["sortings"], "solvedCount": 7535}, {"contestId": 234, "index": "A", "name": "Lefthanders and Righthanders ", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation"], "solvedCount": 4601}, {"contestId": 233, "index": "B", "name": "Non-square Equation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "math"], "solvedCount": 7874}, {"contestId": 233, "index": "A", "name": "Perfect Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 46545}, {"contestId": 232, "index": "E", "name": "Quick Tortoise", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["bitmasks", "divide and conquer", "dp"], "solvedCount": 748}, {"contestId": 232, "index": "D", "name": "Fence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["binary search", "data structures", "string suffix structures"], "solvedCount": 508}, {"contestId": 232, "index": "C", "name": "Doe Graphs", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["constructive algorithms", "divide and conquer", "dp", "graphs", "shortest paths"], "solvedCount": 301}, {"contestId": 232, "index": "B", "name": "Table", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dp", "math"], "solvedCount": 1542}, {"contestId": 232, "index": "A", "name": "Cycles", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "constructive algorithms", "graphs", "greedy"], "solvedCount": 2714}, {"contestId": 231, "index": "E", "name": "Cactus", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 2091}, {"contestId": 231, "index": "D", "name": "Magic Box", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["brute force", "geometry"], "solvedCount": 4231}, {"contestId": 231, "index": "C", "name": "To Add or Not to Add", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "sortings", "two pointers"], "solvedCount": 9120}, {"contestId": 231, "index": "B", "name": "Magic, Wizardry and Wonders", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3772}, {"contestId": 231, "index": "A", "name": "Team", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "greedy"], "solvedCount": 381460}, {"contestId": 230, "index": "B", "name": "T-primes", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["binary search", "implementation", "math", "number theory"], "solvedCount": 86668}, {"contestId": 230, "index": "A", "name": "Dragons", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "sortings"], "solvedCount": 88798}, {"contestId": 229, "index": "E", "name": "Gifts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 489}, {"contestId": 229, "index": "D", "name": "Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dp", "greedy", "two pointers"], "solvedCount": 2442}, {"contestId": 229, "index": "C", "name": "Triangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "graphs", "math"], "solvedCount": 1696}, {"contestId": 229, "index": "B", "name": "Planets", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "data structures", "graphs", "shortest paths"], "solvedCount": 5177}, {"contestId": 229, "index": "A", "name": "Shifts", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "two pointers"], "solvedCount": 3623}, {"contestId": 228, "index": "E", "name": "The Road to Berland is Paved With Good Intentions", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["2-sat", "dfs and similar", "dsu", "graphs"], "solvedCount": 2670}, {"contestId": 228, "index": "D", "name": "Zigzag", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures"], "solvedCount": 413}, {"contestId": 228, "index": "C", "name": "Fractal Detector", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "hashing"], "solvedCount": 497}, {"contestId": 228, "index": "B", "name": "Two Tables", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "implementation"], "solvedCount": 3515}, {"contestId": 228, "index": "A", "name": "Is your horseshoe on the other hoof?", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 125595}, {"contestId": 227, "index": "B", "name": "Effective Approach", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 30689}, {"contestId": 227, "index": "A", "name": "Where do I Turn?", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["geometry"], "solvedCount": 4409}, {"contestId": 226, "index": "E", "name": "Noble Knight's Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 506}, {"contestId": 226, "index": "D", "name": "The table", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1021}, {"contestId": 226, "index": "C", "name": "Anniversary", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "implementation", "math", "matrices", "number theory"], "solvedCount": 942}, {"contestId": 226, "index": "B", "name": "Naughty Stone Piles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy"], "solvedCount": 1609}, {"contestId": 226, "index": "A", "name": "Flying Saucer Segments", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["math"], "solvedCount": 4198}, {"contestId": 225, "index": "E", "name": "Unsolvable", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["math", "number theory"], "solvedCount": 854}, {"contestId": 225, "index": "D", "name": "Snake", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["bitmasks", "dfs and similar", "graphs", "implementation"], "solvedCount": 1003}, {"contestId": 225, "index": "C", "name": "Barcode", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp", "matrices"], "solvedCount": 9765}, {"contestId": 225, "index": "B", "name": "Well-known Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "greedy", "number theory"], "solvedCount": 3255}, {"contestId": 225, "index": "A", "name": "Dice Tower", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 12879}, {"contestId": 224, "index": "B", "name": "Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "implementation", "two pointers"], "solvedCount": 7621}, {"contestId": 224, "index": "A", "name": "Parallelepiped", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "geometry", "math"], "solvedCount": 28919}, {"contestId": 223, "index": "E", "name": "Planar Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["flows", "geometry", "graphs"], "solvedCount": 206}, {"contestId": 223, "index": "D", "name": "Spider", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["geometry", "graphs"], "solvedCount": 77}, {"contestId": 223, "index": "C", "name": "Partial Sums", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "math", "number theory"], "solvedCount": 1667}, {"contestId": 223, "index": "B", "name": "Two Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dp", "strings"], "solvedCount": 1897}, {"contestId": 223, "index": "A", "name": "Bracket Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "expression parsing", "implementation"], "solvedCount": 2716}, {"contestId": 222, "index": "E", "name": "Decoding Genome", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp", "matrices"], "solvedCount": 3274}, {"contestId": 222, "index": "D", "name": "Olympiad", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "greedy", "sortings", "two pointers"], "solvedCount": 2250}, {"contestId": 222, "index": "C", "name": "Reducing Fractions", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["implementation", "math", "number theory", "sortings"], "solvedCount": 2628}, {"contestId": 222, "index": "B", "name": "Cosmic Tables", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation"], "solvedCount": 6335}, {"contestId": 222, "index": "A", "name": "Shooshuns and Sequence ", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 11396}, {"contestId": 221, "index": "B", "name": "Little Elephant and Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 4747}, {"contestId": 221, "index": "A", "name": "Little Elephant and Function", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 16183}, {"contestId": 220, "index": "E", "name": "Little Elephant and Inversions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "two pointers"], "solvedCount": 1508}, {"contestId": 220, "index": "D", "name": "Little Elephant and Triangle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["geometry", "math"], "solvedCount": 300}, {"contestId": 220, "index": "C", "name": "Little Elephant and Shifts", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures"], "solvedCount": 986}, {"contestId": 220, "index": "B", "name": "Little Elephant and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures"], "solvedCount": 11590}, {"contestId": 220, "index": "A", "name": "Little Elephant and Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 12314}, {"contestId": 219, "index": "E", "name": "Parking Lot", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 642}, {"contestId": 219, "index": "D", "name": "Choosing Capital for Treeland", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 10910}, {"contestId": 219, "index": "C", "name": "Color Stripe", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "dp", "greedy"], "solvedCount": 6886}, {"contestId": 219, "index": "B", "name": "Special Offer! Super Price 999 Bourles!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 5993}, {"contestId": 219, "index": "A", "name": "k-String", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 30632}, {"contestId": 218, "index": "B", "name": "Airport", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 17591}, {"contestId": 218, "index": "A", "name": "Mountain Scenery", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 10062}, {"contestId": 217, "index": "E", "name": "Alien DNA", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dsu", "trees"], "solvedCount": 340}, {"contestId": 217, "index": "D", "name": "Bitonix' Patrol", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "brute force", "combinatorics", "dfs and similar", "math"], "solvedCount": 266}, {"contestId": 217, "index": "C", "name": "Formurosa", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["divide and conquer", "dp", "expression parsing"], "solvedCount": 356}, {"contestId": 217, "index": "B", "name": "Blackboard Fibonacci", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["brute force", "math"], "solvedCount": 998}, {"contestId": 217, "index": "A", "name": "Ice Skating", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "dfs and similar", "dsu", "graphs"], "solvedCount": 22690}, {"contestId": 216, "index": "E", "name": "Martian Luck", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["math", "number theory"], "solvedCount": 612}, {"contestId": 216, "index": "D", "name": "Spider's Web", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "sortings", "two pointers"], "solvedCount": 1444}, {"contestId": 216, "index": "C", "name": "Hiring Staff", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 1891}, {"contestId": 216, "index": "B", "name": "Forming Teams", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "implementation"], "solvedCount": 6739}, {"contestId": 216, "index": "A", "name": "Tiling with Hexagons", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 5131}, {"contestId": 215, "index": "E", "name": "Periodical Numbers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["combinatorics", "dp", "number theory"], "solvedCount": 620}, {"contestId": 215, "index": "D", "name": "Hot Days", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["greedy"], "solvedCount": 1635}, {"contestId": 215, "index": "C", "name": "Crosses", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["brute force", "implementation"], "solvedCount": 691}, {"contestId": 215, "index": "B", "name": "Olympic Medal", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "math"], "solvedCount": 5802}, {"contestId": 215, "index": "A", "name": "Bicycle Chain", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 15542}, {"contestId": 214, "index": "B", "name": "Hometask", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 5180}, {"contestId": 214, "index": "A", "name": "System of Equations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 39498}, {"contestId": 213, "index": "E", "name": "Two Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "hashing", "strings"], "solvedCount": 908}, {"contestId": 213, "index": "D", "name": "Stars", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"], "solvedCount": 351}, {"contestId": 213, "index": "C", "name": "Relay Race", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"], "solvedCount": 3078}, {"contestId": 213, "index": "B", "name": "Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["combinatorics", "dp"], "solvedCount": 1875}, {"contestId": 213, "index": "A", "name": "Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "greedy"], "solvedCount": 1767}, {"contestId": 212, "index": "E", "name": "IT Restaurants", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 1971}, {"contestId": 212, "index": "D", "name": "Cutting a Fence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "dsu"], "solvedCount": 566}, {"contestId": 212, "index": "C", "name": "Cowboys", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 445}, {"contestId": 212, "index": "B", "name": "Polycarpus is Looking for Good Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "hashing", "implementation"], "solvedCount": 347}, {"contestId": 212, "index": "A", "name": "Privatization", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["flows", "graphs"], "solvedCount": 216}, {"contestId": 209, "index": "C", "name": "Trails and Glades", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["constructive algorithms", "dsu", "graphs", "greedy"], "solvedCount": 829}, {"contestId": 209, "index": "B", "name": "Pixels", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["constructive algorithms", "math"], "solvedCount": 435}, {"contestId": 209, "index": "A", "name": "Multicolored Marbles", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dp", "math"], "solvedCount": 2641}, {"contestId": 208, "index": "E", "name": "Blood Cousins", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 7868}, {"contestId": 208, "index": "D", "name": "Prizes, Prizes, more Prizes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 7868}, {"contestId": 208, "index": "C", "name": "Police Station", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp", "graphs", "shortest paths"], "solvedCount": 2021}, {"contestId": 208, "index": "B", "name": "Solitaire", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp"], "solvedCount": 1404}, {"contestId": 208, "index": "A", "name": "Dubstep", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["strings"], "solvedCount": 97635}, {"contestId": 207, "index": "D9", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 1800, "tags": [], "solvedCount": 95}, {"contestId": 207, "index": "D8", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2300, "tags": [], "solvedCount": 97}, {"contestId": 207, "index": "D7", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 1600, "tags": [], "solvedCount": 105}, {"contestId": 207, "index": "D6", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2100, "tags": [], "solvedCount": 85}, {"contestId": 207, "index": "D5", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 1600, "tags": [], "solvedCount": 150}, {"contestId": 207, "index": "D4", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2100, "tags": [], "solvedCount": 156}, {"contestId": 207, "index": "D3", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2000, "tags": [], "solvedCount": 137}, {"contestId": 207, "index": "D2", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2000, "tags": [], "solvedCount": 112}, {"contestId": 207, "index": "D10", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 2100, "tags": [], "solvedCount": 82}, {"contestId": 207, "index": "D1", "name": "The Beaver's Problem - 3", "type": "PROGRAMMING", "points": 10.0, "rating": 1800, "tags": [], "solvedCount": 120}, {"contestId": 207, "index": "C3", "name": "Game with Two Trees", "type": "PROGRAMMING", "points": 50.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 148}, {"contestId": 207, "index": "C2", "name": "Game with Two Trees", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": [], "solvedCount": 96}, {"contestId": 207, "index": "C1", "name": "Game with Two Trees", "type": "PROGRAMMING", "points": 20.0, "rating": 2100, "tags": [], "solvedCount": 113}, {"contestId": 207, "index": "B3", "name": "Military Trainings", "type": "PROGRAMMING", "points": 50.0, "rating": 1700, "tags": [], "solvedCount": 201}, {"contestId": 207, "index": "B2", "name": "Military Trainings", "type": "PROGRAMMING", "points": 30.0, "rating": 1900, "tags": [], "solvedCount": 216}, {"contestId": 207, "index": "B1", "name": "Military Trainings", "type": "PROGRAMMING", "points": 20.0, "rating": 1600, "tags": [], "solvedCount": 322}, {"contestId": 207, "index": "A3", "name": "Beaver's Calculator 1.0", "type": "PROGRAMMING", "points": 50.0, "rating": 2000, "tags": ["greedy"], "solvedCount": 232}, {"contestId": 207, "index": "A2", "name": "Beaver's Calculator 1.0", "type": "PROGRAMMING", "points": 30.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 254}, {"contestId": 207, "index": "A1", "name": "Beaver's Calculator 1.0", "type": "PROGRAMMING", "points": 20.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 324}, {"contestId": 205, "index": "B", "name": "Little Elephant and Sorting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "greedy"], "solvedCount": 6236}, {"contestId": 205, "index": "A", "name": "Little Elephant and Rozdil", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "implementation"], "solvedCount": 24035}, {"contestId": 204, "index": "E", "name": "Little Elephant and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "implementation", "string suffix structures", "two pointers"], "solvedCount": 1301}, {"contestId": 204, "index": "D", "name": "Little Elephant and Retro Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp"], "solvedCount": 606}, {"contestId": 204, "index": "C", "name": "Little Elephant and Furik and Rubik", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["math", "probabilities"], "solvedCount": 1169}, {"contestId": 204, "index": "B", "name": "Little Elephant and Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "data structures"], "solvedCount": 5557}, {"contestId": 204, "index": "A", "name": "Little Elephant and Interval", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "combinatorics", "dp"], "solvedCount": 6196}, {"contestId": 203, "index": "E", "name": "Transportation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["greedy", "sortings", "two pointers"], "solvedCount": 296}, {"contestId": 203, "index": "D", "name": "Hit Ball", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["geometry", "implementation", "math"], "solvedCount": 1456}, {"contestId": 203, "index": "C", "name": "Photographer", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["greedy", "sortings"], "solvedCount": 5869}, {"contestId": 203, "index": "B", "name": "Game on Paper", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 2691}, {"contestId": 203, "index": "A", "name": "Two Problems", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 4295}, {"contestId": 202, "index": "B", "name": "Brand New Easy Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force"], "solvedCount": 828}, {"contestId": 202, "index": "A", "name": "LLPS", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["binary search", "bitmasks", "brute force", "greedy", "implementation", "strings"], "solvedCount": 18396}, {"contestId": 201, "index": "E", "name": "Thoroughly Bureaucratic Organization", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "combinatorics"], "solvedCount": 447}, {"contestId": 201, "index": "D", "name": "Brand New Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["bitmasks", "brute force", "dp"], "solvedCount": 447}, {"contestId": 201, "index": "C", "name": "Fragile Bridges", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"], "solvedCount": 1428}, {"contestId": 201, "index": "B", "name": "Guess That Car!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["math", "ternary search"], "solvedCount": 1337}, {"contestId": 201, "index": "A", "name": "Clear Symmetry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 3109}, {"contestId": 200, "index": "E", "name": "Tractor College", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["implementation", "math", "number theory", "ternary search"], "solvedCount": 353}, {"contestId": 200, "index": "D", "name": "Programming Language", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "expression parsing", "implementation"], "solvedCount": 957}, {"contestId": 200, "index": "C", "name": "Football Championship", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "implementation"], "solvedCount": 1078}, {"contestId": 200, "index": "B", "name": "Drinks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 133412}, {"contestId": 200, "index": "A", "name": "Cinema", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["brute force", "data structures"], "solvedCount": 723}, {"contestId": 199, "index": "B", "name": "Special Olympics", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["geometry"], "solvedCount": 839}, {"contestId": 199, "index": "A", "name": "Hexadecimal's theorem", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "implementation", "number theory"], "solvedCount": 28785}, {"contestId": 198, "index": "E", "name": "Gripping Story", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 489}, {"contestId": 198, "index": "D", "name": "Cube Snake", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms"], "solvedCount": 112}, {"contestId": 198, "index": "C", "name": "Delivering Carcinogen", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "geometry"], "solvedCount": 389}, {"contestId": 198, "index": "B", "name": "Jumping on Walls", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["shortest paths"], "solvedCount": 4816}, {"contestId": 198, "index": "A", "name": "About Bacteria", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 3223}, {"contestId": 197, "index": "B", "name": "Limit", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["math"], "solvedCount": 4781}, {"contestId": 197, "index": "A", "name": "Plate Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "games", "math"], "solvedCount": 6645}, {"contestId": 196, "index": "E", "name": "Opening Portals", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dsu", "graphs", "shortest paths"], "solvedCount": 1110}, {"contestId": 196, "index": "D", "name": "The Next Good String", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "greedy", "hashing", "strings"], "solvedCount": 567}, {"contestId": 196, "index": "C", "name": "Paint Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "divide and conquer", "geometry", "sortings", "trees"], "solvedCount": 991}, {"contestId": 196, "index": "B", "name": "Infinite Maze", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dfs and similar", "graphs"], "solvedCount": 2308}, {"contestId": 196, "index": "A", "name": "Lexicographically Maximum Subsequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "strings"], "solvedCount": 5621}, {"contestId": 195, "index": "E", "name": "Building Forest", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "dsu", "graphs"], "solvedCount": 792}, {"contestId": 195, "index": "D", "name": "Analyzing Polyline", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["geometry", "math", "sortings"], "solvedCount": 1097}, {"contestId": 195, "index": "C", "name": "Try and Catch", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["expression parsing", "implementation"], "solvedCount": 1169}, {"contestId": 195, "index": "B", "name": "After Training", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation", "math"], "solvedCount": 5359}, {"contestId": 195, "index": "A", "name": "Let's Watch Football", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["binary search", "brute force", "math"], "solvedCount": 9679}, {"contestId": 194, "index": "B", "name": "Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["math"], "solvedCount": 3776}, {"contestId": 194, "index": "A", "name": "Exams", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 10407}, {"contestId": 193, "index": "E", "name": "Fibonacci Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "math", "matrices"], "solvedCount": 368}, {"contestId": 193, "index": "D", "name": "Two Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 593}, {"contestId": 193, "index": "C", "name": "Hamming Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "math", "matrices"], "solvedCount": 539}, {"contestId": 193, "index": "B", "name": "Xor", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force"], "solvedCount": 1089}, {"contestId": 193, "index": "A", "name": "Cutting Figure", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 4309}, {"contestId": 192, "index": "B", "name": "Walking in the Rain", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 6515}, {"contestId": 192, "index": "A", "name": "Funky Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["binary search", "brute force", "implementation"], "solvedCount": 11009}, {"contestId": 191, "index": "E", "name": "Thwarting Demonstrations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "trees"], "solvedCount": 902}, {"contestId": 191, "index": "D", "name": "Metro Scheme", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["graphs", "greedy"], "solvedCount": 378}, {"contestId": 191, "index": "C", "name": "Fools and Roads", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 8156}, {"contestId": 191, "index": "B", "name": "Demonstration", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["greedy"], "solvedCount": 1038}, {"contestId": 191, "index": "A", "name": "Dynasty Puzzles", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dp"], "solvedCount": 4301}, {"contestId": 190, "index": "E", "name": "Counter Attack", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dsu", "graphs", "hashing", "sortings"], "solvedCount": 1629}, {"contestId": 190, "index": "D", "name": "Non-Secret Cypher", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["two pointers"], "solvedCount": 2458}, {"contestId": 190, "index": "C", "name": "STL", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar"], "solvedCount": 3032}, {"contestId": 190, "index": "B", "name": "Surrounded", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["geometry"], "solvedCount": 2982}, {"contestId": 190, "index": "A", "name": "Vasya and the Bus", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "math"], "solvedCount": 6041}, {"contestId": 189, "index": "B", "name": "Counting Rhombi", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "math"], "solvedCount": 4062}, {"contestId": 189, "index": "A", "name": "Cut Ribbon", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "dp"], "solvedCount": 74297}, {"contestId": 188, "index": "H", "name": "Stack", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "expression parsing", "implementation"], "solvedCount": 280}, {"contestId": 188, "index": "G", "name": "Array Sorting", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "implementation"], "solvedCount": 342}, {"contestId": 188, "index": "F", "name": "Binary Notation", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"], "solvedCount": 336}, {"contestId": 188, "index": "E", "name": "HQ9+", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"], "solvedCount": 513}, {"contestId": 188, "index": "D", "name": "Asterisks", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "implementation"], "solvedCount": 724}, {"contestId": 188, "index": "C", "name": "LCM", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation", "math"], "solvedCount": 470}, {"contestId": 188, "index": "B", "name": "A + Reverse B", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "implementation"], "solvedCount": 764}, {"contestId": 188, "index": "A", "name": "Hexagonal Numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special"], "solvedCount": 807}, {"contestId": 187, "index": "E", "name": "Heaven Tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "greedy"], "solvedCount": 113}, {"contestId": 187, "index": "D", "name": "BRT Contract ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures"], "solvedCount": 564}, {"contestId": 187, "index": "C", "name": "Weak Memory", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "dsu"], "solvedCount": 1442}, {"contestId": 187, "index": "B", "name": "AlgoRace", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "shortest paths"], "solvedCount": 2138}, {"contestId": 187, "index": "A", "name": "Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy"], "solvedCount": 2931}, {"contestId": 186, "index": "B", "name": "Growing Mushrooms", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 5950}, {"contestId": 186, "index": "A", "name": "Comparing Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 17923}, {"contestId": 185, "index": "E", "name": "Soap Time! - 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "data structures"], "solvedCount": 153}, {"contestId": 185, "index": "D", "name": "Visit of the Great", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["math", "number theory"], "solvedCount": 476}, {"contestId": 185, "index": "C", "name": "Clever Fat Rat", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["dp"], "solvedCount": 145}, {"contestId": 185, "index": "B", "name": "Mushroom Scientists", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["math", "ternary search"], "solvedCount": 1715}, {"contestId": 185, "index": "A", "name": "Plant", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["math"], "solvedCount": 6155}, {"contestId": 183, "index": "E", "name": "Candy Shop", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["greedy"], "solvedCount": 143}, {"contestId": 183, "index": "D", "name": "T-shirt", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dp", "greedy", "probabilities"], "solvedCount": 457}, {"contestId": 183, "index": "C", "name": "Cyclic Coloring", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar"], "solvedCount": 680}, {"contestId": 183, "index": "B", "name": "Zoo", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "geometry"], "solvedCount": 741}, {"contestId": 183, "index": "A", "name": "Headquarters", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 573}, {"contestId": 182, "index": "E", "name": "Wooden Fence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"], "solvedCount": 1579}, {"contestId": 182, "index": "D", "name": "Common Divisors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "hashing", "implementation", "math", "strings"], "solvedCount": 8660}, {"contestId": 182, "index": "C", "name": "Optimal Sum", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["data structures", "greedy"], "solvedCount": 781}, {"contestId": 182, "index": "B", "name": "Vasya's Calendar", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 7188}, {"contestId": 182, "index": "A", "name": "Battlefield", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["geometry", "graphs", "implementation", "shortest paths"], "solvedCount": 308}, {"contestId": 181, "index": "B", "name": "Number of Triplets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "brute force"], "solvedCount": 3351}, {"contestId": 181, "index": "A", "name": "Series of Crimes", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "geometry", "implementation"], "solvedCount": 8076}, {"contestId": 180, "index": "F", "name": "Mathematical Analysis Rocks!", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 2650}, {"contestId": 180, "index": "E", "name": "Cubes", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "dp", "two pointers"], "solvedCount": 1953}, {"contestId": 180, "index": "D", "name": "Name", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "strings"], "solvedCount": 757}, {"contestId": 180, "index": "C", "name": "Letter", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp"], "solvedCount": 8031}, {"contestId": 180, "index": "B", "name": "Divisibility Rules", "type": "PROGRAMMING", "rating": 2300, "tags": ["math", "number theory"], "solvedCount": 383}, {"contestId": 180, "index": "A", "name": "Defragmentation", "type": "PROGRAMMING", "rating": 1800, "tags": ["implementation"], "solvedCount": 565}, {"contestId": 178, "index": "F3", "name": "Representative Sampling", "type": "PROGRAMMING", "points": 50.0, "rating": 2500, "tags": [], "solvedCount": 464}, {"contestId": 178, "index": "F2", "name": "Representative Sampling", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["dp", "sortings", "strings"], "solvedCount": 369}, {"contestId": 178, "index": "F1", "name": "Representative Sampling", "type": "PROGRAMMING", "points": 20.0, "rating": 1800, "tags": [], "solvedCount": 428}, {"contestId": 178, "index": "E3", "name": "The Beaver's Problem - 2", "type": "PROGRAMMING", "points": 50.0, "rating": 2300, "tags": [], "solvedCount": 208}, {"contestId": 178, "index": "E2", "name": "The Beaver's Problem - 2", "type": "PROGRAMMING", "points": 30.0, "rating": 2000, "tags": [], "solvedCount": 236}, {"contestId": 178, "index": "E1", "name": "The Beaver's Problem - 2", "type": "PROGRAMMING", "points": 20.0, "rating": 1900, "tags": [], "solvedCount": 301}, {"contestId": 178, "index": "D3", "name": "Magic Squares", "type": "PROGRAMMING", "points": 50.0, "rating": 2100, "tags": [], "solvedCount": 258}, {"contestId": 178, "index": "D2", "name": "Magic Squares", "type": "PROGRAMMING", "points": 30.0, "rating": 1900, "tags": [], "solvedCount": 287}, {"contestId": 178, "index": "D1", "name": "Magic Squares", "type": "PROGRAMMING", "points": 20.0, "rating": 1500, "tags": [], "solvedCount": 679}, {"contestId": 178, "index": "C3", "name": "Smart Beaver and Resolving Collisions", "type": "PROGRAMMING", "points": 50.0, "rating": 2000, "tags": [], "solvedCount": 333}, {"contestId": 178, "index": "C2", "name": "Smart Beaver and Resolving Collisions", "type": "PROGRAMMING", "points": 30.0, "rating": 1900, "tags": [], "solvedCount": 317}, {"contestId": 178, "index": "C1", "name": "Smart Beaver and Resolving Collisions", "type": "PROGRAMMING", "points": 20.0, "rating": 1600, "tags": [], "solvedCount": 527}, {"contestId": 178, "index": "B3", "name": "Greedy Merchants", "type": "PROGRAMMING", "points": 50.0, "rating": 1800, "tags": [], "solvedCount": 1348}, {"contestId": 178, "index": "B2", "name": "Greedy Merchants", "type": "PROGRAMMING", "points": 30.0, "rating": 1600, "tags": [], "solvedCount": 709}, {"contestId": 178, "index": "B1", "name": "Greedy Merchants", "type": "PROGRAMMING", "points": 20.0, "rating": 1600, "tags": [], "solvedCount": 807}, {"contestId": 178, "index": "A3", "name": "Educational Game", "type": "PROGRAMMING", "points": 50.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 1519}, {"contestId": 178, "index": "A2", "name": "Educational Game", "type": "PROGRAMMING", "points": 30.0, "rating": 1000, "tags": ["greedy"], "solvedCount": 1758}, {"contestId": 178, "index": "A1", "name": "Educational Game", "type": "PROGRAMMING", "points": 20.0, "rating": 1000, "tags": [], "solvedCount": 1730}, {"contestId": 177, "index": "G2", "name": "Fibonacci Strings", "type": "PROGRAMMING", "points": 70.0, "rating": 2600, "tags": ["matrices", "strings"], "solvedCount": 208}, {"contestId": 177, "index": "G1", "name": "Fibonacci Strings", "type": "PROGRAMMING", "points": 30.0, "rating": 2400, "tags": ["strings"], "solvedCount": 203}, {"contestId": 177, "index": "F2", "name": "Script Generation", "type": "PROGRAMMING", "points": 70.0, "rating": 2300, "tags": [], "solvedCount": 222}, {"contestId": 177, "index": "F1", "name": "Script Generation", "type": "PROGRAMMING", "points": 30.0, "rating": 1800, "tags": [], "solvedCount": 327}, {"contestId": 177, "index": "E2", "name": "Space Voyage", "type": "PROGRAMMING", "points": 70.0, "rating": 1900, "tags": ["binary search"], "solvedCount": 471}, {"contestId": 177, "index": "E1", "name": "Space Voyage", "type": "PROGRAMMING", "points": 30.0, "rating": 1700, "tags": ["binary search"], "solvedCount": 658}, {"contestId": 177, "index": "D2", "name": "Encrypting Messages", "type": "PROGRAMMING", "points": 70.0, "rating": 1500, "tags": ["data structures"], "solvedCount": 2378}, {"contestId": 177, "index": "D1", "name": "Encrypting Messages", "type": "PROGRAMMING", "points": 30.0, "rating": 1200, "tags": ["brute force"], "solvedCount": 2448}, {"contestId": 177, "index": "C2", "name": "Party", "type": "PROGRAMMING", "points": 70.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "dsu", "graphs"], "solvedCount": 2805}, {"contestId": 177, "index": "C1", "name": "Party", "type": "PROGRAMMING", "points": 30.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 2814}, {"contestId": 177, "index": "B2", "name": "Rectangular Game", "type": "PROGRAMMING", "points": 70.0, "rating": 1200, "tags": ["number theory"], "solvedCount": 3175}, {"contestId": 177, "index": "B1", "name": "Rectangular Game", "type": "PROGRAMMING", "points": 30.0, "rating": 1000, "tags": ["number theory"], "solvedCount": 4570}, {"contestId": 177, "index": "A2", "name": "Good Matrix Elements", "type": "PROGRAMMING", "points": 70.0, "rating": 800, "tags": ["implementation"], "solvedCount": 8155}, {"contestId": 177, "index": "A1", "name": "Good Matrix Elements", "type": "PROGRAMMING", "points": 30.0, "rating": 800, "tags": ["implementation"], "solvedCount": 10545}, {"contestId": 176, "index": "E", "name": "Archaeology", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 1353}, {"contestId": 176, "index": "D", "name": "Hyper String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp"], "solvedCount": 361}, {"contestId": 176, "index": "C", "name": "Playing with Superglue", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "constructive algorithms"], "solvedCount": 507}, {"contestId": 176, "index": "B", "name": "Word Cut", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"], "solvedCount": 2174}, {"contestId": 176, "index": "A", "name": "Trading Business", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "sortings"], "solvedCount": 1594}, {"contestId": 175, "index": "F", "name": "Gnomes of Might and Magic", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "graphs", "implementation", "shortest paths"], "solvedCount": 69}, {"contestId": 175, "index": "E", "name": "Power Defence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["brute force", "dp", "geometry", "greedy"], "solvedCount": 277}, {"contestId": 175, "index": "D", "name": "Plane of Tanks: Duel", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "dp", "math", "probabilities"], "solvedCount": 307}, {"contestId": 175, "index": "C", "name": "Geometry Horse", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["greedy", "implementation", "sortings", "two pointers"], "solvedCount": 1385}, {"contestId": 175, "index": "B", "name": "Plane of Tanks: Pro", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 1475}, {"contestId": 175, "index": "A", "name": "Robot Bicorn Attack", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "implementation"], "solvedCount": 2464}, {"contestId": 174, "index": "C", "name": "Range Increments", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 1193}, {"contestId": 174, "index": "B", "name": "File List", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dp", "greedy", "implementation"], "solvedCount": 2394}, {"contestId": 174, "index": "A", "name": "Problem About Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["math"], "solvedCount": 3132}, {"contestId": 173, "index": "E", "name": "Camping Groups", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "sortings"], "solvedCount": 600}, {"contestId": 173, "index": "D", "name": "Deputies", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 277}, {"contestId": 173, "index": "C", "name": "Spiral Maximum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "dp"], "solvedCount": 1049}, {"contestId": 173, "index": "B", "name": "Chamber of Secrets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "shortest paths"], "solvedCount": 3652}, {"contestId": 173, "index": "A", "name": "Rock-Paper-Scissors", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 2390}, {"contestId": 172, "index": "E", "name": "BHTML+BCSS", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["*special", "dfs and similar", "expression parsing"], "solvedCount": 274}, {"contestId": 172, "index": "D", "name": "Calendar Reform", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["*special", "number theory"], "solvedCount": 1446}, {"contestId": 172, "index": "C", "name": "Bus", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["*special", "implementation", "sortings"], "solvedCount": 1175}, {"contestId": 172, "index": "B", "name": "Pseudorandom Sequence Period", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["*special", "implementation", "number theory"], "solvedCount": 3063}, {"contestId": 172, "index": "A", "name": "Phone Code", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["*special", "brute force", "implementation"], "solvedCount": 7057}, {"contestId": 171, "index": "H", "name": "A polyline", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "implementation"], "solvedCount": 300}, {"contestId": 171, "index": "G", "name": "Mysterious numbers - 2", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 994}, {"contestId": 171, "index": "F", "name": "ucyhf", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "brute force", "implementation", "number theory"], "solvedCount": 1365}, {"contestId": 171, "index": "E", "name": "MYSTERIOUS LANGUAGE", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 1545}, {"contestId": 171, "index": "D", "name": "Broken checker", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "brute force"], "solvedCount": 2707}, {"contestId": 171, "index": "C", "name": "A Piece of Cake", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "implementation"], "solvedCount": 1159}, {"contestId": 171, "index": "B", "name": "Star", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "combinatorics"], "solvedCount": 4374}, {"contestId": 171, "index": "A", "name": "Mysterious numbers - 1", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "constructive algorithms"], "solvedCount": 4779}, {"contestId": 169, "index": "B", "name": "Replacing Digits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy"], "solvedCount": 3497}, {"contestId": 169, "index": "A", "name": "Chores", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["sortings"], "solvedCount": 7671}, {"contestId": 168, "index": "B", "name": "Wizards and Minimal Spell", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation", "strings"], "solvedCount": 1253}, {"contestId": 168, "index": "A", "name": "Wizards and Demonstration", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "math"], "solvedCount": 11069}, {"contestId": 167, "index": "E", "name": "Wizards and Bets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dfs and similar", "graphs", "math", "matrices"], "solvedCount": 611}, {"contestId": 167, "index": "D", "name": "Wizards and Roads", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "graph matchings", "graphs", "greedy"], "solvedCount": 209}, {"contestId": 167, "index": "C", "name": "Wizards and Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["games", "math"], "solvedCount": 712}, {"contestId": 167, "index": "B", "name": "Wizards and Huge Prize", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "math", "probabilities"], "solvedCount": 2308}, {"contestId": 167, "index": "A", "name": "Wizards and Trolleybuses", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "math"], "solvedCount": 2077}, {"contestId": 166, "index": "E", "name": "Tetrahedron", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "math", "matrices"], "solvedCount": 23611}, {"contestId": 166, "index": "D", "name": "Shoe Store", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dp", "graph matchings", "greedy", "sortings", "two pointers"], "solvedCount": 382}, {"contestId": 166, "index": "C", "name": "Median", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "math", "sortings"], "solvedCount": 7081}, {"contestId": 166, "index": "B", "name": "Polygons", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["geometry", "sortings"], "solvedCount": 2719}, {"contestId": 166, "index": "A", "name": "Rank List", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["binary search", "implementation", "sortings"], "solvedCount": 19336}, {"contestId": 165, "index": "E", "name": "Compatible Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "dfs and similar", "dp"], "solvedCount": 8045}, {"contestId": 165, "index": "D", "name": "Beard Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dsu", "trees"], "solvedCount": 1785}, {"contestId": 165, "index": "C", "name": "Another Problem on Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force", "dp", "math", "strings", "two pointers"], "solvedCount": 13117}, {"contestId": 165, "index": "B", "name": "Burning Midnight Oil", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "implementation"], "solvedCount": 20742}, {"contestId": 165, "index": "A", "name": "Supercentral Point", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 25323}, {"contestId": 164, "index": "E", "name": "Polycarpus and Tasks", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": [], "solvedCount": 72}, {"contestId": 164, "index": "D", "name": "Minimum Diameter", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["binary search", "brute force"], "solvedCount": 266}, {"contestId": 164, "index": "C", "name": "Machine Programming", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["flows", "graphs"], "solvedCount": 927}, {"contestId": 164, "index": "B", "name": "Ancient Berland Hieroglyphs", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["two pointers"], "solvedCount": 500}, {"contestId": 164, "index": "A", "name": "Variable, or There and Back Again", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["dfs and similar", "graphs"], "solvedCount": 1064}, {"contestId": 163, "index": "E", "name": "e-Government", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "strings", "trees"], "solvedCount": 1964}, {"contestId": 163, "index": "D", "name": "Large Refrigerator", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force"], "solvedCount": 541}, {"contestId": 163, "index": "C", "name": "Conveyor", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["sortings", "two pointers"], "solvedCount": 571}, {"contestId": 163, "index": "B", "name": "Lemmings", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search"], "solvedCount": 1104}, {"contestId": 163, "index": "A", "name": "Substring and Subsequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dp"], "solvedCount": 2846}, {"contestId": 162, "index": "J", "name": "Brackets", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 103}, {"contestId": 162, "index": "I", "name": "Truncatable primes", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 95}, {"contestId": 162, "index": "H", "name": "Alternating case", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 224}, {"contestId": 162, "index": "G", "name": "Non-decimal sum", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 85}, {"contestId": 162, "index": "F", "name": "Factorial zeros", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 224}, {"contestId": 162, "index": "E", "name": "HQ9+", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 182}, {"contestId": 162, "index": "D", "name": "Remove digits", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special"], "solvedCount": 230}, {"contestId": 162, "index": "C", "name": "Prime factorization", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 1135}, {"contestId": 162, "index": "B", "name": "Binary notation", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 320}, {"contestId": 162, "index": "A", "name": "Pentagonal numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "implementation"], "solvedCount": 825}, {"contestId": 161, "index": "E", "name": "Polycarpus the Safecracker", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "dp"], "solvedCount": 491}, {"contestId": 161, "index": "D", "name": "Distance in Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 17213}, {"contestId": 161, "index": "C", "name": "Abracadabra", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["divide and conquer"], "solvedCount": 671}, {"contestId": 161, "index": "B", "name": "Discounts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 2025}, {"contestId": 161, "index": "A", "name": "Dress'em in Vests!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "brute force", "greedy", "two pointers"], "solvedCount": 5138}, {"contestId": 160, "index": "E", "name": "Buses and People", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 623}, {"contestId": 160, "index": "D", "name": "Edges in MST", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs", "sortings"], "solvedCount": 3061}, {"contestId": 160, "index": "C", "name": "Find Pair", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "math", "sortings"], "solvedCount": 3591}, {"contestId": 160, "index": "B", "name": "Unlucky Ticket", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 14853}, {"contestId": 160, "index": "A", "name": "Twins", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "sortings"], "solvedCount": 130607}, {"contestId": 159, "index": "E", "name": "Zebra Tower", "type": "PROGRAMMING", "points": 2500.0, "rating": 1700, "tags": ["*special", "data structures", "greedy", "sortings"], "solvedCount": 1022}, {"contestId": 159, "index": "D", "name": "Palindrome pairs", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["*special", "brute force", "dp", "strings"], "solvedCount": 4554}, {"contestId": 159, "index": "C", "name": "String Manipulation 1.0", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "binary search", "brute force", "data structures", "strings"], "solvedCount": 3088}, {"contestId": 159, "index": "B", "name": "Matchmaker", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["*special", "greedy", "sortings"], "solvedCount": 3962}, {"contestId": 159, "index": "A", "name": "Friends or Not", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["*special", "greedy", "implementation"], "solvedCount": 2543}, {"contestId": 158, "index": "E", "name": "Phone Talks", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["*special", "dp", "sortings"], "solvedCount": 1482}, {"contestId": 158, "index": "D", "name": "Ice Sculptures", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["*special", "brute force", "number theory"], "solvedCount": 6357}, {"contestId": 158, "index": "C", "name": "Cd and pwd commands", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["*special", "data structures", "implementation"], "solvedCount": 9871}, {"contestId": 158, "index": "B", "name": "Taxi", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["*special", "greedy", "implementation"], "solvedCount": 95021}, {"contestId": 158, "index": "A", "name": "Next Round", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["*special", "implementation"], "solvedCount": 287925}, {"contestId": 157, "index": "B", "name": "Trace", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["geometry", "sortings"], "solvedCount": 13770}, {"contestId": 157, "index": "A", "name": "Game Outcome", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 8220}, {"contestId": 156, "index": "E", "name": "Mrs. Hudson's Pancakes", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "dp"], "solvedCount": 173}, {"contestId": 156, "index": "D", "name": "Clues", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["combinatorics", "graphs"], "solvedCount": 1867}, {"contestId": 156, "index": "C", "name": "Cipher", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"], "solvedCount": 2511}, {"contestId": 156, "index": "B", "name": "Suspects", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 2302}, {"contestId": 156, "index": "A", "name": "Message", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force"], "solvedCount": 3140}, {"contestId": 155, "index": "B", "name": "Combination", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "sortings"], "solvedCount": 10687}, {"contestId": 155, "index": "A", "name": "I_love_\\%username\\%", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 84961}, {"contestId": 154, "index": "E", "name": "Martian Colony", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["geometry"], "solvedCount": 106}, {"contestId": 154, "index": "D", "name": "Flatland Fencing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["games", "math"], "solvedCount": 456}, {"contestId": 154, "index": "C", "name": "Double Profiles", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["graphs", "hashing", "sortings"], "solvedCount": 3089}, {"contestId": 154, "index": "B", "name": "Colliders", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math", "number theory"], "solvedCount": 5411}, {"contestId": 154, "index": "A", "name": "Hometask", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy"], "solvedCount": 4177}, {"contestId": 153, "index": "E", "name": "Euclidean Distance", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special"], "solvedCount": 84}, {"contestId": 153, "index": "D", "name": "Date Change", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special"], "solvedCount": 88}, {"contestId": 153, "index": "C", "name": "Caesar Cipher", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special"], "solvedCount": 400}, {"contestId": 153, "index": "B", "name": "Binary notation", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 165}, {"contestId": 153, "index": "A", "name": "A + B", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 904}, {"contestId": 152, "index": "E", "name": "Garden", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "dp", "graphs", "trees"], "solvedCount": 514}, {"contestId": 152, "index": "D", "name": "Frames", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force"], "solvedCount": 252}, {"contestId": 152, "index": "C", "name": "Pocket Book", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["combinatorics"], "solvedCount": 11228}, {"contestId": 152, "index": "B", "name": "Steps", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "implementation"], "solvedCount": 7079}, {"contestId": 152, "index": "A", "name": "Marks", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 17794}, {"contestId": 151, "index": "B", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "strings"], "solvedCount": 6643}, {"contestId": 151, "index": "A", "name": "Soft Drinking", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 85354}, {"contestId": 150, "index": "E", "name": "Freezing with Style", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "divide and conquer", "trees"], "solvedCount": 954}, {"contestId": 150, "index": "D", "name": "Mission Impassable", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp", "strings"], "solvedCount": 713}, {"contestId": 150, "index": "C", "name": "Smart Cheater", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["data structures", "math", "probabilities"], "solvedCount": 669}, {"contestId": 150, "index": "B", "name": "Quantity of Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "dfs and similar", "graphs", "math"], "solvedCount": 4801}, {"contestId": 150, "index": "A", "name": "Win or Freeze", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["games", "math", "number theory"], "solvedCount": 8254}, {"contestId": 149, "index": "E", "name": "Martian Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["string suffix structures", "strings"], "solvedCount": 2405}, {"contestId": 149, "index": "D", "name": "Coloring Brackets", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["dp"], "solvedCount": 4259}, {"contestId": 149, "index": "C", "name": "Division into Teams", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["greedy", "math", "sortings"], "solvedCount": 5568}, {"contestId": 149, "index": "B", "name": "Martian Clock", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 2327}, {"contestId": 149, "index": "A", "name": "Business trip", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 43538}, {"contestId": 148, "index": "E", "name": "Porcelain", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dp"], "solvedCount": 4483}, {"contestId": 148, "index": "D", "name": "Bag of mice", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "games", "math", "probabilities"], "solvedCount": 8196}, {"contestId": 148, "index": "C", "name": "Terse princess", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3250}, {"contestId": 148, "index": "B", "name": "Escape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation", "math"], "solvedCount": 5786}, {"contestId": 148, "index": "A", "name": "Insomnia cure", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 103321}, {"contestId": 147, "index": "B", "name": "Smile House", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["binary search", "graphs", "matrices"], "solvedCount": 880}, {"contestId": 147, "index": "A", "name": "Punctuation", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "strings"], "solvedCount": 3826}, {"contestId": 146, "index": "B", "name": "Lucky Mask", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "implementation"], "solvedCount": 4720}, {"contestId": 146, "index": "A", "name": "Lucky Ticket", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 16316}, {"contestId": 145, "index": "E", "name": "Lucky Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 3661}, {"contestId": 145, "index": "D", "name": "Lucky Pair", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "data structures", "implementation"], "solvedCount": 260}, {"contestId": 145, "index": "C", "name": "Lucky Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "dp", "math"], "solvedCount": 2038}, {"contestId": 145, "index": "B", "name": "Lucky Number 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 2301}, {"contestId": 145, "index": "A", "name": "Lucky Conversion", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 7490}, {"contestId": 144, "index": "E", "name": "Competition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "greedy"], "solvedCount": 647}, {"contestId": 144, "index": "D", "name": "Missile Silos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 4523}, {"contestId": 144, "index": "C", "name": "Anagram Search", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["implementation", "strings"], "solvedCount": 4130}, {"contestId": 144, "index": "B", "name": "Meeting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 5527}, {"contestId": 144, "index": "A", "name": "Arrival of the General", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 109118}, {"contestId": 143, "index": "B", "name": "Help Kingdom of Far Far Away 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "strings"], "solvedCount": 5178}, {"contestId": 143, "index": "A", "name": "Help Vasilisa the Wise 2", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "math"], "solvedCount": 14902}, {"contestId": 142, "index": "E", "name": "Help Greg the Dwarf 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["geometry"], "solvedCount": 85}, {"contestId": 142, "index": "D", "name": "Help Shrek and Donkey 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["games"], "solvedCount": 376}, {"contestId": 142, "index": "C", "name": "Help Caretaker", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "dp"], "solvedCount": 965}, {"contestId": 142, "index": "B", "name": "Help General", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 2319}, {"contestId": 142, "index": "A", "name": "Help Farmer", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "math"], "solvedCount": 2726}, {"contestId": 141, "index": "E", "name": "Clearing Up", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "dp", "dsu", "graphs"], "solvedCount": 1237}, {"contestId": 141, "index": "D", "name": "Take-off Ramps", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["graphs", "shortest paths"], "solvedCount": 972}, {"contestId": 141, "index": "C", "name": "Queue", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 2652}, {"contestId": 141, "index": "B", "name": "Hopscotch", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["geometry", "math"], "solvedCount": 5622}, {"contestId": 141, "index": "A", "name": "Amusing Joke", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "sortings", "strings"], "solvedCount": 93213}, {"contestId": 140, "index": "F", "name": "New Year Snowflake", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["geometry", "sortings"], "solvedCount": 392}, {"contestId": 140, "index": "E", "name": "New Year Garland", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "dp"], "solvedCount": 1009}, {"contestId": 140, "index": "D", "name": "New Year Contest", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["greedy", "sortings"], "solvedCount": 2253}, {"contestId": 140, "index": "C", "name": "New Year Snowmen", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 4566}, {"contestId": 140, "index": "B", "name": "New Year Cards", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 1708}, {"contestId": 140, "index": "A", "name": "New Year Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["geometry", "math"], "solvedCount": 4239}, {"contestId": 139, "index": "B", "name": "Wallpaper", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation", "math"], "solvedCount": 1362}, {"contestId": 139, "index": "A", "name": "Petr and Book", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 35036}, {"contestId": 138, "index": "E", "name": "Hellish Constraints", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dp", "two pointers"], "solvedCount": 179}, {"contestId": 138, "index": "D", "name": "World of Darkraft", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "games"], "solvedCount": 550}, {"contestId": 138, "index": "C", "name": "Mushroom Gnomes - 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "data structures", "probabilities", "sortings"], "solvedCount": 901}, {"contestId": 138, "index": "B", "name": "Digits Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy"], "solvedCount": 1076}, {"contestId": 138, "index": "A", "name": "Literature Lesson", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 2476}, {"contestId": 137, "index": "E", "name": "Last Chance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "implementation", "strings"], "solvedCount": 1290}, {"contestId": 137, "index": "D", "name": "Palindromes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "strings"], "solvedCount": 1637}, {"contestId": 137, "index": "C", "name": "History", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["sortings"], "solvedCount": 7542}, {"contestId": 137, "index": "B", "name": "Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["greedy"], "solvedCount": 14450}, {"contestId": 137, "index": "A", "name": "Postcards and photos", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 7531}, {"contestId": 136, "index": "B", "name": "Ternary Logic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 5138}, {"contestId": 136, "index": "A", "name": "Presents", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 133477}, {"contestId": 135, "index": "E", "name": "Weak Subsequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["combinatorics"], "solvedCount": 332}, {"contestId": 135, "index": "D", "name": "Cycle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "dfs and similar", "implementation"], "solvedCount": 311}, {"contestId": 135, "index": "C", "name": "Zero-One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "games", "greedy"], "solvedCount": 1381}, {"contestId": 135, "index": "B", "name": "Rectangle and Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "geometry", "math"], "solvedCount": 2507}, {"contestId": 135, "index": "A", "name": "Replacement", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 7927}, {"contestId": 134, "index": "C", "name": "Swaps", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 506}, {"contestId": 134, "index": "B", "name": "Pairs of Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "dfs and similar", "math", "number theory"], "solvedCount": 2210}, {"contestId": 134, "index": "A", "name": "Average Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 4454}, {"contestId": 133, "index": "B", "name": "Unary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 9127}, {"contestId": 133, "index": "A", "name": "HQ9+", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 116275}, {"contestId": 132, "index": "E", "name": "Bits of merry old England", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["flows", "graphs"], "solvedCount": 548}, {"contestId": 132, "index": "D", "name": "Constants in the language of Shakespeare", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 677}, {"contestId": 132, "index": "C", "name": "Logo Turtle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp"], "solvedCount": 2457}, {"contestId": 132, "index": "B", "name": "Piet", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["implementation"], "solvedCount": 682}, {"contestId": 132, "index": "A", "name": "Turing Tape", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 2858}, {"contestId": 131, "index": "F", "name": "Present to Mom", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "two pointers"], "solvedCount": 684}, {"contestId": 131, "index": "E", "name": "Yet Another Task with Queens", "type": "PROGRAMMING", "points": 2500.0, "rating": 1700, "tags": ["sortings"], "solvedCount": 1979}, {"contestId": 131, "index": "D", "name": "Subway", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dfs and similar", "graphs"], "solvedCount": 5015}, {"contestId": 131, "index": "C", "name": "The World is a Theatre", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["combinatorics", "math"], "solvedCount": 11997}, {"contestId": 131, "index": "B", "name": "Opposites Attract", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 7302}, {"contestId": 131, "index": "A", "name": "cAPS lOCK", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 94085}, {"contestId": 130, "index": "J", "name": "Date calculation", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special"], "solvedCount": 350}, {"contestId": 130, "index": "I", "name": "Array sorting", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "sortings"], "solvedCount": 178}, {"contestId": 130, "index": "H", "name": "Balanced brackets", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 668}, {"contestId": 130, "index": "G", "name": "CAPS LOCK ON", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special"], "solvedCount": 295}, {"contestId": 130, "index": "F", "name": "Prime factorization", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 291}, {"contestId": 130, "index": "E", "name": "Tribonacci numbers", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special"], "solvedCount": 309}, {"contestId": 130, "index": "D", "name": "Exponentiation", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"], "solvedCount": 415}, {"contestId": 130, "index": "C", "name": "Decimal sum", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special"], "solvedCount": 525}, {"contestId": 130, "index": "B", "name": "Gnikool Ssalg", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation", "strings"], "solvedCount": 552}, {"contestId": 130, "index": "A", "name": "Hexagonal numbers", "type": "PROGRAMMING", "rating": 900, "tags": ["*special", "implementation"], "solvedCount": 1776}, {"contestId": 129, "index": "B", "name": "Students and Shoelaces", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "solvedCount": 13165}, {"contestId": 129, "index": "A", "name": "Cookies", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 24153}, {"contestId": 128, "index": "E", "name": "Birthday", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["geometry", "math"], "solvedCount": 105}, {"contestId": 128, "index": "D", "name": "Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1199}, {"contestId": 128, "index": "C", "name": "Games with Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "dp"], "solvedCount": 3095}, {"contestId": 128, "index": "B", "name": "String", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "hashing", "implementation", "string suffix structures", "strings"], "solvedCount": 2715}, {"contestId": 128, "index": "A", "name": "Statues", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar"], "solvedCount": 3309}, {"contestId": 127, "index": "B", "name": "Canvas Frames", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 9756}, {"contestId": 127, "index": "A", "name": "Wasted Time", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["geometry"], "solvedCount": 12100}, {"contestId": 126, "index": "E", "name": "Pills", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "flows"], "solvedCount": 94}, {"contestId": 126, "index": "D", "name": "Fibonacci Sums", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "math"], "solvedCount": 896}, {"contestId": 126, "index": "C", "name": "E-reader Display", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 773}, {"contestId": 126, "index": "B", "name": "Password", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "dp", "hashing", "string suffix structures", "strings"], "solvedCount": 22442}, {"contestId": 126, "index": "A", "name": "Hot Bath", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["binary search", "brute force", "math"], "solvedCount": 1509}, {"contestId": 125, "index": "E", "name": "MST Company", "type": "PROGRAMMING", "points": 5000.0, "rating": 2400, "tags": ["binary search", "graphs"], "solvedCount": 1237}, {"contestId": 125, "index": "D", "name": "Two progressions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 430}, {"contestId": 125, "index": "C", "name": "Hobbits' Party", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1001}, {"contestId": 125, "index": "B", "name": "Simple XML", "type": "PROGRAMMING", "points": 1500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 3481}, {"contestId": 125, "index": "A", "name": "Measuring Lengths in Baden", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["math"], "solvedCount": 3052}, {"contestId": 124, "index": "B", "name": "Permutations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "combinatorics", "implementation"], "solvedCount": 4489}, {"contestId": 124, "index": "A", "name": "The number of positions", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"], "solvedCount": 41815}, {"contestId": 123, "index": "E", "name": "Maze", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "probabilities", "trees"], "solvedCount": 766}, {"contestId": 123, "index": "D", "name": "String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["string suffix structures"], "solvedCount": 1293}, {"contestId": 123, "index": "C", "name": "Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "dp", "greedy"], "solvedCount": 653}, {"contestId": 123, "index": "B", "name": "Squares", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["math"], "solvedCount": 1203}, {"contestId": 123, "index": "A", "name": "Prime Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "number theory", "strings"], "solvedCount": 3812}, {"contestId": 122, "index": "B", "name": "Lucky Substring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 12858}, {"contestId": 122, "index": "A", "name": "Lucky Division", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "number theory"], "solvedCount": 137614}, {"contestId": 121, "index": "E", "name": "Lucky Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 1893}, {"contestId": 121, "index": "D", "name": "Lucky Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "implementation", "two pointers"], "solvedCount": 302}, {"contestId": 121, "index": "C", "name": "Lucky Permutation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "combinatorics", "number theory"], "solvedCount": 1324}, {"contestId": 121, "index": "B", "name": "Lucky Transformation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["strings"], "solvedCount": 2692}, {"contestId": 121, "index": "A", "name": "Lucky Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 9828}, {"contestId": 120, "index": "J", "name": "Minimum Sum", "type": "PROGRAMMING", "rating": 1900, "tags": ["divide and conquer", "geometry", "sortings"], "solvedCount": 988}, {"contestId": 120, "index": "I", "name": "Luck is in Numbers", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy"], "solvedCount": 313}, {"contestId": 120, "index": "H", "name": "Brevity is Soul of Wit", "type": "PROGRAMMING", "rating": 1800, "tags": ["graph matchings"], "solvedCount": 1519}, {"contestId": 120, "index": "G", "name": "Boom", "type": "PROGRAMMING", "rating": 1800, "tags": ["implementation"], "solvedCount": 703}, {"contestId": 120, "index": "F", "name": "Spiders", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "trees"], "solvedCount": 3899}, {"contestId": 120, "index": "E", "name": "Put Knight!", "type": "PROGRAMMING", "rating": 1400, "tags": ["games", "math"], "solvedCount": 2869}, {"contestId": 120, "index": "D", "name": "Three Sons", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"], "solvedCount": 1990}, {"contestId": 120, "index": "C", "name": "Winnie-the-Pooh and honey", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 3848}, {"contestId": 120, "index": "B", "name": "Quiz League", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 3569}, {"contestId": 120, "index": "A", "name": "Elevator", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "implementation", "math"], "solvedCount": 5061}, {"contestId": 119, "index": "E", "name": "Alternative Reality", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["geometry"], "solvedCount": 103}, {"contestId": 119, "index": "D", "name": "String Transformation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["hashing", "strings"], "solvedCount": 562}, {"contestId": 119, "index": "C", "name": "Education Reform", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp"], "solvedCount": 998}, {"contestId": 119, "index": "B", "name": "Before Exam", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 1105}, {"contestId": 119, "index": "A", "name": "Epic Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 28402}, {"contestId": 118, "index": "E", "name": "Bertown roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["dfs and similar", "graphs"], "solvedCount": 7505}, {"contestId": 118, "index": "D", "name": "Caesar's Legions", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp"], "solvedCount": 18981}, {"contestId": 118, "index": "C", "name": "Fancy Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "greedy", "sortings", "strings"], "solvedCount": 2728}, {"contestId": 118, "index": "B", "name": "Present from Lena", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 32561}, {"contestId": 118, "index": "A", "name": "String Task", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 215619}, {"contestId": 117, "index": "E", "name": "Tree or not Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "graphs", "implementation", "trees"], "solvedCount": 384}, {"contestId": 117, "index": "D", "name": "Not Quick Transformation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["divide and conquer", "math"], "solvedCount": 354}, {"contestId": 117, "index": "C", "name": "Cycle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs"], "solvedCount": 2833}, {"contestId": 117, "index": "B", "name": "Very Interesting Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "number theory"], "solvedCount": 1665}, {"contestId": 117, "index": "A", "name": "Elevator", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 2131}, {"contestId": 116, "index": "B", "name": "Little Pigs and Wolves", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "implementation"], "solvedCount": 14313}, {"contestId": 116, "index": "A", "name": "Tram", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 161106}, {"contestId": 115, "index": "E", "name": "Linear Kingdom Races", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dp"], "solvedCount": 1958}, {"contestId": 115, "index": "D", "name": "Unambiguous Arithmetic Expression", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "expression parsing"], "solvedCount": 442}, {"contestId": 115, "index": "C", "name": "Plumber", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["math"], "solvedCount": 636}, {"contestId": 115, "index": "B", "name": "Lawnmower", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "sortings"], "solvedCount": 2717}, {"contestId": 115, "index": "A", "name": "Party", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 39303}, {"contestId": 114, "index": "B", "name": "PFAST Inc.", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "brute force", "graphs"], "solvedCount": 4040}, {"contestId": 114, "index": "A", "name": "Cifera", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["math"], "solvedCount": 14585}, {"contestId": 113, "index": "E", "name": "Sleeping", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "implementation", "math"], "solvedCount": 124}, {"contestId": 113, "index": "D", "name": "Museum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["math", "matrices", "probabilities"], "solvedCount": 752}, {"contestId": 113, "index": "C", "name": "Double Happiness", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "math", "number theory"], "solvedCount": 1329}, {"contestId": 113, "index": "B", "name": "Petr#", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "data structures", "hashing", "strings"], "solvedCount": 3086}, {"contestId": 113, "index": "A", "name": "Grammar Lessons", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "strings"], "solvedCount": 2429}, {"contestId": 112, "index": "B", "name": "Petya and Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 4347}, {"contestId": 112, "index": "A", "name": "Petya and Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 259726}, {"contestId": 111, "index": "E", "name": "Petya and Rectangle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": [], "solvedCount": 72}, {"contestId": 111, "index": "D", "name": "Petya and Coloring", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dp"], "solvedCount": 846}, {"contestId": 111, "index": "C", "name": "Petya and Spiders", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["bitmasks", "dp", "dsu"], "solvedCount": 1498}, {"contestId": 111, "index": "B", "name": "Petya and Divisors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "number theory"], "solvedCount": 3903}, {"contestId": 111, "index": "A", "name": "Petya and Inequiations", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy"], "solvedCount": 4973}, {"contestId": 110, "index": "B", "name": "Lucky String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "strings"], "solvedCount": 10606}, {"contestId": 110, "index": "A", "name": "Nearly Lucky Number", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 179640}, {"contestId": 109, "index": "E", "name": "Lucky Interval", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "math"], "solvedCount": 109}, {"contestId": 109, "index": "D", "name": "Lucky Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 865}, {"contestId": 109, "index": "C", "name": "Lucky Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp", "dsu", "trees"], "solvedCount": 3789}, {"contestId": 109, "index": "B", "name": "Lucky Probability", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "probabilities"], "solvedCount": 1665}, {"contestId": 109, "index": "A", "name": "Lucky Sum of Digits", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 18942}, {"contestId": 108, "index": "B", "name": "Datatypes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["math", "sortings"], "solvedCount": 2592}, {"contestId": 108, "index": "A", "name": "Palindromic Times", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "strings"], "solvedCount": 9849}, {"contestId": 107, "index": "E", "name": "Darts", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["geometry", "probabilities"], "solvedCount": 145}, {"contestId": 107, "index": "D", "name": "Crime Management", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "graphs", "matrices"], "solvedCount": 448}, {"contestId": 107, "index": "C", "name": "Arrangement", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["bitmasks", "dp"], "solvedCount": 418}, {"contestId": 107, "index": "B", "name": "Basketball Team", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["combinatorics", "dp", "math", "probabilities"], "solvedCount": 3988}, {"contestId": 107, "index": "A", "name": "Dorm Water Supply", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "graphs"], "solvedCount": 5459}, {"contestId": 106, "index": "E", "name": "Space Rescuers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["geometry", "ternary search"], "solvedCount": 920}, {"contestId": 106, "index": "D", "name": "Treasure Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["brute force", "implementation"], "solvedCount": 1400}, {"contestId": 106, "index": "C", "name": "Buns", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dp"], "solvedCount": 6509}, {"contestId": 106, "index": "B", "name": "Choosing Laptop", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "implementation"], "solvedCount": 6472}, {"contestId": 106, "index": "A", "name": "Card Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 8055}, {"contestId": 105, "index": "E", "name": "Lift and Throw", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force"], "solvedCount": 198}, {"contestId": 105, "index": "D", "name": "Entertaining Geodetics", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["brute force", "dsu", "implementation"], "solvedCount": 143}, {"contestId": 105, "index": "C", "name": "Item World", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "implementation", "sortings"], "solvedCount": 354}, {"contestId": 105, "index": "B", "name": "Dark Assembly", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "probabilities"], "solvedCount": 851}, {"contestId": 105, "index": "A", "name": "Transmigration", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 1894}, {"contestId": 104, "index": "A", "name": "Blackjack", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 16383}, {"contestId": 103, "index": "E", "name": "Buying Sets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["flows", "graph matchings"], "solvedCount": 991}, {"contestId": 103, "index": "D", "name": "Time to Raid Cowavans", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "data structures", "sortings"], "solvedCount": 2346}, {"contestId": 103, "index": "C", "name": "Russian Roulette", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 999}, {"contestId": 103, "index": "B", "name": "Cthulhu", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 9732}, {"contestId": 103, "index": "A", "name": "Testing Pants for Sadness", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["greedy", "implementation", "math"], "solvedCount": 6317}, {"contestId": 102, "index": "B", "name": "Sum of Digits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 29618}, {"contestId": 102, "index": "A", "name": "Clothes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force"], "solvedCount": 3143}, {"contestId": 101, "index": "E", "name": "Candies and Stones", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "dp"], "solvedCount": 579}, {"contestId": 101, "index": "D", "name": "Castle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "greedy", "probabilities", "sortings", "trees"], "solvedCount": 750}, {"contestId": 101, "index": "C", "name": "Vectors", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["implementation", "math"], "solvedCount": 723}, {"contestId": 101, "index": "B", "name": "Buses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "data structures", "dp"], "solvedCount": 2802}, {"contestId": 101, "index": "A", "name": "Homework", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy"], "solvedCount": 4088}, {"contestId": 100, "index": "J", "name": "Interval Coloring", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special", "greedy", "math"], "solvedCount": 72}, {"contestId": 100, "index": "I", "name": "Rotation", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "geometry", "math"], "solvedCount": 419}, {"contestId": 100, "index": "H", "name": "Battleship", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dfs and similar", "implementation"], "solvedCount": 89}, {"contestId": 100, "index": "G", "name": "Name the album", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "data structures", "implementation"], "solvedCount": 136}, {"contestId": 100, "index": "F", "name": "Polynom", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "implementation"], "solvedCount": 153}, {"contestId": 100, "index": "E", "name": "Lamps in a Line", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "math"], "solvedCount": 299}, {"contestId": 100, "index": "D", "name": "World of Mouth", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "strings"], "solvedCount": 328}, {"contestId": 100, "index": "C", "name": "A+B", "type": "PROGRAMMING", "rating": 1400, "tags": ["*special", "implementation"], "solvedCount": 584}, {"contestId": 100, "index": "B", "name": "Friendly Numbers", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "implementation"], "solvedCount": 569}, {"contestId": 100, "index": "A", "name": "Carpeting the Room", "type": "PROGRAMMING", "rating": 1100, "tags": ["*special", "implementation"], "solvedCount": 982}, {"contestId": 99, "index": "B", "name": "Help Chef Gerasim", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "sortings"], "solvedCount": 3089}, {"contestId": 99, "index": "A", "name": "Help Far Away Kingdom", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["strings"], "solvedCount": 7216}, {"contestId": 98, "index": "E", "name": "Help Shrek and Donkey", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "games", "math", "probabilities"], "solvedCount": 524}, {"contestId": 98, "index": "D", "name": "Help Monks", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 196}, {"contestId": 98, "index": "C", "name": "Help Greg the Dwarf", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["geometry", "ternary search"], "solvedCount": 322}, {"contestId": 98, "index": "B", "name": "Help King", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["implementation", "probabilities", "trees"], "solvedCount": 139}, {"contestId": 98, "index": "A", "name": "Help Victoria the Wise", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "implementation"], "solvedCount": 1236}, {"contestId": 97, "index": "E", "name": "Leaders", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 407}, {"contestId": 97, "index": "D", "name": "Robot in Basement", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["bitmasks", "brute force", "implementation"], "solvedCount": 271}, {"contestId": 97, "index": "C", "name": "Winning Strategy", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "graphs", "math", "shortest paths"], "solvedCount": 327}, {"contestId": 97, "index": "B", "name": "Superset", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 917}, {"contestId": 97, "index": "A", "name": "Domino", "type": "PROGRAMMING", "points": 500.0, "rating": 2400, "tags": ["brute force", "implementation"], "solvedCount": 327}, {"contestId": 96, "index": "B", "name": "Lucky Numbers (easy)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "bitmasks", "brute force"], "solvedCount": 17384}, {"contestId": 96, "index": "A", "name": "Football", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 178895}, {"contestId": 95, "index": "E", "name": "Lucky Country", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "dsu", "graphs"], "solvedCount": 1685}, {"contestId": 95, "index": "D", "name": "Horse Races", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math"], "solvedCount": 472}, {"contestId": 95, "index": "C", "name": "Volleyball", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["shortest paths"], "solvedCount": 3149}, {"contestId": 95, "index": "B", "name": "Lucky Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp", "greedy"], "solvedCount": 1302}, {"contestId": 95, "index": "A", "name": "Hockey", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation", "strings"], "solvedCount": 1739}, {"contestId": 94, "index": "B", "name": "Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["graphs", "implementation", "math"], "solvedCount": 5058}, {"contestId": 94, "index": "A", "name": "Restoring Password", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "strings"], "solvedCount": 11542}, {"contestId": 93, "index": "E", "name": "Lostborn", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "math", "number theory"], "solvedCount": 526}, {"contestId": 93, "index": "D", "name": "Flags", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math", "matrices"], "solvedCount": 367}, {"contestId": 93, "index": "C", "name": "Azembler", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "implementation"], "solvedCount": 441}, {"contestId": 93, "index": "B", "name": "End of Exams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["greedy"], "solvedCount": 941}, {"contestId": 93, "index": "A", "name": "Frames", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 2015}, {"contestId": 92, "index": "B", "name": "Binary Number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 5153}, {"contestId": 92, "index": "A", "name": "Chips", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "math"], "solvedCount": 20207}, {"contestId": 91, "index": "E", "name": "Igloo Skyscraper", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "geometry"], "solvedCount": 637}, {"contestId": 91, "index": "D", "name": "Grocer's Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 289}, {"contestId": 91, "index": "C", "name": "Ski Base", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["combinatorics", "dsu", "graphs"], "solvedCount": 946}, {"contestId": 91, "index": "B", "name": "Queue", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "data structures"], "solvedCount": 7245}, {"contestId": 91, "index": "A", "name": "Newspaper Headline", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["greedy", "strings"], "solvedCount": 3783}, {"contestId": 90, "index": "B", "name": "African Crossword", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 5538}, {"contestId": 90, "index": "A", "name": "Cableway", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "math"], "solvedCount": 5038}, {"contestId": 89, "index": "E", "name": "Fire and Ice", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["greedy"], "solvedCount": 113}, {"contestId": 89, "index": "D", "name": "Space mines", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["geometry"], "solvedCount": 246}, {"contestId": 89, "index": "C", "name": "Chip Play", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 645}, {"contestId": 89, "index": "B", "name": "Widget Library", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["dp", "expression parsing", "graphs", "implementation"], "solvedCount": 541}, {"contestId": 89, "index": "A", "name": "Robbery", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 1555}, {"contestId": 88, "index": "B", "name": "Keyboard", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation"], "solvedCount": 5061}, {"contestId": 88, "index": "A", "name": "Chord", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 3938}, {"contestId": 87, "index": "E", "name": "Mogohu-Rea Idol", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry"], "solvedCount": 664}, {"contestId": 87, "index": "D", "name": "Beautiful Road", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "sortings", "trees"], "solvedCount": 977}, {"contestId": 87, "index": "C", "name": "Interesting Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "games", "math"], "solvedCount": 1540}, {"contestId": 87, "index": "B", "name": "Vasya and Types", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["implementation", "strings"], "solvedCount": 1198}, {"contestId": 87, "index": "A", "name": "Trains", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["implementation", "math"], "solvedCount": 5617}, {"contestId": 86, "index": "E", "name": "Long sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["brute force", "math", "matrices"], "solvedCount": 198}, {"contestId": 86, "index": "D", "name": "Powerful array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "implementation", "math", "two pointers"], "solvedCount": 15413}, {"contestId": 86, "index": "C", "name": "Genetic engineering", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "string suffix structures", "trees"], "solvedCount": 783}, {"contestId": 86, "index": "B", "name": "Tetris revisited", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "graph matchings", "greedy", "math"], "solvedCount": 439}, {"contestId": 86, "index": "A", "name": "Reflection", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["math"], "solvedCount": 1554}, {"contestId": 85, "index": "E", "name": "Guard Towers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "dsu", "geometry", "graphs", "sortings"], "solvedCount": 1028}, {"contestId": 85, "index": "D", "name": "Sum of Medians", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "brute force", "data structures", "implementation"], "solvedCount": 2321}, {"contestId": 85, "index": "C", "name": "Petya and Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "dfs and similar", "probabilities", "sortings", "trees"], "solvedCount": 582}, {"contestId": 85, "index": "B", "name": "Embassy Queue", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 1020}, {"contestId": 85, "index": "A", "name": "Domino", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1893}, {"contestId": 84, "index": "C", "name": "Biathlon", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "implementation"], "solvedCount": 1772}, {"contestId": 84, "index": "A", "name": "Toy Army", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["math", "number theory"], "solvedCount": 15886}, {"contestId": 83, "index": "E", "name": "Two Subsequences", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "dp"], "solvedCount": 499}, {"contestId": 83, "index": "D", "name": "Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["dp", "math", "number theory"], "solvedCount": 944}, {"contestId": 83, "index": "C", "name": "Track", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 454}, {"contestId": 83, "index": "B", "name": "Doctor", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "math", "sortings"], "solvedCount": 1784}, {"contestId": 83, "index": "A", "name": "Magical Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["math"], "solvedCount": 6521}, {"contestId": 82, "index": "E", "name": "Corridor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["geometry"], "solvedCount": 226}, {"contestId": 82, "index": "D", "name": "Two out of Three", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dp"], "solvedCount": 2176}, {"contestId": 82, "index": "C", "name": "General Mobilization", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "sortings"], "solvedCount": 850}, {"contestId": 82, "index": "B", "name": "Sets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "hashing", "implementation"], "solvedCount": 2175}, {"contestId": 82, "index": "A", "name": "Double Cola", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "math"], "solvedCount": 31466}, {"contestId": 81, "index": "E", "name": "Pairs", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"], "solvedCount": 371}, {"contestId": 81, "index": "D", "name": "Polycarp's Picture Gallery", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 680}, {"contestId": 81, "index": "C", "name": "Average Score", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["greedy", "math", "sortings"], "solvedCount": 1713}, {"contestId": 81, "index": "B", "name": "Sequence Formatting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation", "strings"], "solvedCount": 2059}, {"contestId": 81, "index": "A", "name": "Plug-in", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["implementation"], "solvedCount": 12688}, {"contestId": 80, "index": "B", "name": "Depression", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["geometry", "math"], "solvedCount": 4734}, {"contestId": 80, "index": "A", "name": "Panoramix's Prediction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 60779}, {"contestId": 79, "index": "E", "name": "Security System", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["math"], "solvedCount": 147}, {"contestId": 79, "index": "D", "name": "Password", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "dp", "shortest paths"], "solvedCount": 1261}, {"contestId": 79, "index": "C", "name": "Beaver", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "hashing", "strings", "two pointers"], "solvedCount": 1988}, {"contestId": 79, "index": "B", "name": "Colorful Field", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["implementation", "sortings"], "solvedCount": 7686}, {"contestId": 79, "index": "A", "name": "Bus Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy"], "solvedCount": 4319}, {"contestId": 78, "index": "E", "name": "Evacuation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["flows", "graphs", "shortest paths"], "solvedCount": 662}, {"contestId": 78, "index": "D", "name": "Archer's Shot", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "geometry", "math", "two pointers"], "solvedCount": 347}, {"contestId": 78, "index": "C", "name": "Beaver Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "games", "number theory"], "solvedCount": 1996}, {"contestId": 78, "index": "B", "name": "Easter Eggs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 14550}, {"contestId": 78, "index": "A", "name": "Haiku", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 14423}, {"contestId": 77, "index": "E", "name": "Martian Food", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["geometry"], "solvedCount": 391}, {"contestId": 77, "index": "D", "name": "Domino Carpet", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "implementation"], "solvedCount": 351}, {"contestId": 77, "index": "C", "name": "Beavermuncher-0xFF", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "greedy", "trees"], "solvedCount": 1086}, {"contestId": 77, "index": "B", "name": "Falling Anvils", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["math", "probabilities"], "solvedCount": 2755}, {"contestId": 77, "index": "A", "name": "Heroes", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "implementation"], "solvedCount": 1845}, {"contestId": 76, "index": "F", "name": "Tourist", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "dp"], "solvedCount": 709}, {"contestId": 76, "index": "E", "name": "Points", "type": "PROGRAMMING", "rating": 1700, "tags": ["implementation", "math"], "solvedCount": 1780}, {"contestId": 76, "index": "D", "name": "Plus and xor", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "greedy", "math"], "solvedCount": 2195}, {"contestId": 76, "index": "C", "name": "Mutation", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "dp", "math"], "solvedCount": 352}, {"contestId": 76, "index": "B", "name": "Mice", "type": "PROGRAMMING", "rating": 2100, "tags": ["greedy", "two pointers"], "solvedCount": 776}, {"contestId": 76, "index": "A", "name": "Gift", "type": "PROGRAMMING", "rating": 2200, "tags": ["dsu", "graphs", "sortings", "trees"], "solvedCount": 1979}, {"contestId": 75, "index": "E", "name": "Ship's Shortest Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["geometry", "shortest paths"], "solvedCount": 286}, {"contestId": 75, "index": "D", "name": "Big Maximum Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "implementation", "math", "trees"], "solvedCount": 1935}, {"contestId": 75, "index": "C", "name": "Modified GCD", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "number theory"], "solvedCount": 14429}, {"contestId": 75, "index": "B", "name": "Facetook Priority Wall", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["expression parsing", "implementation", "strings"], "solvedCount": 3445}, {"contestId": 75, "index": "A", "name": "Life Without Zeros", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 28177}, {"contestId": 74, "index": "E", "name": "Shift It!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms"], "solvedCount": 174}, {"contestId": 74, "index": "D", "name": "Hanger", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 382}, {"contestId": 74, "index": "C", "name": "Chessboard Billiard", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dsu", "graphs", "number theory"], "solvedCount": 1343}, {"contestId": 74, "index": "B", "name": "Train", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["dp", "games", "greedy"], "solvedCount": 1629}, {"contestId": 74, "index": "A", "name": "Room Leader", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 5477}, {"contestId": 73, "index": "F", "name": "Plane of Tanks", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "geometry"], "solvedCount": 90}, {"contestId": 73, "index": "E", "name": "Morrowindows", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["math", "number theory"], "solvedCount": 374}, {"contestId": 73, "index": "D", "name": "FreeDiv", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "greedy"], "solvedCount": 666}, {"contestId": 73, "index": "C", "name": "LionAge II", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dp"], "solvedCount": 2290}, {"contestId": 73, "index": "B", "name": "Need For Brake", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "greedy", "sortings"], "solvedCount": 522}, {"contestId": 73, "index": "A", "name": "The Elder Trolls IV: Oblivon", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["greedy", "math"], "solvedCount": 1491}, {"contestId": 72, "index": "I", "name": "Goofy Numbers", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "implementation"], "solvedCount": 478}, {"contestId": 72, "index": "H", "name": "Reverse It!", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "implementation"], "solvedCount": 278}, {"contestId": 72, "index": "G", "name": "Fibonacci army", "type": "PROGRAMMING", "rating": 1000, "tags": ["*special", "dp"], "solvedCount": 2579}, {"contestId": 72, "index": "F", "name": "Oil", "type": "PROGRAMMING", "rating": 1900, "tags": ["*special", "greedy", "math"], "solvedCount": 139}, {"contestId": 72, "index": "E", "name": "Ali goes shopping", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "brute force", "strings"], "solvedCount": 178}, {"contestId": 72, "index": "D", "name": "Perse-script", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "expression parsing"], "solvedCount": 82}, {"contestId": 72, "index": "C", "name": "Extraordinarily Nice Numbers", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "math"], "solvedCount": 1008}, {"contestId": 72, "index": "B", "name": "INI-file", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "implementation"], "solvedCount": 116}, {"contestId": 72, "index": "A", "name": "Goshtasp, Vishtasp and Eidi", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "greedy", "math"], "solvedCount": 192}, {"contestId": 71, "index": "E", "name": "Nuclear Fusion", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "dp"], "solvedCount": 830}, {"contestId": 71, "index": "D", "name": "Solitaire", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "implementation"], "solvedCount": 685}, {"contestId": 71, "index": "C", "name": "Round Table Knights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "math", "number theory"], "solvedCount": 7029}, {"contestId": 71, "index": "B", "name": "Progress Bar", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation", "math"], "solvedCount": 4968}, {"contestId": 71, "index": "A", "name": "Way Too Long Words", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["strings"], "solvedCount": 449111}, {"contestId": 70, "index": "E", "name": "Information Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "implementation", "trees"], "solvedCount": 554}, {"contestId": 70, "index": "D", "name": "Professor's task", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures", "geometry"], "solvedCount": 1049}, {"contestId": 70, "index": "C", "name": "Lucky Tickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "sortings", "two pointers"], "solvedCount": 595}, {"contestId": 70, "index": "B", "name": "Text Messaging", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["expression parsing", "greedy", "strings"], "solvedCount": 1970}, {"contestId": 70, "index": "A", "name": "Cookies", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["math"], "solvedCount": 3420}, {"contestId": 69, "index": "E", "name": "Subsegments", "type": "PROGRAMMING", "points": 2500.0, "rating": 1800, "tags": ["data structures", "implementation"], "solvedCount": 4753}, {"contestId": 69, "index": "D", "name": "Dot", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "games"], "solvedCount": 1059}, {"contestId": 69, "index": "C", "name": "Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["implementation"], "solvedCount": 622}, {"contestId": 69, "index": "B", "name": "Bets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 3430}, {"contestId": 69, "index": "A", "name": "Young Physicist", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 186633}, {"contestId": 68, "index": "E", "name": "Contact", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["geometry"], "solvedCount": 79}, {"contestId": 68, "index": "D", "name": "Half-decay tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math", "probabilities"], "solvedCount": 507}, {"contestId": 68, "index": "C", "name": "Synchrophasotron", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force"], "solvedCount": 322}, {"contestId": 68, "index": "B", "name": "Energy exchange", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search"], "solvedCount": 5162}, {"contestId": 68, "index": "A", "name": "Irrational problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation", "number theory"], "solvedCount": 5113}, {"contestId": 67, "index": "E", "name": "Save the City!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry"], "solvedCount": 323}, {"contestId": 67, "index": "D", "name": "Optical Experiment", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp"], "solvedCount": 1605}, {"contestId": 67, "index": "C", "name": "Sequence of Balls", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["dp"], "solvedCount": 712}, {"contestId": 67, "index": "B", "name": "Restoration of the Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 842}, {"contestId": 67, "index": "A", "name": "Partial Teacher", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["dp", "graphs", "greedy", "implementation"], "solvedCount": 2260}, {"contestId": 66, "index": "E", "name": "Petya and Post", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "dp"], "solvedCount": 819}, {"contestId": 66, "index": "D", "name": "Petya and His Friends", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 3415}, {"contestId": 66, "index": "C", "name": "Petya and File System", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "implementation"], "solvedCount": 1105}, {"contestId": 66, "index": "B", "name": "Petya and Countryside", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "implementation"], "solvedCount": 22054}, {"contestId": 66, "index": "A", "name": "Petya and Java", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "strings"], "solvedCount": 6725}, {"contestId": 65, "index": "E", "name": "Harry Potter and Moving Staircases", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["dfs and similar", "implementation"], "solvedCount": 103}, {"contestId": 65, "index": "D", "name": "Harry Potter and the Sorting Hat", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "dfs and similar", "hashing"], "solvedCount": 456}, {"contestId": 65, "index": "C", "name": "Harry Potter and the Golden Snitch", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["binary search", "geometry"], "solvedCount": 822}, {"contestId": 65, "index": "B", "name": "Harry Potter and the History of Magic", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "greedy", "implementation"], "solvedCount": 1434}, {"contestId": 65, "index": "A", "name": "Harry Potter and Three Spells", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["implementation", "math"], "solvedCount": 1915}, {"contestId": 64, "index": "I", "name": "Sort the Table", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special", "sortings"], "solvedCount": 92}, {"contestId": 64, "index": "H", "name": "Table Bowling", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "sortings"], "solvedCount": 118}, {"contestId": 64, "index": "G", "name": "Path Canonization", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special"], "solvedCount": 126}, {"contestId": 64, "index": "F", "name": "Domain", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "expression parsing"], "solvedCount": 188}, {"contestId": 64, "index": "E", "name": "Prime Segment", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "brute force", "math", "number theory"], "solvedCount": 273}, {"contestId": 64, "index": "D", "name": "Presents", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "greedy"], "solvedCount": 295}, {"contestId": 64, "index": "C", "name": "Table", "type": "PROGRAMMING", "rating": 1600, "tags": ["*special", "greedy", "implementation", "math"], "solvedCount": 347}, {"contestId": 64, "index": "B", "name": "Expression", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "expression parsing"], "solvedCount": 1038}, {"contestId": 64, "index": "A", "name": "Factorial", "type": "PROGRAMMING", "rating": 1300, "tags": ["*special", "implementation"], "solvedCount": 3649}, {"contestId": 63, "index": "E", "name": "Sweets Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["bitmasks", "dfs and similar", "dp", "games", "implementation"], "solvedCount": 812}, {"contestId": 63, "index": "D", "name": "Dividing Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 1319}, {"contestId": 63, "index": "C", "name": "Bulls and Cows", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "implementation"], "solvedCount": 1804}, {"contestId": 63, "index": "B", "name": "Settlers' Training", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 5015}, {"contestId": 63, "index": "A", "name": "Sinking Ship", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation", "sortings", "strings"], "solvedCount": 12618}, {"contestId": 62, "index": "E", "name": "World Evil", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "flows"], "solvedCount": 245}, {"contestId": 62, "index": "D", "name": "Wormhouse", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dfs and similar", "graphs"], "solvedCount": 388}, {"contestId": 62, "index": "C", "name": "Inquisition", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["geometry", "implementation", "sortings"], "solvedCount": 261}, {"contestId": 62, "index": "B", "name": "Tyndex.Brome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "implementation"], "solvedCount": 1314}, {"contestId": 62, "index": "A", "name": "A Student's Dream", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["greedy", "math"], "solvedCount": 3599}, {"contestId": 61, "index": "E", "name": "Enemy is weak", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures", "trees"], "solvedCount": 13208}, {"contestId": 61, "index": "D", "name": "Eternal Victory", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 7158}, {"contestId": 61, "index": "C", "name": "Capture Valerian", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["math"], "solvedCount": 751}, {"contestId": 61, "index": "B", "name": "Hard Work", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["strings"], "solvedCount": 4026}, {"contestId": 61, "index": "A", "name": "Ultra-Fast Mathematician", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 125003}, {"contestId": 60, "index": "E", "name": "Mushroom Gnomes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["math", "matrices"], "solvedCount": 344}, {"contestId": 60, "index": "D", "name": "Savior", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "dsu", "math"], "solvedCount": 507}, {"contestId": 60, "index": "C", "name": "Mushroom Strife", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "dfs and similar"], "solvedCount": 619}, {"contestId": 60, "index": "B", "name": "Serial Time!", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "dsu"], "solvedCount": 5039}, {"contestId": 60, "index": "A", "name": "Where Are My Flakes?", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation", "two pointers"], "solvedCount": 3992}, {"contestId": 59, "index": "E", "name": "Shortest Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["graphs", "shortest paths"], "solvedCount": 4190}, {"contestId": 59, "index": "D", "name": "Team Arrangement", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 674}, {"contestId": 59, "index": "C", "name": "Title", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["expression parsing"], "solvedCount": 2272}, {"contestId": 59, "index": "B", "name": "Fortune Telling", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation", "number theory"], "solvedCount": 7566}, {"contestId": 59, "index": "A", "name": "Word", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 204541}, {"contestId": 58, "index": "E", "name": "Expression", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"], "solvedCount": 432}, {"contestId": 58, "index": "D", "name": "Calendar", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["greedy", "strings"], "solvedCount": 771}, {"contestId": 58, "index": "C", "name": "Trees", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force"], "solvedCount": 2133}, {"contestId": 58, "index": "B", "name": "Coins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 12768}, {"contestId": 58, "index": "A", "name": "Chat room", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["greedy", "strings"], "solvedCount": 144455}, {"contestId": 57, "index": "E", "name": "Chess", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["math", "shortest paths"], "solvedCount": 277}, {"contestId": 57, "index": "D", "name": "Journey", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "math"], "solvedCount": 357}, {"contestId": 57, "index": "C", "name": "Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "math"], "solvedCount": 3319}, {"contestId": 57, "index": "B", "name": "Martian Architecture", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 1083}, {"contestId": 57, "index": "A", "name": "Square Earth?", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["dfs and similar", "greedy", "implementation"], "solvedCount": 3089}, {"contestId": 56, "index": "E", "name": "Domino Principle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 2666}, {"contestId": 56, "index": "D", "name": "Changing a String", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp"], "solvedCount": 1899}, {"contestId": 56, "index": "C", "name": "Corporation Mail", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "expression parsing", "implementation"], "solvedCount": 1243}, {"contestId": 56, "index": "B", "name": "Spoilt Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 3879}, {"contestId": 56, "index": "A", "name": "Bar", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 9162}, {"contestId": 55, "index": "E", "name": "Very simple problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["geometry", "two pointers"], "solvedCount": 769}, {"contestId": 55, "index": "D", "name": "Beautiful numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "number theory"], "solvedCount": 4320}, {"contestId": 55, "index": "C", "name": "Pie or die", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["games"], "solvedCount": 1733}, {"contestId": 55, "index": "B", "name": "Smallest number", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force"], "solvedCount": 3127}, {"contestId": 55, "index": "A", "name": "Flea travel", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "math"], "solvedCount": 3629}, {"contestId": 54, "index": "E", "name": "Vacuum \u0421leaner", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["geometry"], "solvedCount": 206}, {"contestId": 54, "index": "D", "name": "Writing a Song", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "dp", "strings"], "solvedCount": 613}, {"contestId": 54, "index": "C", "name": "First Digit Law", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "math", "probabilities"], "solvedCount": 1437}, {"contestId": 54, "index": "B", "name": "Cutting Jigsaw Puzzle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["hashing", "implementation"], "solvedCount": 820}, {"contestId": 54, "index": "A", "name": "Presents", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 2204}, {"contestId": 53, "index": "E", "name": "Dead Ends", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "dp"], "solvedCount": 1115}, {"contestId": 53, "index": "D", "name": "Physical Education", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["sortings"], "solvedCount": 2416}, {"contestId": 53, "index": "C", "name": "Little Frog", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 6819}, {"contestId": 53, "index": "B", "name": "Blog Photo", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "implementation"], "solvedCount": 1462}, {"contestId": 53, "index": "A", "name": "Autocomplete", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["implementation"], "solvedCount": 5493}, {"contestId": 52, "index": "C", "name": "Circular RMQ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 10167}, {"contestId": 52, "index": "B", "name": "Right Triangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["combinatorics"], "solvedCount": 2227}, {"contestId": 52, "index": "A", "name": "123-sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["implementation"], "solvedCount": 9674}, {"contestId": 51, "index": "F", "name": "Caterpillar", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 764}, {"contestId": 51, "index": "E", "name": "Pentagon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "graphs", "matrices"], "solvedCount": 438}, {"contestId": 51, "index": "D", "name": "Geometrical problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["implementation"], "solvedCount": 523}, {"contestId": 51, "index": "C", "name": "Three Base Stations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "greedy"], "solvedCount": 2350}, {"contestId": 51, "index": "B", "name": "bHTML Tables Analisys", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["expression parsing"], "solvedCount": 917}, {"contestId": 51, "index": "A", "name": "Cheaterius's Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 1930}, {"contestId": 50, "index": "E", "name": "Square Equation Roots", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["math"], "solvedCount": 395}, {"contestId": 50, "index": "D", "name": "Bombing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "dp", "probabilities"], "solvedCount": 665}, {"contestId": 50, "index": "C", "name": "Happy Farm 5", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["geometry"], "solvedCount": 828}, {"contestId": 50, "index": "B", "name": "Choosing Symbol Pairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["strings"], "solvedCount": 6004}, {"contestId": 50, "index": "A", "name": "Domino piling", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["greedy", "math"], "solvedCount": 284662}, {"contestId": 49, "index": "E", "name": "Common ancestor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp"], "solvedCount": 732}, {"contestId": 49, "index": "D", "name": "Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "dp", "implementation"], "solvedCount": 2049}, {"contestId": 49, "index": "C", "name": "Disposition", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 1771}, {"contestId": 49, "index": "B", "name": "Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["math"], "solvedCount": 2646}, {"contestId": 49, "index": "A", "name": "Sleuth", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 14405}, {"contestId": 48, "index": "H", "name": "Black and White", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms"], "solvedCount": 167}, {"contestId": 48, "index": "G", "name": "Galaxy Union", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "trees", "two pointers"], "solvedCount": 292}, {"contestId": 48, "index": "F", "name": "Snow sellers", "type": "PROGRAMMING", "rating": 2800, "tags": ["greedy", "sortings"], "solvedCount": 187}, {"contestId": 48, "index": "E", "name": "Ivan the Fool VS Gorynych the Dragon", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "games", "graphs"], "solvedCount": 643}, {"contestId": 48, "index": "D", "name": "Permutations", "type": "PROGRAMMING", "rating": 1500, "tags": ["greedy"], "solvedCount": 2773}, {"contestId": 48, "index": "C", "name": "The Race", "type": "PROGRAMMING", "rating": 1800, "tags": ["math"], "solvedCount": 809}, {"contestId": 48, "index": "B", "name": "Land Lot", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "implementation"], "solvedCount": 2848}, {"contestId": 48, "index": "A", "name": "Rock-paper-scissors", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation", "schedules"], "solvedCount": 6708}, {"contestId": 47, "index": "E", "name": "Cannon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "geometry", "sortings"], "solvedCount": 423}, {"contestId": 47, "index": "D", "name": "Safe", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force"], "solvedCount": 880}, {"contestId": 47, "index": "C", "name": "Crossword", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["implementation"], "solvedCount": 815}, {"contestId": 47, "index": "B", "name": "Coins", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 15227}, {"contestId": 47, "index": "A", "name": "Triangular numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "math"], "solvedCount": 16900}, {"contestId": 46, "index": "G", "name": "Emperor's Problem", "type": "PROGRAMMING", "rating": 2500, "tags": ["geometry"], "solvedCount": 130}, {"contestId": 46, "index": "F", "name": "Hercule Poirot Problem", "type": "PROGRAMMING", "rating": 2300, "tags": ["dsu", "graphs"], "solvedCount": 352}, {"contestId": 46, "index": "E", "name": "Comb", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp"], "solvedCount": 1062}, {"contestId": 46, "index": "D", "name": "Parking Lot", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation"], "solvedCount": 1033}, {"contestId": 46, "index": "C", "name": "Hamsters and Tigers", "type": "PROGRAMMING", "rating": 1600, "tags": ["two pointers"], "solvedCount": 2675}, {"contestId": 46, "index": "B", "name": "T-shirts from Sponsor", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 3873}, {"contestId": 46, "index": "A", "name": "Ball Game", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "implementation"], "solvedCount": 9355}, {"contestId": 45, "index": "J", "name": "Planting Trees", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 1023}, {"contestId": 45, "index": "I", "name": "TCMCF+++", "type": "PROGRAMMING", "rating": 1400, "tags": ["greedy"], "solvedCount": 2613}, {"contestId": 45, "index": "H", "name": "Road Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["graphs"], "solvedCount": 206}, {"contestId": 45, "index": "G", "name": "Prime Problem", "type": "PROGRAMMING", "rating": 2200, "tags": ["number theory"], "solvedCount": 1126}, {"contestId": 45, "index": "F", "name": "Goats and Wolves", "type": "PROGRAMMING", "rating": 2500, "tags": ["greedy"], "solvedCount": 157}, {"contestId": 45, "index": "E", "name": "Director", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 561}, {"contestId": 45, "index": "D", "name": "Event Dates", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "meet-in-the-middle", "sortings"], "solvedCount": 1790}, {"contestId": 45, "index": "C", "name": "Dancing Lessons", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures"], "solvedCount": 1030}, {"contestId": 45, "index": "B", "name": "School", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "dsu"], "solvedCount": 299}, {"contestId": 45, "index": "A", "name": "Codecraft III", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 7416}, {"contestId": 44, "index": "J", "name": "Triminoes", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 591}, {"contestId": 44, "index": "I", "name": "Toys", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "combinatorics"], "solvedCount": 217}, {"contestId": 44, "index": "H", "name": "Phone Number", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp"], "solvedCount": 1852}, {"contestId": 44, "index": "G", "name": "Shooting Gallery", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "implementation"], "solvedCount": 477}, {"contestId": 44, "index": "F", "name": "BerPaint", "type": "PROGRAMMING", "rating": 2700, "tags": ["geometry", "graphs"], "solvedCount": 76}, {"contestId": 44, "index": "E", "name": "Anfisa the Monkey", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp"], "solvedCount": 5688}, {"contestId": 44, "index": "D", "name": "Hyperdrive", "type": "PROGRAMMING", "rating": 1800, "tags": ["math"], "solvedCount": 760}, {"contestId": 44, "index": "C", "name": "Holidays", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 3754}, {"contestId": 44, "index": "B", "name": "Cola", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"], "solvedCount": 2149}, {"contestId": 44, "index": "A", "name": "Indian Summer", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 14237}, {"contestId": 43, "index": "E", "name": "Race", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "implementation", "two pointers"], "solvedCount": 420}, {"contestId": 43, "index": "D", "name": "Journey", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 1161}, {"contestId": 43, "index": "C", "name": "Lucky Tickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["greedy"], "solvedCount": 4576}, {"contestId": 43, "index": "B", "name": "Letter", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["implementation", "strings"], "solvedCount": 18890}, {"contestId": 43, "index": "A", "name": "Football", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["strings"], "solvedCount": 63681}, {"contestId": 42, "index": "E", "name": "Baldman and the military", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 216}, {"contestId": 42, "index": "D", "name": "Strange town", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "math"], "solvedCount": 431}, {"contestId": 42, "index": "C", "name": "Safe cracking", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "constructive algorithms"], "solvedCount": 520}, {"contestId": 42, "index": "B", "name": "Game of chess unfinished", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 986}, {"contestId": 42, "index": "A", "name": "Guilty --- to the kitchen!", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["greedy", "implementation"], "solvedCount": 2999}, {"contestId": 41, "index": "E", "name": "3-cycles", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 2082}, {"contestId": 41, "index": "D", "name": "Pawn", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp"], "solvedCount": 2661}, {"contestId": 41, "index": "C", "name": "Email address", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["expression parsing", "implementation"], "solvedCount": 4008}, {"contestId": 41, "index": "B", "name": "Martian Dollar", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force"], "solvedCount": 4388}, {"contestId": 41, "index": "A", "name": "Translation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation", "strings"], "solvedCount": 169048}, {"contestId": 40, "index": "E", "name": "Number Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["combinatorics"], "solvedCount": 746}, {"contestId": 40, "index": "D", "name": "Interesting Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["math"], "solvedCount": 157}, {"contestId": 40, "index": "C", "name": "Berland Square", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["implementation", "math"], "solvedCount": 273}, {"contestId": 40, "index": "B", "name": "Repaintings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["math"], "solvedCount": 1288}, {"contestId": 40, "index": "A", "name": "Find Color", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "geometry", "implementation", "math"], "solvedCount": 4245}, {"contestId": 39, "index": "K", "name": "Testing", "type": "PROGRAMMING", "rating": 2600, "tags": [], "solvedCount": 93}, {"contestId": 39, "index": "J", "name": "Spelling Check", "type": "PROGRAMMING", "rating": 1500, "tags": ["hashing", "implementation", "strings"], "solvedCount": 3279}, {"contestId": 39, "index": "I", "name": "Tram", "type": "PROGRAMMING", "rating": 2500, "tags": [], "solvedCount": 156}, {"contestId": 39, "index": "H", "name": "Multiplication Table", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 2953}, {"contestId": 39, "index": "G", "name": "Inverse Function", "type": "PROGRAMMING", "rating": 2400, "tags": ["implementation"], "solvedCount": 140}, {"contestId": 39, "index": "F", "name": "Pacifist frogs", "type": "PROGRAMMING", "rating": 1300, "tags": ["implementation"], "solvedCount": 1681}, {"contestId": 39, "index": "E", "name": "What Has Dirichlet Got to Do with That?", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "games"], "solvedCount": 958}, {"contestId": 39, "index": "D", "name": "Cubical Planet", "type": "PROGRAMMING", "rating": 1100, "tags": ["math"], "solvedCount": 4326}, {"contestId": 39, "index": "C", "name": "Moon Craters", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "sortings"], "solvedCount": 661}, {"contestId": 39, "index": "B", "name": "Company Income Growth", "type": "PROGRAMMING", "rating": 1300, "tags": ["greedy"], "solvedCount": 2863}, {"contestId": 39, "index": "A", "name": "C*++ Calculations", "type": "PROGRAMMING", "rating": 2000, "tags": ["expression parsing", "greedy"], "solvedCount": 740}, {"contestId": 38, "index": "H", "name": "The Great Marathon", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp"], "solvedCount": 344}, {"contestId": 38, "index": "G", "name": "Queue", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures"], "solvedCount": 752}, {"contestId": 38, "index": "F", "name": "Smart Boy", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "games", "strings"], "solvedCount": 415}, {"contestId": 38, "index": "E", "name": "Let's Go Rolling!", "type": "PROGRAMMING", "rating": 1800, "tags": ["dp", "sortings"], "solvedCount": 2796}, {"contestId": 38, "index": "D", "name": "Vasya the Architect", "type": "PROGRAMMING", "rating": 1900, "tags": ["implementation"], "solvedCount": 633}, {"contestId": 38, "index": "C", "name": "Blinds", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force"], "solvedCount": 2387}, {"contestId": 38, "index": "B", "name": "Chess", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "implementation", "math"], "solvedCount": 3764}, {"contestId": 38, "index": "A", "name": "Army", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 23552}, {"contestId": 37, "index": "E", "name": "Trial for Chief", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["graphs", "greedy", "shortest paths"], "solvedCount": 653}, {"contestId": 37, "index": "D", "name": "Lesson Timetable", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["combinatorics", "dp", "math"], "solvedCount": 468}, {"contestId": 37, "index": "C", "name": "Old Berland Language", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "greedy", "trees"], "solvedCount": 1983}, {"contestId": 37, "index": "B", "name": "Computer Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["greedy", "implementation"], "solvedCount": 1007}, {"contestId": 37, "index": "A", "name": "Towers", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["sortings"], "solvedCount": 26241}, {"contestId": 36, "index": "E", "name": "Two Paths", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "dsu", "graphs", "implementation"], "solvedCount": 574}, {"contestId": 36, "index": "D", "name": "New Game with a Chess Piece", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["games"], "solvedCount": 743}, {"contestId": 36, "index": "C", "name": "Bowls", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["geometry", "implementation"], "solvedCount": 350}, {"contestId": 36, "index": "B", "name": "Fractal", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 1697}, {"contestId": 36, "index": "A", "name": "Extra-terrestrial Intelligence", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["implementation"], "solvedCount": 3185}, {"contestId": 35, "index": "E", "name": "Parade", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "sortings"], "solvedCount": 828}, {"contestId": 35, "index": "D", "name": "Animals", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dp", "greedy"], "solvedCount": 3630}, {"contestId": 35, "index": "C", "name": "Fire Again", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "dfs and similar", "shortest paths"], "solvedCount": 7777}, {"contestId": 35, "index": "B", "name": "Warehouse", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 1127}, {"contestId": 35, "index": "A", "name": "Shell Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["implementation"], "solvedCount": 7146}, {"contestId": 34, "index": "E", "name": "Collisions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "implementation", "math"], "solvedCount": 622}, {"contestId": 34, "index": "D", "name": "Road Map", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dfs and similar", "graphs"], "solvedCount": 5741}, {"contestId": 34, "index": "C", "name": "Page Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["expression parsing", "implementation", "sortings", "strings"], "solvedCount": 4547}, {"contestId": 34, "index": "B", "name": "Sale", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["greedy", "sortings"], "solvedCount": 59747}, {"contestId": 34, "index": "A", "name": "Reconnaissance 2", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["implementation"], "solvedCount": 32598}, {"contestId": 33, "index": "E", "name": "Helper", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": [], "solvedCount": 139}, {"contestId": 33, "index": "D", "name": "Knights", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["geometry", "graphs", "shortest paths", "sortings"], "solvedCount": 1316}, {"contestId": 33, "index": "C", "name": "Wonderful Randomized Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["greedy"], "solvedCount": 3391}, {"contestId": 33, "index": "B", "name": "String Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["shortest paths"], "solvedCount": 5187}, {"contestId": 33, "index": "A", "name": "What is for dinner?", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["greedy", "implementation"], "solvedCount": 4485}, {"contestId": 32, "index": "E", "name": "Hide-and-Seek", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["geometry", "implementation"], "solvedCount": 360}, {"contestId": 32, "index": "D", "name": "Constellation", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 1380}, {"contestId": 32, "index": "C", "name": "Flea", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["math"], "solvedCount": 2334}, {"contestId": 32, "index": "B", "name": "Borze", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["expression parsing", "implementation"], "solvedCount": 72892}, {"contestId": 32, "index": "A", "name": "Reconnaissance", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force"], "solvedCount": 13796}, {"contestId": 31, "index": "E", "name": "TV Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp"], "solvedCount": 1189}, {"contestId": 31, "index": "D", "name": "Chocolate", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "implementation"], "solvedCount": 1098}, {"contestId": 31, "index": "C", "name": "Schedule", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 1887}, {"contestId": 31, "index": "B", "name": "Sysadmin Bob", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["greedy", "implementation", "strings"], "solvedCount": 4525}, {"contestId": 31, "index": "A", "name": "Worms Evolution", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation"], "solvedCount": 10968}, {"contestId": 30, "index": "E", "name": "Tricky and Clever Password", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "hashing", "strings"], "solvedCount": 856}, {"contestId": 30, "index": "D", "name": "King's Problem?", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["geometry", "greedy"], "solvedCount": 476}, {"contestId": 30, "index": "C", "name": "Shooting Gallery", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dp", "probabilities"], "solvedCount": 2164}, {"contestId": 30, "index": "B", "name": "Codeforces World Finals", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 1245}, {"contestId": 30, "index": "A", "name": "Accounting", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "math"], "solvedCount": 3752}, {"contestId": 29, "index": "E", "name": "Quarrel", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["graphs", "shortest paths"], "solvedCount": 1016}, {"contestId": 29, "index": "D", "name": "Ant on the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 2753}, {"contestId": 29, "index": "C", "name": "Mail Stamps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dfs and similar", "graphs", "implementation"], "solvedCount": 5595}, {"contestId": 29, "index": "B", "name": "Traffic Lights", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["implementation"], "solvedCount": 3176}, {"contestId": 29, "index": "A", "name": "Spit Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force"], "solvedCount": 7694}, {"contestId": 28, "index": "E", "name": "DravDe saves the world", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["geometry", "math"], "solvedCount": 103}, {"contestId": 28, "index": "D", "name": "Don't fear, DravDe is kind", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "hashing"], "solvedCount": 642}, {"contestId": 28, "index": "C", "name": "Bath Queue", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["combinatorics", "dp", "probabilities"], "solvedCount": 1136}, {"contestId": 28, "index": "B", "name": "pSort", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 5152}, {"contestId": 28, "index": "A", "name": "Bender Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["implementation"], "solvedCount": 861}, {"contestId": 27, "index": "E", "name": "Number With The Given Amount Of Divisors", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "dp", "number theory"], "solvedCount": 4582}, {"contestId": 27, "index": "D", "name": "Ring Road 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["2-sat", "dfs and similar", "dsu", "graphs"], "solvedCount": 2805}, {"contestId": 27, "index": "C", "name": "Unordered Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 2914}, {"contestId": 27, "index": "B", "name": "Tournament", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "brute force", "dfs and similar", "greedy"], "solvedCount": 5615}, {"contestId": 27, "index": "A", "name": "Next Test", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 21769}, {"contestId": 26, "index": "E", "name": "Multithreading", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms"], "solvedCount": 392}, {"contestId": 26, "index": "D", "name": "Tickets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "math", "probabilities"], "solvedCount": 846}, {"contestId": 26, "index": "C", "name": "Parquet", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation"], "solvedCount": 904}, {"contestId": 26, "index": "B", "name": "Regular Bracket Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["greedy"], "solvedCount": 22625}, {"contestId": 26, "index": "A", "name": "Almost Prime", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["number theory"], "solvedCount": 37194}, {"contestId": 25, "index": "E", "name": "Test", "type": "PROGRAMMING", "rating": 2200, "tags": ["hashing", "strings"], "solvedCount": 2854}, {"contestId": 25, "index": "D", "name": "Roads not only in Berland", "type": "PROGRAMMING", "rating": 1900, "tags": ["dsu", "graphs", "trees"], "solvedCount": 13402}, {"contestId": 25, "index": "C", "name": "Roads in Berland", "type": "PROGRAMMING", "rating": 1900, "tags": ["graphs", "shortest paths"], "solvedCount": 7188}, {"contestId": 25, "index": "B", "name": "Phone numbers", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 10531}, {"contestId": 25, "index": "A", "name": "IQ test", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force"], "solvedCount": 96226}, {"contestId": 24, "index": "E", "name": "Berland collider", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search"], "solvedCount": 959}, {"contestId": 24, "index": "D", "name": "Broken robot", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "math", "probabilities"], "solvedCount": 2349}, {"contestId": 24, "index": "C", "name": "Sequence of points", "type": "PROGRAMMING", "rating": 1800, "tags": ["geometry", "implementation", "math"], "solvedCount": 1317}, {"contestId": 24, "index": "B", "name": "F1 Champions", "type": "PROGRAMMING", "rating": 1500, "tags": ["implementation"], "solvedCount": 1884}, {"contestId": 24, "index": "A", "name": "Ring road", "type": "PROGRAMMING", "rating": 1400, "tags": ["graphs"], "solvedCount": 6022}, {"contestId": 23, "index": "E", "name": "Tree", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp"], "solvedCount": 667}, {"contestId": 23, "index": "D", "name": "Tetragon", "type": "PROGRAMMING", "rating": 2600, "tags": ["geometry", "math"], "solvedCount": 355}, {"contestId": 23, "index": "C", "name": "Oranges and Apples", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "sortings"], "solvedCount": 1561}, {"contestId": 23, "index": "B", "name": "Party", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 3622}, {"contestId": 23, "index": "A", "name": "You're Given a String...", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "greedy"], "solvedCount": 5865}, {"contestId": 22, "index": "E", "name": "Scheme", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 1883}, {"contestId": 22, "index": "D", "name": "Segments", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "sortings"], "solvedCount": 3135}, {"contestId": 22, "index": "C", "name": "System Administrator", "type": "PROGRAMMING", "rating": 1700, "tags": ["graphs"], "solvedCount": 3445}, {"contestId": 22, "index": "B", "name": "Bargaining Table", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "dp"], "solvedCount": 4538}, {"contestId": 22, "index": "A", "name": "Second Order Statistics", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force"], "solvedCount": 24828}, {"contestId": 21, "index": "D", "name": "Traveling Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["bitmasks", "graph matchings", "graphs"], "solvedCount": 1108}, {"contestId": 21, "index": "C", "name": "Stripe 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "dp", "sortings"], "solvedCount": 2307}, {"contestId": 21, "index": "B", "name": "Intersection", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["implementation", "math"], "solvedCount": 1455}, {"contestId": 21, "index": "A", "name": "Jabber ID", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["implementation", "strings"], "solvedCount": 1976}, {"contestId": 20, "index": "C", "name": "Dijkstra?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["graphs", "shortest paths"], "solvedCount": 40086}, {"contestId": 20, "index": "B", "name": "Equation", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["math"], "solvedCount": 4334}, {"contestId": 20, "index": "A", "name": "BerOS file system", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["implementation"], "solvedCount": 6683}, {"contestId": 19, "index": "E", "name": "Fairy", "type": "PROGRAMMING", "rating": 2900, "tags": ["dfs and similar", "divide and conquer", "dsu"], "solvedCount": 2233}, {"contestId": 19, "index": "D", "name": "Points", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"], "solvedCount": 2826}, {"contestId": 19, "index": "C", "name": "Deletion of Repeats", "type": "PROGRAMMING", "rating": 2200, "tags": ["greedy", "hashing", "string suffix structures"], "solvedCount": 1189}, {"contestId": 19, "index": "B", "name": "Checkout Assistant", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"], "solvedCount": 5363}, {"contestId": 19, "index": "A", "name": "World Football Cup", "type": "PROGRAMMING", "rating": 1400, "tags": ["implementation"], "solvedCount": 2933}, {"contestId": 18, "index": "E", "name": "Flag 2", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp"], "solvedCount": 1185}, {"contestId": 18, "index": "D", "name": "Seller Bob", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "dp", "greedy"], "solvedCount": 1149}, {"contestId": 18, "index": "C", "name": "Stripe", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "implementation"], "solvedCount": 14309}, {"contestId": 18, "index": "B", "name": "Platforms", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "math"], "solvedCount": 2254}, {"contestId": 18, "index": "A", "name": "Triangle", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "geometry"], "solvedCount": 6519}, {"contestId": 17, "index": "E", "name": "Palisection", "type": "PROGRAMMING", "rating": 2900, "tags": ["strings"], "solvedCount": 1821}, {"contestId": 17, "index": "D", "name": "Notepad", "type": "PROGRAMMING", "rating": 2400, "tags": ["number theory"], "solvedCount": 1167}, {"contestId": 17, "index": "C", "name": "Balance", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp"], "solvedCount": 982}, {"contestId": 17, "index": "B", "name": "Hierarchy", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "dsu", "greedy", "shortest paths"], "solvedCount": 5521}, {"contestId": 17, "index": "A", "name": "Noldbach problem", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "math", "number theory"], "solvedCount": 19004}, {"contestId": 16, "index": "E", "name": "Fish", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "dp", "probabilities"], "solvedCount": 5937}, {"contestId": 16, "index": "D", "name": "Logging", "type": "PROGRAMMING", "rating": 1900, "tags": ["implementation", "strings"], "solvedCount": 1687}, {"contestId": 16, "index": "C", "name": "Monitor", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "number theory"], "solvedCount": 5071}, {"contestId": 16, "index": "B", "name": "Burglar and Matches", "type": "PROGRAMMING", "rating": 900, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 19507}, {"contestId": 16, "index": "A", "name": "Flag", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 15758}, {"contestId": 15, "index": "E", "name": "Triangles", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "dp"], "solvedCount": 657}, {"contestId": 15, "index": "D", "name": "Map", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 840}, {"contestId": 15, "index": "C", "name": "Industrial Nim", "type": "PROGRAMMING", "rating": 2000, "tags": ["games"], "solvedCount": 2566}, {"contestId": 15, "index": "B", "name": "Laser", "type": "PROGRAMMING", "rating": 1800, "tags": ["math"], "solvedCount": 1556}, {"contestId": 15, "index": "A", "name": "Cottage Village", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "sortings"], "solvedCount": 4134}, {"contestId": 14, "index": "E", "name": "Camels", "type": "PROGRAMMING", "rating": 1900, "tags": ["dp"], "solvedCount": 1889}, {"contestId": 14, "index": "D", "name": "Two Paths", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees", "two pointers"], "solvedCount": 4927}, {"contestId": 14, "index": "C", "name": "Four Segments", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "geometry", "implementation", "math"], "solvedCount": 3592}, {"contestId": 14, "index": "B", "name": "Young Photographer", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 7884}, {"contestId": 14, "index": "A", "name": "Letter", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 11563}, {"contestId": 13, "index": "E", "name": "Holes", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dsu"], "solvedCount": 7064}, {"contestId": 13, "index": "D", "name": "Triangles", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "geometry"], "solvedCount": 704}, {"contestId": 13, "index": "C", "name": "Sequence", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "sortings"], "solvedCount": 5151}, {"contestId": 13, "index": "B", "name": "Letter A", "type": "PROGRAMMING", "rating": 2000, "tags": ["geometry", "implementation"], "solvedCount": 1039}, {"contestId": 13, "index": "A", "name": "Numbers", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation", "math"], "solvedCount": 8617}, {"contestId": 12, "index": "E", "name": "Start of the session", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms"], "solvedCount": 1360}, {"contestId": 12, "index": "D", "name": "Ball", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "sortings"], "solvedCount": 2619}, {"contestId": 12, "index": "C", "name": "Fruits", "type": "PROGRAMMING", "rating": 1100, "tags": ["greedy", "implementation", "sortings"], "solvedCount": 6715}, {"contestId": 12, "index": "B", "name": "Correct Solution?", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation", "sortings"], "solvedCount": 9163}, {"contestId": 12, "index": "A", "name": "Super Agent", "type": "PROGRAMMING", "rating": 800, "tags": ["implementation"], "solvedCount": 14222}, {"contestId": 11, "index": "E", "name": "Forward, march!", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "dp", "greedy"], "solvedCount": 411}, {"contestId": 11, "index": "D", "name": "A Simple Task", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "dp", "graphs"], "solvedCount": 5694}, {"contestId": 11, "index": "C", "name": "How Many Squares?", "type": "PROGRAMMING", "rating": 2200, "tags": ["implementation"], "solvedCount": 650}, {"contestId": 11, "index": "B", "name": "Jumping Jack", "type": "PROGRAMMING", "rating": 1600, "tags": ["math"], "solvedCount": 5248}, {"contestId": 11, "index": "A", "name": "Increasing Sequence", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 14504}, {"contestId": 10, "index": "E", "name": "Greedy Change", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 871}, {"contestId": 10, "index": "D", "name": "LCIS", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp"], "solvedCount": 5015}, {"contestId": 10, "index": "C", "name": "Digital Root", "type": "PROGRAMMING", "rating": 2000, "tags": ["number theory"], "solvedCount": 1549}, {"contestId": 10, "index": "B", "name": "Cinema Cashier", "type": "PROGRAMMING", "rating": 1500, "tags": ["dp", "implementation"], "solvedCount": 1895}, {"contestId": 10, "index": "A", "name": "Power Consumption Calculation", "type": "PROGRAMMING", "rating": 900, "tags": ["implementation"], "solvedCount": 7802}, {"contestId": 9, "index": "E", "name": "Interestring graph and Apples", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs"], "solvedCount": 1098}, {"contestId": 9, "index": "D", "name": "How many trees?", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 4186}, {"contestId": 9, "index": "C", "name": "Hexadecimal's Numbers", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "implementation", "math"], "solvedCount": 13711}, {"contestId": 9, "index": "B", "name": "Running Student", "type": "PROGRAMMING", "rating": 1200, "tags": ["brute force", "geometry", "implementation"], "solvedCount": 5872}, {"contestId": 9, "index": "A", "name": "Die Roll", "type": "PROGRAMMING", "rating": 800, "tags": ["math", "probabilities"], "solvedCount": 63915}, {"contestId": 8, "index": "E", "name": "Beads", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "graphs"], "solvedCount": 726}, {"contestId": 8, "index": "D", "name": "Two Friends", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "geometry"], "solvedCount": 553}, {"contestId": 8, "index": "C", "name": "Looking for Order", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "dp"], "solvedCount": 3884}, {"contestId": 8, "index": "B", "name": "Obsession with Robots", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 4647}, {"contestId": 8, "index": "A", "name": "Train and Peter", "type": "PROGRAMMING", "rating": 1200, "tags": ["strings"], "solvedCount": 6279}, {"contestId": 7, "index": "E", "name": "Defining Macros", "type": "PROGRAMMING", "rating": 2600, "tags": ["dp", "expression parsing", "implementation"], "solvedCount": 748}, {"contestId": 7, "index": "D", "name": "Palindrome Degree", "type": "PROGRAMMING", "rating": 2200, "tags": ["hashing", "strings"], "solvedCount": 4142}, {"contestId": 7, "index": "C", "name": "Line", "type": "PROGRAMMING", "rating": 1800, "tags": ["math", "number theory"], "solvedCount": 5003}, {"contestId": 7, "index": "B", "name": "Memory Manager", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation"], "solvedCount": 2791}, {"contestId": 7, "index": "A", "name": "Kalevitch and Chess", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "constructive algorithms"], "solvedCount": 7644}, {"contestId": 6, "index": "E", "name": "Exposition", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dsu", "trees", "two pointers"], "solvedCount": 3511}, {"contestId": 6, "index": "D", "name": "Lizards and Basements 2", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "dp"], "solvedCount": 2108}, {"contestId": 6, "index": "C", "name": "Alice, Bob and Chocolate", "type": "PROGRAMMING", "rating": 1200, "tags": ["greedy", "two pointers"], "solvedCount": 15820}, {"contestId": 6, "index": "B", "name": "President's Office", "type": "PROGRAMMING", "rating": 1100, "tags": ["implementation"], "solvedCount": 13955}, {"contestId": 6, "index": "A", "name": "Triangle", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "geometry"], "solvedCount": 21378}, {"contestId": 5, "index": "E", "name": "Bindian Signalizing", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 2336}, {"contestId": 5, "index": "D", "name": "Follow Traffic Rules", "type": "PROGRAMMING", "rating": 2100, "tags": ["implementation", "math"], "solvedCount": 1815}, {"contestId": 5, "index": "C", "name": "Longest Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings", "strings"], "solvedCount": 15748}, {"contestId": 5, "index": "B", "name": "Center Alignment", "type": "PROGRAMMING", "rating": 1200, "tags": ["implementation", "strings"], "solvedCount": 6347}, {"contestId": 5, "index": "A", "name": "Chat Servers Outgoing Traffic", "type": "PROGRAMMING", "rating": 1000, "tags": ["implementation"], "solvedCount": 10334}, {"contestId": 4, "index": "D", "name": "Mysterious Present", "type": "PROGRAMMING", "rating": 1700, "tags": ["dp", "sortings"], "solvedCount": 11277}, {"contestId": 4, "index": "C", "name": "Registration System", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "hashing", "implementation"], "solvedCount": 96119}, {"contestId": 4, "index": "B", "name": "Before an Exam", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 27408}, {"contestId": 4, "index": "A", "name": "Watermelon", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "math"], "solvedCount": 611121}, {"contestId": 3, "index": "D", "name": "Least Cost Bracket Sequence", "type": "PROGRAMMING", "rating": 2600, "tags": ["greedy"], "solvedCount": 3642}, {"contestId": 3, "index": "C", "name": "Tic-tac-toe", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "games", "implementation"], "solvedCount": 7878}, {"contestId": 3, "index": "B", "name": "Lorry", "type": "PROGRAMMING", "rating": 1900, "tags": ["greedy", "sortings"], "solvedCount": 4863}, {"contestId": 3, "index": "A", "name": "Shortest path of the king", "type": "PROGRAMMING", "rating": 1000, "tags": ["greedy", "shortest paths"], "solvedCount": 20629}, {"contestId": 2, "index": "C", "name": "Commentator problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["geometry"], "solvedCount": 1860}, {"contestId": 2, "index": "B", "name": "The least round way", "type": "PROGRAMMING", "rating": 2000, "tags": ["dp", "math"], "solvedCount": 11943}, {"contestId": 2, "index": "A", "name": "Winner", "type": "PROGRAMMING", "rating": 1500, "tags": ["hashing", "implementation"], "solvedCount": 29019}, {"contestId": 1, "index": "C", "name": "Ancient Berland Circus", "type": "PROGRAMMING", "rating": 2100, "tags": ["geometry", "math"], "solvedCount": 6040}, {"contestId": 1, "index": "B", "name": "Spreadsheet", "type": "PROGRAMMING", "rating": 1600, "tags": ["implementation", "math"], "solvedCount": 24636}, {"contestId": 1, "index": "A", "name": "Theatre Square", "type": "PROGRAMMING", "rating": 1000, "tags": ["math"], "solvedCount": 293795}]